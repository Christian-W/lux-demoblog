"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const schematics_1 = require("@angular-devkit/schematics");
const project_1 = require("@schematics/angular/utility/project");
const validation_1 = require("../../utility/validation");
const dependencies_1 = require("../../utility/dependencies");
const logging_1 = require("../../utility/logging");
const chalk_1 = require("chalk");
const util_1 = require("../../utility/util");
/**
 * Haupt-Rule für diesen Schematic-Generator.
 * @param options
 */
exports.luxVersion = (options) => {
    return schematics_1.chain([
        setupProject(options),
        checkVersions(),
        updatePackageJson(),
        addPackageJsonDependencies(),
        addPackageJsonDevDependencies(),
        todosForUser()
    ]);
};
/**
 * Prüft, ob die Property "project" gesetzt ist und
 * erstellt wenn nötig einen Standard-Pfad zum Projekt, wenn keiner bekannt ist.
 * @param options
 */
function setupProject(options) {
    return (tree, context) => {
        logging_1.logNewUpdate('1.7.16');
        logging_1.logInfoWithDescriptor('Starte Konfiguration der Schematic.');
        return util_1.waitForTreeCallback(tree, () => {
            if (!options.project) {
                throw logging_1.formattedSchematicsException('Option "project" wird benötigt.');
            }
            const project = project_1.getProject(tree, options.project);
            if (options.path === undefined) {
                options.path = project.root;
            }
            util_1.checkSmoketestScriptExists(tree, context);
            logging_1.logSuccess(`Schematic-Konfiguration für Projekt "${options.project}" erfolgreich.`);
            return tree;
        });
    };
}
exports.setupProject = setupProject;
/**
 * Prüft ob die Versionen des Projekts mit den erforderlichen Versionen dieses Updates übereinstimmen.
 */
function checkVersions() {
    return (tree, context) => {
        logging_1.logInfoWithDescriptor('Starte die Versionsprüfung.');
        return util_1.waitForTreeCallback(tree, () => {
            const minimumLuxComponentsVersion = '1.7.15';
            validation_1.validateLuxComponentsVersion(tree, context, minimumLuxComponentsVersion);
            const minimumNodeVersion = '8.0.0';
            validation_1.validateNodeVersion(context, minimumNodeVersion);
            logging_1.logSuccess(`Versionen erfolgreich geprüft.`);
            return tree;
        });
    };
}
exports.checkVersions = checkVersions;
/**
 * Aktualisiert die package.json des Projekts.
 */
function updatePackageJson() {
    return (tree, context) => {
        logging_1.logInfoWithDescriptor('Aktualisiere LUX-Components Version auf 1.7.16.');
        return util_1.waitForTreeCallback(tree, () => {
            const newDependency = {
                type: dependencies_1.NodeDependencyType.Default,
                version: '1.7.16',
                name: 'lux-components'
            };
            dependencies_1.updatePackageJsonDependency(tree, context, newDependency);
            logging_1.logSuccess(`package.json erfolgreich aktualisiert.`);
            return tree;
        });
    };
}
exports.updatePackageJson = updatePackageJson;
/**
 * Fügt die neuen dependencies der package.json hinzu.
 */
function addPackageJsonDependencies() {
    return (tree, context) => {
        logging_1.logInfoWithDescriptor('Füge neue Dependencies zu package.json hinzu.');
        return util_1.waitForTreeCallback(tree, () => {
            const dependencies = [
                { type: dependencies_1.NodeDependencyType.Default, version: '7.2.15', name: '@angular/animations' },
                { type: dependencies_1.NodeDependencyType.Default, version: '7.3.7', name: '@angular/cdk' },
                { type: dependencies_1.NodeDependencyType.Default, version: '7.2.15', name: '@angular/common' },
                { type: dependencies_1.NodeDependencyType.Default, version: '7.2.15', name: '@angular/compiler' },
                { type: dependencies_1.NodeDependencyType.Default, version: '7.2.15', name: '@angular/core' },
                { type: dependencies_1.NodeDependencyType.Default, version: '7.0.0-beta.24', name: '@angular/flex-layout' },
                { type: dependencies_1.NodeDependencyType.Default, version: '7.2.15', name: '@angular/forms' },
                { type: dependencies_1.NodeDependencyType.Default, version: '7.2.15', name: '@angular/http' },
                { type: dependencies_1.NodeDependencyType.Default, version: '7.3.7', name: '@angular/material' },
                { type: dependencies_1.NodeDependencyType.Default, version: '7.2.15', name: '@angular/platform-browser' },
                { type: dependencies_1.NodeDependencyType.Default, version: '7.2.15', name: '@angular/platform-browser-dynamic' },
                { type: dependencies_1.NodeDependencyType.Default, version: '7.2.15', name: '@angular/router' },
                { type: dependencies_1.NodeDependencyType.Default, version: '2.6.9', name: 'core-js' },
                { type: dependencies_1.NodeDependencyType.Default, version: '5.7.2', name: '@fortawesome/fontawesome-free' },
                { type: dependencies_1.NodeDependencyType.Default, version: '2.0.8', name: 'hammerjs' },
                { type: dependencies_1.NodeDependencyType.Default, version: '1.7.16', name: 'lux-components' },
                { type: dependencies_1.NodeDependencyType.Default, version: '4.0.5', name: 'material-design-icons-iconfont' },
                { type: dependencies_1.NodeDependencyType.Default, version: '6.5.2', name: 'rxjs' },
                { type: dependencies_1.NodeDependencyType.Default, version: '0.8.29', name: 'zone.js' },
                { type: dependencies_1.NodeDependencyType.Default, version: '4.11.0', name: 'node-sass' }
            ];
            dependencies.forEach(dependency => {
                dependencies_1.updatePackageJsonDependency(tree, context, dependency);
            });
            logging_1.logSuccess('Dependencies aktualisiert.');
            return tree;
        });
    };
}
exports.addPackageJsonDependencies = addPackageJsonDependencies;
/**
 * Fügt die neuen dev-dependencies der package.json hinzu.
 */
function addPackageJsonDevDependencies() {
    return (tree, context) => {
        logging_1.logInfoWithDescriptor('Füge neue DevDependencies zu package.json hinzu.');
        return util_1.waitForTreeCallback(tree, () => {
            const devDependencies = [
                { type: dependencies_1.NodeDependencyType.Dev, version: '0.10.7', name: '@angular-devkit/build-angular' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '7.3.9', name: '@angular/cli' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '7.2.15', name: '@angular/compiler-cli' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '7.2.15', name: '@angular/language-service' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '1.1.10', name: '@compodoc/compodoc' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '2.8.16', name: '@types/jasmine' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '2.0.6', name: '@types/jasminewd2' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '10.14.12', name: '@types/node' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '4.5.0', name: 'codelyzer' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '3.4.0', name: 'jasmine-core' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '4.2.1', name: 'jasmine-spec-reporter' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '3.1.4', name: 'karma' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '2.2.0', name: 'karma-chrome-launcher' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '1.1.0', name: 'karma-firefox-launcher' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '1.0.0', name: 'karma-ie-launcher' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '0.4.2', name: 'karma-edge-launcher' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '1.0.0', name: 'karma-safari-launcher' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '1.0.1', name: 'karma-cli' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '2.0.5', name: 'karma-coverage-istanbul-reporter' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '1.1.2', name: 'karma-jasmine' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '1.4.0', name: 'karma-jasmine-html-reporter' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '3.2.1', name: 'nsp' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '5.4.2', name: 'protractor' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '2.0.3', name: 'retire' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '7.0.1', name: 'ts-node' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '5.18.0', name: 'tslint' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '1.1.2', name: 'tslint-angular' },
                { type: dependencies_1.NodeDependencyType.Dev, version: '3.2.4', name: 'typescript' }
            ];
            devDependencies.forEach(devDependency => {
                dependencies_1.updatePackageJsonDependency(tree, context, devDependency);
            });
            logging_1.logSuccess('DevDependencies aktualisiert.');
            return tree;
        });
    };
}
exports.addPackageJsonDevDependencies = addPackageJsonDevDependencies;
/**
 * Gibt die offen stehenden ToDos (Aufgaben, die der Generator nicht übernehmen konnte) für den User aus.
 */
function todosForUser() {
    return (tree, context) => {
        util_1.runInstallAndLogToDos(context, `Bitte starten Sie ${chalk_1.default.redBright('npm run smoketest')} um möglichen Fehlern vorzugreifen.`, `Weitere Informationen: https://confluence.gfi.ihk.de/display/AF/Update+Guide#UpdateGuide-UmstellungaufVersion1.7.16`);
        return tree;
    };
}
exports.todosForUser = todosForUser;
//# sourceMappingURL=index.js.map