import { AfterViewInit, ElementRef, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';
export declare class LuxTabIndexDirective implements AfterViewInit, OnChanges, OnDestroy {
    private elementRef;
    private renderer;
    private changesSubscription;
    private changes$;
    luxTabIndex: string;
    luxApplyToParent: boolean;
    luxApplyToChildren: boolean;
    luxPotentialChildren: string[];
    constructor(elementRef: ElementRef, renderer: Renderer2);
    ngOnChanges(simpleChanges: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /**
     * Eigener Listener für Änderungen, der erst nach dem AfterViewInit-Lifecycle greift.
     * Sicherheitshalber, um evtl. noch unaufgelösten Elementen zu entgehen.
     * @param simpleChanges
     */
    private onChanges;
    /**
     * Aktualisiert den Tabindex für
     *  - das Zielelement, wenn luxApplyToParent === true (default = false) ist
     *  - potentielle Kindelemente, wenn luxApplyToChildren === true (default) ist
     */
    private updateElementsWithTabIndex;
    private setTabIndexByQuery;
    private setTabIndexForElement;
}
