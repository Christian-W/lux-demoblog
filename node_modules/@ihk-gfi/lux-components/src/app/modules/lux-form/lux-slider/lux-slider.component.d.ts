import { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { ControlContainer } from '@angular/forms';
import { MatSlider, MatSliderChange } from '@angular/material';
import { LuxFormComponentBase } from '../lux-form-model/lux-form-component-base.class';
import { LuxConsoleService } from '../../lux-util/lux-console.service';
import { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';
export declare type SLIDER_TICK_INTERVAL = 'auto' | number;
export declare type SLIDER_COLORS = 'primary' | 'accent' | 'warn';
export declare class LuxSliderComponent extends LuxFormComponentBase implements OnInit, OnChanges {
    matSlider: MatSlider;
    luxChange: EventEmitter<MatSliderChange>;
    luxInput: EventEmitter<MatSliderChange>;
    luxValueChange: EventEmitter<number>;
    luxValuePercent: EventEmitter<number>;
    luxColor: SLIDER_COLORS;
    luxVertical: boolean;
    luxInvert: boolean;
    luxShowThumbLabel: boolean;
    luxShowThumbLabelAlways: boolean;
    luxTickInterval: SLIDER_TICK_INTERVAL;
    luxTagId: string;
    luxDisplayWith: (value: number | null) => string | number;
    luxValue: number;
    _luxMax: number;
    _luxRequired: boolean;
    _luxMin: number;
    _luxStep: number;
    luxMax: number;
    luxMin: number;
    luxStep: number;
    luxRequired: boolean;
    constructor(controlContainer: ControlContainer, cdr: ChangeDetectorRef, logger: LuxConsoleService, config: LuxComponentsConfigService);
    ngOnInit(): void;
    ngOnChanges(simpleChanges: any): void;
    /**
     * Wird beim Aendern des Slider-Wertes aufgerufen.
     * @param changeEvent
     */
    onChange(changeEvent: MatSliderChange): void;
    /**
     * Wird beim Bewegen des Sliders aufgerufen.
     * @param inputEvent
     */
    onInput(inputEvent: MatSliderChange): void;
    notifyFormValueChanged(formValue: any): void;
    /**
     * Workaround, ohne den der Slider leider nicht beim Wechsel zum disabled-State den Gab
     * um den Thumb herum zeichnet. - dron
     */
    private redrawSliderWorkaround;
    protected triggerOutputPatternCheck(): void;
    protected triggerInputPatternCheck(simpleChanges: SimpleChanges): void;
}
