import { ChangeDetectorRef, DoCheck, ElementRef, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { ControlContainer } from '@angular/forms';
import { DateAdapter, MatDatepicker } from '@angular/material';
import { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';
import { LuxConsoleService } from '../../lux-util/lux-console.service';
import { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';
import { LuxFormInputBaseClass } from '../lux-form-model/lux-form-input-base.class';
export declare const APP_DATE_FORMATS: {
    parse: {
        dateInput: {
            month: string;
            year: string;
            day: string;
        };
    };
    display: {
        dateInput: {
            month: string;
            year: string;
            day: string;
        };
        monthYearLabel: {
            year: string;
            month: string;
        };
        dateA11yLabel: {
            year: string;
            month: string;
            day: string;
        };
        monthYearA11yLabel: {
            year: string;
            month: string;
        };
    };
};
export declare class LuxDatepickerComponent extends LuxFormInputBaseClass implements OnInit, OnChanges, OnDestroy, DoCheck {
    private dateAdapter;
    private mediaObserver;
    private elementRef;
    private originalTouchUi;
    private mediaSubscription;
    private previousISO;
    min: Date;
    max: Date;
    start: Date;
    luxStartView: 'month' | 'year';
    luxTouchUi: boolean;
    luxOpened: boolean;
    luxStartDate: string;
    luxShowToggle: boolean;
    luxLocale: string;
    luxCustomFilter: any;
    luxMaxDate: string;
    luxMinDate: string;
    matDatepicker: MatDatepicker<any>;
    datepickerInput: ElementRef;
    luxValue: string;
    constructor(controlContainer: ControlContainer, dateAdapter: DateAdapter<Date>, mediaObserver: LuxMediaQueryObserverService, elementRef: ElementRef, cdr: ChangeDetectorRef, logger: LuxConsoleService, config: LuxComponentsConfigService);
    ngOnChanges(simpleChanges: SimpleChanges): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    /**
     * Erzeugt für die Unter- bzw. Überschreitung
     * @param value
     * @param errors
     */
    errorMessageModifier(value: any, errors: any): "Das Datum unterschreitet den Minimalwert" | "Das Datum überschreitet den Maximalwert" | "Das Datum ist ungültig" | "Das Datum darf nicht leer sein";
    /**
     * Checkt ob eine mobile Media-Query vorliegt.
     * Wenn ja, wird automagisch die TouchUI aktiviert.
     * Wenn nein, wird der vom Aufrufer/originale luxTouchUI-Wert genutzt.
     */
    private checkMediaObserver;
    /**
     * Führt .open() bzw. .close() vom MatDatepicker aus, abhängig vom Wert für luxOpened.
     */
    private triggerOpenClose;
    /**
     * Aktualisiert den FormControl-Value und den Wert im Parent über valueChange mithilfe des übergebenen ISO-Strings.
     * @param isoValue
     */
    private setISOValue;
    protected setValue(value: any): void;
    protected initFormValueSubscription(): void;
    private updateDateValue;
}
