import { FormControl, FormGroup } from '@angular/forms';
import { LuxBackgroundColorsEnum } from './lux-colors.enum';
export declare class LuxUtil {
    static readonly ISO_8601_FULL: RegExp;
    /**
     * Prueft ob ein String leer ist.
     * @param str
     * @returns boolean
     */
    static isEmpty(str: any): boolean;
    /**
     * Liest aus einem Objekt ein bestimmtes Feld aus.
     * Laesst sich auch ueber mehrere Unterobjekte verschachteln.
     * Beispiele fuer propertyNamePath:
     * "value"
     * "unterobjekt1.unterobjekt2.value"
     *
     * @param el
     * @param propertyNamePath
     * @returns any
     */
    static readPropertyValueFromObject(el: any, propertyNamePath: string): any;
    /**
     * Gibt eine von verschiedenen vordefinierten Fehlernachrichten passend zu den
     * vorhandenen Fehlern der uebergebenen FormControl zurueck.
     * @param formControl
     * @returns string
     */
    static getErrorMessage(formControl: FormControl): string;
    /**
     * Prueft ob der uebergebene Wert ein JS-Datum ist.
     * @param value
     * @returns boolean
     */
    static isDate(value: any): boolean;
    /**
     * Zeigt die Validierungsfehler der einzelnen FormControls innerhalb der FormGroup an.
     * Wenn innerhalb der übergebenen FormGroup weitere Formgroups enthalten sind, werden
     * diese ebenfalls validiert.
     * @param formGroup
     */
    static showValidationErrors(formGroup: FormGroup): void;
    /**
     * Diese Methode scrollt zu der übergebenen Id.
     *
     * @param id Eine Elementid (z.B. <tag id="myId">...)
     */
    static goTo(id: string): void;
    /**
     * Prueft ob die Applikation im IE geoeffnet ist.
     * @returns boolean
     */
    static isIE(): boolean;
    /**
     * Prueft ob die Applikation im Edge geoeffnet ist.
     * @returns boolean
     */
    static isEdge(): boolean;
    /**
     * Prueft ob die Applikation im IE oder Edge geoffnet ist.
     * @returns boolean
     */
    static isIEorEdge(): boolean;
    /**
     * Diese Methode verhindert, dass ein Event weiterverarbeitet wird.
     *
     * @param event Ein beliebiges Event.
     */
    static stopEventPropagation(event: any): void;
    static getColorsByBgColorsEnum(color: LuxBackgroundColorsEnum): {
        backgroundCSSClass: any;
        fontCSSClass: any;
    };
    static isNumber(toCheck: any): boolean;
    static base64ToArrayBuffer(data: any): Uint8Array;
}
