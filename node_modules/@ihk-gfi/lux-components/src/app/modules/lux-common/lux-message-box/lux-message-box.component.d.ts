import { EventEmitter, OnInit } from '@angular/core';
import { ILuxMessageChangeEvent, ILuxMessageCloseEvent } from './lux-message-box-model/lux-message-events.interface';
import { ILuxMessage } from './lux-message-box-model/lux-message.interface';
import { PageEvent } from '@angular/material';
export declare class LuxMessageBoxComponent implements OnInit {
    private _luxMessages;
    private _luxMaximumDisplayed;
    private _luxIndex;
    displayedMessages: ILuxMessage[];
    boxShadow: boolean;
    luxMessageChanged: EventEmitter<ILuxMessageChangeEvent>;
    luxMessageClosed: EventEmitter<ILuxMessageCloseEvent>;
    luxMessageBoxClosed: EventEmitter<void>;
    luxIndex: number;
    luxMaximumDisplayed: number;
    luxMessages: ILuxMessage[];
    constructor();
    ngOnInit(): void;
    /**
     * Wird aufgerufen, wenn der Close-Button für eine MessageBox aufgerufen wurde.
     *
     * Gibt eine Event-Payload mit der betroffenen Nachricht mit Index weiter.
     * @param $event
     */
    messageClosed($event: ILuxMessage): void;
    /**
     * Aktualisiert die angezeigten Nachrichten und den Paginator,
     * gibt außerdem das Change-Event mit den angezeigten/vorherigen Nachrichten.
     * @param $event
     */
    pageChanged($event: PageEvent): void;
    /**
     * Aktualisiert die aktuell angezeigten Nachrichten anhand des Index.
     * @param pageIndex
     * @param pageSize
     */
    updateDisplayedMessages(pageIndex: number): void;
}
