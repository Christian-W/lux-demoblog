import { AfterViewInit, ChangeDetectorRef, ComponentFactoryResolver, ElementRef, EventEmitter, QueryList, ViewContainerRef } from '@angular/core';
import { ILuxStepperButtonConfig } from './lux-stepper-model/lux-stepper-button-config.interface';
import { LuxStepperHelperService } from './lux-stepper-helper.service';
import { LuxStepComponent } from './lux-stepper-subcomponents/lux-step.component';
import { ILuxStepperConfiguration } from './lux-stepper-model/lux-stepper-configuration.interface';
import { MatHorizontalStepper, MatVerticalStepper } from '@angular/material';
import { StepperSelectionEvent } from '@angular/cdk/stepper';
export declare class LuxStepperComponent implements AfterViewInit {
    stepperService: LuxStepperHelperService;
    private cdr;
    private cfr;
    private elementRef;
    private readonly _DEFAULT_PREV_BTN_CONF;
    private readonly _DEFAULT_NEXT_BTN_CONF;
    private readonly _DEFAULT_FIN_BTN_CONF;
    luxSteps: QueryList<LuxStepComponent>;
    luxFinishButtonClicked: EventEmitter<any>;
    luxStepChanged: EventEmitter<StepperSelectionEvent>;
    luxCurrentStepNumberChange: EventEmitter<number>;
    matStepper: MatHorizontalStepper | MatVerticalStepper;
    matStepLabels: ViewContainerRef[];
    stepperConfiguration: ILuxStepperConfiguration;
    constructor(stepperService: LuxStepperHelperService, cdr: ChangeDetectorRef, cfr: ComponentFactoryResolver, elementRef: ElementRef);
    ngAfterViewInit(): void;
    /**
     * Wird beim Wechsel des aktuellen Steps (Klick auf Tab oder .next()/.previous() Aufruf) aufgerufen.
     * @param $event
     */
    onStepChanged($event: StepperSelectionEvent): void;
    /**
     * Generiert die individuellen Icons fuer die Steps.
     */
    generateCustomIcons(): void;
    /**
     * Entfernt die eigenen Icons fuer die Steps.
     */
    clearCustomIcons(): void;
    /**
     * Stößt die Validierungsprüfung für den aktuell sichtbaren Step und dessen StepControl (wenn vorhanden) an.
     */
    checkValidation(): void;
    /**
     * Generiert die Icons fuer einen einzelnen Step
     * @param stepLabel
     * @param luxStep
     * @param factory
     */
    private generateCustomIconForStep;
    /**
     * Aktualisiert die aktuellen Icons, entfernt zunächst die individuellen Icons und
     * versucht anschließend diese neu zu generieren (nötig bei Änderungen).
     */
    private updateIcons;
    private setFocusedCSS;
    /**** Getter/Setter luxCurrentStepNumber ****/
    luxCurrentStepNumber: number;
    /**** Getter/Setter luxUseCustomIcons ****/
    luxUseCustomIcons: boolean;
    /**** Getter/Setter luxEditedIconName ****/
    luxEditedIconName: string;
    /**** Getter/Setter luxVerticalStepper ****/
    luxVerticalStepper: boolean;
    /**** Getter/Setter luxLinear ****/
    luxLinear: boolean;
    /**** Getter/Setter luxDisabled ****/
    luxDisabled: boolean;
    /**** Getter/Setter luxShowNavigationButtons ****/
    luxShowNavigationButtons: boolean;
    /**** Getter/Setter luxHorizontalStepAnimationActive ****/
    luxHorizontalStepAnimationActive: boolean;
    /**** Getter/Setter luxPreviousButtonConfig ****/
    luxPreviousButtonConfig: ILuxStepperButtonConfig;
    /**** Getter/Setter luxNextButtonConfig ****/
    luxNextButtonConfig: ILuxStepperButtonConfig;
    /**** Getter/Setter luxFinishButtonConfig ****/
    luxFinishButtonConfig: ILuxStepperButtonConfig;
}
