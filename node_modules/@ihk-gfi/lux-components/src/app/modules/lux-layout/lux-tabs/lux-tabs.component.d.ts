import { AfterViewInit, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges } from '@angular/core';
import { LuxTabComponent } from './lux-tabs-subcomponents/lux-tab.component';
import { MatTabChangeEvent } from '@angular/material';
import { ReplaySubject } from 'rxjs';
import { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';
import { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';
export declare class LuxTabsComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {
    componentsConfigService: LuxComponentsConfigService;
    queryService: LuxMediaQueryObserverService;
    private static readonly _DEBOUNCE_TIME;
    private static _notificationNewClass;
    private static _notificationReadClass;
    private configSubscription;
    tabChange$: ReplaySubject<MatTabChangeEvent>;
    labelUppercase: boolean;
    luxTabAnimationActive: boolean;
    luxActiveTab: number;
    luxIconSize: string;
    luxDisplayDivider: boolean;
    luxTagId: string;
    luxLazyLoading: boolean;
    readonly luxActiveTabChanged: EventEmitter<any>;
    luxTabs: QueryList<LuxTabComponent>;
    tabHeader: any;
    constructor(componentsConfigService: LuxComponentsConfigService, queryService: LuxMediaQueryObserverService);
    ngOnInit(): void;
    ngOnChanges(simpleChanges: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    getNotificationIconColorClassForTab(luxTab: LuxTabComponent): string;
    /**
     * Forciert Angular die Tab-Header neu zu pruefen, in dem
     * der erste Tab ein Leerzeichen bekommt, welches im naechsten
     * Pruefzyklus entfernt wird.
     */
    rerenderTabs(): void;
    trackTab(index: number, luxTab: LuxTabComponent): number;
}
