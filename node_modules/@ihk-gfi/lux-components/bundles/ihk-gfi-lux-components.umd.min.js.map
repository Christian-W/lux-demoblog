{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/lux-colors.enum.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-base.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-label.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-infinite-scroll/lux-infinite-scroll.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-file/lux-file-model/lux-file-error.interface.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/lux-util.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-components-config/lux-components-hammer-config.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-components-config/lux-components-config.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-components-config/lux-components-config.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-control/lux-form-control-subcomponents/lux-form-label.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-control/lux-form-control-subcomponents/lux-form-hint.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-model/lux-form-component-base.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-control/lux-form-control.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-tag-id/lux-tag-id.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-tooltip/lux-tooltip.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-tabindex/lux-tab-index.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-ripple/lux-ripple.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-expanded.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-role.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-haspopup.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-hidden.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-describedby.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-invalid.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-required.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-labelledby.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-badge-notification/lux-badge-notification.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-directives.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-icon/lux-icon/lux-icon.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-icon/lux-image/lux-image.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-icon/lux-icon.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-action-model/lux-action-component-base.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-button/lux-button.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-link/lux-link.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-menu/lux-menu-subcomponents/lux-menu-item.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-menu/lux-menu-subcomponents/lux-menu-trigger.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-menu/lux-menu.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-action.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-pipes/lux-relative-timestamp/lux-relative-timestamp.pipe.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-pipes/lux-render-property/lux-render-property.pipe.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-pipes/lux-property-from-object/lux-property-from-object.pipe.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-pipes/lux-alphabetically-sorted/lux-alphabetically-sorted.pipe.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-pipes/lux-pipes.module.ts","ng://@ihk-gfi/lux-components/src/environments/environment.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/lux-console.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/lux-media-query-observer.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-accordion/lux-accordion.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-footer/lux-app-footer-button.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-footer/lux-app-footer-link.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-footer/lux-app-footer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-app-header-right-nav/lux-app-header-right-nav.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-mobile-helper.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-item.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-model/lux-side-nav-animations.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-app-header-action-nav/lux-app-header-action-nav.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-card/lux-card-subcomponents/lux-card-actions.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-card/lux-card-subcomponents/lux-card-content-expanded.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-card/lux-card-subcomponents/lux-card-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-card/lux-card-subcomponents/lux-card-info.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-card/lux-card-model/lux-card-animations.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-card/lux-card.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-divider/lux-divider.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-list/lux-list-subcomponents/lux-list-item-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-list/lux-list-subcomponents/lux-list-item-icon.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-list/lux-list-subcomponents/lux-list-item.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-list/lux-list.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-detail-view/lux-detail-view.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-footer/lux-master-footer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-header/lux-master-header-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-header/lux-master-header.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-simple/lux-master-simple.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-view/lux-master-view.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-tabs/lux-tabs-subcomponents/lux-tab.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-tabs/lux-tabs.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-detail-view/lux-detail-wrapper.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-panel/lux-panel-subcomponents/lux-panel-action.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-panel/lux-panel-subcomponents/lux-panel-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-panel/lux-panel-subcomponents/lux-panel-header-description.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-panel/lux-panel-subcomponents/lux-panel-header-title.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-panel/lux-panel.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-step-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-step-header.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-step.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-helper.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-tile/lux-tile.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-footer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-header.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-content/lux-app-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-model/lux-stepper-parent.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-stepper-horizontal/lux-stepper-horizontal.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-stepper-nav-buttons/lux-stepper-nav-buttons.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-stepper-vertical/lux-stepper-vertical.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-app-header-action-nav/lux-app-header-action-nav-item/lux-app-header-action-nav-item.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-layout.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-autocomplete/lux-autocomplete.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-model/lux-form-checkable-base.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-checkbox/lux-checkbox.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-chips/lux-chips-subcomponents/lux-chip-group.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-chips/lux-chips-subcomponents/lux-chip.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-chips/lux-chips.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-model/lux-form-input-base.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-datepicker/lux-datepicker-adapter.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-datepicker/lux-datepicker.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-model/lux-lookup-parameters.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-model/lux-form-file-base.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-file/lux-file-input/lux-file-input.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-file/lux-file-list/lux-file-list.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-file/lux-file-subcomponents/lux-file-progress/lux-file-progress.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-input/lux-input-subcomponents/lux-input-prefix.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-input/lux-input-subcomponents/lux-input-suffix.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-input/lux-input.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-model/lux-form-selectable-base.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-radio/lux-radio.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-select/lux-select.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-slider/lux-slider.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-textarea/lux-textarea.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-toggle/lux-toggle.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-file/lux-file-model/lux-file-capture.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-control/lux-form-directives/lux-maxlength/lux-max-length.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-spinner/lux-spinner.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-label/lux-label.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-badge/lux-badge.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-progress/lux-progress.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-table/lux-table-data-source.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/lux-paginator-intl.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-table/lux-table-subcomponents/lux-table-column-header.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-table/lux-table-subcomponents/lux-table-column-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-table/lux-table-subcomponents/lux-table-column-footer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-table/lux-table-subcomponents/lux-table-column.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-table/lux-table.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-message-box/lux-message-box-model/lux-message-box.animations.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-message-box/lux-message-box.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-message-box/lux-message-box-subcomponents/lux-message.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-common.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-error/lux-http-error/lux-http-error-interceptor.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-error/lux-http-error/lux-http-error.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-error/lux-error-page/lux-error-services/lux-error-store.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-error/lux-error-page/lux-error-page.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-error/lux-error.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-error/lux-error-page/lux-error-services/lux-error-service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-config.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-ref.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-base/lux-file-preview-base.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-imgviewer/lux-file-preview-imgviewer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-notsupportedviewer/lux-file-preview-notsupportedviewer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-pdfviewer/lux-file-preview-pdfviewer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-toolbar/lux-file-preview-toolbar.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-footer/lux-app-footer-button-info.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-footer/lux-app-footer-link-info.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-service/lux-lookup.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-model/lux-lookup-component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-service/lux-lookup-handler.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-model/lux-lookup-error-state-matcher.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-combobox/lux-lookup-combobox.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-autocomplete/lux-autocomplete-error-state-matcher.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-autocomplete/lux-lookup-autocomplete.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-label/lux-lookup-label.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-model/lux-lookup-table-entry.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-snackbar/lux-snackbar-config.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-snackbar/lux-snackbar-component/lux-snackbar.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-model/lux-dialog-ref.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-preset/lux-dialog-preset.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-structure/lux-dialog-structure.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-title.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-actions.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-popups.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-snackbar/lux-snackbar.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-model/lux-dialog-config.interface.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-model/lux-dialog-preset-config.interface.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/lux-storage.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/testing/lux-test-helper.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/testing/lux-test-overlay-helper.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","ar","error","__spread","concat","LuxBackgroundColorsEnum","LuxFontColorsEnum","LuxAriaBase","elementRef","renderer","ariaTagName","init","ngAfterViewInit","renderAria","selector","getSelector","el","nativeElement","querySelector","getValue","removeAttribute","setAttribute","LuxAriaLabelDirective","_this","_super","luxAriaLabelSelector","tagName","toLowerCase","tslib_1.__extends","_luxAriaLabel","ElementRef","Renderer2","tslib_1.__decorate","Input","Directive","LuxInfiniteScrollDirective","scroll$","Subject","lastPosition","scrollHeight","scrollTop","clientHeight","luxScrollPercent","luxImmediateCallback","luxIsLoading","luxScrolled","EventEmitter","ngOnInit","window","addEventListener","onScroll","bind","scrollSubscription","pipe","debounceTime","LuxInfiniteScrollDirective_1","SCROLL_DEBOUNCE_TIME","subscribe","performScrollCheck","hasScrollbar","emit","ngOnDestroy","removeEventListener","unsubscribe","event","srcElement","position","isUserScrollingDown","isScrollExpectedPercent","curPos","Output","LuxFileErrorCause","LuxUtil","isEmpty","str","readPropertyValueFromObject","propertyNamePath","splitProperties","split","tempObject","splitProperties_1","tslib_1.__values","splitProperties_1_1","getErrorMessage","formControl","hasError","getError","requiredLength","min","max","pattern","requiredPattern","substring","isDate","Date","isNaN","valueOf","showValidationErrors","formGroup","keys","controls","forEach","field","control","get","FormGroup","markAsTouched","onlySelf","goTo","id","element","document","setTimeout","scrollIntoView","isIE","msie","isEdge","navigator","userAgent","indexOf","isIEorEdge","stopEventPropagation","stopPropagation","console","log","getColorsByBgColorsEnum","color","backgroundCSSClass","fontCSSClass","gray","orange","yellow","black","white","isNumber","toCheck","Number","base64ToArrayBuffer","data","binaryString","atob","bytes","Uint8Array","charCodeAt","ISO_8601_FULL","RegExp","LuxComponentsHammerConfig","buildHammer","className","Hammer","touchAction","GestureConfig","LuxConfigTokenService","InjectionToken","LuxComponentsConfigModule","forRoot","config","ngModule","LuxComponentsConfigModule_1","providers","provide","useValue","NgModule","imports","CommonModule","declarations","HAMMER_GESTURE_CONFIG","useClass","LuxComponentsConfigService","config$","BehaviorSubject","mergeDefaultData","warn","LuxComponentsConfigService_1","DEFAULT_CONFIG","asObservable","isLabelUppercaseForSelector","labelConfiguration","allUppercase","notAppliedTo","updateConfiguration","mergedConfig","undefined","displayLuxConsoleLogs","generateLuxTagIds","lookupServiceUrl","cardExpansionAnimationActive","displayBindingDebugHint","rippleConfiguration","exitDuration","enterDuration","Inject","args","type","Optional","Injectable","providedIn","tslib_1.__param","LuxFormLabelComponent","ViewChild","TemplateRef","static","Component","template","LuxFormHintComponent","luxFormControlUID","LuxFormComponentBase","controlContainer","cdr","logger","configService","hasHadRequiredValidator","latestErrors","preventUnwantedValueChange","errorMessage","uid","cssReadonly","_luxReadonly","luxFocusIn","luxFocusOut","luxDisabledChange","luxErrorCallback","errors","currentConfig","_luxDisabled","disabled","detectChanges","handleFormDisabledState","readonly","_luxRequired","required","isInForm","luxControlBinding","updateValidators","luxControlValidators","initFormControl","initDisabledState","initFormValueSubscription","initFormStateSubscription","triggerOutputPatternCheck","ngOnChanges","simpleChanges","triggerInputPatternCheck","ngDoCheck","touched","fetchErrorMessage","hasRequiredValidator","updateValueAndValidity","_formValueChangeSubscr","_formStatusChangeSubscr","_configSubscription","_a","errorMsg","luxErrorMessage","errorMessageModifier","luxDisabled","disable","enable","_initialValue","setValue","notifyFormValueChanged","formValue","notifyFormStatusChanged","formStatus","abstractControl","validator","requiredTrue","FormControl","DEFAULT_CTRL_NAME","valueChanges","distinctUntilChanged","statusChanges","status","checkValidatorsContainRequired","validators","luxRequired","isArray","Validators","filter","setValidators","checkOutputPatternViolation","observers","logPatternViolationWarning","checkInputPatternViolation","simpleChange","firstChange","ContentChild","HostBinding","Function","LuxFormControlComponent","_luxScalableHeight","_luxHideBottomBorder","luxIgnoreDefaultLabel","scalable","hide","shouldDisplayError","luxFormComponent","shouldDisplayMisc","formHintComponent","luxHint","shouldDisplayLabelByProperty","formLabelComponent","luxLabel","shouldDisplayHintByProperty","focusin","focused","focusout","ChangeDetectorRef","LuxTagIdDirective","componentsConfigService","configSubscription","newConfig","luxComponent","findLuxComponent","newTagId","luxTagId","getLuxTagId","mergeTagIds","getLuxTagIdParent","parentElement","nodeName","LuxTagIdDirective_1","sepComponent","luxTagIdAttrName","usedLabel","getAttribute","getElementsByClassName","textContent","trim","getNodeName","getParentPath","currentTagId","hasAttribute","tagId1","tagId2","sepParent","newId","startsWith","toUpperCase","LuxTooltipDirective","luxOverlay","luxElementRef","luxScrollDispatcher","luxViewContainerRef","luxNgZone","luxPlatform","luxAriaDescriber","luxFocusMonitor","luxScrollStrategy","luxDir","luxDefaultOptions","luxTooltip","luxTooltipHideDelay","luxTooltipShowDelay","luxTooltipPosition","luxTooltipDisabled","_handleLongPress","show","_handleKeydown","_handleTouchend","message","hideDelay","showDelay","Overlay","ScrollDispatcher","ViewContainerRef","NgZone","Platform","AriaDescriber","FocusMonitor","MAT_TOOLTIP_SCROLL_STRATEGY","Directionality","MAT_TOOLTIP_DEFAULT_OPTIONS","HostListener","exportAs","MatTooltip","LuxTabIndexDirective","changes$","ReplaySubject","luxTabIndex","luxApplyToParent","luxApplyToChildren","luxPotentialChildren","updateElementsWithTabIndex","changesSubscription","onChanges","setTabIndexForElement","childQuery","setTabIndexByQuery","elementQuery","elements","querySelectorAll","LuxRippleDirective","luxGlobalOptions","luxAnimationMode","_luxRippleUnbounded","_luxRippleCentered","_luxRippleDisabled","_luxRippleRadius","_luxRippleEnterDuration","_luxRippleExitDuration","_luxRippleColor","unbounded","centered","radius","animation","luxRippleEnterDuration","luxRippleExitDuration","luxRippleColor","luxRippleCentered","luxRippleDisabled","luxRippleRadius","luxRippleUnbounded","MAT_RIPPLE_GLOBAL_OPTIONS","ANIMATION_MODULE_TYPE","host","class","[class.mat-ripple-unbounded]","String","MatRipple","LuxAriaExpandedDirective","luxAriaExpandedSelector","_luxAriaExpanded","expanded","LuxAriaRoleDirective","_luxAriaRole","role","luxAriaRoleSelector","LuxAriaHaspopupDirective","luxAriaHasPopupSelector","_luxAriaHasPopup","hasPopup","LuxAriaHiddenDirective","_luxAriaHidden","hidden","luxAriaHiddenSelector","LuxAriaDescribedbyDirective","luxAriaDescribedbySelector","_luxAriaDescribedby","describedby","LuxAriaInvalidDirective","_luxAriaInvalid","invalid","luxAriaInvalidSelector","LuxAriaRequiredDirective","_luxAriaRequired","luxAriaRequiredSelector","LuxAriaLabelledbyDirective","luxAriaLabelledbySelector","_luxAriaLabelledby","labelledby","LuxBadgeNotificationDirective","luxRenderer","luxBadgeColor","luxBadgeSize","luxBadgePosition","luxBadgeDisabled","luxBadgeHidden","luxBadgeOverlap","classList","add","changes","updateContent","luxBadgeNotification","size","overlap","checkMaxNumber","newContent","content","description","isHidden","luxBadgeCap","[class.mat-badge-overlap]","[class.mat-badge-above]","[class.mat-badge-below]","[class.mat-badge-before]","[class.mat-badge-after]","[class.mat-badge-small]","[class.mat-badge-medium]","[class.mat-badge-large]","[class.mat-badge-hidden]","[class.mat-badge-disabled]","[class.lux-badge-color-default]","MatBadge","LuxDirectivesModule","MatTooltipModule","MatBadgeModule","MatRippleModule","exports","LuxIconComponent","_luxPadding","_backgroundCSSClass","_fontCSSClass","currentIconSize","styleMargin","luxRounded","margin","padding","_luxIconSize","iconSizeValue","luxIconSize","slice","_luxIconName","iconNameValue","modifiyIconName","iconName","LuxIconComponent_1","FA_BRAND","FA_SOLID","FA_REGULAR","FA_LIGHT","isIconFA","LuxImageComponent","luxImageSrc","luxImageWidth","luxImageHeight","luxRawSrc","updateImageSrc","sanitizeImageSrc","replace","LuxIconModule","MatIconModule","FlexLayoutModule","LuxActionComponentBaseClass","luxColor","luxIconAlignWithLabel","luxClicked","LuxButtonComponent","iconSize","luxType","detectParent","clicked","labelUppercase","LuxLinkComponent","router","luxBlank","redirectToHref","$event","luxHref","open","navigate","Router","LuxMenuItemComponent","luxHiddenChange","luxHideLabelIfExtendedChange","luxAlwaysVisibleChange","_luxAlwaysVisible","_luxHideLabelIfExtended","_luxHidden","width","extended","LuxMenuTriggerComponent","LuxMenuComponent","_menuItems","menuItemSubstcriptions","hideToggle","luxMenuClosed","luxMenuIconName","luxToggleDisabled","_luxDisplayExtended","luxDisplayMenuLeft","luxMaximumExtended","canvas","createElement","menuTriggerElRef","updateExtendedMenuItems","windowResize","menuItems","item","ngAfterViewChecked","luxMenuItemComponents","toArray","calculateMenuItemWidths","menuItemSubscription","menuItemClicked","menuItem","onMenuClosed","defaultTriggerElRef","children","focus","luxDisplayExtended","menuTriggerWidth","offsetWidth","availableWidth","menuExtendedContainer","count","_b","_c","condition","luxHidden","luxAlwaysVisible","extendedMenuItemCount","visibleMenuItemCount","getMenuItemWidth","LuxMenuComponent_1","PADDING_PX","luxIconName","ICON_PX","luxHideLabelIfExtended","getTextWidth","MARGIN_PX","text","context","getContext","font","FONT_PX","measureText","hasVisibleMenuItems","read","ContentChildren","QueryList","LuxActionModule","MatButtonModule","MatMenuModule","entryComponents","timeDeltas","name","days","dayUnit","timeDeltasRelative","LuxRelativeTimestampPipe","transform","timestamp","defaultText","prefix","now","delta","calcDiff","timeName","timeDeltas_1","timeDeltas_1_1","timeDelta","tempDelta","timeUnits","Math","floor","timeDeltasRelative_1","timeDeltasRelative_1_1","a","utc1","UTC","getFullYear","getMonth","getDate","utc2","Pipe","LuxRenderPropertyPipe","renderPropertyName","LuxPropertyFromObjectPipe","object","LuxAlphabeticallySortedPipe","array","sortAlphabetically","sort","valueA","valueB","stringA","toLocaleLowerCase","stringB","localeCompare","LuxPipesModule","environment","production","noop","LuxConsoleService","LuxConsoleService_1","isDebugMode","logDate","group","info","groupEnd","LOG","_i","getLogValue","WARN","ERROR","checkTime","getHours","getMinutes","getSeconds","logValue","arg","JSON","stringify","timeUnit","LuxMediaQueryObserverService","breakpointObserver","_mediaQueryChanged","_subscriptions","addQuerySubscription","Breakpoints","XSmall","Small","Medium","Large","XLarge","subscription","complete","getMediaQueryChangedAsObservable","isXS","activeMediaQuery","isSM","isMD","isLG","isXL","breakpoint","breakpointString","observe","state","matches","BreakpointObserver","LuxAccordionComponent","changed$","luxMode","luxMulti","_luxHideToggle","_luxExpandedHeaderHeight","height","_luxCollapsedHeaderHeight","MatAccordion","LuxAppFooterButtonService","_buttonInfos","buttonInfos","pushButtonInfos","getButtonInfoByCMD","cmd","find","buttonInfo","removeButtonInfoAtIndex","index","removeButtonInfoByCmd","clearButtonInfos","sendButtonCommand","buttonCommand","clickedButton","onClick","LuxAppFooterLinkService","_linkInfos","pushLinkInfos","removeLinkInfoAtIndex","clearLinkInfos","LuxAppFooterComponent","buttonService","linkService","mediaObserver","isMediumOrLargerDevice","getButtons","getLinks","linkInfos","LuxAppHeaderRightNavComponent","LuxMasterDetailMobileHelperService","_mdRegistered$","_masterCollapsed$","_hasValue$","handleMasterCollapseState","hasValue","openMaster","closeMaster","isMobile","register","isRegistered","unregister","LuxSideNavItemComponent","luxSelected","luxCloseOnClick","luxExpandable","luxExpanded","LuxSideNavItemComponent_1","changeDetection","ChangeDetectionStrategy","OnPush","sideNavAnimation","trigger","style","left","params","transition","animate","sideNavOverlayAnimation","opacity","LuxSideNavComponent","luxDashboardLinkTitle","sideNavExpanded","visibility","itemClickSubscriptions","keyEvent","toggle","calculateWidthHeight","sideNavItems","updateItemClickListeners","focusElement","activeElement","updateSideNavAfterAnimationIsFinished","sideNavEl","firstButton","close","totalHeight","offsetHeight","headerHeight","sideNavHeaderEl","footerHeight","sideNavFooterEl","descendants","KeyboardEvent","animations","LuxAppHeaderActionNavComponent","LuxAppHeaderComponent","mobileHelperService","masterCollapsedObservable","isOpen","isMasterOpen","isRegisteredObservable","isMasterDetailAvailable","hasValueObservable","masterHasValue","luxUserName","userNameShort","generateUserNameShort","luxAppTitleShort","showMasterClick","isMasterToggleVisible","customTrigger","short","charAt","LuxCardActionsComponent","LuxCardContentExpandedComponent","LuxCardContentComponent","LuxCardInfoComponent","expansionAnim","duration","startHeight","LuxCardComponent","luxTitleLineBreak","luxExpandedChange","luxAfterExpansion","animationDisabled","luxTitle","hasCardAction","actionsComponent","iconComponents","contentExpandedComponent","changeContentExpansion","showButtons","getTitleAlignment","showIcon","getAnimState","getAnimDuration","expansionDone","LuxDividerComponent","_luxVertical","luxInset","classes","vertical","updateHostClasses","luxVertical","LuxListItemContentComponent","LuxListItemIconComponent","LuxListItemComponent","tabindex","_luxTitle","title","ariaLabel","getLabel","_luxSubTitle","subTitle","_luxSelected","selected","ariaSelected","luxSubTitle","LuxListComponent","_luxSelectedPosition","clickSubscriptions","keyManager","FocusKeyManager","luxFocusedItemChange","luxFocusedPositionChange","luxSelectedPositionChange","luxEmptyIconName","luxEmptyIconSize","luxEmptyLabel","ariaMulti","onKeydown","keydown","luxSelectedPosition","select","scroll","luxItems","listItemsSubscription","listenForClicks","previousFocusedPosition","setActiveItem","keyCode","SPACE","ENTER","activeItemIndex","preventDefault","HOME","END","setFirstItemActive","setLastItemActive","UP_ARROW","setPreviousItemActive","DOWN_ARROW","setNextItemActive","listItem","selectedListItem","findListItem","activeItem","LuxDetailViewComponent","LuxMasterFooterComponent","LuxMasterHeaderContentComponent","LuxMasterHeaderComponent","masterDetailMobileHelperService","luxToggleHidden","that","LuxMasterSimpleComponent","LuxMasterViewComponent","overflowY","LuxTabComponent","luxCounterCap","LuxTabsComponent","queryService","tabChange$","luxTabAnimationActive","luxActiveTab","luxDisplayDivider","luxLazyLoading","luxActiveTabChanged","LuxTabsComponent_1","_DEBOUNCE_TIME","tabChange","activeTabChange","activeTab","currentValue","rerenderTabs","getNotificationIconColorClassForTab","luxTab","luxShowNotification","_notificationNewClass","_notificationReadClass","luxTabs","first","trackTab","LuxDetailWrapperComponent","luxDetailRendered","_luxDetailTemplate","ref","LuxMasterDetailComponent","cfr","liveAnnouncer","luxSelectedDetailChange","_luxMasterList","_luxOpen","updateDetail$","detailContext","$implicit","alignEmptyIndicators","luxEmptyIconMaster","luxEmptyLabelMaster","luxEmptyIconDetail","luxEmptyLabelDetail","luxEmptyIconMasterSize","luxEmptyIconDetailSize","luxMasterSpinnerDelay","luxMasterIsLoading","luxCompareWith","o1","o2","_luxSelectedDetail","masterListLength","announcePossibleInfiniteScrolling","handleMasterListUpdate","handleViewCollapse","handleDetailUpdate","handleMasterQueryList","updateDetailSubscription","luxMasterList","luxSelectedDetail","selectedPosition","checkEmptyIndicatorAlignment","onSelectedChange","toggleList","tabsComponent","isDetailInvisible","luxOpen","onInfiniteScrollingLoad","onSwipeLeft","onSwipeRight","compareObjects","updateOpen","flexMaster","flexDetail","luxMasterQueryList","masterListElements","maxItemsVisible","newSelectedPosition","detail","detailViewContainerRef","clear","child","resolveComponentFactory","instance","createComponent","luxDetailContext","luxDetailTemplate","detailView","tempRef","setNewDetail","parentNode","delay","tap","masterHeader","masterFooter","masterContainer","maxHeight","announce","ComponentFactoryResolver","LiveAnnouncer","ViewChildren","LuxPanelActionComponent","LuxPanelContentComponent","LuxPanelHeaderDescriptionComponent","LuxPanelHeaderTitleComponent","LuxPanelComponent","parent","luxOpened","luxClosed","pr1","pl1","luxHideToggle","luxExpandedHeaderHeight","luxCollapsedHeaderHeight","matExpansionPanel","accordion","matAccordion","propertyName","onOpened","eventValue","onClosed","forwardRef","MatExpansionPanel","LuxStepContentComponent","LuxStepHeaderComponent","LuxStepComponent","_iconChange","luxOptional","luxEditable","luxCompleted","getIconChangeObsv","isCompleted","luxStepControl","valid","LuxStepperHelperService","switchStep","Map","nextStep","stepper","subject","previousStep","getObservable","of","registerStepper","set","LuxStepperComponent","stepperService","_DEFAULT_PREV_BTN_CONF","_DEFAULT_NEXT_BTN_CONF","_DEFAULT_FIN_BTN_CONF","luxFinishButtonClicked","luxStepChanged","luxCurrentStepNumberChange","stepperConfiguration","luxCurrentStepNumber","luxShowNavigationButtons","luxHorizontalStepAnimationActive","luxEditedIconName","luxPreviousButtonConfig","luxNextButtonConfig","luxFinishButtonConfig","luxSteps","luxUseCustomIcons","generateCustomIcons","checkValidation","matStepper","_stepHeader","selectedIndex","previous","luxStep","iconChange","clearCustomIcons","setFocusedCSS","onStepChanged","matStepHeaders","factory","matStepLabels","stepLabel","generateCustomIconForStep","stepControl","componentIconEdited","instanceIconEdited","luxMargin","location","componentIconNormal","instanceIconNormal","updateIcons","use","luxVerticalStepper","luxLinear","linear","showNavButtons","animationActive","LuxTileComponent","getNotificationIconColorClass","LuxTileComponent_1","LuxSideNavFooterComponent","LuxSideNavHeaderComponent","LuxAppContentComponent","LuxStepperParent","luxFinButtonClicked","luxNextButtonClicked","luxPrevButtonClicked","luxCheckValidation","luxMatStepperLoaded","luxMatStepLabelsLoaded","LuxStepperHorizontalComponent","LuxStepperNavButtonsComponent","luxPrevClick","luxNextClick","luxFinClick","LuxStepperVerticalComponent","LuxAppHeaderActionNavItemComponent","LuxLayoutModule","RouterModule","MatCardModule","MatFormFieldModule","MatTabsModule","MatExpansionModule","MatStepperModule","MatDividerModule","MatProgressSpinnerModule","LuxAutocompleteComponent","selected$","luxPlaceholder","luxOptions","luxOptionLabelProp","luxLookupDelay","luxErrorMessageNotAnOption","luxSelectAllOnClick","luxStrict","luxValueChange","luxOptionSelected","luxBlur","luxFocus","selectedOption","option","matAutoComplete","panelClosingActions","filterResult","getOptionLabel","luxValue","handleErrors","filteredOptions","startWith","map","filterLabel","displayFn","filterTerm","clickEvent","setSelectionRange","handleOtherErrors","handleIncorrectError","setErrors","matInput","ControlContainer","MatAutocompleteTrigger","LuxFormCheckableBaseClass","luxCheckedChange","checked","luxChecked","LuxCheckboxComponent","LuxChipGroupComponent","_luxColor","luxChipClicked","luxChipAdded","luxChipRemoved","luxChipSelected","luxLabels","luxRemovable","remove","splice","click","LuxChipComponent","removeClicked","LuxChipsComponent","inputValueSubscription","Subscription","newChipSubscription","_luxAutocompleteOptions","_luxLabel","inputValue$","newChip$","luxOrientation","luxInputAllowed","luxMultiple","luxAutocompleteOptions","compareValue","luxChipGroupComponents","chipGroup","luxChipComponents","chip","options","luxNewChipGroup","matAutocompleteTrigger","closePanel","inputChanged","autoCompleteAdd","input","inputAdd","matAutocomplete","MatChip","MatAutocomplete","LuxFormInputBaseClass","luxAutocomplete","LuxDatepickerAdapter","dotRegExp","backslashRegExp","hyphenRegExp","hyphenRegExp_1","format","date","displayFormat","toLocaleDateString","locale","parse","test","getUTCNulled_ddMMYYYY","getUTCNulled_MMddYYY","getUTCNulled_YYYYMMdd","dateString","separator","splitDate","tempDate","setUTCFullYear","isValid","NativeDateAdapter","APP_DATE_FORMATS","dateInput","month","year","day","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","LuxDatepickerComponent","dateAdapter","luxStartView","luxTouchUi","luxStartDate","luxShowToggle","luxLocale","luxCustomFilter","luxMaxDate","luxMinDate","setLocale","triggerOpenClose","start","originalTouchUi","mediaSubscription","checkMediaObserver","matDatepickerMin","matDatepickerMax","datepickerInput","matDatepicker","setISOValue","isoValue","previousISO","emitEvent","emitModelToViewChange","emitViewToModelChange","updateDateValue","eventDate","setUTCHours","toISOString","DateAdapter","MatDatepicker","deps","MAT_DATE_LOCALE","MAT_DATE_FORMATS","LuxFieldValues","LuxBehandlungsOptionenUngueltige","LuxFormFileBase","http","defaultReadFileDelay","_luxAccept","_luxUploadActionConfig","_luxDeleteActionConfig","_luxViewActionConfig","_luxDownloadActionConfig","progress","forceProgressIndeterminate","luxSelectedFilesChange","luxUploadReportProgress","luxContentsAsBlob","luxMaxSizeMB","luxCapture","luxUploadUrl","luxDnDActive","isDragActive","onDragOver","isDnDAllowed","handleDragOver","onDragLeave","handleDragLeave","onDrop","handleDrop","selectedFiles","accepts","join","onFocusIn","clearFiles","markAsDirty","luxSelectedFiles","clearFormControlErrors","luxDeleteActionConfig","announceAllFilesRemove","downloadFile","file","downloadLink","download","Blob","msSaveBlob","msSaveOrOpenBlob","url","URL","createObjectURL","href","revokeObjectURL","arrBuffer","luxDownloadActionConfig","viewFile","triggerViewFileClick","callbackResult","contentCallback","isObservable","updateSelectedFiles","files","newFiles_1","mapFilesToFileObjects","fileObjects","uploadFiles","luxUploadActionConfig","error_1","formData","FormData","fileObject","append","post","HttpEventType","UploadProgress","round","loaded","total","Response","throwError","cause","UploadFileError","exception","_luxSelectedFiles","filesArray","from","newFiles","this_1","getFileSizeInMB","MaxSizeError","getMaxSizeErrorMessage","splitAccepted","luxAccept","splitFileEnding","fileEnding","isAccepted","accepted","FileNotAccepted","getFileNotAcceptedMessage","readFile","catch","ReadingFileError","filesArray_1","filesArray_1_1","reader","onload","fileData","onerror","readAsDataURL","dataTransfer","dropEffect","selectFiles","luxViewActionConfig","setFormControlErrors","toFixed","getReadingFileErrorMessage","getUploadFileErrorMessage","getMultipleForbiddenMessage","announceFileProcess","multiple","announceFileRemove","fileName","luxReadonly","MultipleForbidden","fileuploadInput","HttpClient","LuxFileInputComponent","LuxFileListComponent","disabledHeader","hiddenHeader","iconNameHeader","labelHeader","fileIcons","rowWidth","iconActionBarWidth","alwaysVisibleView","alwaysVisibleUpload","alwaysVisibleDownload","alwaysVisibleDelete","luxShowPreview","luxBackgroundIconName","_fileEntryNodesChangeSubscr","fileEntries","updateIconAndImage","setFileIcons","setImgSrcs","shouldDisplayPreviewImg","removeFile","searchIndex","selectedFilesArray","replaceableFilesMap","findIndex","compareFile","tempSelectedFiles","replaceableFileObject","newFile","imgElement","targetFileContent","src","selectedFile","newFileIcon","resizeIconActionBar","newRowWidth","fileuploadSingleInput","LuxFileProgressComponent","luxProgress","LuxInputPrefixComponent","LuxInputSuffixComponent","LuxInputComponent","symbolRegExp","luxNumberAlignLeft","onKeyDown","inputElement","match","LuxFormSelectableBase","_luxOptions","luxSelectedChange","checkSelectedAndUpdate","luxPickValue","checkSelectedInOptions","selectedAsArray","allSelectedInOptions","logSelectedNotFound","optionsHasSubarray","targetLength","optionEntry","selectedEntry","LuxRadioComponent","forceVertical","pb3","luxGroupName","luxOrientationVertical","mediaSubscription$","LuxSelectComponent","matOption","matOptions","displayedViewValue","viewValue","MatOption","LuxSliderComponent","luxChange","luxInput","luxValuePercent","luxInvert","luxShowThumbLabel","luxShowThumbLabelAlways","luxTickInterval","_luxMax","_luxMin","_luxStep","luxMin","luxMax","redrawSliderWorkaround","onChange","changeEvent","onInput","inputEvent","matSlider","MatSlider","LuxTextareaComponent","luxMaxRows","luxMinRows","LuxToggleComponent","LuxFileCaptureDirective","_luxFileCapture","LuxMaxLengthDirective","_luxMaxLengthAttr","maxLength","LuxFormModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","MatSelectModule","MatInputModule","MatCheckboxModule","MatChipsModule","MatRadioModule","MatDatepickerModule","MatNativeDateModule","MatAutocompleteModule","MatSliderModule","MatProgressBarModule","LuxSpinnerComponent","luxIndeterminate","LuxLabelComponent","luxId","LuxBadgeComponent","ICON_SIZE","DEFAULT_BADGE_COLOR","luxUppercase","LuxProgressComponent","DEFAULT_PROGRESS_COLOR","blue","animDurationCSS","typeCSS","luxSize","_luxMode","mode","_luxType","LuxTableDataSource","_this_1","selectedEntries","Set","_orderData","active","direction","selected_1","has","notSelected","some","selectedValue","sortingDataAccessor","_updatePaginator","filteredDataLength","totalElements","MatTableDataSource","LuxPaginatorIntl","itemsPerPageLabel","nextPageLabel","previousPageLabel","lastPageLabel","firstPageLabel","getRangeLabel","customRangeLabel","page","pageSize","startIndex","MatPaginatorIntl","LuxTableColumnHeaderComponent","LuxTableColumnContentComponent","LuxTableColumnFooterComponent","LuxTableColumnComponent","change$","luxColumnDef","luxSortable","luxSticky","LuxTableComponent","queryObserver","luxConsole","_luxClasses","_luxShowPagination","_dataColumnDefs","_luxShowFilter","_dataSource","_luxPickValue","_luxCompareWith","httpRequestConf","columnSubscriptions","filtered$","currentCustomClasses","movedTableColumns","luxColWidthsPercent","luxFilterText","luxNoDataText","luxPageSize","luxPageSizeOptions","luxMinWidthPx","luxAutoPaginate","luxHideBorders","customFilterPredicate","property","dataEntry","toLocaleString","dataSource","filterPredicate","mediaQuerySubscription","query","mediaQuery","updateColumnsByMediaQuery","insertCustomCSSClasses","handlePagination","handleFilter","updateDataSourceAttributes","handleSort","calculateProportions","updateSelection","_luxMultiSelect","multiSelect","luxMultiSelect","unshift","col","entry","luxData","pickFn","compareFn","luxHttpDAO","loadHttpDAOData","tableColumns","tableColumnsChangedSubscription","updateColumnSubscriptions","luxShowPagination","tableContainerElement","previousWidth","previousHeight","httpDaoSubscription","filterChangedSubscription","sortChangedSubscription","paginatorPageSubscription","selectedSubscription","getCustomClassesForIndex","row","customClasses","trackFn","changeSelectedEntry","delete","allSelected","checkFilteredAllSelected","changeSelectedEntries","filteredData","anyFootersAvailable","column","footer","LuxTableComponent_1","AUTO_PAGINATION_START","luxClasses","cssClass","check","getAriaSortingLabel","tableColumnDef","announceSortChange","tableColumn","columnDef","directionDescription","luxResponsiveAt","luxResponsiveBehaviour","doesResponsiveAtApply","dataColumnDefs","dataColumn","responsiveAt","mediaQueries","mediaQueries_1","mediaQueries_1_1","filteredBy","isLoadingResults","loadData","totalCount","items","catchError","sortChange","paginator","pageIndex","order","luxShowFilter","x","filterValue","filterElement","temp","paginatorElement","tableHeightCSSCalc","tableMinWidth","foundEntries_1","newEntry","MatPaginator","MatSort","visibilityTrigger","LuxMessageBoxComponent","_luxMessages","_luxMaximumDisplayed","_luxIndex","displayedMessages","boxShadow","luxMessageChanged","luxMessageClosed","luxMessageBoxClosed","luxMessages","updateDisplayedMessages","luxIndex","messages","messageClosed","eventPayload","compareMessage","pageChanged","previousDisplayedMessages","previousIndex","messageChangePayload","currentPage","previousPage","luxMaximumDisplayed","end","LuxMessageComponent","_luxMessage","luxMessage","updateColor","LuxCommonModule","MatTableModule","MatPaginatorModule","MatSortModule","LuxHttpErrorInterceptor","dataStream$","LuxHttpErrorInterceptor_1","dataStream","intercept","req","handle","HttpErrorResponse","LuxHttpErrorComponent","subs","events","NavigationStart","updateErrors","sub","errorMessages","readErrorMessage","red","toString","LuxErrorStoreService","_defaultConfig","errorText","homeRedirectText","homeRedirectUrl","errorPageUrl","skipLocationChange","_config","_lastErrors","_error","newError","safeNewConfig","luxErrorPageConfig","LuxErrorPageComponent","errorStore","clickHomeRedirect","errorConfig","LuxErrorModule","HTTP_INTERCEPTORS","multi","LuxErrorService","setConfig","component","path","navigateToErrorPage","navigateByUrl","LUX_FILE_PREVIEW_DATA","LuxFilePreviewRef","overlayRef","dispose","LuxFilePreviewBase","previewRef","previewData","sanitizer","urls","paddingWith","paddingHeight","startPhase","startDurationMs","loading","downloadIconName","downloadTagId","downloadAriaLabel","closeIconName","closeTagId","closeAriaLabel","handleKeydown","ESCAPE","onClose","updateWidthAndHeight","loadingTimer","myBlob","onDownload","fileComponent","loadingFinished","clearFocus","HTMLElement","blur","innerWidth","innerHeight","DomSanitizer","LuxFilePreviewImgViewerComponent","zoomActive","zoomWidth","zoomStep","previewImg","naturalWidth","onLoad","onZoomIn","onZoomOut","LuxFilePreviewNotSupportedViewerComponent","counter","downloadLabelDefault","downloadLabel","updateDownloadLabel","clearTimeout","timer","LuxFilePreviewPdfViewerComponent","showAll","numPages","loadingDivWidth","loadingDivHeight","zoom","loadingDivLeft","loadingDivTop","onPrevPage","onNextPage","pageRendered","pageNumber","callBackFn","pdf","getPage","viewportWidth","currentIndex","getViewport","scale","PdfViewerComponent","CSS_UNITS","currentZoom","onError","onProgress","progressData","LuxFilePreviewToolbarComponent","mediaQueryService","LuxFilePreviewComponent","fileType","pdfViewer","imgViewer","notSupportedViewer","LuxFilePreviewModule","PdfViewerModule","DEFAULT_FILE_PREVIEW_CONFIG","hasBackdrop","backdropClass","panelClass","LuxFilePreviewService","injector","overlay","previewConfig","createOverlay","previewComponent","attachDialogContainer","backdropClick","dialogRef","createInjector","containerPortal","ComponentPortal","attach","getOverlayConfig","injectionTokens","WeakMap","PortalInjector","positionStrategy","global","centerHorizontally","centerVertically","OverlayConfig","scrollStrategy","scrollStrategies","block","Injector","LuxAppFooterButtonInfo","raised","alwaysVisible","generateInfo","LuxAppFooterLinkInfo","blank","LuxLookupService","getLookupTable","tableNo","parameters","httpParameters","generateParameters","HttpParams","knr","raw","fields","LuxLookupParameters","kurz","lang1","lang2","gueltig_bis","gueltig_von","LuxLookupComponent","lookupService","lookupHandler","luxBehandlungUngueltige","ausgrauen","luxDataLoaded","entries","luxLookupId","luxTableNo","addLookupElement","getLookupElementObsv","fetchLookupData","apiPath","reloadData","isRenderPropAFunction","luxRenderProp","isUngueltig","gueltigkeitBis","showUngueltige","anzeigen","disableUngueltige","getStyles","luxCustomInvalidStyles","luxCustomStyles","luxParameters","setLookupData","LuxLookupHandlerService","lookupElements","lookupEl","getLookupElementSubject","lookupId","LuxLookupErrorStateMatcher","lookupComponent","isErrorState","form","lookupValue","ungueltig","LuxLookupComboboxComponent","luxEntryBlockSize","stateMatcher","matSelect","openedChange","registerPanelScrollEvent","panel","compareByKey","value1","value2","displayedEntries","panelElement","loadOnScroll","reloadNextDataBlock","MatSelect","LuxAutocompleteErrorStateMatcher","noResult","LuxLookupAutocompleteComponent","luxDebounceTime","filteredEntries","searchValue","latestSearchValue","filteredValues","entriesCount","_onChange","openPanel","msg","LuxLookupLabelComponent","luxConsoleLogger","luxLookupUrl","luxBezeichnung","luxTableKey","lookupParameters","luxLookupKnr","getBezeichnung","bezeichnung","kurzText","langText1","LuxLookupModule","HttpClientModule","LuxLookupTableEntry","partial","iconColor","textColor","action","actionColor","LuxSnackbarComponent","snackbarRef","action$","textFontColor","checkColorInEnum","actionFontColor","iconFontColor","onAction","actionClick","dismiss","colorToCheck","LuxSnackbarConfig","MAT_SNACK_BAR_DATA","MatSnackBarRef","LuxDialogRef","_dialogConfirmed","_dialogDeclined","_dialogClosed","_matDialogRef","componentInstance","_data","matDialogRef","closeDialog","afterClosed","dialogResult","LuxDialogPresetComponent","onConfirmClick","onDeclineClick","LuxDialogStructureComponent","dialogBase","LuxDialogTitleComponent","LuxDialogContentComponent","LuxDialogActionsComponent","LuxPopupsModule","MatSnackBarModule","MatDialogModule","A11yModule","LuxSnackbarService","snackBar","openText","actionName","verticalPosition","LuxSnackbarService_1","VERTICAL_POSITION","horizontalPosition","HORIZONTAL_POSITION","openComponent","openFromComponent","_openedSnackBarRef","afterDismissed","MatSnackBar","DEFAULT_DIALOG_CONF","disableClose","DEFAULT_DIALOG_PRESET_CONF","contentTemplate","confirmAction","declineAction","LuxDialogService","matDialog","luxDialogRef","dialogOpened","handleOpen","defaultConfig","LuxDialogService_1","ALREADY_OPENED_ERROR","autoFocus","restoreFocus","MatDialog","LuxStorageService","postfixSensitive","itemSources","newValue","getItem","localStorage","getItemAsObservable","setItem","sensitive","removeItem","clearSensitiveItems","endsWith","clearAll","itemSource","LuxTestHelper","setInputValue","fixture","dispatchEvent","createFakeEvent","wait","tickDuration","tick","debugElement","triggerEventHandler","radioButtonChange","radioButton","TestBed","configureTestingModule","COMMON_ANGULAR_MODULES","MATERIAL_MODULES","LUX_MODULES","compileComponents","node","dispatchFakeEvent","canBubble","dispatchKeyboardEvent","createKeyboardEvent","typeInElement","noInputEvent","typeInElementAsynch","callback","whenStable","createEvent","initEventFn","initKeyEvent","initKeyboardEvent","originalPreventDefault","defineProperties","cancelable","Event","initEvent","selectOneFromFixture","By","css","selectAllFromFixture","queryAll","stringWithoutASCIIChars","exp","configureTestSuite","testBedApi","getTestBed","originReset","resetTestingModule","beforeAll","afterEach","_activeFixtures","destroy","_instantiated","afterAll","configureTestModule","createFileBrowserSafe","NoopAnimationsModule","BrowserModule","RouterTestingModule","MatOptionModule","MatCommonModule","LuxOverlayHelper","inject","OverlayContainer","oc","overlayContainer","htmlElement","getContainerElement","selectAllFromOverlay","selectOneFromOverlay"],"mappings":"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AAU,iCACV6L,SAAA,mkBAGW+5B,oBCgLb,SAAAC,KAA8B,OAAjBA,EAAerqC,EAAA,CAnH3B4N,EAAAA,SAAS,CACRC,QAAS,CACPC,EAAAA,aACAw8B,EAAAA,aACAlmB,EAAAA,iBACA0F,EAAAA,gBACAygB,EAAAA,cACApmB,EAAAA,cACAqmB,EAAAA,mBACAC,EAAAA,cACAC,EAAAA,mBACAC,EAAAA,iBACAC,EAAAA,iBACA1mB,GACA2F,GACA/H,GACAgL,GACA1f,EACAy9B,EAAAA,0BAEF98B,aAAc,CACZioB,GACAjE,GACAoH,GACAD,GACAD,GACAc,GACA8E,GACA/B,GACAR,GACAO,GACAN,GACAE,GACAD,GACAQ,GACAE,GACAzF,GACAJ,GACAD,GACAD,GACAD,GACAjH,GACAwT,GACAH,GACAD,GACAG,GACAD,GACA0C,GACApB,GACAD,GACAD,GACAjM,GACAnG,GACA0W,GACAxK,GACAnK,GACA8U,GACAC,GACAjW,GACAkW,GACAQ,GACAC,GACAI,GACApU,GACAqU,IAEFloB,QAAS,CACP8T,GACAjE,GACAoH,GACAD,GACAD,GACAc,GACA8E,GACA/B,GACAR,GACAO,GACAN,GACAE,GACAD,GACAQ,GACAE,GACAzF,GACAJ,GACAD,GACAD,GACAD,GACAjH,GACAwT,GACAH,GACAD,GACAG,GACAD,GACA0C,GACApB,GACAD,GACAD,GACAjM,GACAnG,GACA0W,GACAxK,GACAnK,GACA8U,GACAC,GACAjW,GACAkW,GACAQ,GACAC,GACAI,GACApU,GACAqU,IAEF38B,UAAW,CAAC8gB,IACZvE,gBAAiB,CAAC7H,GAAkBsc,OAEzB4L,qBC7HX,SAAAS,EACcr6B,EACZC,EACAC,EACUrD,GAJZ,IAAArI,EAMEC,EAAApF,KAAAZ,KAAMuR,EAAkBC,EAAKC,EAAQrD,IAAOpO,YAFlC+F,EAAAqI,OAAAA,EAnCJrI,EAAA8lC,UAAgC,IAAI3vB,EAAAA,cAAmB,GAItDnW,EAAA+lC,eAAyB,GAEzB/lC,EAAAgmC,WAAoB,GACpBhmC,EAAAimC,mBAA6B,QAC7BjmC,EAAA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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Enum fuer die moeglichen Background-Farben\n */\nexport enum LuxBackgroundColorsEnum {\n  red = 'red',\n  green = 'green',\n  yellow = 'yellow',\n  blue = 'blue',\n  gray = 'gray',\n  orange = 'orange',\n  brown = 'brown'\n}\n\n/**\n * Enum fuer die moeglichen Schrift-Farben\n */\nexport enum LuxFontColorsEnum {\n  white = 'white',\n  black = 'black'\n}\n","import { AfterViewInit, ElementRef, Renderer2 } from '@angular/core';\n\nexport abstract class LuxAriaBase implements AfterViewInit {\n  protected init = false;\n\n  protected constructor(\n    protected elementRef: ElementRef,\n    protected renderer: Renderer2,\n    protected ariaTagName: string\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.init = true;\n\n    this.renderAria();\n  }\n\n  protected renderAria() {\n    if (this.init) {\n      const selector = this.getSelector();\n\n      let el;\n      if (selector) {\n        el = this.elementRef.nativeElement.querySelector(selector);\n      } else {\n        el = this.elementRef.nativeElement;\n      }\n\n      if (el) {\n        const value = this.getValue();\n        if (value === null || value === undefined) {\n          this.renderer.removeAttribute(el, this.ariaTagName);\n        } else {\n          this.renderer.setAttribute(el, this.ariaTagName, value);\n        }\n      }\n    }\n  }\n\n  abstract getSelector(): string;\n\n  abstract getValue(): string;\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaLabel]'\n})\nexport class LuxAriaLabelDirective extends LuxAriaBase {\n  _luxAriaLabel: string;\n\n  @Input() luxAriaLabelSelector: string;\n\n  @Input()\n  get luxAriaLabel() {\n    return this._luxAriaLabel;\n  }\n\n  set luxAriaLabel(label: string) {\n    this._luxAriaLabel = label;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-label');\n\n    if (!this.luxAriaLabelSelector) {\n      const tagName = elementRef.nativeElement.tagName.toLowerCase();\n      if (tagName === 'lux-button') {\n        this.luxAriaLabelSelector = 'button';\n      } else if (tagName === 'lux-app-header-action-nav-item') {\n        this.luxAriaLabelSelector = 'button';\n      }\n    }\n  }\n\n  getSelector(): string {\n    return this.luxAriaLabelSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaLabel;\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { LuxScrollPosition } from './lux-scroll-position';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Directive({\n  selector: '[luxInfiniteScroll]'\n})\nexport class LuxInfiniteScrollDirective implements OnInit, AfterViewInit, OnDestroy {\n  // Zeitgrenze (ms) nach der das neuste Scroll-Event des Subjects genommen wird\n  static readonly SCROLL_DEBOUNCE_TIME: number = 200;\n\n  private scrollSubscription: Subscription;\n  private scroll$: Subject<void> = new Subject<void>();\n  private lastPosition: LuxScrollPosition = { scrollHeight: 0, scrollTop: 0, clientHeight: 0 };\n\n  // Prozentzahl nach der ein scrollCallback ausgeloest wird\n  @Input() luxScrollPercent = 85;\n  // Direkt bei Initialisierung einen ScrollEvent emitten\n  @Input() luxImmediateCallback = true;\n  // Flag ob aktuell Daten geladen werden (aus aufrufender Komponente)\n  @Input() luxIsLoading = false;\n  // Emitter an den sich andere Komponenten haengen koennen um auf den Scroll zu reagieren\n  @Output() luxScrolled: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Constructor\n   * @param elementRef Ziel-Element dieser Direktive\n   */\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    window.addEventListener('scroll', this.onScroll.bind(this), true);\n    // Die neuen Scroll-Events bündeln und nach der Zeitspanne SCROLL_DEBOUNCE_TIME prüfen ob ein\n    // \"luxScrolled\" emitten soll oder nicht.\n    this.scrollSubscription = this.scroll$\n      .pipe(debounceTime(LuxInfiniteScrollDirective.SCROLL_DEBOUNCE_TIME))\n      .subscribe(() => {\n        this.performScrollCheck();\n      });\n  }\n\n  ngAfterViewInit() {\n    // Prüfen ob ein initiales Laden von Daten starten soll\n    if (this.hasScrollbar() && this.luxImmediateCallback && !this.luxIsLoading) {\n      this.luxScrolled.emit();\n    }\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('scroll', this.onScroll, true);\n    this.scrollSubscription.unsubscribe();\n  }\n\n  /**\n   * Prüft ob ein Scroll-Event auf dem Zielelement stattgefunden hat.\n   * Wenn ja, wird das Subject scroll$ angestoßen.\n   * @param event\n   */\n  onScroll(event: any) {\n    const target = event.target ? event.target : event.srcElement;\n    if (target === this.elementRef.nativeElement) {\n      this.scroll$.next();\n    }\n  }\n\n  /**\n   * Holt die aktuelle Position im Scroll-Bereich und fuehrt\n   * einen Event-Emit durch wenn die Bedingungen erfuellt sind.\n   */\n  private performScrollCheck() {\n    const position: LuxScrollPosition = {\n      scrollTop: this.elementRef.nativeElement.scrollTop,\n      scrollHeight: this.elementRef.nativeElement.scrollHeight,\n      clientHeight: this.elementRef.nativeElement.clientHeight\n    };\n\n    // Wenn nach unten gescrollt wird und die angegebene Prozentzahl ueberschritten wird\n    if (this.isUserScrollingDown(position) && this.isScrollExpectedPercent(position) && !this.luxIsLoading) {\n      this.luxScrolled.emit();\n    }\n\n    this.lastPosition = position;\n  }\n\n  /**\n   * Prueft ob der User gerade nach unten scrollt.\n   * Vergleicht dabei die scrollTop Position des Users mit der des Elements.\n   * @param curPos\n   */\n  private isUserScrollingDown(curPos: LuxScrollPosition) {\n    return this.lastPosition.scrollTop < curPos.scrollTop;\n  }\n\n  /**\n   * Prueft ob der Scrollbereich ueberschritten wurde.\n   * @param position\n   * @returns boolean\n   */\n  private isScrollExpectedPercent(position) {\n    return (position.scrollTop + position.clientHeight) / position.scrollHeight > this.luxScrollPercent / 100;\n  }\n\n  /**\n   * Prüft ob das Zielelement eine Scrollbar gesetzt hat.\n   */\n  private hasScrollbar() {\n    return this.elementRef.nativeElement.scrollHeight > this.elementRef.nativeElement.clientHeight;\n  }\n}\n","export enum LuxFileErrorCause {\n  MaxSizeError = 'luxMaximumSize',\n  ReadingFileError = 'luxReadingFile',\n  UploadFileError = 'luxUploadFile',\n  FileNotAccepted = 'luxUnacceptedFile',\n  MultipleForbidden = 'luxMultipleForbidden'\n}\n\nexport interface ILuxFileError {\n  cause: LuxFileErrorCause;\n  exception: any;\n  file?: File;\n}\n","import { FormControl, FormGroup } from '@angular/forms';\nimport { LuxBackgroundColorsEnum, LuxFontColorsEnum } from './lux-colors.enum';\n\nexport class LuxUtil {\n  public static readonly ISO_8601_FULL = new RegExp(\n    '^\\\\d{4}-\\\\d\\\\d-\\\\d\\\\dT\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d(\\\\.\\\\d+)?(([+-]\\\\d\\\\d:\\\\d\\\\d)|Z)?$',\n    'i'\n  );\n\n  /**\n   * Prueft ob ein String leer ist.\n   * @param str\n   * @returns boolean\n   */\n  public static isEmpty(str): boolean {\n    return !str || 0 === str.length;\n  }\n\n  /**\n   * Liest aus einem Objekt ein bestimmtes Feld aus.\n   * Laesst sich auch ueber mehrere Unterobjekte verschachteln.\n   * Beispiele fuer propertyNamePath:\n   * \"value\"\n   * \"unterobjekt1.unterobjekt2.value\"\n   *\n   * @param el\n   * @param propertyNamePath\n   * @returns any\n   */\n  public static readPropertyValueFromObject(el: any, propertyNamePath: string): any {\n    let result = null;\n    if (el && propertyNamePath) {\n      const splitProperties = propertyNamePath.split('.');\n\n      if (splitProperties.length > 0) {\n        let tempObject = el;\n\n        for (const property of splitProperties) {\n          tempObject = tempObject[property];\n        }\n        result = tempObject;\n      } else {\n        result = el[propertyNamePath];\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gibt eine von verschiedenen vordefinierten Fehlernachrichten passend zu den\n   * vorhandenen Fehlern der uebergebenen FormControl zurueck.\n   * @param formControl\n   * @returns string\n   */\n  public static getErrorMessage(formControl: FormControl): string {\n    if (formControl) {\n      if (formControl.hasError('required')) {\n        return 'Dieses Feld darf nicht leer sein';\n      }\n\n      if (formControl.hasError('minlength')) {\n        return 'Die Mindestlänge ist ' + formControl.getError('minlength').requiredLength;\n      }\n\n      if (formControl.hasError('maxlength')) {\n        return 'Die Maximallänge ist ' + formControl.getError('maxlength').requiredLength;\n      }\n\n      if (formControl.hasError('email')) {\n        return 'Dies ist keine gültige E-Mailadresse';\n      }\n\n      if (formControl.hasError('min')) {\n        return 'Der Minimalwert ist ' + formControl.getError('min').min;\n      }\n\n      if (formControl.hasError('max')) {\n        return 'Der Maximalwert ist ' + formControl.getError('max').max;\n      }\n\n      if (formControl.hasError('pattern')) {\n        const pattern = formControl.getError('pattern').requiredPattern;\n        return 'Entspricht nicht dem Muster \"' + pattern.substring(1, pattern.length - 1) + '\"';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Prueft ob der uebergebene Wert ein JS-Datum ist.\n   * @param value\n   * @returns boolean\n   */\n  public static isDate(value: any) {\n    return value instanceof Date && !isNaN(value.valueOf());\n  }\n\n  /**\n   * Zeigt die Validierungsfehler der einzelnen FormControls innerhalb der FormGroup an.\n   * Wenn innerhalb der übergebenen FormGroup weitere Formgroups enthalten sind, werden\n   * diese ebenfalls validiert.\n   * @param formGroup\n   */\n  public static showValidationErrors(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormGroup) {\n        this.showValidationErrors(control);\n      } else {\n        control.markAsTouched({ onlySelf: true });\n      }\n    });\n  }\n\n  /**\n   * Diese Methode scrollt zu der übergebenen Id.\n   *\n   * @param id Eine Elementid (z.B. <tag id=\"myId\">...)\n   */\n  public static goTo(id: string): void {\n    const element: Element = document.querySelector('#' + id);\n    if (element) {\n      setTimeout(() => {\n        element.scrollIntoView();\n      });\n    }\n  }\n\n  /**\n   * Prueft ob die Applikation im IE geoeffnet ist.\n   * @returns boolean\n   */\n  public static isIE(): boolean {\n    const msie = window.document['documentMode'];\n    return msie && msie <= 11;\n  }\n\n  /**\n   * Prueft ob die Applikation im Edge geoeffnet ist.\n   * @returns boolean\n   */\n  public static isEdge(): boolean {\n    return window.navigator.userAgent.indexOf('Edge') > -1;\n  }\n\n  /**\n   * Prueft ob die Applikation im IE oder Edge geoffnet ist.\n   * @returns boolean\n   */\n  public static isIEorEdge(): boolean {\n    return LuxUtil.isIE() || LuxUtil.isEdge();\n  }\n\n  /**\n   * Diese Methode verhindert, dass ein Event weiterverarbeitet wird.\n   *\n   * @param event Ein beliebiges Event.\n   */\n  public static stopEventPropagation(event) {\n    if (event) {\n      if (event.stopPropagation) {\n        event.stopPropagation();\n      } else {\n        console.log('Die Funktion \"event.stopPropagation()\" wird nicht unterstützt.');\n      }\n    }\n  }\n\n  public static getColorsByBgColorsEnum(color: LuxBackgroundColorsEnum): { backgroundCSSClass; fontCSSClass } {\n    const result = { backgroundCSSClass: 'lux-bg-color-blue', fontCSSClass: 'lux-font-color-white' };\n    if (LuxBackgroundColorsEnum[color]) {\n      result.backgroundCSSClass = 'lux-bg-color-' + color;\n      switch (color) {\n        case LuxBackgroundColorsEnum.gray:\n        case LuxBackgroundColorsEnum.orange:\n        case LuxBackgroundColorsEnum.yellow:\n          result.fontCSSClass = 'lux-font-color-' + LuxFontColorsEnum.black;\n          break;\n        default:\n          result.fontCSSClass = 'lux-font-color-' + LuxFontColorsEnum.white;\n          break;\n      }\n    }\n    return result;\n  }\n\n  public static isNumber(toCheck: any): boolean {\n    return !Number.isNaN(+toCheck);\n  }\n\n  public static base64ToArrayBuffer(data) {\n    const binaryString = window.atob(data);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes;\n  }\n}\n","import { GestureConfig } from '@angular/material';\n\ndeclare var Hammer: any;\n\n/**\n * Anpassung der HammerGestureConfigs für die LuxComponents.\n *\n * Verhindert durch providen den Bug im Safari, dass kein Scrollen mehr möglich ist.\n */\nexport class LuxComponentsHammerConfig extends GestureConfig {\n  buildHammer(element: HTMLElement) {\n    // Wenn es sich um die MD-Component handelt, vertikales Scrolling\n    // zusätzlich zu den Swipe-Gesten aktivieren\n    if (element.className.indexOf('lux-master-detail') > -1) {\n      return new Hammer(element, { touchAction: 'pan-y' });\n    } else {\n      // Ansonsten einfach die Hammer-Config von Material übernehmen\n      return super.buildHammer(element);\n    }\n  }\n}\n","import { InjectionToken, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LuxComponentsConfigParameters } from './lux-components-config-parameters.interface';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { LuxComponentsHammerConfig } from './lux-components-hammer-config.class';\n\n// Diesen bitte !nicht! injecten, sondern den LuxComponentsConfigService.\nexport const LuxConfigTokenService = new InjectionToken<LuxComponentsConfigParameters>('luxConfig');\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n  providers: [\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: LuxComponentsHammerConfig\n    }\n  ]\n})\nexport class LuxComponentsConfigModule {\n  // Den InjectionToken mit der übergebenen Konfiguration überschreiben, damit die Komponenten diese nutzen können\n  static forRoot(config: LuxComponentsConfigParameters) {\n    return {\n      ngModule: LuxComponentsConfigModule,\n      providers: [\n        {\n          provide: LuxConfigTokenService,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { LuxConfigTokenService } from './lux-components-config.module';\nimport { LuxComponentsConfigParameters } from './lux-components-config-parameters.interface';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Dieser Service wird dazu verwendet, auf die Konfiguration der LuxComponents zuzugreifen und diese auszulesen bzw.\n * auch zu aktualisieren.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LuxComponentsConfigService {\n  // Fallback-Konfiguration, falls sonst keine gefunden werden konnte\n  public static readonly DEFAULT_CONFIG: LuxComponentsConfigParameters = {\n    displayLuxConsoleLogs: false,\n    generateLuxTagIds: false,\n    lookupServiceUrl: '/lookup/',\n    labelConfiguration: {\n      allUppercase: true,\n      notAppliedTo: ['lux-link', 'lux-side-nav-item', 'lux-menu-item']\n    },\n    cardExpansionAnimationActive: true,\n    displayBindingDebugHint: true,\n    rippleConfiguration: {\n      exitDuration: 500,\n      enterDuration: 500\n    }\n  };\n\n  // Subject mit dem aktuellen Konfig-Wert, welcher ausgelesen werden kann\n  private config$: BehaviorSubject<LuxComponentsConfigParameters> = new BehaviorSubject<LuxComponentsConfigParameters>(\n    null\n  );\n\n  /**\n   * Gibt das Observable mit der aktuell gesetzten Konfiguration zurück.\n   */\n  get config(): Observable<LuxComponentsConfigParameters> {\n    return this.config$.asObservable();\n  }\n\n  /**\n   * Gibt die aktuell gesetzte Konfiguration direkt zurück.\n   */\n  get currentConfig(): LuxComponentsConfigParameters {\n    return this.config$.getValue();\n  }\n\n  constructor(@Inject(LuxConfigTokenService) @Optional() config: LuxComponentsConfigParameters) {\n    // Wenn keine Konfiguration geladen werden konnte, Standard-Konfig benutzen und eine Warnung ausgeben.\n    if (!config) {\n      console.warn(\n        'Achtung: Es wurde keine Konfiguration für die LuxComponents definiert.\\n',\n        'Benutze Standard-Konfiguration:',\n        LuxComponentsConfigService.DEFAULT_CONFIG\n      );\n      this.config$.next(LuxComponentsConfigService.DEFAULT_CONFIG);\n    } else {\n      this.config$.next(this.mergeDefaultData(config));\n    }\n  }\n\n  /**\n   * Gibt zurück, ob die Labels als Uppercase gekennzeichnet sind und ob\n   * die übergebenen Selektoren in den Ausnahmen geführt sind.\n   * @param selector\n   */\n  isLabelUppercaseForSelector(selector: string): boolean {\n    const config = this.config$.value;\n    return config.labelConfiguration.allUppercase && config.labelConfiguration.notAppliedTo.indexOf(selector) === -1;\n  }\n\n  /**\n   * Ersetzt die aktuelle Konfiguration mit der übergebenen (wenn gültiger Wert).\n   * @param config\n   */\n  updateConfiguration(config: LuxComponentsConfigParameters) {\n    if (!config) {\n      console.warn('Die übergebene Konfiguration ist undefined/null und wird nicht übernommen.');\n    } else {\n      this.config$.next(this.mergeDefaultData(config));\n    }\n  }\n\n  /**\n   * Kombiniert die übergebene Konfiguration mit der Standard-Konfig.\n   *\n   * Übernimmt die Werte aus der Standard-Konfig, die nicht im übergebenen gesetzt wurden.\n   * @param config\n   */\n  private mergeDefaultData(config: LuxComponentsConfigParameters): LuxComponentsConfigParameters {\n    const mergedConfig = {};\n    Object.keys(config).forEach((key: string) => {\n      mergedConfig[key] = config[key];\n    });\n    Object.keys(LuxComponentsConfigService.DEFAULT_CONFIG).forEach((key: string) => {\n      if (mergedConfig[key] === undefined || mergedConfig[key] === null) {\n        mergedConfig[key] = LuxComponentsConfigService.DEFAULT_CONFIG[key];\n      }\n    });\n    return mergedConfig as LuxComponentsConfigParameters;\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'lux-form-label',\n  template: '<ng-template><ng-content></ng-content></ng-template>'\n})\nexport class LuxFormLabelComponent implements OnInit {\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'lux-form-hint',\n  template: '<ng-template><ng-content></ng-content></ng-template>\\n'\n})\nexport class LuxFormHintComponent implements OnInit {\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import {\n  ChangeDetectorRef,\n  ContentChild,\n  DoCheck,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges\n} from '@angular/core';\nimport { AbstractControl, ControlContainer, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { LuxFormLabelComponent } from '../lux-form-control/lux-form-control-subcomponents/lux-form-label.component';\nimport { LuxFormHintComponent } from '../lux-form-control/lux-form-control-subcomponents/lux-form-hint.component';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\nlet luxFormControlUID: number = 0;\n\nexport abstract class LuxFormComponentBase implements OnInit, OnChanges, DoCheck, OnDestroy {\n  protected static readonly DEFAULT_CTRL_NAME: string = 'control';\n\n  protected _formValueChangeSubscr: Subscription;\n  protected _formStatusChangeSubscr: Subscription;\n  protected _configSubscription: Subscription;\n\n  private hasHadRequiredValidator: boolean = false;\n\n  protected latestErrors: any = null;\n  protected preventUnwantedValueChange: boolean = false;\n  protected displayBindingDebugHint: boolean = false;\n  protected _initialValue: any;\n  protected _luxDisabled: boolean;\n  protected _luxReadonly: boolean;\n  protected _luxRequired: boolean;\n\n  errorMessage: string = undefined;\n\n  controlContainer: ControlContainer;\n  formGroup: FormGroup;\n  formControl: AbstractControl;\n\n  uid: string = 'lux-form-control-' + luxFormControlUID++;\n\n  @ContentChild(LuxFormLabelComponent, { static: false }) formLabelComponent: LuxFormLabelComponent;\n  @ContentChild(LuxFormHintComponent, { static: false }) formHintComponent: LuxFormHintComponent;\n\n  @HostBinding('class.lux-form-control-readonly') cssReadonly = this._luxReadonly;\n\n  @Output() luxFocusIn: EventEmitter<any> = new EventEmitter<any>();\n  @Output() luxFocusOut: EventEmitter<any> = new EventEmitter<any>();\n  @Output() luxDisabledChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input() luxHint: string;\n  @Input() luxLabel: string;\n\n  @Input() luxControlBinding: string;\n  @Input() luxControlValidators: ValidatorFn | ValidatorFn[];\n  @Input() luxErrorMessage: string;\n  @Input() luxErrorCallback: Function = (value, errors) => undefined;\n\n  get luxDisabled(): boolean {\n    return this._luxDisabled;\n  }\n\n  @Input() set luxDisabled(disabled: boolean) {\n    this._luxDisabled = disabled;\n    this.cdr.detectChanges();\n\n    if (this.formControl) {\n      this.handleFormDisabledState();\n    }\n\n    this.luxDisabledChange.emit(this._luxDisabled);\n  }\n\n  get luxReadonly(): boolean {\n    return this._luxReadonly;\n  }\n\n  @Input() set luxReadonly(readonly: boolean) {\n    this._luxReadonly = readonly;\n    this.cssReadonly = readonly;\n    this.cdr.detectChanges();\n  }\n\n  get luxRequired(): boolean {\n    return this._luxRequired;\n  }\n\n  @Input() set luxRequired(required: boolean) {\n    if (this.isInForm()) {\n      this.logger.error(\n        `Achtung: Bei Komponenten innerhalb von ReactiveForms den Required-Validator anstelle der ` +\n          `Property \"luxRequired\" nutzen.\\n` +\n          `Betroffene Komponente: ${this.luxControlBinding ? this.luxControlBinding : 'Kein Binding gefunden'}`\n      );\n    } else {\n      this._luxRequired = required;\n      this.updateValidators(this.luxControlValidators);\n      // flag um ungewollte Wertänderungen von undefined zu null zu unterbinden\n      this.preventUnwantedValueChange = true;\n      this.cdr.detectChanges();\n    }\n  }\n\n  protected constructor(\n    controlContainer: ControlContainer,\n    protected cdr: ChangeDetectorRef,\n    protected logger: LuxConsoleService,\n    protected configService: LuxComponentsConfigService\n  ) {\n    this.controlContainer = controlContainer;\n    // Wir fragen hier direkt ab, ob die Binding-Warnung ausgegeben werden sollen\n    this.displayBindingDebugHint = this.configService.currentConfig.displayBindingDebugHint;\n  }\n\n  ngOnInit() {\n    this.initFormControl();\n    this.initDisabledState();\n    this.initFormValueSubscription();\n    this.initFormStateSubscription();\n    this.updateValidators(this.luxControlValidators);\n\n    this.triggerOutputPatternCheck();\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges.luxControlValidators && this.formControl) {\n      this.updateValidators(this.luxControlValidators);\n    }\n\n    this.triggerInputPatternCheck(simpleChanges);\n  }\n\n  ngDoCheck() {\n    // Prüfen, ob es neue Fehlermeldungen gibt, wenn ja diese laden und speichern.\n    if (this.latestErrors !== this.formControl.errors && this.formControl.touched) {\n      this.latestErrors = this.formControl.errors;\n      this.errorMessage = this.fetchErrorMessage();\n    }\n\n    // Prüfen, ob für das Reactive-Form-Control ein required-Validator ergänzt worden ist\n    if (this.isInForm()) {\n      const hasRequiredValidator = this.hasRequiredValidator(this.formControl);\n      if (this.hasHadRequiredValidator !== hasRequiredValidator) {\n        this._luxRequired = hasRequiredValidator;\n        this.formControl.updateValueAndValidity();\n        this.cdr.detectChanges();\n      }\n\n      this.hasHadRequiredValidator = hasRequiredValidator;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formValueChangeSubscr) {\n      this._formValueChangeSubscr.unsubscribe();\n    }\n\n    if (this._formStatusChangeSubscr) {\n      this._formStatusChangeSubscr.unsubscribe();\n    }\n\n    if (this._configSubscription) {\n      this._configSubscription.unsubscribe();\n    }\n  }\n\n  isInForm(): boolean {\n    return this.controlContainer != null && !LuxUtil.isEmpty(this.luxControlBinding);\n  }\n\n  /**\n   * Versucht eine Fehlermeldung für diese Komponente auszulesen und gibt diese zurück.\n   * Wenn das Element nicht den \"touched\"-Zustand besitzt, wird keine Fehlermeldung zurückgegeben.\n   */\n  protected fetchErrorMessage(): string {\n    // Control undefined/null oder unberührt? => Keinen Fehler ausgeben\n    if (!this.formControl || !this.formControl.touched) {\n      return undefined;\n    }\n    const { value, errors } = this.formControl;\n\n    // Gibt der Callback bereits einen User-definierten Fehler wieder? => diesen zurückgeben\n    let errorMsg = this.luxErrorMessage\n      ? this.luxErrorMessage\n      : this.luxErrorCallback\n      ? this.luxErrorCallback(value, errors || {})\n      : undefined;\n    if (errors && errorMsg) {\n      return errorMsg;\n    }\n\n    // Evtl. falls vorhanden Fehlerbehandlung der ableitenden Komponente aufrufen\n    errorMsg = this.errorMessageModifier(value, errors || {});\n    if (errorMsg) {\n      return errorMsg;\n    }\n    // Last-but-not-least => versuchen einen Standardfehler auszulesen\n    errorMsg = LuxUtil.getErrorMessage(this.formControl as FormControl);\n\n    return errorMsg;\n  }\n\n  /**\n   * Mappt den Input-Wert aus disabled auf das FormControl.\n   */\n  protected handleFormDisabledState() {\n    if (this.luxDisabled && !this.formControl.disabled) {\n      this.formControl.disable();\n    }\n\n    if (!this.luxDisabled && this.formControl.disabled) {\n      this.formControl.enable();\n    }\n  }\n\n  /**\n   * Method-Stub der von ableitenden Klassen genutzt werden kann, um\n   * weitergreifende Fehlermeldungen anzugeben.\n   */\n  protected errorMessageModifier(value, errors) {}\n\n  /**\n   * Standard-Getter Funktion für den aktuellen Wert in dieser FormComponent.\n   */\n  protected getValue(): any {\n    return this.formControl ? this.formControl.value : this._initialValue;\n  }\n\n  /**\n   * Standard-Setter Funktion für den aktuellen Wert in dieser FormComponent.\n   */\n  protected setValue(value: any) {\n    // Wenn noch kein FormControl vorhanden, den init-Wert merken und Fn beenden\n    if (!this.formControl) {\n      this._initialValue = value;\n      return;\n    }\n\n    // Wenn der Wert bereits in dem FormControl bekannt ist, die Fn beenden\n    if (value === this.formControl.value) {\n      return;\n    }\n    // Den Wert im FormControl merken\n    this.formControl.setValue(value);\n  }\n\n  /**\n   * Wird nach der Aktualisierung des Wertes aufgerufen.\n   * Hier kann z.B. valueChange.emit() ausgeführt werden.\n   * @param formValue\n   */\n  protected notifyFormValueChanged(formValue: any) {}\n\n  /**\n   * Wird nach der Aktualisierung des Status aufgerufen.\n   * @param formStatus\n   */\n  protected notifyFormStatusChanged(formStatus: any) {}\n\n  /**\n   * Prueft ob das uebergebene Control einen required-Validator besitzt.\n   * @param abstractControl\n   */\n  protected hasRequiredValidator(abstractControl: AbstractControl) {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && (validator.required || validator.requiredTrue)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Initialisiert die FormGroup und das FormControl abhängig davon, ob es sich um eine ReactiveForm-Component\n   * handelt.\n   */\n  protected initFormControl() {\n    if (this.isInForm()) {\n      this.formGroup = <FormGroup>this.controlContainer.control;\n      this.formControl = this.formGroup.controls[this.luxControlBinding];\n    } else {\n      this.formGroup = new FormGroup({\n        control: new FormControl()\n      });\n      this.formControl = this.formGroup.get(LuxFormComponentBase.DEFAULT_CTRL_NAME);\n    }\n  }\n\n  /**\n   * Initialisiert den Disabled-Zustand nach Erstellung dieser Component.\n   */\n  protected initDisabledState() {\n    if (this._luxDisabled) {\n      this.handleFormDisabledState();\n    } else if (this.luxDisabled === undefined) {\n      this.luxDisabled = this.formControl.disabled;\n    }\n  }\n\n  /**\n   * Initialisiert das Handling von Wertaktualisierungen.\n   * Setzt den (optional vorhanden) Initial-Wert und folgende Änderungen über das FormControl.\n   */\n  protected initFormValueSubscription() {\n    if (this._initialValue !== null && this._initialValue !== undefined) {\n      this.setValue(this._initialValue);\n    }\n\n    // Aktualisierungen an dem FormControl-Value sollen auch via EventEmitter bekannt gemacht werden\n    this._formValueChangeSubscr = this.formControl.valueChanges.pipe(distinctUntilChanged()).subscribe((value: any) => {\n      if (this.preventUnwantedValueChange && value === null) {\n        this.preventUnwantedValueChange = false;\n        return;\n      }\n      this.notifyFormValueChanged(value);\n    });\n  }\n\n  /**\n   * Initialisiert das Handling von Statusaktualisierungen.\n   */\n  protected initFormStateSubscription() {\n    this._formStatusChangeSubscr = this.formControl.statusChanges.subscribe((status: any) => {\n      if (status === 'DISABLED' && !this.luxDisabled) {\n        // Das FormControl hat den Zustand \"DISABLED\", aber die Property \"luxDisabled\"\n        // hat noch den Wert \"false\". D.h. der FormControl-Status und die Property\n        // sind nicht mehr synchron.\n        this.luxDisabled = true;\n      } else if ((status === 'VALID' || status === 'INVALID') && this.luxDisabled) {\n        // Das FormControl hat den Zustand \"VALID\" oder \"INVALID\" und ist aktiv,\n        // aber die Property \"luxDisabled\" hat noch den Wert \"true\".\n        // D.h. der FormControl-Status und die Property sind nicht mehr synchron.\n        this.luxDisabled = false;\n      }\n\n      this.notifyFormStatusChanged(status);\n    });\n  }\n\n  /**\n   * Diese Funktion prüft ob luxRequired auf true gesetzt wurde und die übergebenen validators bereits den\n   * required-Validator besitzen.\n   * Für den Fall das luxRequired auf false gesetzt worden ist, wird der Validator entfernt.\n   *\n   * Hinweis: LuxFormCheckableBase überschreibt diese Funktion, um statt required requiredTrue zu setzen.\n   * @param validators\n   */\n  protected checkValidatorsContainRequired(validators: ValidatorFn | ValidatorFn[]) {\n    // Fall: required = true, aber neue Validatoren werden gesetzt\n    if (this.luxRequired === true) {\n      // Sind es mehrere Validatoren, aber kein .required? Dann wird er ergänzt\n      if (Array.isArray(validators) && validators.indexOf(Validators.required) === -1) {\n        validators.push(Validators.required);\n      } else if (!Array.isArray(validators) && validators !== Validators.required) {\n        // Ist es nur ein einzelner Validator und nicht .required? Dann Array erstellen und beide kombinieren\n        validators = [validators, Validators.required];\n      }\n    } else if (this.luxRequired === false) {\n      if (Array.isArray(validators)) {\n        validators = validators.filter((validator: ValidatorFn) => validator !== Validators.required);\n      } else if (validators === Validators.required) {\n        validators = undefined;\n      }\n    }\n\n    return validators;\n  }\n\n  /**\n   * Versucht die Validatoren für diese Komponente zu setzen.\n   * Ist nur erfolgreich, wenn es sich hierbei nicht um eine ReactiveForm-Komponente handelt.\n   * @param validators\n   */\n  protected updateValidators(validators: ValidatorFn | ValidatorFn[]) {\n    if ((!Array.isArray(validators) && validators) || (Array.isArray(validators) && validators.length > 0)) {\n      if (!this.isInForm()) {\n        setTimeout(() => {\n          this.luxControlValidators = this.checkValidatorsContainRequired(validators);\n          this.formControl.setValidators(this.luxControlValidators);\n          this.formControl.updateValueAndValidity();\n        });\n      } else {\n        this.logger.error(\n          `Die Validatoren einer ReactiveForm-Komponente dürfen nicht über ` + `das Template gesetzt werden.`\n        );\n      }\n    }\n  }\n\n  /**\n   * Gibt an, ob diese Component Output-Property-Binding nutzt obwohl diese Component eigentlich ein Reactive FormControl ist.\n   * @param observers\n   */\n  protected checkOutputPatternViolation(observers: any[] | null) {\n    if (this.displayBindingDebugHint && this.isInForm() && observers && observers.length > 0) {\n      this.logPatternViolationWarning();\n    }\n  }\n\n  /**\n   * Gibt an, ob diese Component Input-Property-Binding nutzt obwohl diese Component eigentlich ein Reactive FormControl ist.\n   * Wird von den ngOnChanges Methoden der Child-Klassen aufgerufen.\n   * @param simpleChange\n   */\n  protected checkInputPatternViolation(simpleChange: SimpleChange) {\n    if (this.displayBindingDebugHint && this.isInForm() && simpleChange && simpleChange.firstChange) {\n      this.logPatternViolationWarning();\n    }\n  }\n\n  /**\n   * Die Child-Klassen implementieren diese Funktion um zu prüfen, ob gegen das Output-Binding für ReactiveForms verstoßen wird.\n   */\n  protected abstract triggerOutputPatternCheck();\n\n  /**\n   * Die Child-Klassen implementieren diese Funktion um zu prüfen, ob gegen das Input-Binding für ReactiveForms verstoßen wird.\n   */\n  protected abstract triggerInputPatternCheck(simpleChanges: SimpleChanges);\n\n  /**\n   * Gibt über den LuxConsoleService eine Warnung aus, dass hier gegen das ReactiveForm-Pattern mit Property-Binding\n   * verstoßen worden ist.\n   */\n  private logPatternViolationWarning() {\n    this.logger.warn(\n      `Achtung: Die Component \"${this.luxControlBinding}\" ist Teil einer ReactiveForm, nutzt aber trotzdem Property-Binding.\\n\\n` +\n        `[Mit ReactiveForms]\\n` +\n        `Für Components innerhalb von ReactiveForms können Wertaktualisierungen wie folgt abgefragt werden:\\n\\n` +\n        `// Nicht vergessen unsubscribe in ngOnDestroy für die Subscription aufzurufen\\n` +\n        `this.subscription = this.myForm.get('myFormControl').valueChanges.subscribe((value: any) => console.log(value));\\n\\n` +\n        `Das Setzen von Werten erfolgt zum Beispiel so:\\n\\n` +\n        `this.myForm.get('myFormControl').setValue('myValue');\\n\\n` +\n        `[Ohne ReactiveForms]\\n` +\n        `Für Components außerhalb von ReactiveForms können Wertaktualisierungen wie folgt abgefragt werden:\\n\\n` +\n        `<lux-xyz-form-component (luxValueChange)=\"onValueChange($event)\"><lux-xyz-form-component>\\n\\n` +\n        `Das Setzen von Werten erfolgt zum Beispiel so:\\n\\n` +\n        `<lux-xyz-form-component [luxValue]=\"value\"><lux-xyz-form-component>\\n\\n` +\n        `Alternativ kann über Two-Way-Binding immer der aktuelle Wert in einer Property gehalten werden:\\n\\n` +\n        `<lux-xyz-form-component [(luxValue)]=\"value\"><lux-xyz-form-component>`\n    );\n\n    // Wir deaktivieren weitere Log-Ausgaben für diese Component, um doppelte Meldung zu vermeiden.\n    // z.B. wenn Two-Way-Binding genutzt wird.\n    this.displayBindingDebugHint = false;\n  }\n}\n","import { ChangeDetectorRef, Component, ElementRef, HostBinding, Input } from '@angular/core';\nimport { LuxFormComponentBase } from '../lux-form-model/lux-form-component-base.class';\n\nexport const luxFormControlSelektor: string = 'lux-form-control';\n\n/**\n * @author dron\n * @description Diese Component wird von den anderen LUX-FormControls genutzt, um eine einheitliche Baseline zu erreichen.\n */\n\n@Component({\n  selector: 'lux-form-control',\n  templateUrl: './lux-form-control.component.html',\n  styleUrls: ['./lux-form-control.component.scss']\n})\nexport class LuxFormControlComponent {\n  focused: boolean;\n\n  @HostBinding('class.lux-form-control-scalable-height') _luxScalableHeight: boolean = false;\n  @HostBinding('class.lux-form-control-borderless') _luxHideBottomBorder: boolean = false;\n\n  /**\n   * Die zugrunde liegende FormComponent\n   */\n  @Input() luxFormComponent: LuxFormComponentBase;\n  @Input() luxFormComponentElementRef: ElementRef;\n\n  @Input() luxIgnoreDefaultLabel: boolean = false;\n\n  /**\n   * Dient dazu, eine Component beliebig Hoch werden zu lassen (z.B. Textarea oder Radio).\n   * @param scalable\n   */\n  @Input() set luxScalableHeight(scalable: boolean) {\n    this._luxScalableHeight = scalable;\n  }\n\n  get luxScalableHeight(): boolean {\n    return this._luxScalableHeight;\n  }\n\n  /**\n   * Bestimmt ob die untere Border ausgeblendet werden soll oder nicht (z.B. bei Checkbox).\n   * @param hide\n   */\n  @Input() set luxHideBottomBorder(hide: boolean) {\n    this._luxHideBottomBorder = hide;\n  }\n\n  get luxHideBottomBorder(): boolean {\n    return this._luxHideBottomBorder;\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  /**\n   * Gibt wieder, ob der Fehler für diese FormComponent dargestellt werden soll.\n   */\n  shouldDisplayError() {\n    return this.luxFormComponent.errorMessage && this.luxFormComponent.formControl.touched;\n  }\n\n  shouldDisplayMisc() {\n    return this.luxFormComponent.formHintComponent || this.luxFormComponent.luxHint || this.shouldDisplayError();\n  }\n\n  shouldDisplayLabelByProperty() {\n    return !this.luxFormComponent.formLabelComponent && this.luxFormComponent.luxLabel;\n  }\n\n  shouldDisplayHintByProperty() {\n    return this.luxFormComponent.formHintComponent && !this.luxFormComponent.luxHint;\n  }\n\n  /**\n   * Aktiviert den Fokus dieser Component.\n   */\n  focusin() {\n    this.focused = true;\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Deaktiviert den Fokus dieser Component.\n   */\n  focusout() {\n    this.focused = false;\n    this.cdr.detectChanges();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { LuxComponentsConfigParameters } from '../../lux-components-config/lux-components-config-parameters.interface';\nimport { Subscription } from 'rxjs';\nimport { luxFormControlSelektor } from '../../lux-form/lux-form-control/lux-form-control.component';\n\n@Directive({\n  selector: '[luxTagIdHandler]'\n})\nexport class LuxTagIdDirective implements OnInit, AfterViewInit, OnDestroy {\n  public static readonly luxTagIdAttrName: string = 'data-luxtagid';\n  public static readonly sepParent: string = '.';\n  public static readonly sepComponent: string = '#';\n\n  private configSubscription: Subscription;\n\n  @Input() luxTagId: string;\n\n  generateLuxTagIds: boolean;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    public componentsConfigService: LuxComponentsConfigService\n  ) {}\n\n  ngOnInit() {\n    this.configSubscription = this.componentsConfigService.config.subscribe(\n      (newConfig: LuxComponentsConfigParameters) => {\n        this.generateLuxTagIds = newConfig.generateLuxTagIds;\n      }\n    );\n  }\n\n  ngAfterViewInit() {\n    if (this.generateLuxTagIds) {\n      const luxComponent: Element = this.findLuxComponent(this.elementRef.nativeElement);\n\n      if (luxComponent) {\n        let newTagId = this.luxTagId;\n\n        if (!newTagId) {\n          newTagId = this.getLuxTagId(luxComponent);\n        }\n\n        if (newTagId) {\n          newTagId = this.mergeTagIds(\n            this.getLuxTagIdParent(luxComponent.parentElement, ''),\n            luxComponent.nodeName + LuxTagIdDirective.sepComponent + newTagId\n          );\n          newTagId = newTagId.toLowerCase();\n\n          this.renderer.setAttribute(luxComponent, LuxTagIdDirective.luxTagIdAttrName, newTagId);\n        } else {\n          let usedLabel = false;\n          if (luxComponent.getAttribute('luxLabel')) {\n            newTagId = this.mergeTagIds(luxComponent.getAttribute('luxLabel'), newTagId);\n            newTagId = newTagId.toLowerCase();\n            this.renderer.setAttribute(luxComponent, LuxTagIdDirective.luxTagIdAttrName, newTagId);\n\n            usedLabel = true;\n          } else if (luxComponent.getAttribute('ng-reflect-lux-label')) {\n            newTagId = this.mergeTagIds(luxComponent.getAttribute('ng-reflect-lux-label'), newTagId);\n            newTagId = newTagId.toLowerCase();\n            this.renderer.setAttribute(luxComponent, LuxTagIdDirective.luxTagIdAttrName, newTagId);\n\n            usedLabel = true;\n          } else if (luxComponent.getAttribute('ng-reflect-label')) {\n            newTagId = this.mergeTagIds(luxComponent.getAttribute('ng-reflect-label'), newTagId);\n            newTagId = newTagId.toLowerCase();\n            this.renderer.setAttribute(luxComponent, LuxTagIdDirective.luxTagIdAttrName, newTagId);\n\n            usedLabel = true;\n          } else if (luxComponent.getElementsByClassName('lux-form-label')[0]) {\n            newTagId = this.mergeTagIds(\n              luxComponent.getElementsByClassName('lux-form-label')[0].textContent.trim(),\n              newTagId\n            );\n            newTagId = newTagId.toLowerCase();\n            this.renderer.setAttribute(luxComponent, LuxTagIdDirective.luxTagIdAttrName, newTagId);\n\n            usedLabel = true;\n          }\n\n          if (!usedLabel) {\n            console.warn(\n              'Dem Tag \"' +\n                this.getNodeName(luxComponent) +\n                '(' +\n                this.getParentPath(luxComponent.parentElement, '') +\n                ')' +\n                '\" fehlt das luxTagId-Attribut. Dieses Attribut wird für die automatischen Tests benötigt.'\n            );\n          }\n        }\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.configSubscription.unsubscribe();\n  }\n\n  private getParentPath(element: Element, currentTagId: string): string {\n    if (element && element.parentElement) {\n      return this.getParentPath(element.parentElement, currentTagId + '.' + this.getNodeName(element.parentElement));\n    }\n\n    return currentTagId;\n  }\n\n  private getLuxTagIdParent(element: Element, currentTagId: string): string {\n    if (element) {\n      let newTagId: string = currentTagId;\n      if (element.hasAttribute('luxTagId')) {\n        newTagId = this.mergeTagIds('luxTagId', newTagId);\n      } else if (element.hasAttribute(LuxTagIdDirective.luxTagIdAttrName)) {\n        newTagId = this.mergeTagIds(element.getAttribute(LuxTagIdDirective.luxTagIdAttrName), newTagId);\n      } else if (element.hasAttribute('luxcontrolbinding')) {\n        newTagId = this.mergeTagIds(element.getAttribute('luxcontrolbinding'), newTagId);\n      } else if (element.hasAttribute('formgroupname')) {\n        newTagId = this.mergeTagIds(\n          'formgroup' + LuxTagIdDirective.sepComponent + element.getAttribute('formgroupname'),\n          newTagId\n        );\n      }\n\n      return this.getLuxTagIdParent(element.parentElement, newTagId);\n    }\n\n    return currentTagId;\n  }\n\n  private mergeTagIds(tagId1: string, tagId2: string) {\n    let tagId: string;\n\n    if (!LuxUtil.isEmpty(tagId1) && !LuxUtil.isEmpty(tagId2)) {\n      tagId = tagId1 + LuxTagIdDirective.sepParent + tagId2;\n    } else if (!LuxUtil.isEmpty(tagId1) && LuxUtil.isEmpty(tagId2)) {\n      tagId = tagId1;\n    } else if (LuxUtil.isEmpty(tagId1) && !LuxUtil.isEmpty(tagId2)) {\n      tagId = tagId2;\n    } else {\n      tagId = '';\n    }\n\n    return tagId;\n  }\n\n  private getLuxTagId(element: Element): string {\n    let newId = '';\n\n    if (element) {\n      if (element.hasAttribute('luxTagId')) {\n        newId = element.getAttribute('luxTagId');\n      } else if (element.hasAttribute(LuxTagIdDirective.luxTagIdAttrName)) {\n        newId = element.getAttribute(LuxTagIdDirective.luxTagIdAttrName);\n      } else if (element.hasAttribute('luxcontrolbinding')) {\n        newId = element.getAttribute('luxcontrolbinding');\n      } else if (element.hasAttribute('formgroupname')) {\n        newId = element.getAttribute('formgroupname');\n      }\n    }\n\n    return newId;\n  }\n\n  private findLuxComponent(element: Element): Element {\n    if (element) {\n      const nodeName: string = this.getNodeName(element);\n      if (nodeName && nodeName.startsWith('lux-'.toUpperCase()) && nodeName !== luxFormControlSelektor.toUpperCase()) {\n        return element;\n      } else {\n        return this.findLuxComponent(element.parentElement);\n      }\n    }\n\n    return null;\n  }\n\n  private getNodeName(element: Element): string {\n    return element && element.nodeName ? element.nodeName : '';\n  }\n}\n","import { AriaDescriber, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport {\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  Optional,\n  SimpleChanges,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  MAT_TOOLTIP_DEFAULT_OPTIONS,\n  MAT_TOOLTIP_SCROLL_STRATEGY,\n  MatTooltip,\n  MatTooltipDefaultOptions,\n  TooltipPosition\n} from '@angular/material';\n\n@Directive({\n  selector: '[luxTooltip]',\n  exportAs: 'luxTooltip'\n})\nexport class LuxTooltipDirective extends MatTooltip implements OnChanges {\n  @Input() luxTooltip: string = '???';\n  @Input() luxTooltipHideDelay: number = 0;\n  @Input() luxTooltipShowDelay: number = 0;\n  @Input() luxTooltipPosition: TooltipPosition = 'above';\n  @Input() luxTooltipDisabled: boolean = false;\n\n  constructor(\n    private luxOverlay: Overlay,\n    private luxElementRef: ElementRef,\n    private luxScrollDispatcher: ScrollDispatcher,\n    private luxViewContainerRef: ViewContainerRef,\n    private luxNgZone: NgZone,\n    private luxPlatform: Platform,\n    private luxAriaDescriber: AriaDescriber,\n    private luxFocusMonitor: FocusMonitor,\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) private luxScrollStrategy,\n    @Optional() private luxDir: Directionality,\n    @Optional()\n    @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)\n    private luxDefaultOptions: MatTooltipDefaultOptions\n  ) {\n    super(\n      luxOverlay,\n      luxElementRef,\n      luxScrollDispatcher,\n      luxViewContainerRef,\n      luxNgZone,\n      luxPlatform,\n      luxAriaDescriber,\n      luxFocusMonitor,\n      luxScrollStrategy,\n      luxDir,\n      luxDefaultOptions\n    );\n  }\n\n  @HostListener('longpress') _handleLongPress() {\n    super.show(this.luxTooltipShowDelay);\n  }\n\n  @HostListener('keydown', ['$event']) _handleKeydown(event) {\n    super._handleKeydown(event);\n  }\n\n  @HostListener('touchend') _handleTouchend() {\n    super._handleTouchend();\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    this.message = this.luxTooltip;\n    this.hideDelay = this.luxTooltipHideDelay;\n    this.showDelay = this.luxTooltipShowDelay;\n    this.position = this.luxTooltipPosition;\n    this.disabled = this.luxTooltipDisabled;\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { ReplaySubject, Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[luxTabIndex]'\n})\nexport class LuxTabIndexDirective implements AfterViewInit, OnChanges, OnDestroy {\n  private changesSubscription: Subscription;\n  private changes$: ReplaySubject<SimpleChanges> = new ReplaySubject<SimpleChanges>(1);\n\n  @Input() luxTabIndex: string = '0';\n  @Input() luxApplyToParent: boolean = false;\n  @Input() luxApplyToChildren: boolean = true;\n  @Input() luxPotentialChildren: string[] = ['input', 'textarea', 'a', 'button', 'mat-select'];\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    this.changes$.next(simpleChanges);\n  }\n\n  ngAfterViewInit() {\n    this.updateElementsWithTabIndex();\n    // Dadurch verhindern wir, dass Changes vor afterViewInit zu etwaigen Fehlern führen könnten und erst danach aufgelöst werden\n    this.changesSubscription = this.changes$.subscribe(this.onChanges.bind(this));\n  }\n\n  ngOnDestroy() {\n    if (this.changesSubscription) {\n      this.changesSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Eigener Listener für Änderungen, der erst nach dem AfterViewInit-Lifecycle greift.\n   * Sicherheitshalber, um evtl. noch unaufgelösten Elementen zu entgehen.\n   * @param simpleChanges\n   */\n  private onChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges.luxTabIndex) {\n      this.updateElementsWithTabIndex();\n    }\n  }\n\n  /**\n   * Aktualisiert den Tabindex für\n   *  - das Zielelement, wenn luxApplyToParent === true (default = false) ist\n   *  - potentielle Kindelemente, wenn luxApplyToChildren === true (default) ist\n   */\n  private updateElementsWithTabIndex() {\n    if (this.luxApplyToParent) {\n      this.setTabIndexForElement(this.elementRef.nativeElement);\n    }\n\n    if (this.luxApplyToChildren) {\n      this.luxPotentialChildren.forEach((childQuery: string) => this.setTabIndexByQuery(childQuery));\n    }\n  }\n\n  private setTabIndexByQuery(elementQuery: string) {\n    const elements = this.elementRef.nativeElement.querySelectorAll(elementQuery);\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      this.setTabIndexForElement(element);\n    }\n  }\n\n  private setTabIndexForElement(element: HTMLElement) {\n    this.renderer.setAttribute(element, 'tabIndex', this.luxTabIndex);\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport { Directive, ElementRef, Inject, Input, NgZone, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleGlobalOptions } from '@angular/material';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { Subscription } from 'rxjs';\n\n// @dynamic Erklärung steht in der Datei \"lux-decorators.ts\".\n@Directive({\n  selector: '[luxRipple], [lux-ripple]',\n  host: {\n    class: 'mat-ripple lux-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n})\nexport class LuxRippleDirective extends MatRipple implements OnInit, OnDestroy {\n  private configSubscription: Subscription;\n\n  _luxRippleColor: string;\n  _luxRippleUnbounded: boolean = false;\n  _luxRippleCentered: boolean = false;\n  _luxRippleDisabled: boolean = false;\n  _luxRippleRadius: number = 0;\n  _luxRippleEnterDuration: number = 0;\n  _luxRippleExitDuration: number = 0;\n\n  get luxRippleColor() {\n    return this._luxRippleColor;\n  }\n\n  @Input() set luxRippleColor(value: string) {\n    this._luxRippleColor = value;\n    this.color = value;\n  }\n\n  get luxRippleUnbounded() {\n    return this._luxRippleUnbounded;\n  }\n\n  @Input() set luxRippleUnbounded(value: boolean) {\n    this._luxRippleUnbounded = value;\n    this.unbounded = value;\n  }\n\n  get luxRippleCentered() {\n    return this._luxRippleCentered;\n  }\n\n  @Input() set luxRippleCentered(value: boolean) {\n    this._luxRippleCentered = value;\n    this.centered = value;\n  }\n\n  get luxRippleRadius() {\n    return this._luxRippleRadius;\n  }\n\n  @Input() set luxRippleRadius(value: number) {\n    this._luxRippleRadius = value;\n    this.radius = value;\n  }\n\n  get luxRippleDisabled() {\n    return this._luxRippleDisabled;\n  }\n\n  @Input() set luxRippleDisabled(value: boolean) {\n    this._luxRippleDisabled = value;\n    this.disabled = value;\n  }\n\n  get luxRippleEnterDuration() {\n    return this._luxRippleEnterDuration;\n  }\n\n  @Input() set luxRippleEnterDuration(value: number) {\n    this._luxRippleEnterDuration = value;\n\n    if (!this.animation) {\n      this.animation = {};\n    }\n    this.animation.exitDuration = value;\n  }\n\n  get luxRippleExitDuration() {\n    return this._luxRippleExitDuration;\n  }\n\n  @Input() set luxRippleExitDuration(value: number) {\n    this._luxRippleExitDuration = value;\n\n    if (!this.animation) {\n      this.animation = {};\n    }\n    this.animation.exitDuration = value;\n  }\n\n  constructor(\n    private configService: LuxComponentsConfigService,\n    private luxElementRef: ElementRef<HTMLElement>,\n    private luxNgZone: NgZone,\n    private luxPlatform: Platform,\n    @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) private luxGlobalOptions?: RippleGlobalOptions,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) private luxAnimationMode?: string\n  ) {\n    super(luxElementRef, luxNgZone, luxPlatform, luxGlobalOptions, luxAnimationMode);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    // Globale Konfiguration für die LUX-Ripples auslesen und die Component entsprechend aktualisieren\n    this.configSubscription = this.configService.config.subscribe(({ rippleConfiguration }) => {\n      if (rippleConfiguration) {\n        this.luxRippleEnterDuration = rippleConfiguration.enterDuration;\n        this.luxRippleExitDuration = rippleConfiguration.exitDuration;\n        this.luxRippleColor = rippleConfiguration.color;\n        this.luxRippleCentered = rippleConfiguration.centered;\n        this.luxRippleDisabled = rippleConfiguration.disabled;\n        this.luxRippleRadius = rippleConfiguration.radius;\n        this.luxRippleUnbounded = rippleConfiguration.unbounded;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    if (this.configSubscription) {\n      this.configSubscription.unsubscribe();\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaExpanded]'\n})\nexport class LuxAriaExpandedDirective extends LuxAriaBase {\n  _luxAriaExpanded: string;\n\n  @Input() luxAriaExpandedSelector: string;\n\n  @Input()\n  get luxAriaExpanded() {\n    return this._luxAriaExpanded;\n  }\n\n  set luxAriaExpanded(expanded: string) {\n    this._luxAriaExpanded = expanded;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-expanded');\n\n    if (!this.luxAriaExpandedSelector) {\n      const tagName = elementRef.nativeElement.tagName.toLowerCase();\n      if (tagName === 'lux-button') {\n        this.luxAriaExpandedSelector = 'button';\n      }\n    }\n  }\n\n  getSelector(): string {\n    return this.luxAriaExpandedSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaExpanded;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaRole]'\n})\nexport class LuxAriaRoleDirective extends LuxAriaBase {\n  _luxAriaRole: string;\n\n  @Input() luxAriaRoleSelector: string;\n\n  @Input()\n  get luxAriaRole() {\n    return this._luxAriaRole;\n  }\n\n  set luxAriaRole(role: string) {\n    this._luxAriaRole = role;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'role');\n  }\n\n  getSelector(): string {\n    return this.luxAriaRoleSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaRole;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaHasPopup]'\n})\nexport class LuxAriaHaspopupDirective extends LuxAriaBase {\n  _luxAriaHasPopup: string;\n\n  @Input() luxAriaHasPopupSelector: string;\n\n  @Input()\n  get luxAriaHasPopup() {\n    return this._luxAriaHasPopup;\n  }\n\n  set luxAriaHasPopup(hasPopup: string) {\n    this._luxAriaHasPopup = hasPopup;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-haspopup');\n\n    if (!this.luxAriaHasPopupSelector) {\n      const tagName = elementRef.nativeElement.tagName.toLowerCase();\n      if (tagName === 'lux-button') {\n        this.luxAriaHasPopupSelector = 'button';\n      } else if (tagName === 'lux-app-header-action-nav-item') {\n        this.luxAriaHasPopupSelector = 'button';\n      }\n    }\n  }\n\n  getSelector(): string {\n    return this.luxAriaHasPopupSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaHasPopup;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaHidden]'\n})\nexport class LuxAriaHiddenDirective extends LuxAriaBase {\n  _luxAriaHidden: string;\n\n  @Input() luxAriaHiddenSelector: string;\n\n  @Input()\n  get luxAriaHidden() {\n    return this._luxAriaHidden;\n  }\n\n  set luxAriaHidden(hidden: string) {\n    this._luxAriaHidden = hidden;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-hidden');\n  }\n\n  getSelector(): string {\n    return this.luxAriaHiddenSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaHidden;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaDescribedby]'\n})\nexport class LuxAriaDescribedbyDirective extends LuxAriaBase {\n  _luxAriaDescribedby: string;\n\n  @Input() luxAriaDescribedbySelector: string;\n\n  @Input()\n  get luxAriaDescribedby() {\n    return this._luxAriaDescribedby;\n  }\n\n  set luxAriaDescribedby(describedby: string) {\n    this._luxAriaDescribedby = describedby;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-describedby');\n\n    if (!this.luxAriaDescribedbySelector) {\n      const tagName = elementRef.nativeElement.tagName.toLowerCase();\n      if (tagName === 'lux-button') {\n        this.luxAriaDescribedbySelector = 'button';\n      } else if (tagName === 'lux-app-header-action-nav-item') {\n        this.luxAriaDescribedbySelector = 'button';\n      }\n    }\n  }\n\n  getSelector(): string {\n    return this.luxAriaDescribedbySelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaDescribedby;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaInvalid]'\n})\nexport class LuxAriaInvalidDirective extends LuxAriaBase {\n  _luxAriaInvalid: string;\n\n  @Input() luxAriaInvalidSelector: string;\n\n  @Input()\n  get luxAriaInvalid() {\n    return this._luxAriaInvalid;\n  }\n\n  set luxAriaInvalid(invalid: string) {\n    this._luxAriaInvalid = invalid;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-invalid');\n  }\n\n  getSelector(): string {\n    return this.luxAriaInvalidSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaInvalid;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaRequired]'\n})\nexport class LuxAriaRequiredDirective extends LuxAriaBase {\n  _luxAriaRequired: string;\n\n  @Input() luxAriaRequiredSelector: string;\n\n  @Input()\n  get luxAriaRequired() {\n    return this._luxAriaRequired;\n  }\n\n  set luxAriaRequired(required: string) {\n    this._luxAriaRequired = required;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-required');\n  }\n\n  getSelector(): string {\n    return this.luxAriaRequiredSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaRequired;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaLabelledby]'\n})\nexport class LuxAriaLabelledbyDirective extends LuxAriaBase {\n  _luxAriaLabelledby: string;\n\n  @Input() luxAriaLabelledbySelector: string;\n\n  @Input()\n  get luxAriaLabelledby() {\n    return this._luxAriaLabelledby;\n  }\n\n  set luxAriaLabelledby(labelledby: string) {\n    this._luxAriaLabelledby = labelledby;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-labelledby');\n\n    if (!this.luxAriaLabelledbySelector) {\n      const tagName = elementRef.nativeElement.tagName.toLowerCase();\n      if (tagName === 'lux-button') {\n        this.luxAriaLabelledbySelector = 'button';\n      } else if (tagName === 'lux-app-header-action-nav-item') {\n        this.luxAriaLabelledbySelector = 'button';\n      }\n    }\n  }\n\n  getSelector(): string {\n    return this.luxAriaLabelledbySelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaLabelledby;\n  }\n}\n","import {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  Optional,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { MatBadge } from '@angular/material';\nimport { AriaDescriber } from '@angular/cdk/a11y';\nimport { LuxUtil } from '../../lux-util/lux-util';\n\n@Directive({\n  selector: '[luxBadgeNotification], [lux-badge-notification]',\n  host: {\n    class: 'mat-badge',\n    '[class.mat-badge-overlap]': 'overlap',\n    '[class.mat-badge-above]': 'isAbove()',\n    '[class.mat-badge-below]': '!isAbove()',\n    '[class.mat-badge-before]': '!isAfter()',\n    '[class.mat-badge-after]': 'isAfter()',\n    '[class.mat-badge-small]': 'size === \"small\"',\n    '[class.mat-badge-medium]': 'size === \"medium\"',\n    '[class.mat-badge-large]': 'size === \"large\"',\n    '[class.mat-badge-hidden]': 'hidden || isHidden()',\n    '[class.mat-badge-disabled]': 'disabled',\n    '[class.lux-badge-color-default]': 'color !== \"primary\" && color !== \"warn\" && color !== \"accent\"'\n  }\n})\nexport class LuxBadgeNotificationDirective extends MatBadge implements OnChanges, DoCheck {\n  @Input() luxBadgeNotification: string;\n  @Input() luxBadgeColor: 'primary' | 'warn' | 'accent' | string = 'default';\n  @Input() luxBadgeSize: 'small' | 'medium' | 'large' = 'medium';\n  @Input() luxBadgePosition: 'above after' | 'above before' | 'below before' | 'below after' = 'above after';\n  @Input() luxBadgeDisabled: boolean = false;\n  @Input() luxBadgeHidden: boolean = false;\n  @Input() luxBadgeOverlap: boolean = true;\n  @Input() luxBadgeCap: number;\n\n  constructor(\n    private luxNgZone: NgZone,\n    private luxElementRef: ElementRef<HTMLElement>,\n    private luxAriaDescriber: AriaDescriber,\n    @Optional() private luxRenderer: Renderer2\n  ) {\n    super(luxNgZone, luxElementRef, luxAriaDescriber, luxRenderer);\n\n    luxElementRef.nativeElement.classList.add('lux-badge-notification');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.updateContent(this.luxBadgeNotification);\n    this.color = <any>this.luxBadgeColor;\n    this.size = this.luxBadgeSize;\n    this.position = this.luxBadgePosition;\n    this.disabled = this.luxBadgeDisabled;\n    this.hidden = !!this.luxBadgeHidden;\n    this.overlap = this.luxBadgeOverlap;\n  }\n\n  ngDoCheck() {\n    this.checkMaxNumber();\n  }\n\n  updateContent(value: any) {\n    let newContent = value;\n\n    if (typeof newContent === 'number') {\n      // Wenn der Wert eine Zahl ist, muss dieser für die Weiterverarbeitung in einen String umgewandelt werden.\n      newContent = '' + newContent;\n    } else if (!newContent) {\n      // Die Werte \"undefined\" und \"null\" zum Leerstring umwandeln,\n      // damit diese nicht angezeigt werden.\n      newContent = '';\n    }\n\n    this.content = newContent;\n    this.description = newContent;\n  }\n\n  isHidden(): boolean {\n    return this.hidden || !this.content;\n  }\n\n  /**\n   * Prüft ob der Inhalt eine Zahl, eine Maximalzahl gegeben und diese überschritten worden ist.\n   * Wenn ja, wird der Inhalt mit einem \"+\" abgekürzt.\n   */\n  private checkMaxNumber() {\n    if (this.luxBadgeNotification && this.luxBadgeCap && LuxUtil.isNumber(this.luxBadgeNotification)) {\n      if (+this.luxBadgeNotification > this.luxBadgeCap) {\n        this.updateContent(this.luxBadgeCap + '+');\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LuxAriaLabelDirective } from './lux-aria/lux-aria-label.directive';\nimport { MatBadgeModule, MatRippleModule, MatTooltipModule } from '@angular/material';\nimport { LuxInfiniteScrollDirective } from './lux-infinite-scroll/lux-infinite-scroll.directive';\nimport { LuxTagIdDirective } from './lux-tag-id/lux-tag-id.directive';\nimport { LuxTooltipDirective } from './lux-tooltip/lux-tooltip.directive';\nimport { LuxTabIndexDirective } from './lux-tabindex/lux-tab-index.directive';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxRippleDirective } from './lux-ripple/lux-ripple.directive';\nimport { LuxAriaExpandedDirective } from './lux-aria/lux-aria-expanded.directive';\nimport { LuxAriaRoleDirective } from './lux-aria/lux-aria-role.directive';\nimport { LuxAriaHaspopupDirective } from './lux-aria/lux-aria-haspopup.directive';\nimport { LuxAriaHiddenDirective } from './lux-aria/lux-aria-hidden.directive';\nimport { LuxAriaDescribedbyDirective } from './lux-aria/lux-aria-describedby.directive';\nimport { LuxAriaInvalidDirective } from './lux-aria/lux-aria-invalid.directive';\nimport { LuxAriaRequiredDirective } from './lux-aria/lux-aria-required.directive';\nimport { LuxAriaLabelledbyDirective } from './lux-aria/lux-aria-labelledby.directive';\nimport { LuxBadgeNotificationDirective } from './lux-badge-notification/lux-badge-notification.directive';\n\n@NgModule({\n  imports: [CommonModule, MatTooltipModule, MatBadgeModule, MatRippleModule, LuxComponentsConfigModule],\n  declarations: [\n    LuxInfiniteScrollDirective,\n    LuxTagIdDirective,\n    LuxTooltipDirective,\n    LuxTabIndexDirective,\n    LuxRippleDirective,\n    LuxTabIndexDirective,\n    LuxAriaLabelDirective,\n    LuxAriaExpandedDirective,\n    LuxAriaRoleDirective,\n    LuxAriaHaspopupDirective,\n    LuxAriaHiddenDirective,\n    LuxAriaDescribedbyDirective,\n    LuxAriaInvalidDirective,\n    LuxAriaRequiredDirective,\n    LuxAriaLabelledbyDirective,\n    LuxTabIndexDirective,\n    LuxBadgeNotificationDirective\n  ],\n  exports: [\n    LuxInfiniteScrollDirective,\n    LuxTagIdDirective,\n    LuxTooltipDirective,\n    LuxTabIndexDirective,\n    LuxAriaLabelDirective,\n    LuxAriaExpandedDirective,\n    LuxAriaRoleDirective,\n    LuxAriaHaspopupDirective,\n    LuxAriaHiddenDirective,\n    LuxAriaDescribedbyDirective,\n    LuxAriaInvalidDirective,\n    LuxAriaRequiredDirective,\n    LuxAriaLabelledbyDirective,\n    LuxTabIndexDirective,\n    LuxBadgeNotificationDirective,\n    LuxAriaLabelledbyDirective,\n    LuxTabIndexDirective,\n    LuxRippleDirective\n  ]\n})\nexport class LuxDirectivesModule {}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { LuxBackgroundColorsEnum } from '../../lux-util/lux-colors.enum';\nimport { LuxUtil } from '../../lux-util/lux-util';\n\n@Component({\n  selector: 'lux-icon',\n  templateUrl: './lux-icon.component.html',\n  styleUrls: ['./lux-icon.component.scss']\n})\nexport class LuxIconComponent {\n  public static readonly FA_BRAND = 'fab ';\n  public static readonly FA_SOLID = 'fas ';\n  public static readonly FA_REGULAR = 'far ';\n  public static readonly FA_LIGHT = 'fal ';\n\n  private _luxIconSize: string;\n  private _luxIconName: string;\n  private _luxPadding: string = '4px';\n  private _backgroundCSSClass: string = '';\n  private _fontCSSClass: string = '';\n\n  currentIconSize: number = 1;\n  isIconFA: boolean;\n\n  @HostBinding('style.margin') styleMargin: string = '0';\n\n  @Input() luxRounded: boolean = false;\n\n  get luxMargin(): string {\n    return this.styleMargin;\n  }\n\n  // 'standard margin Werte z.B. '5px 4px 3px 2px'\n  @Input() set luxMargin(margin: string) {\n    this.styleMargin = margin;\n  }\n\n  get luxPadding(): string {\n    return this._luxPadding;\n  }\n\n  // standard padding Werte z.B. '5px 4px 3px 2px'\n  @Input() set luxPadding(padding: string) {\n    this._luxPadding = padding;\n  }\n\n  get luxIconSize(): string {\n    return this._luxIconSize;\n  }\n\n  @Input() set luxIconSize(iconSizeValue: string) {\n    this._luxIconSize = iconSizeValue;\n    if (typeof this.luxIconSize === 'string' && this.luxIconSize.length === 2) {\n      this.currentIconSize = +this.luxIconSize.slice(0, 1);\n    } else {\n      this.currentIconSize = 1;\n    }\n  }\n\n  get luxIconName(): string {\n    return this._luxIconName;\n  }\n\n  @Input()\n  set luxIconName(iconNameValue: string) {\n    if (iconNameValue) {\n      this._luxIconName = this.modifiyIconName(iconNameValue);\n    }\n  }\n\n  get backgroundCSSClass() {\n    return this._backgroundCSSClass;\n  }\n\n  public get fontCSSClass() {\n    return this._fontCSSClass;\n  }\n\n  @Input()\n  set luxColor(color: LuxBackgroundColorsEnum) {\n    if (LuxBackgroundColorsEnum[color]) {\n      const result = LuxUtil.getColorsByBgColorsEnum(color);\n      this._backgroundCSSClass = result.backgroundCSSClass;\n      this._fontCSSClass = result.fontCSSClass;\n    } else {\n      this._backgroundCSSClass = '';\n      this._fontCSSClass = '';\n    }\n  }\n\n  constructor() {}\n\n  /**\n   * Generiert aus dem mitgegebenen Wert einen String-Wert\n   * der entweder als Font-Awesome Icon oder als Material-Icon\n   * interpretiert werden kann.\n   *\n   * @param iconName, z.B. fas fa-cogs\n   * @returns string\n   */\n  private modifiyIconName(iconName: string): string {\n    // Handelt es sich hier um ein Font-Awesome Icon?\n    if (iconName.startsWith('fa')) {\n      // feststellen, ob ein FA-Präfix vorliegt\n      if (\n        iconName.indexOf(LuxIconComponent.FA_BRAND) === -1 &&\n        iconName.indexOf(LuxIconComponent.FA_SOLID) === -1 &&\n        iconName.indexOf(LuxIconComponent.FA_REGULAR) === -1 &&\n        iconName.indexOf(LuxIconComponent.FA_LIGHT) === -1\n      ) {\n        // Wenn nicht, dann\n        iconName = 'fas ' + iconName;\n      }\n      this.isIconFA = true;\n      return iconName;\n    }\n    this.isIconFA = false;\n    // Ansonsten davon ausgehen das es ein Material Icon ist\n    return iconName;\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'lux-image',\n  templateUrl: './lux-image.component.html',\n  styleUrls: ['./lux-image.component.scss']\n})\nexport class LuxImageComponent implements OnInit, OnChanges {\n  @Input() luxImageSrc: string = '';\n  @Input() luxImageWidth: string = 'auto';\n  @Input() luxImageHeight: string = 'auto';\n  @Input() luxRawSrc: boolean = false;\n\n  constructor() {}\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges.luxImageSrc) {\n      if (!this.luxRawSrc) {\n        this.updateImageSrc();\n      }\n    } else if (simpleChanges.luxRawSrc) {\n      if (!this.luxRawSrc) {\n        this.updateImageSrc();\n      }\n    }\n  }\n\n  ngOnInit() {}\n\n  private updateImageSrc() {\n    if (this.luxImageSrc) {\n      // Pruefen ob es sich um ein externes Bild handelt\n      if (this.luxImageSrc.startsWith('http')) {\n        this.sanitizeImageSrc();\n      } else {\n        // Wenn nicht, auf den Assets-Ordner verweisen\n        if (this.luxImageSrc.indexOf('asset') === -1) {\n          this.luxImageSrc = 'assets/' + this.luxImageSrc;\n        }\n        this.sanitizeImageSrc();\n      }\n    }\n  }\n\n  private sanitizeImageSrc() {\n    // Doppelte Slashes entfernen\n    this.luxImageSrc = this.luxImageSrc.replace(/\\/\\/+/g, '/');\n    // Fuehrende Slashes entfernen\n    if (this.luxImageSrc.startsWith('/')) {\n      this.luxImageSrc = this.luxImageSrc.slice(1, this.luxImageSrc.length);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material';\nimport { LuxIconComponent } from './lux-icon/lux-icon.component';\nimport { LuxImageComponent } from './lux-image/lux-image.component';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, FlexLayoutModule, LuxComponentsConfigModule],\n  declarations: [LuxIconComponent, LuxImageComponent],\n  exports: [LuxIconComponent, LuxImageComponent]\n})\nexport class LuxIconModule {}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Base-Klasse der LuxActionComponents.\n *\n * Enthält die Inputs/Outputs, die allen Action-Components gleich sind.\n */\nexport class LuxActionComponentBaseClass {\n  @Input() luxLabel: string;\n  @Input() luxColor: 'primary' | 'accent' | 'warn' | '' = '';\n  @Input() luxRaised: boolean;\n  @Input() luxIconName: string;\n  @Input() luxTagId: string;\n  @Input() luxDisabled: boolean;\n  @Input() luxRounded: boolean;\n  @Input() luxIconAlignWithLabel: boolean = false;\n\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { Component, ElementRef, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { Subscription } from 'rxjs';\nimport { LuxActionComponentBaseClass } from '../lux-action-model/lux-action-component-base.class';\n\n@Component({\n  selector: 'lux-button',\n  templateUrl: './lux-button.component.html',\n  styleUrls: ['./lux-button.component.scss']\n})\nexport class LuxButtonComponent extends LuxActionComponentBaseClass implements OnInit, OnDestroy {\n  public readonly iconSize: string = '2x';\n\n  private configSubscription: Subscription;\n\n  @Input() luxType: 'button' | 'reset' | 'submit' = 'button';\n\n  @HostBinding('class.lux-uppercase') labelUppercase: boolean;\n\n  constructor(public elementRef: ElementRef, public componentsConfigService: LuxComponentsConfigService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.configSubscription = this.componentsConfigService.config.subscribe(() => {\n      // Hintergrund: LuxLink, LuxSideNavItem und LuxMenuItem benutzen alle unter der Haube\n      // den LuxButton. Wenn diese nun als Ausnahmen für Uppercase in der Config eingetragen werden,\n      // darf eine Uppercase-Einstellung für den LuxButton diese nicht überschreiben.\n      // Deshalb prüft der LuxButton hier, ob er Teil einer dieser Komponenten ist.\n      this.detectParent();\n    });\n  }\n\n  ngOnDestroy() {\n    this.configSubscription.unsubscribe();\n  }\n\n  clicked(event: any) {\n    this.luxClicked.emit(event);\n  }\n\n  private detectParent() {\n    const className = this.elementRef.nativeElement.className;\n    let selector = 'lux-button';\n    if (className.indexOf('lux-link') > -1) {\n      selector = 'lux-link';\n    } else if (className.indexOf('lux-side-nav-item') > -1) {\n      selector = 'lux-side-nav-item';\n    } else if (className.indexOf('lux-menu-item') > -1) {\n      selector = 'lux-menu-item';\n    }\n    this.labelUppercase = this.componentsConfigService.isLabelUppercaseForSelector(selector);\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LuxActionComponentBaseClass } from '../lux-action-model/lux-action-component-base.class';\n\n@Component({\n  selector: 'lux-link',\n  templateUrl: './lux-link.component.html',\n  styleUrls: ['./lux-link.component.scss']\n})\nexport class LuxLinkComponent extends LuxActionComponentBaseClass implements OnInit, OnDestroy {\n  public readonly iconSize: string = '2x';\n\n  @Input() luxHref: string;\n  @Input() luxBlank: boolean = false;\n\n  constructor(private router: Router, public cdr: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {}\n\n  redirectToHref($event: any) {\n    this.luxClicked.emit($event);\n    if (this.luxHref) {\n      this.luxHref = this.luxHref.trim();\n      if (!this.luxHref.startsWith('http')) {\n        this.router.navigate([this.luxHref]).then(() => {});\n      } else {\n        window.open(this.luxHref, this.luxBlank ? '_blank' : '_self');\n      }\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { LuxActionComponentBaseClass } from '../../lux-action-model/lux-action-component-base.class';\n\n// @dynamic Erklärung steht in der Datei \"lux-decorators.ts\".\n@Component({\n  selector: 'lux-menu-item',\n  template: ''\n})\nexport class LuxMenuItemComponent extends LuxActionComponentBaseClass {\n  @ViewChild(TemplateRef, { static: false }) templateRef: TemplateRef<any>;\n\n  @Output() luxHiddenChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() luxHideLabelIfExtendedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() luxAlwaysVisibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  _luxAlwaysVisible: boolean = true;\n  _luxHideLabelIfExtended: boolean = false;\n  _luxHidden: boolean = false;\n\n  // Wird vom LuxMenuComponent mit dem berechneten Breitenwert belegt\n  width: number = 0;\n  // Wird vom LuxMenuComponent mit dem passenden Zustand belegt\n  extended: boolean = false;\n\n  get luxAlwaysVisible() {\n    return this._luxAlwaysVisible;\n  }\n\n  @Input() set luxAlwaysVisible(value: boolean) {\n    this._luxAlwaysVisible = value;\n\n    this.luxAlwaysVisibleChange.emit(value);\n  }\n\n  get luxHideLabelIfExtended() {\n    return this._luxHideLabelIfExtended;\n  }\n\n  @Input() set luxHideLabelIfExtended(value: boolean) {\n    this._luxHideLabelIfExtended = value;\n\n    this.luxHideLabelIfExtendedChange.emit(value);\n  }\n\n  get luxHidden() {\n    return this._luxHidden;\n  }\n\n  @Input() set luxHidden(value: boolean) {\n    this._luxHidden = value;\n\n    this.luxHiddenChange.emit(value);\n  }\n\n  constructor() {\n    super();\n  }\n\n  clicked($event: any) {\n    this.luxClicked.emit($event);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lux-menu-trigger',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxMenuTriggerComponent {\n  constructor() {}\n}\n","import {\n  AfterViewChecked,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LuxMenuItemComponent } from './lux-menu-subcomponents/lux-menu-item.component';\nimport { LuxMenuTriggerComponent } from './lux-menu-subcomponents/lux-menu-trigger.component';\n\n// @dynamic Erklärung steht in der Datei \"lux-decorators.ts\".\n@Component({\n  selector: 'lux-menu',\n  templateUrl: './lux-menu.component.html',\n  styleUrls: ['./lux-menu.component.scss']\n})\nexport class LuxMenuComponent implements AfterViewChecked, OnDestroy {\n  // Diese Werte müssen angepasst werden, sollte das Styling dieser Component entsprechend geändert worden sein\n  static readonly PADDING_PX = 16;\n  static readonly MARGIN_PX = 8;\n  static readonly FONT_PX = 14;\n  static readonly ICON_PX = 22;\n\n  // Alle verfgb. MenuItems als Array\n  private _menuItems: LuxMenuItemComponent[] = [];\n\n  // Das Canvas wird genutzt um die Breite potentieller MenuItem-Texte zu berechnen\n  private readonly canvas;\n\n  private menuItemSubstcriptions: Subscription[] = [];\n\n  hideToggle: boolean = false;\n\n  @ViewChild('defaultTrigger', { read: ElementRef, static: false }) defaultTriggerElRef: ElementRef;\n  @ViewChild('menuTrigger', { read: ElementRef, static: false }) menuTriggerElRef: ElementRef;\n  @ViewChild('menuExtendedContainer', { read: ElementRef, static: true }) menuExtendedContainer: ElementRef;\n  @ContentChildren(LuxMenuItemComponent) luxMenuItemComponents: QueryList<LuxMenuItemComponent>;\n  @ContentChild(LuxMenuTriggerComponent, { static: false }) luxMenuTriggerComponent: LuxMenuTriggerComponent;\n\n  @Output() luxMenuClosed: EventEmitter<void> = new EventEmitter<void>();\n\n  @Input() luxMenuIconName: string = 'menu';\n  @Input() luxClassName: string;\n  @Input() luxTagId: string;\n  @Input() luxToggleDisabled: boolean = false;\n\n  _luxDisplayExtended: boolean = false;\n\n  get luxDisplayExtended() {\n    return this._luxDisplayExtended;\n  }\n\n  @Input() set luxDisplayExtended(value: boolean) {\n    this._luxDisplayExtended = value;\n\n    if (this.menuTriggerElRef) {\n      this.updateExtendedMenuItems();\n    }\n  }\n\n  @Input() luxDisplayMenuLeft: boolean = true;\n  @Input() luxMaximumExtended: number = 5;\n\n  @HostListener('window:resize') windowResize() {\n    this.updateExtendedMenuItems();\n  }\n\n  get menuItems(): LuxMenuItemComponent[] {\n    return this._menuItems;\n  }\n\n  set menuItems(menuItems: LuxMenuItemComponent[]) {\n    this._menuItems = menuItems ? menuItems : [];\n\n    this.menuItems.forEach(item => {\n      this.menuItemSubstcriptions.push(\n        item.luxHiddenChange.subscribe(() => {\n          this.updateExtendedMenuItems();\n        })\n      );\n      this.menuItemSubstcriptions.push(\n        item.luxAlwaysVisibleChange.subscribe(() => {\n          this.updateExtendedMenuItems();\n        })\n      );\n      this.menuItemSubstcriptions.push(\n        item.luxHideLabelIfExtendedChange.subscribe(() => {\n          this.updateExtendedMenuItems();\n        })\n      );\n    });\n\n    this.cdr.detectChanges();\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {\n    this.canvas = document.createElement('canvas');\n  }\n\n  ngAfterViewChecked() {\n    this.luxMenuItemComponents.changes.subscribe(() => {\n      this.menuItems = this.luxMenuItemComponents.toArray();\n      this.calculateMenuItemWidths();\n    });\n\n    this.menuItems = this.luxMenuItemComponents.toArray();\n    this.calculateMenuItemWidths();\n    this.updateExtendedMenuItems();\n  }\n\n  ngOnDestroy(): void {\n    this.menuItemSubstcriptions.forEach(menuItemSubscription => {\n      menuItemSubscription.unsubscribe();\n    });\n  }\n\n  /**\n   * Wird beim Klick auf ein MenuItem aufgerufen.\n   *\n   * @param menuItem\n   * @param $event\n   */\n  menuItemClicked(menuItem: LuxMenuItemComponent, $event) {\n    menuItem.clicked($event);\n  }\n\n  /**\n   * Wird nach dem Schließen des Menus aufgerufen und emitted die Output-Property.\n   * Setzt den Fokus auf den Default-Trigger (Custom-Trigger => eigene Verantwortung).\n   */\n  onMenuClosed() {\n    this.luxMenuClosed.emit();\n    if (this.defaultTriggerElRef) {\n      (<any>this.defaultTriggerElRef.nativeElement.children.item(0)).focus();\n    }\n  }\n\n  /**\n   * Berechnet anhand der verfügbaren Breite des Containers (CSS-Class: lux-menu-extended) und der maximalen Anzahl an\n   * extended MenuItems die Anzahl an möglichen MenuItems, die außerhalb des eigentlichen Menus dargestellt werden können.\n   */\n  updateExtendedMenuItems() {\n    if (!this.luxDisplayExtended) {\n      this.hideToggle = false;\n      this.menuItems.forEach((menuItem: LuxMenuItemComponent) => {\n        menuItem.extended = false;\n      });\n      return;\n    }\n\n    const menuTriggerWidth = this.menuTriggerElRef.nativeElement.offsetWidth;\n\n    let availableWidth: number = this.menuExtendedContainer.nativeElement.offsetWidth;\n    let count: number = 0;\n\n    availableWidth -= menuTriggerWidth;\n\n    // mit condition sind hier die Zustände luxVisible = true || false gemeint\n    for (const condition of [true, false]) {\n      for (let i = this.menuItems.length - 1; i >= 0; i--) {\n        const menuItem = this.menuItems[i];\n\n        if (menuItem.luxHidden) {\n          continue;\n        }\n\n        if (menuItem.luxAlwaysVisible === condition) {\n          // Wenn es das letzte Menüitem ist, wird geprüft, ob es anstelle des\n          // Menüitemtriggers dargestellt werden kann.\n          if (i === 0 && availableWidth + menuTriggerWidth >= menuItem.width) {\n            availableWidth += menuTriggerWidth;\n          }\n\n          availableWidth -= menuItem.width;\n\n          if (availableWidth >= 0 && count < this.luxMaximumExtended) {\n            menuItem.extended = true;\n            count++;\n          } else {\n            menuItem.extended = false;\n          }\n        }\n      }\n    }\n\n    // die Anzahl der extended dargestellten Items der Gesamtzahl entspricht blenden wir den Toggle aus\n    const extendedMenuItemCount = this.menuItems.filter(\n      (item: LuxMenuItemComponent) => item.extended && !item.luxHidden\n    ).length;\n    const visibleMenuItemCount = this.menuItems.filter((item: LuxMenuItemComponent) => !item.luxHidden).length;\n    this.hideToggle = extendedMenuItemCount === visibleMenuItemCount;\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Berechnet die Breite für jedes Menuitem und speichert diese abhängig davon ob das Item immer sichtbar sein soll oder nicht\n   * in 2 verschiedenen Maps.\n   */\n  private calculateMenuItemWidths() {\n    this.menuItems.forEach((menuItem: LuxMenuItemComponent) => {\n      menuItem.extended = false;\n      menuItem.width = this.getMenuItemWidth(menuItem);\n    });\n  }\n\n  /**\n   * Gibt die berechnete Breite des MenuItems zurück.\n   * Diese setzt sich aus dem Padding (links und rechts, je 16px), dem Icon (wenn vorhanden, 15px) und der berechneten\n   * Textbreite zusammen.\n   * @param menuItem\n   */\n  private getMenuItemWidth(menuItem: LuxMenuItemComponent): number {\n    if (!menuItem) {\n      return 0;\n    }\n\n    return (\n      LuxMenuComponent.PADDING_PX +\n      (menuItem.luxIconName ? LuxMenuComponent.ICON_PX : 0) +\n      (!menuItem.luxHideLabelIfExtended ? this.getTextWidth(menuItem.luxLabel) : 0) +\n      LuxMenuComponent.MARGIN_PX\n    );\n  }\n\n  /**\n   * Berechnet mithilfe eines Canvas-Objekts die Breite eines einzelnen Textes\n   * @param text\n   */\n  private getTextWidth(text): number {\n    if (!text) {\n      return 0;\n    }\n\n    const canvas = this.canvas;\n    const context = canvas.getContext('2d');\n    context.font = `${LuxMenuComponent.FONT_PX}px sans-serif`;\n    const metrics = context.measureText(text);\n\n    // zusätzlich nutzen wir hier einen Standard-Offset von 20px\n    return metrics.width + 20;\n  }\n\n  hasVisibleMenuItems(): boolean {\n    let hasVisibleMenuItems = false;\n\n    for (let i = 0; i < this.menuItems.length; i++) {\n      const element = this.menuItems[i];\n\n      if (!element.luxHidden && !element.extended) {\n        hasVisibleMenuItems = true;\n        break;\n      }\n    }\n\n    return hasVisibleMenuItems;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatMenuModule } from '@angular/material';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxButtonComponent } from './lux-button/lux-button.component';\nimport { LuxLinkComponent } from './lux-link/lux-link.component';\nimport { LuxMenuItemComponent } from './lux-menu/lux-menu-subcomponents/lux-menu-item.component';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxMenuComponent } from './lux-menu/lux-menu.component';\nimport { LuxMenuTriggerComponent } from './lux-menu/lux-menu-subcomponents/lux-menu-trigger.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LuxIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    LuxDirectivesModule,\n    FlexLayoutModule,\n    LuxComponentsConfigModule\n  ],\n  declarations: [LuxButtonComponent, LuxMenuItemComponent, LuxLinkComponent, LuxMenuComponent, LuxMenuTriggerComponent],\n  exports: [LuxButtonComponent, LuxLinkComponent, LuxMenuComponent, LuxMenuItemComponent, LuxMenuTriggerComponent],\n  entryComponents: [LuxButtonComponent]\n})\nexport class LuxActionModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nexport const day = 'Tagen',\n  week = 'Wochen',\n  month = 'Monaten',\n  year = 'Jahren';\nexport const today = 'Heute',\n  yesterday = 'Gestern',\n  tomorrow = 'Morgen';\nexport const prefixFuture = 'in',\n  prefixPast = 'vor';\n\nexport const MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nexport const timeDeltas = [\n  { name: year, days: 672, dayUnit: 336 },\n  { name: month, days: 56, dayUnit: 28 },\n  { name: week, days: 14, dayUnit: 7 },\n  { name: day, days: 2, dayUnit: 1 }\n];\n\nexport const timeDeltasRelative = [\n  { name: tomorrow, days: 1 },\n  { name: yesterday, days: -1 },\n  { name: today, days: 0 }\n];\n\n@Pipe({\n  name: 'luxRelativeTimestamp'\n})\nexport class LuxRelativeTimestampPipe implements PipeTransform {\n  transform(timestamp: number, defaultText: string = '', prefix?: string): string {\n    if (!timestamp) {\n      return defaultText;\n    }\n\n    const now = new Date();\n    const then = new Date(timestamp);\n\n    const delta = this.calcDiff(now, then);\n    let timeName = null;\n\n    for (const timeDelta of timeDeltas) {\n      const tempDelta = delta < 0 ? delta * -1 : delta;\n\n      if (tempDelta >= timeDelta.days) {\n        if (!prefix) {\n          prefix = delta < 0 ? prefixPast : prefixFuture;\n        }\n\n        let timeUnits = timeDelta.name === day ? tempDelta : Math.floor(tempDelta / timeDelta.dayUnit);\n        timeUnits *= timeUnits < 0 ? -1 : 1;\n        timeName = `${prefix} ${timeUnits} ${timeDelta.name}`;\n        break;\n      }\n    }\n\n    if (timeName === null) {\n      for (const timeDelta of timeDeltasRelative) {\n        if (delta === timeDelta.days) {\n          timeName = timeDelta.name;\n          break;\n        }\n      }\n    }\n    return timeName;\n  }\n\n  private calcDiff(a, b) {\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n    return Math.floor((utc2 - utc1) / MS_PER_DAY);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'luxRenderProperty'\n})\nexport class LuxRenderPropertyPipe implements PipeTransform {\n  transform(value: any, renderPropertyName: string): string {\n    if (!renderPropertyName) {\n      return value;\n    }\n\n    if (!value || !value[renderPropertyName]) {\n      return '';\n    }\n\n    return value[renderPropertyName];\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { LuxUtil } from '../../lux-util/lux-util';\n\n@Pipe({\n  name: 'luxPropertyFromObject'\n})\nexport class LuxPropertyFromObjectPipe implements PipeTransform {\n  /**\n   * Ruft die Funktion aus Util auf, um ein Property aus einem Objekt (auch mit Unterpfaden) auszulesen.\n   */\n  transform(object: any, propertyNamePath: string): any {\n    return LuxUtil.readPropertyValueFromObject(object, propertyNamePath);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'luxAlphabeticallySorted'\n})\nexport class LuxAlphabeticallySortedPipe implements PipeTransform {\n  transform(array: any[]): any {\n    if (!array) {\n      return [];\n    }\n    return this.sortAlphabetically(array);\n  }\n\n  private sortAlphabetically(array) {\n    return array.slice().sort((a, b) => {\n      const valueA = a.label || '';\n      const valueB = b.label || '';\n\n      const stringA = (valueA as string).toLocaleLowerCase();\n      const stringB = (valueB as string).toLocaleLowerCase();\n      return stringA.localeCompare(stringB);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LuxRelativeTimestampPipe } from './lux-relative-timestamp/lux-relative-timestamp.pipe';\nimport { LuxRenderPropertyPipe } from './lux-render-property/lux-render-property.pipe';\nimport { LuxPropertyFromObjectPipe } from './lux-property-from-object/lux-property-from-object.pipe';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxAlphabeticallySortedPipe } from './lux-alphabetically-sorted/lux-alphabetically-sorted.pipe';\n\n@NgModule({\n  imports: [CommonModule, LuxComponentsConfigModule],\n  declarations: [\n    LuxRelativeTimestampPipe,\n    LuxRenderPropertyPipe,\n    LuxPropertyFromObjectPipe,\n    LuxAlphabeticallySortedPipe\n  ],\n  exports: [LuxRelativeTimestampPipe, LuxRenderPropertyPipe, LuxPropertyFromObjectPipe, LuxAlphabeticallySortedPipe]\n})\nexport class LuxPipesModule {}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  generateLuxTagIds: true\n};\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { LuxComponentsConfigService } from '../lux-components-config/lux-components-config.service';\nimport { LuxComponentsConfigParameters } from '../lux-components-config/lux-components-config-parameters.interface';\n\nexport const noop = (): any => undefined;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LuxConsoleService {\n  static config: LuxComponentsConfigParameters = {};\n\n  constructor(componentsConfigService: LuxComponentsConfigService) {\n    // Aus der Konfiguration die Info erhalten, ob Logs angezeigt werden sollen\n    componentsConfigService.config.subscribe((newConfig: LuxComponentsConfigParameters) => {\n      LuxConsoleService.config = newConfig;\n    });\n  }\n\n  /* Nicht-statische Log-Methoden, sie zeigen auch die Quelle des Logs an! */\n\n  get log() {\n    if (LuxConsoleService.isDebugMode()) {\n      return console.log.bind.call(console.log, console, LuxConsoleService.logDate() + ' -');\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (LuxConsoleService.isDebugMode()) {\n      return console.warn.bind.call(console.warn, console, LuxConsoleService.logDate() + ' -');\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (LuxConsoleService.isDebugMode()) {\n      return console.error.bind.call(console.error, console, LuxConsoleService.logDate() + ' -');\n    } else {\n      return noop;\n    }\n  }\n\n  get group() {\n    if (LuxConsoleService.isDebugMode()) {\n      return console.group.bind.call(console.group, console);\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (LuxConsoleService.isDebugMode()) {\n      return console.info.bind.call(console.info, console);\n    } else {\n      return noop;\n    }\n  }\n\n  get groupEnd() {\n    if (LuxConsoleService.isDebugMode()) {\n      return console.groupEnd.bind.call(console.groupEnd, console);\n    } else {\n      return noop;\n    }\n  }\n\n  /* Statische Log-Methoden, sie zeigen nicht die Quelle des Logs an! */\n\n  static LOG(...args) {\n    if (!LuxConsoleService.isDebugMode()) {\n      return;\n    }\n    if (args.length === 1 && args[0] !== null && typeof args[0] === 'object') {\n      console.log(LuxConsoleService.logDate() + ' -', args[0]);\n    } else if (args.length === 1) {\n      console.log(LuxConsoleService.logDate() + ' -', args[0]);\n    } else {\n      console.log(LuxConsoleService.logDate() + ' - ' + this.getLogValue(args));\n    }\n  }\n\n  static WARN(...args) {\n    if (!LuxConsoleService.isDebugMode()) {\n      return;\n    }\n    if (args.length === 1 && args[0] !== null && typeof args[0] === 'object') {\n      console.warn(LuxConsoleService.logDate() + ' -', args[0]);\n    } else if (args.length === 1) {\n      console.warn(LuxConsoleService.logDate() + ' -', args[0]);\n    } else {\n      console.warn(LuxConsoleService.logDate() + ' - ' + this.getLogValue(args));\n    }\n  }\n\n  static ERROR(...args) {\n    if (!LuxConsoleService.isDebugMode()) {\n      return;\n    }\n    if (args.length === 1 && args[0] !== null && typeof args[0] === 'object') {\n      console.error(LuxConsoleService.logDate() + ' -', args[0]);\n    } else if (args.length === 1) {\n      console.error(LuxConsoleService.logDate() + ' -', args[0]);\n    } else {\n      console.error(LuxConsoleService.logDate() + ' - ' + this.getLogValue(args));\n    }\n  }\n\n  private static logDate() {\n    const now = new Date();\n\n    const day = LuxConsoleService.checkTime(now.getDate());\n    const month = LuxConsoleService.checkTime(now.getMonth() + 1);\n    const year = LuxConsoleService.checkTime(now.getFullYear());\n    const hours = LuxConsoleService.checkTime(now.getHours());\n    const minutes = LuxConsoleService.checkTime(now.getMinutes());\n    const seconds = LuxConsoleService.checkTime(now.getSeconds());\n\n    return day + '.' + month + '.' + year + ' ' + hours + ':' + minutes + ':' + seconds;\n  }\n\n  private static getLogValue(...args) {\n    const logValue = [];\n\n    args.forEach(arg => {\n      if (arg !== null && typeof arg === 'object') {\n        arg = JSON.stringify(arg);\n      }\n      logValue.push(arg);\n    });\n\n    return logValue;\n  }\n\n  private static isDebugMode() {\n    return LuxConsoleService.config ? LuxConsoleService.config.displayLuxConsoleLogs : environment.production;\n  }\n\n  private static checkTime(timeUnit: number) {\n    return timeUnit < 10 ? '0' + timeUnit : timeUnit;\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { LuxConsoleService } from './lux-console.service';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\n\n@Injectable()\nexport class LuxMediaQueryObserverService implements OnDestroy {\n  private _mediaQueryChanged: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private breakpointObserver: BreakpointObserver, private logger: LuxConsoleService) {\n    this.addQuerySubscription(Breakpoints.XSmall, 'xs');\n    this.addQuerySubscription(Breakpoints.Small, 'sm');\n    this.addQuerySubscription(Breakpoints.Medium, 'md');\n    this.addQuerySubscription(Breakpoints.Large, 'lg');\n    this.addQuerySubscription(Breakpoints.XLarge, 'xl');\n  }\n\n  public get activeMediaQuery() {\n    return this._mediaQueryChanged.getValue();\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((subscription: Subscription) => subscription.unsubscribe());\n    this._mediaQueryChanged.complete();\n  }\n\n  public getMediaQueryChangedAsObservable(): Observable<string> {\n    return this._mediaQueryChanged.asObservable();\n  }\n\n  public isXS(): boolean {\n    return this.activeMediaQuery === 'xs';\n  }\n\n  public isSM(): boolean {\n    return this.activeMediaQuery === 'sm';\n  }\n\n  public isMD(): boolean {\n    return this.activeMediaQuery === 'md';\n  }\n\n  public isLG(): boolean {\n    return this.activeMediaQuery === 'lg';\n  }\n\n  public isXL(): boolean {\n    return this.activeMediaQuery === 'xl';\n  }\n\n  private addQuerySubscription(breakpoint: any, breakpointString: string) {\n    this._subscriptions.push(\n      this.breakpointObserver.observe([breakpoint]).subscribe((state: BreakpointState) => {\n        if (state.matches) {\n          this._mediaQueryChanged.next(breakpointString);\n          this.logger.log(`MediaQuery [${this.activeMediaQuery}] activated.`);\n        }\n      })\n    );\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatAccordion } from '@angular/material';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'lux-accordion',\n  templateUrl: './lux-accordion.component.html'\n})\nexport class LuxAccordionComponent implements OnInit, OnDestroy {\n  changed$ = new Subject();\n\n  @Input() luxMode: 'default' | 'flat' = 'default';\n  @Input() luxMulti: boolean = false;\n\n  _luxDisabled: boolean = false;\n  _luxHideToggle: boolean = false;\n  _luxExpandedHeaderHeight: string;\n  _luxCollapsedHeaderHeight: string;\n\n  @Input()\n  get luxDisabled() {\n    return this._luxDisabled;\n  }\n\n  set luxDisabled(disabled: boolean) {\n    this._luxDisabled = disabled;\n\n    this.changed$.next('luxDisabled');\n  }\n\n  @Input()\n  get luxHideToggle() {\n    return this._luxHideToggle;\n  }\n\n  set luxHideToggle(hideToggle: boolean) {\n    this._luxHideToggle = hideToggle;\n\n    this.changed$.next('luxHideToggle');\n  }\n\n  @Input()\n  get luxExpandedHeaderHeight() {\n    return this._luxExpandedHeaderHeight;\n  }\n\n  set luxExpandedHeaderHeight(height: string) {\n    this._luxExpandedHeaderHeight = height;\n\n    this.changed$.next('luxExpandedHeaderHeight');\n  }\n\n  @Input()\n  get luxCollapsedHeaderHeight() {\n    return this._luxCollapsedHeaderHeight;\n  }\n\n  set luxCollapsedHeaderHeight(height: string) {\n    this._luxCollapsedHeaderHeight = height;\n\n    this.changed$.next('luxCollapsedHeaderHeight');\n  }\n\n  @ViewChild(MatAccordion, { static: true }) matAccordion: MatAccordion;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    this.changed$.complete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { LuxAppFooterButtonInfo } from './lux-app-footer-button-info';\n\n@Injectable()\nexport class LuxAppFooterButtonService {\n  private _buttonInfos: LuxAppFooterButtonInfo[] = [];\n\n  get buttonInfos(): LuxAppFooterButtonInfo[] {\n    return this._buttonInfos;\n  }\n\n  set buttonInfos(buttonInfos: LuxAppFooterButtonInfo[]) {\n    this._buttonInfos = buttonInfos ? buttonInfos : [];\n  }\n\n  pushButtonInfos(...value: LuxAppFooterButtonInfo[]) {\n    if (!this.buttonInfos) {\n      this._buttonInfos = [];\n    }\n    this._buttonInfos.push(...value);\n  }\n\n  getButtonInfoByCMD(cmd: string) {\n    return this.buttonInfos.find((buttonInfo: LuxAppFooterButtonInfo) => buttonInfo.cmd === cmd);\n  }\n\n  removeButtonInfoAtIndex(i: number) {\n    this._buttonInfos = this._buttonInfos.filter((info, index) => index !== i);\n  }\n\n  removeButtonInfoByCmd(cmd: string) {\n    this._buttonInfos = this._buttonInfos.filter(info => info.cmd !== cmd);\n  }\n\n  clearButtonInfos() {\n    this._buttonInfos = [];\n  }\n\n  sendButtonCommand(buttonCommand: string) {\n    // Den angeklickten Button erhalten und dessen onClick-Funktion aufrufen.\n    // Als Parameter den Button selbst mitgeben (falls dieser bearbeitet werden muss, z.B.).\n    const clickedButton = this.getButtonInfoByCMD(buttonCommand);\n    if (clickedButton) {\n      clickedButton.onClick(clickedButton);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LuxAppFooterLinkInfo } from './lux-app-footer-link-info';\n\n@Injectable()\nexport class LuxAppFooterLinkService {\n  private _linkInfos: LuxAppFooterLinkInfo[] = [];\n\n  get linkInfos(): LuxAppFooterLinkInfo[] {\n    return this._linkInfos;\n  }\n\n  set linkInfos(value: LuxAppFooterLinkInfo[]) {\n    this._linkInfos = value ? value : [];\n  }\n\n  pushLinkInfos(...value: LuxAppFooterLinkInfo[]) {\n    if (!this._linkInfos) {\n      this._linkInfos = [];\n    }\n    this._linkInfos.push(...value);\n  }\n\n  removeLinkInfoAtIndex(i: number) {\n    this._linkInfos = this._linkInfos.filter((info, index) => index !== i);\n  }\n\n  clearLinkInfos() {\n    this._linkInfos = [];\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\nimport { LuxAppFooterButtonInfo } from './lux-app-footer-button-info';\nimport { LuxAppFooterButtonService } from './lux-app-footer-button.service';\nimport { LuxAppFooterLinkInfo } from './lux-app-footer-link-info';\nimport { LuxAppFooterLinkService } from './lux-app-footer-link.service';\n\n@Component({\n  selector: 'lux-app-footer',\n  templateUrl: './lux-app-footer.component.html',\n  styleUrls: ['./lux-app-footer.component.scss']\n})\nexport class LuxAppFooterComponent {\n  @Input() luxVersion: string;\n\n  constructor(\n    public buttonService: LuxAppFooterButtonService,\n    private linkService: LuxAppFooterLinkService,\n    private mediaObserver: LuxMediaQueryObserverService\n  ) {}\n\n  isMediumOrLargerDevice() {\n    return (\n      this.mediaObserver.isSM() || this.mediaObserver.isMD() || this.mediaObserver.isLG() || this.mediaObserver.isXL()\n    );\n  }\n\n  getButtons(): LuxAppFooterButtonInfo[] {\n    return this.buttonService.buttonInfos;\n  }\n\n  sendButtonCommand(cmd: string) {\n    this.buttonService.sendButtonCommand(cmd);\n  }\n\n  getLinks(): LuxAppFooterLinkInfo[] {\n    return this.linkService.linkInfos;\n  }\n}\n","import { Component, ContentChildren, OnInit } from '@angular/core';\nimport { LuxMenuItemComponent } from '../../../../lux-action/lux-menu/lux-menu-subcomponents/lux-menu-item.component';\n\n@Component({\n  selector: 'lux-app-header-right-nav',\n  template: ''\n})\nexport class LuxAppHeaderRightNavComponent implements OnInit {\n  @ContentChildren(LuxMenuItemComponent) menuItemComponents;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\n\n@Injectable()\nexport class LuxMasterDetailMobileHelperService {\n  private _mdRegistered$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private _masterCollapsed$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n  private _hasValue$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(private mediaObserver: LuxMediaQueryObserverService) {\n    this.mediaObserver.getMediaQueryChangedAsObservable().subscribe(() => {\n      setTimeout(() => {\n        this.handleMasterCollapseState();\n      });\n    });\n  }\n\n  public get masterCollapsed$(): boolean {\n    return this._masterCollapsed$.getValue();\n  }\n\n  public get masterCollapsedObservable(): Observable<boolean> {\n    return this._masterCollapsed$.asObservable();\n  }\n\n  public get isRegisteredObservable(): Observable<boolean> {\n    return this._mdRegistered$.asObservable();\n  }\n\n  public get isRegistered(): boolean {\n    return this._mdRegistered$.getValue();\n  }\n\n  public get hasValueObservable(): Observable<boolean> {\n    return this._hasValue$.asObservable();\n  }\n\n  public get hasValue(): boolean {\n    return this._hasValue$.getValue();\n  }\n\n  public set hasValue(hasValue: boolean) {\n    this._hasValue$.next(hasValue);\n  }\n\n  /**\n   * Sendet ueber den masterCollapsed$-Subject ein Event mit dem Wert true.\n   * Kennzeichnet das der Master geoeffnet werden soll.\n   */\n  public openMaster(): void {\n    this._masterCollapsed$.next(true);\n  }\n\n  /**\n   * Sendet ueber den masterCollapsed$-Subject ein Event mit dem Wert false.\n   * Kennzeichnet das der Master geschlossen werden soll.\n   */\n  public closeMaster(): void {\n    this._masterCollapsed$.next(false);\n  }\n\n  /**\n   * Gibt zurueck ob eine Media-Query fuer XS oder SM aktuell aktiv ist.\n   * @returns boolean\n   */\n  public isMobile(): boolean {\n    return this.mediaObserver.isXS() || this.mediaObserver.isSM();\n  }\n\n  /**\n   * Meldet eine Master-Detail-Komponente fuer diesen Service an.\n   */\n  public register() {\n    if (!this.isRegistered) {\n      this._mdRegistered$.next(true);\n    } else {\n      console.error(\n        'Fehler: Ein Master-Detail-Helper-Service kann nur eine registrierte Master-Detail-Komponente haben.'\n      );\n    }\n  }\n\n  /**\n   * Meldet die aktuelle Master-Detail-Komponente dieses Services ab.\n   */\n  public unregister() {\n    if (this.isRegistered) {\n      this._mdRegistered$.next(false);\n    }\n  }\n\n  /**\n   * Sendet ein Event um den Master zu oeffnen bzw. zu schliessen\n   * wenn sich der Zustand der Media-Query geaendert hat.\n   */\n  private handleMasterCollapseState(): void {\n    setTimeout(() => {\n      if (this.hasValue && (this.mediaObserver.isXS() || this.mediaObserver.isSM())) {\n        this.closeMaster();\n      } else {\n        this.openMaster();\n      }\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\n\n@Component({\n  selector: 'lux-side-nav-item',\n  templateUrl: './lux-side-nav-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LuxSideNavItemComponent implements AfterViewInit, OnChanges {\n  @ViewChild(TemplateRef, { static: false }) templateRef: TemplateRef<any>;\n\n  @Input() luxLabel: string;\n  @Input() luxDisabled: boolean = false;\n  @Input() luxTagId: string;\n  @Input() luxSelected: boolean = false;\n  @Input() luxCloseOnClick: boolean = true;\n  @Input() luxIconName: string;\n  @Input() luxExpandable: boolean = false;\n  @Input() luxExpanded: boolean = true;\n\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(LuxSideNavItemComponent) sideNavItems: QueryList<LuxSideNavItemComponent>;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnChanges() {\n    // Bei Input Änderungen die CD anstossen\n    this.cdr.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    // Nach Abschluss der Initialisierung die CD anstossen\n    this.cdr.detectChanges();\n  }\n\n  onClick($event) {\n    this.luxClicked.emit($event);\n    if (this.luxExpandable) {\n      this.luxExpanded = !this.luxExpanded;\n    }\n  }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\n\nconst ANIMATION_DURATION = '300ms';\n\n/**\n * Animation für das Herein-Sliden der Seitennavigation von Links in den Contentbereich hinein und wieder zurück.\n */\nexport const sideNavAnimation = trigger('expandHide', [\n  state(\n    'void',\n    style({\n      left: '-{{ width }}'\n    }),\n    { params: { width: '100%' } }\n  ),\n  state(\n    'expanded',\n    style({\n      left: '0'\n    }),\n    { params: { width: '100%' } }\n  ),\n  transition('void => expanded', [animate(ANIMATION_DURATION)]),\n  transition('expanded => void', [animate(ANIMATION_DURATION)])\n]);\n\n/**\n * Animation um das Overlay für die Sidebar ein- und auszublenden.\n */\nexport const sideNavOverlayAnimation = trigger('expandHideOverlay', [\n  state(\n    'void',\n    style({\n      opacity: '0'\n    })\n  ),\n  state(\n    'expanded',\n    style({\n      opacity: '1'\n    })\n  ),\n  transition('void => expanded', [animate(ANIMATION_DURATION)]),\n  transition('expanded => void', [animate(ANIMATION_DURATION)])\n]);\n","import {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport { LuxSideNavItemComponent } from './lux-side-nav-subcomponents/lux-side-nav-item.component';\nimport { Subscription } from 'rxjs';\nimport { sideNavAnimation, sideNavOverlayAnimation } from './lux-side-nav-model/lux-side-nav-animations';\n\n@Component({\n  selector: 'lux-side-nav',\n  templateUrl: './lux-side-nav.component.html',\n  styleUrls: ['./lux-side-nav.component.scss'],\n  animations: [sideNavAnimation, sideNavOverlayAnimation]\n})\nexport class LuxSideNavComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() luxDashboardLink: string;\n  @Input() luxDashboardLinkTitle: string = 'LUX Dashboard';\n  @Input() luxOpenLinkBlank: boolean;\n\n  @ContentChildren(LuxSideNavItemComponent, { descendants: true }) sideNavItems: QueryList<LuxSideNavItemComponent>;\n  @ContentChildren(LuxSideNavItemComponent, { descendants: false }) directSideNavItems: QueryList<\n    LuxSideNavItemComponent\n  >;\n\n  @ViewChild('sideNav', { read: ElementRef, static: true }) sideNavEl: ElementRef;\n  @ViewChild('sideNavHeader', { read: ElementRef, static: true }) sideNavHeaderEl: ElementRef;\n  @ViewChild('sideNavFooter', { read: ElementRef, static: true }) sideNavFooterEl: ElementRef;\n\n  focusElement: any;\n  sideNavExpanded: boolean = false;\n  height: number;\n  width: number;\n  visibility = 'hidden';\n\n  private itemClickSubscriptions: Subscription[] = [];\n\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    if (event.key === 'Escape' && this.sideNavExpanded) {\n      // Escape soll nur das Menü schließen, wenn es auch geöffnet ist.\n      this.toggle();\n    }\n  }\n\n  @HostListener('window:resize') windowResize() {\n    this.calculateWidthHeight();\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.sideNavItems.changes.subscribe(() => this.updateItemClickListeners());\n    this.updateItemClickListeners();\n    this.calculateWidthHeight();\n  }\n\n  ngOnDestroy() {\n    this.itemClickSubscriptions.forEach((subscription: Subscription) => subscription.unsubscribe());\n  }\n\n  toggle() {\n    this.sideNavExpanded = !this.sideNavExpanded;\n\n    if (this.sideNavExpanded) {\n      this.visibility = 'visible';\n      this.calculateWidthHeight();\n\n      // Hier wird sich der Menübutton zwischengespeichert\n      this.focusElement = document.activeElement;\n    } else {\n      setTimeout(() => {\n        // Wenn das SideNavMenü geschlossen wird, wird wieder der SideNavMenübutton fokusiert.\n        if (this.focusElement) {\n          this.focusElement.focus();\n        }\n      });\n    }\n  }\n\n  /**\n   * Wenn die Animation beendet ist, wird das Menü ausgeblendet, damit der Fokus weiter zum Inhalt springt und nicht\n   * durch das versteckte Menü wandert. Das ist auch für Screenreader nötig.\n   */\n  updateSideNavAfterAnimationIsFinished() {\n    this.visibility = this.sideNavExpanded ? 'visible' : 'hidden';\n\n    // Den Fokus auf den ersten Button setzen\n    if (this.sideNavExpanded && this.sideNavEl && this.sideNavEl.nativeElement) {\n      setTimeout(() => {\n        const firstButton = (<HTMLElement>this.sideNavEl.nativeElement).querySelector('button');\n        if (firstButton) {\n          firstButton.focus();\n        }\n      });\n    }\n  }\n\n  open() {\n    this.sideNavExpanded = true;\n    this.calculateWidthHeight();\n  }\n\n  close() {\n    this.sideNavExpanded = false;\n  }\n\n  /**\n   * Berechnet die Höhe für den Container der SideNavMenuItems.\n   * Dafür wird die Gesamthöhe minus der Höhe des Headers und des Footers sowie eine feste Höhe\n   * für den App-Header gerechnet.\n   */\n  private calculateWidthHeight() {\n    setTimeout(() => {\n      const totalHeight = this.sideNavEl.nativeElement.offsetHeight;\n      const headerHeight = this.sideNavHeaderEl.nativeElement.offsetHeight;\n      const footerHeight = this.sideNavFooterEl.nativeElement.offsetHeight;\n      this.height = totalHeight - headerHeight - footerHeight;\n      this.width = this.sideNavEl.nativeElement.offsetWidth + 20 /* Sicherheitsaufschlag (Schatten, Scrollbar,...) */;\n    });\n  }\n\n  /**\n   * Hängt sich an die Klick-Events der einzelnen SideNavItems, um so, je nach Einstellung der Items,\n   * die SideNav zu schließen.\n   */\n  private updateItemClickListeners() {\n    this.itemClickSubscriptions.forEach((subscription: Subscription) => subscription.unsubscribe());\n    this.sideNavItems.forEach((item: LuxSideNavItemComponent) => {\n      this.itemClickSubscriptions.push(\n        item.luxClicked.subscribe(() => {\n          if (item.luxCloseOnClick) {\n            this.close();\n          }\n        })\n      );\n    });\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'lux-app-header-action-nav',\n  templateUrl: './lux-app-header-action-nav.component.html',\n  styleUrls: ['./lux-app-header-action-nav.component.scss']\n})\nexport class LuxAppHeaderActionNavComponent implements OnInit {\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","// tslint:disable:max-line-length\nimport { Component, ContentChild, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxMasterDetailMobileHelperService } from '../lux-master-detail/lux-master-detail-mobile-helper.service';\nimport { LuxSideNavComponent } from './lux-app-header-subcomponents/lux-side-nav/lux-side-nav.component';\nimport { LuxAppHeaderRightNavComponent } from './lux-app-header-subcomponents/lux-app-header-right-nav/lux-app-header-right-nav.component';\nimport { LuxAppHeaderActionNavComponent } from './lux-app-header-subcomponents/lux-app-header-action-nav/lux-app-header-action-nav.component';\n\n@Component({\n  selector: 'lux-app-header',\n  templateUrl: './lux-app-header.component.html',\n  styleUrls: ['./lux-app-header.component.scss']\n})\nexport class LuxAppHeaderComponent implements OnInit, OnChanges {\n  @Input() luxUserName: string;\n  @Input() luxAppTitle: string;\n  @Input() luxAppTitleShort: string;\n  @Input() luxIconName: string;\n\n  isMasterOpen: boolean;\n  isMasterDetailAvailable: boolean;\n  masterHasValue: boolean;\n\n  userNameShort: string;\n\n  @ViewChild('customTrigger', { read: ElementRef, static: false }) customTrigger: ElementRef;\n\n  @ContentChild(LuxAppHeaderActionNavComponent, { static: false }) actionNav: LuxAppHeaderActionNavComponent;\n  @ContentChild(LuxAppHeaderRightNavComponent, { static: false }) rightNav: LuxAppHeaderRightNavComponent;\n  @ContentChild(LuxSideNavComponent, { static: false }) sideNav: LuxSideNavComponent;\n\n  constructor(public mobileHelperService: LuxMasterDetailMobileHelperService, private logger: LuxConsoleService) {\n    // Wenn die Master-Ansicht der MD-Komponente aendert, muss ein anderer Navigations-Button angezeigt werden\n    this.mobileHelperService.masterCollapsedObservable.subscribe((isOpen: boolean) => {\n      this.isMasterOpen = isOpen;\n    });\n\n    // Pruefen ob ein Master-Detail aktuell vorhanden ist\n    this.mobileHelperService.isRegisteredObservable.subscribe((isRegistered: boolean) => {\n      this.isMasterDetailAvailable = isRegistered;\n    });\n\n    // Pruefen ob das Master-Detail einen Wert hat\n    this.mobileHelperService.hasValueObservable.subscribe((hasValue: boolean) => {\n      this.masterHasValue = hasValue;\n    });\n  }\n\n  ngOnInit() {}\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges.luxUserName) {\n      this.userNameShort = this.generateUserNameShort();\n    }\n\n    if (!this.luxAppTitleShort || this.luxAppTitleShort.length === 0) {\n      this.logger.warn('Achtung, der Applikations-Header hat keinen Titel für die mobile Ansicht!');\n    }\n  }\n\n  showMasterClick() {\n    this.mobileHelperService.openMaster();\n  }\n\n  isMasterToggleVisible() {\n    return (\n      this.isMasterDetailAvailable && this.mobileHelperService.isMobile() && !this.isMasterOpen && this.masterHasValue\n    );\n  }\n\n  onMenuClosed() {\n    this.customTrigger.nativeElement.focus();\n  }\n\n  private generateUserNameShort(): string {\n    let short = this.luxUserName ? this.luxUserName.trim() : '';\n\n    if (short.length > 0) {\n      short = short.charAt(0);\n    }\n    return short.toUpperCase();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-card-actions',\n  template: '<div fxLayout=\"row\" class=\"lux-flex-layout-gap-10\"><ng-content></ng-content></div>'\n})\nexport class LuxCardActionsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-card-content-expanded',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxCardContentExpandedComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-card-content',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxCardContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-card-info',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxCardInfoComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { animate, style, transition, trigger } from '@angular/animations';\n\n/**\n * Animation für das Aus- und Einklappen des erweiterten Karteninhalts.\n */\nexport const expansionAnim = trigger('expansionAnim', [\n  transition(\n    'void => expand',\n    [\n      style({ height: '0', opacity: 0 }),\n      animate(\n        '{{ duration }}ms',\n        style({\n          height: '*',\n          opacity: 1\n        })\n      )\n    ],\n    { params: { duration: '300ms', startHeight: '0' } }\n  ),\n\n  transition(\n    'expand => void',\n    [\n      style({ height: '*', opacity: 1 }),\n      animate(\n        '{{ duration }}ms',\n        style({\n          height: '0',\n          opacity: 0\n        })\n      )\n    ],\n    { params: { duration: '300ms', startHeight: '0' } }\n  )\n]);\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LuxComponentsConfigParameters } from '../../lux-components-config/lux-components-config-parameters.interface';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { LuxIconComponent } from '../../lux-icon/lux-icon/lux-icon.component';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { expansionAnim } from './lux-card-model/lux-card-animations';\nimport { LuxCardActionsComponent } from './lux-card-subcomponents/lux-card-actions.component';\nimport { LuxCardContentExpandedComponent } from './lux-card-subcomponents/lux-card-content-expanded.component';\nimport { LuxCardContentComponent } from './lux-card-subcomponents/lux-card-content.component';\nimport { LuxCardInfoComponent } from './lux-card-subcomponents/lux-card-info.component';\n\n@Component({\n  selector: 'lux-card',\n  templateUrl: './lux-card.component.html',\n  styleUrls: ['./lux-card.component.scss'],\n  animations: [expansionAnim]\n})\nexport class LuxCardComponent implements OnInit, AfterViewInit, OnDestroy {\n  private configSubscription: Subscription;\n\n  @Input() luxTitle: string;\n  @Input() luxSubTitle: string;\n  @Input() luxDisabled: boolean;\n  @Input() luxTagId: string;\n  @Input() luxTitleLineBreak: boolean = true;\n  @Input() luxExpanded: boolean = false;\n  @Output() luxExpandedChange: EventEmitter<boolean> = new EventEmitter();\n  @Output() luxAfterExpansion: EventEmitter<void> = new EventEmitter();\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(LuxIconComponent, { descendants: false }) iconComponents: QueryList<LuxIconComponent>;\n  @ContentChild(LuxCardActionsComponent, { static: false }) actionsComponent: LuxCardActionsComponent;\n  @ContentChild(LuxCardInfoComponent, { static: false }) infoComponent: LuxCardInfoComponent;\n  @ContentChild(LuxCardContentExpandedComponent, { static: false })\n  contentExpandedComponent: LuxCardContentExpandedComponent;\n  @ContentChild(LuxCardContentComponent, { static: false }) contentComponent: LuxCardContentComponent;\n\n  hasCardAction: boolean;\n  animationDisabled: boolean = true;\n\n  constructor(private componentsConfigService: LuxComponentsConfigService, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    if (!this.luxTagId) {\n      this.luxTagId = this.luxTitle;\n    }\n\n    if (this.luxClicked.observers && this.luxClicked.observers.length > 0) {\n      this.hasCardAction = true;\n    }\n  }\n\n  ngAfterViewInit() {\n    // Über die Konfiguration abfragen, ob die Animationen für Cards deaktiviert sind.\n    this.configSubscription = this.componentsConfigService.config.subscribe((config: LuxComponentsConfigParameters) => {\n      this.animationDisabled = !config.cardExpansionAnimationActive;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnDestroy() {\n    this.configSubscription.unsubscribe();\n  }\n\n  get showButtons() {\n    return !!this.actionsComponent;\n  }\n\n  get showIcon() {\n    return this.iconComponents && this.iconComponents.length === 1;\n  }\n\n  get showExpandedToggle() {\n    return !!this.contentExpandedComponent;\n  }\n\n  changeContentExpansion(event: any) {\n    LuxUtil.stopEventPropagation(event);\n\n    this.luxExpanded = !this.luxExpanded;\n    this.luxExpandedChange.emit(this.luxExpanded);\n  }\n\n  clicked() {\n    if (!this.luxDisabled && !this.showButtons) {\n      this.luxClicked.emit(null);\n    }\n  }\n\n  /**\n   * setzt das korrekte Alignment der Titelzeile. Ist der Titel im Zweifel mehrzeilig, so wird das Icon\n   * im Titel nach oben ausgerichtet, damit es nicht mittig nebem dem Titel schwebt. Ist der Titel aber\n   * einzeilig, so wird das Icon vertikal zum Titel alignt.\n   */\n  getTitleAlignment(): string {\n    if (this.luxTitleLineBreak && this.showIcon) {\n      return 'left top';\n    }\n\n    return 'left center';\n  }\n\n  /**\n   * Gibt den Status der Animation zurück.\n   */\n  getAnimState(): string {\n    return this.luxExpanded ? 'expand' : 'void';\n  }\n\n  /**\n   * Gibt die Dauer der Animation abhängig davon ob sie via Config deaktiviert wurden oder nicht zurück.\n   */\n  getAnimDuration() {\n    return this.animationDisabled ? 0 : 300;\n  }\n\n  /**\n   * Wird am Ende der Ausklappanimation aufgerufen und setzt das animationActive-Flag auf false und gibt ein Event\n   * über den luxAfterExpansion-EventEmitter ab.\n   */\n  expansionDone() {\n    this.luxAfterExpansion.emit();\n  }\n}\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-divider',\n  templateUrl: './lux-divider.component.html',\n  styleUrls: ['./lux-divider.component.scss']\n})\nexport class LuxDividerComponent implements OnInit {\n  private _luxVertical: boolean = false;\n\n  @Input() luxInset: boolean = false;\n\n  @HostBinding('class') classes = '';\n\n  get luxVertical(): boolean {\n    return this._luxVertical;\n  }\n\n  @Input() set luxVertical(vertical: boolean) {\n    this._luxVertical = vertical;\n    this.updateHostClasses();\n  }\n\n  constructor() {}\n\n  ngOnInit() {\n    this.updateHostClasses();\n  }\n\n  private updateHostClasses() {\n    this.classes = this.luxVertical ? 'lux-vertical-divider' : 'lux-horizontal-divider';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-list-item-content',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxListItemContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-list-item-icon',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxListItemIconComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, ElementRef, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { FocusableOption } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'lux-list-item',\n  templateUrl: './lux-list-item.component.html',\n  styleUrls: ['./lux-list-item.component.scss']\n})\nexport class LuxListItemComponent implements FocusableOption {\n  private _luxTitle: string;\n  private _luxSubTitle: string;\n  private _luxSelected: boolean;\n\n  @HostBinding('attr.aria-label') ariaLabel;\n  @HostBinding('attr.aria-selected') ariaSelected;\n  @HostBinding('attr.role') role = 'option';\n  @HostBinding('attr.tabindex') tabindex = '-1';\n\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter();\n\n  @Input() luxTitleLineBreak: boolean = true;\n\n  get luxTitle(): string {\n    return this._luxTitle;\n  }\n\n  @Input() set luxTitle(title: string) {\n    this._luxTitle = title;\n    this.ariaLabel = this.getLabel();\n  }\n\n  get luxSubTitle(): string {\n    return this._luxSubTitle;\n  }\n\n  @Input() set luxSubTitle(subTitle: string) {\n    this._luxSubTitle = subTitle;\n    this.ariaLabel = this.getLabel();\n  }\n\n  get luxSelected(): boolean {\n    return this._luxSelected;\n  }\n\n  @Input() set luxSelected(selected: boolean) {\n    this._luxSelected = selected;\n    this.ariaSelected = selected;\n  }\n\n  constructor(public elementRef: ElementRef) {}\n\n  clicked() {\n    this.luxClicked.emit(null);\n  }\n\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getLabel() {\n    return `${this.luxTitle ? this.luxTitle : ''} ${this.luxSubTitle ? this.luxSubTitle : ''}`;\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList\n} from '@angular/core';\nimport { LuxListItemComponent } from './lux-list-subcomponents/lux-list-item.component';\nimport { Subscription } from 'rxjs';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { DOWN_ARROW, END, ENTER, HOME, SPACE, UP_ARROW } from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'lux-list',\n  templateUrl: './lux-list.component.html',\n  styleUrls: ['./lux-list.component.scss']\n})\nexport class LuxListComponent implements OnInit, AfterViewInit, OnDestroy {\n  private _luxSelectedPosition: number = 0;\n\n  private previousFocusedPosition: number;\n  private clickSubscriptions: Subscription[] = [];\n  private listItemsSubscription: Subscription;\n  private keyManager: FocusKeyManager<LuxListItemComponent> = new FocusKeyManager<LuxListItemComponent>([]);\n\n  @ContentChildren(LuxListItemComponent) luxItems: QueryList<LuxListItemComponent>;\n\n  @Output() luxFocusedItemChange: EventEmitter<LuxListItemComponent> = new EventEmitter();\n  @Output() luxFocusedPositionChange: EventEmitter<number> = new EventEmitter();\n  @Output() luxSelectedPositionChange: EventEmitter<number> = new EventEmitter();\n\n  @Input() luxEmptyIconName = 'fas fa-info-circle';\n  @Input() luxEmptyIconSize = '5x';\n  @Input() luxEmptyLabel = 'Keine Einträge vorhanden';\n\n  @HostBinding('attr.role') role = 'listbox';\n  @HostBinding('attr.tabindex') tabindex = '0';\n  @HostBinding('attr.aria-multiselectable') ariaMulti = 'true';\n\n  @HostListener('keydown', ['$event']) onKeydown($event) {\n    this.keydown($event);\n  }\n\n  get luxSelectedPosition(): number {\n    return this._luxSelectedPosition;\n  }\n\n  @Input() set luxSelectedPosition(position: number) {\n    if (position === this.luxSelectedPosition) {\n      return;\n    }\n\n    this.focus(position);\n    this.select(position);\n    this.scroll(position);\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  isEmpty() {\n    return !this.luxItems || this.luxItems.length === 0;\n  }\n\n  ngAfterViewInit() {\n    // Click-Events der LuxListItems erhalten\n    this.listItemsSubscription = this.luxItems.changes.subscribe(() => {\n      this.listenForClicks();\n      this.keyManager = new FocusKeyManager<LuxListItemComponent>(this.luxItems);\n      if (this.previousFocusedPosition) {\n        this.keyManager.setActiveItem(this.previousFocusedPosition);\n      }\n    });\n    this.listenForClicks();\n    this.keyManager = new FocusKeyManager<LuxListItemComponent>(this.luxItems);\n    if (this.luxSelectedPosition) {\n      this.keyManager.setActiveItem(this.luxSelectedPosition);\n    }\n  }\n\n  ngOnDestroy() {\n    // Sämtliche Subscriptions auflösen\n    if (this.listItemsSubscription) {\n      this.listItemsSubscription.unsubscribe();\n    }\n    for (const subscription of this.clickSubscriptions) {\n      subscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Wird beim Drücken einer Taste ausgeführt und handelt die Aktionen bei speziellen Tasten\n   * (UP_ARROW || DOWN_ARROW werden vom KeyManager selbstständig gepflegt)\n   * @param $event\n   */\n  keydown($event: KeyboardEvent) {\n    const keyCode = $event.keyCode;\n    switch (keyCode) {\n      case SPACE:\n      case ENTER:\n        this.select(this.keyManager.activeItemIndex);\n        $event.preventDefault();\n        break;\n      case HOME:\n      case END:\n        keyCode === HOME ? this.keyManager.setFirstItemActive() : this.keyManager.setLastItemActive();\n        this.focus(this.keyManager.activeItemIndex);\n        $event.preventDefault();\n        break;\n      case UP_ARROW:\n        this.keyManager.setPreviousItemActive();\n        this.focus(this.keyManager.activeItemIndex);\n        $event.preventDefault();\n        break;\n      case DOWN_ARROW:\n        this.keyManager.setNextItemActive();\n        this.focus(this.keyManager.activeItemIndex);\n        $event.preventDefault();\n        break;\n      default:\n        this.keyManager.onKeydown($event);\n    }\n  }\n\n  /**\n   * Auf Click-Events der hier bekannten LuxListItems hören und entsprechend das selektierte ListItem aktualisieren.\n   */\n  private listenForClicks() {\n    for (const subscription of this.clickSubscriptions) {\n      subscription.unsubscribe();\n    }\n\n    this.clickSubscriptions = [];\n\n    this.luxItems.forEach((listItem: LuxListItemComponent, index: number) => {\n      this.clickSubscriptions.push(\n        listItem.luxClicked.subscribe(() => {\n          this.focus(index);\n          this.select(index);\n        })\n      );\n    });\n  }\n\n  /**\n   * Merkt sich die position als Selektions-Position und aktualisiert den luxSelected-Wert\n   * aller luxItems, die hier bekannt sind.\n   * @param position\n   */\n  private select(position: number) {\n    this._luxSelectedPosition = position;\n    this.previousFocusedPosition = position;\n    this.luxSelectedPositionChange.emit(position);\n\n    if (this.luxItems) {\n      this.luxItems.forEach((listItem: LuxListItemComponent) => {\n        listItem.luxSelected = false;\n      });\n\n      const selectedListItem = this.findListItem(position);\n      if (selectedListItem) {\n        selectedListItem.luxSelected = true;\n      }\n    }\n  }\n\n  /**\n   * Merkt sich die position als Fokus-Position und aktualisiert die CSS-Klassen der ListItems.\n   * @param position\n   */\n  private focus(position: number) {\n    this.keyManager.setActiveItem(position);\n\n    this.luxFocusedPositionChange.emit(position);\n    this.luxFocusedItemChange.emit(this.keyManager.activeItem);\n\n    this.previousFocusedPosition = position;\n  }\n\n  /**\n   * Scrollt zu dem Element an der position.\n   * @param position\n   */\n  private scroll(position: number) {\n    if (this.luxItems) {\n      const listItem = this.keyManager.activeItem;\n\n      if (listItem) {\n        listItem.elementRef.nativeElement.scrollIntoView(true);\n      }\n    }\n  }\n\n  /**\n   * Gibt das ListItem an der position zurück bzw. null wenn die luxItems undefined/null sind.\n   * @param position\n   */\n  private findListItem(position: number): LuxListItemComponent {\n    return this.luxItems\n      ? this.luxItems.find((listItem: LuxListItemComponent, index: number) => index === position)\n      : null;\n  }\n}\n","import { Component, ContentChild, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-detail-view',\n  template: '',\n  styles: ['']\n})\nexport class LuxDetailViewComponent implements OnInit {\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-master-footer',\n  template: '<ng-content></ng-content>',\n  styleUrls: ['./lux-master-footer.component.scss']\n})\nexport class LuxMasterFooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-master-header-content',\n  template: `\n    <ng-content></ng-content>\n  `\n})\nexport class LuxMasterHeaderContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\nimport { LuxMasterDetailMobileHelperService } from '../../lux-master-detail-mobile-helper.service';\nimport { LuxButtonComponent } from '../../../../lux-action/lux-button/lux-button.component';\n\n@Component({\n  selector: 'lux-master-header',\n  templateUrl: './lux-master-header.component.html',\n  styleUrls: ['./lux-master-header.component.scss']\n})\nexport class LuxMasterHeaderComponent implements OnInit {\n  iconName: string;\n  open: boolean;\n\n  @Input() luxToggleHidden: boolean;\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter();\n\n  @HostBinding('class.lux-no-toggle') isMobile = this.luxToggleHidden;\n\n  constructor(private masterDetailMobileHelperService: LuxMasterDetailMobileHelperService) {\n    this.masterDetailMobileHelperService.masterCollapsedObservable.subscribe((isOpen: boolean) => {\n      if (this.masterDetailMobileHelperService.isMobile()) {\n        this.iconName = 'keyboard_arrow_right';\n      } else {\n        if (isOpen) {\n          this.iconName = 'keyboard_arrow_left';\n        } else {\n          this.iconName = 'keyboard_arrow_right';\n        }\n      }\n      this.open = isOpen;\n      this.isMobile = this.luxToggleHidden;\n    });\n  }\n\n  ngOnInit() {}\n\n  clicked(that: LuxButtonComponent) {\n    if (this.open) {\n      this.masterDetailMobileHelperService.closeMaster();\n    } else {\n      this.masterDetailMobileHelperService.openMaster();\n    }\n    this.luxClicked.emit(this.open);\n    that.elementRef.nativeElement.focus();\n  }\n}\n","import { Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-master-simple',\n  template: ''\n})\nexport class LuxMasterSimpleComponent implements OnInit {\n  @Input() luxTitleProp: string;\n  @Input() luxSubTitleProp: string;\n\n  @ContentChild('luxSimpleContent', { static: false }) contentTempRef: TemplateRef<any>;\n  @ContentChild('luxSimpleIcon', { static: false }) iconTempRef: TemplateRef<any>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, HostBinding, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-master-view',\n  template:\n    '<ng-content select=\"lux-master-header\"></ng-content>' +\n    '<ng-content></ng-content>' +\n    '<ng-content select=\"[lux-master-footer]\"></ng-content>'\n})\nexport class LuxMasterViewComponent implements OnInit {\n  @HostBinding('class.lux-overflow-y-auto') overflowY: boolean = true;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-tab',\n  template: ''\n})\nexport class LuxTabComponent implements OnInit {\n  @Input() luxTitle: string;\n  @Input() luxIconName: string;\n  @Input() luxCounter: number;\n  @Input() luxCounterCap: number = 10;\n  @Input() luxShowNotification;\n  @Input() luxDisabled: boolean = false;\n  @Input() luxTagIdHeader: string;\n  @Input() luxTagIdContent: string;\n\n  @ContentChild(TemplateRef, { static: false }) contentTemplate: TemplateRef<any>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { LuxTabComponent } from './lux-tabs-subcomponents/lux-tab.component';\nimport { MatTabChangeEvent } from '@angular/material';\nimport { ReplaySubject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\n\n@Component({\n  selector: 'lux-tabs',\n  templateUrl: './lux-tabs.component.html',\n  styleUrls: ['./lux-tabs.component.scss']\n})\nexport class LuxTabsComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  private static readonly _DEBOUNCE_TIME: number = 50;\n\n  private static _notificationNewClass = 'lux-notification-new';\n  private static _notificationReadClass = 'lux-notification-read';\n\n  private configSubscription: Subscription;\n\n  tabChange$: ReplaySubject<MatTabChangeEvent> = new ReplaySubject<MatTabChangeEvent>(1);\n  labelUppercase: boolean;\n\n  @Input() luxTabAnimationActive: boolean = true;\n  @Input() luxActiveTab: number = 0;\n  @Input() luxIconSize: string = '2x';\n  @Input() luxDisplayDivider: boolean = true;\n  @Input() luxTagId: string;\n  @Input() luxLazyLoading: boolean = false;\n\n  @Output() readonly luxActiveTabChanged: EventEmitter<any> = new EventEmitter<any>();\n\n  @ContentChildren(LuxTabComponent) luxTabs: QueryList<LuxTabComponent>;\n  @ViewChild('matTabs', { read: ElementRef, static: true }) tabHeader;\n\n  constructor(\n    public componentsConfigService: LuxComponentsConfigService,\n    public queryService: LuxMediaQueryObserverService\n  ) {}\n\n  ngOnInit() {\n    this.tabChange$\n      .asObservable()\n      .pipe(debounceTime(LuxTabsComponent._DEBOUNCE_TIME))\n      .subscribe((tabChange: MatTabChangeEvent) => {\n        this.luxActiveTab = tabChange.index;\n        this.luxActiveTabChanged.emit(tabChange);\n      });\n\n    this.configSubscription = this.componentsConfigService.config.subscribe(() => {\n      this.labelUppercase = this.componentsConfigService.isLabelUppercaseForSelector('lux-tab');\n    });\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    const activeTabChange = simpleChanges.activeTab;\n    if (activeTabChange) {\n      if (!activeTabChange.currentValue) {\n        this.luxActiveTab = 0;\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.rerenderTabs();\n  }\n\n  ngOnDestroy() {\n    this.configSubscription.unsubscribe();\n  }\n\n  getNotificationIconColorClassForTab(luxTab: LuxTabComponent): string {\n    return luxTab.luxShowNotification === true || luxTab.luxShowNotification === 'true'\n      ? LuxTabsComponent._notificationNewClass\n      : LuxTabsComponent._notificationReadClass;\n  }\n\n  /**\n   * Forciert Angular die Tab-Header neu zu pruefen, in dem\n   * der erste Tab ein Leerzeichen bekommt, welches im naechsten\n   * Pruefzyklus entfernt wird.\n   */\n  rerenderTabs() {\n    if (this.luxTabs.length > 0) {\n      setTimeout(() => {\n        this.luxTabs.first.luxTitle += ' ';\n        setTimeout(() => {\n          this.luxTabs.first.luxTitle = this.luxTabs.first.luxTitle.trim();\n        });\n      });\n    }\n  }\n\n  trackTab(index: number, luxTab: LuxTabComponent) {\n    return index;\n  }\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-detail-wrapper',\n  template: '<ng-container *ngTemplateOutlet=\"luxDetailTemplate; context: luxDetailContext\"></ng-container>'\n})\nexport class LuxDetailWrapperComponent implements OnInit, AfterViewInit {\n  private _luxDetailTemplate: TemplateRef<any>;\n\n  @Output() luxDetailRendered: EventEmitter<void> = new EventEmitter();\n\n  @Input() luxDetailContext;\n\n  @Input() set luxDetailTemplate(ref: TemplateRef<any>) {\n    this._luxDetailTemplate = ref;\n  }\n\n  get luxDetailTemplate(): TemplateRef<any> {\n    return this._luxDetailTemplate;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.luxDetailRendered.emit();\n  }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ContentChild,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewContainerRef\n} from '@angular/core';\nimport { LuxListItemComponent } from '../lux-list/lux-list-subcomponents/lux-list-item.component';\nimport { LuxListComponent } from '../lux-list/lux-list.component';\nimport { LuxTabsComponent } from '../lux-tabs/lux-tabs.component';\nimport { LuxMasterDetailMobileHelperService } from './lux-master-detail-mobile-helper.service';\nimport { LuxDetailViewComponent } from './lux-master-detail-subcomponents/lux-detail-view/lux-detail-view.component';\nimport { LuxMasterFooterComponent } from './lux-master-detail-subcomponents/lux-master-footer/lux-master-footer.component';\nimport { LuxMasterHeaderComponent } from './lux-master-detail-subcomponents/lux-master-header/lux-master-header.component';\nimport { LuxMasterSimpleComponent } from './lux-master-detail-subcomponents/lux-master-simple/lux-master-simple.component';\nimport { BehaviorSubject, ReplaySubject, Subscription } from 'rxjs';\nimport { delay, tap } from 'rxjs/operators';\nimport { LuxDetailWrapperComponent } from './lux-master-detail-subcomponents/lux-detail-view/lux-detail-wrapper.component';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'lux-master-detail',\n  templateUrl: './lux-master-detail.component.html',\n  styleUrls: ['./lux-master-detail.component.scss'],\n  animations: [\n    trigger('masterIsLoadingChanged', [\n      state('true', style({ opacity: 1 })),\n      state('false', style({ opacity: 0 })),\n      transition('1 => 0', animate('0.5s')),\n      transition('0 => 1', animate('1s'))\n    ])\n  ]\n})\nexport class LuxMasterDetailComponent implements OnInit, AfterViewInit, DoCheck, OnDestroy {\n  @Output() luxSelectedDetailChange: EventEmitter<any> = new EventEmitter();\n  @Output() luxScrolled: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild(LuxMasterSimpleComponent, { static: false }) masterSimple;\n  @ContentChild(LuxDetailViewComponent, { static: false }) detailView;\n  @ContentChild(LuxMasterFooterComponent, { static: false, read: ElementRef }) masterFooter: ElementRef;\n\n  @ViewChildren(LuxListComponent, { read: ElementRef }) luxMasterQueryList: QueryList<ElementRef>;\n  @ViewChildren(LuxListItemComponent) luxMasterListItemQueryList: QueryList<LuxListItemComponent>;\n  @ViewChild(LuxMasterHeaderComponent, { read: ElementRef, static: true }) masterHeader: ElementRef;\n  @ViewChild(LuxListItemComponent, { read: ElementRef, static: false }) luxMasterEntryElementRef: ElementRef;\n  @ContentChild(LuxTabsComponent, { static: false }) tabsComponent: LuxTabsComponent;\n  @ViewChild('masterSpinnerCard', { read: ElementRef, static: true }) masterSpinnerCard: ElementRef;\n  @ViewChild('detailContainer', { read: ElementRef, static: false }) detailFrame: ElementRef;\n  @ViewChild('detailEmpty', { read: ElementRef, static: true }) detailEmpty: ElementRef;\n  @ViewChild('detailViewContainerRef', { read: ViewContainerRef, static: true })\n  detailViewContainerRef: ViewContainerRef;\n  @ViewChild('masterContainer', { read: ElementRef, static: true }) masterContainer: ElementRef;\n\n  @HostBinding('class.lux-overflow-y-auto') overflowY: boolean = true;\n\n  private _luxMasterList = new BehaviorSubject<Array<any>>([]);\n  private _luxOpen: boolean = true;\n  private _luxSelectedDetail: any;\n\n  private masterListLength;\n  private maxItemsVisible;\n  private updateDetail$: ReplaySubject<any> = new ReplaySubject(1);\n  private updateDetailSubscription: Subscription;\n\n  detailContext = { $implicit: {} };\n  flexMaster: string;\n  flexDetail: string;\n\n  // Enthält die Position des aktuell selektierten Elements\n  selectedPosition: number;\n\n  // Flag welches bestimmt ob die Empty-Anzeigen der Masterliste anhand der Detail-Ansicht ausgerichtet werden\n  alignEmptyIndicators: boolean = true;\n\n  @Input() luxEmptyIconMaster: string = 'fas fa-info-circle';\n  @Input() luxEmptyLabelMaster: string = 'Keine Einträge vorhanden';\n  @Input() luxEmptyIconDetail: string = 'fas fa-info-circle';\n  @Input() luxEmptyLabelDetail: string = 'Kein Element ausgewählt';\n  @Input() luxEmptyIconMasterSize = '5x';\n  @Input() luxEmptyIconDetailSize = '5x';\n  @Input() luxMasterSpinnerDelay: number = 1000;\n  @Input() luxTagIdMaster: string;\n  @Input() luxTagIdDetail: string;\n  @Input() luxTitleLineBreak: boolean = false;\n  @Input() luxMasterIsLoading: boolean = false;\n  @Input() luxCompareWith = (o1, o2) => o1 === o2;\n\n  get luxOpen(): boolean {\n    return this._luxOpen;\n  }\n\n  @Input() set luxOpen(open: boolean) {\n    if (open) {\n      this.mobileHelperService.openMaster();\n    } else {\n      this.mobileHelperService.closeMaster();\n    }\n  }\n\n  /* Selected Detail Get/Set */\n  get luxSelectedDetail() {\n    return this._luxSelectedDetail;\n  }\n\n  @Input()\n  set luxSelectedDetail(value) {\n    this.updateDetail$.next(value);\n  }\n\n  /* Master List Get/Set */\n  get luxMasterList() {\n    return this._luxMasterList.getValue();\n  }\n\n  @Input()\n  set luxMasterList(value: any[]) {\n    if (this.masterListLength && value && this.masterListLength < value.length) {\n      this.announcePossibleInfiniteScrolling();\n    }\n    this._luxMasterList.next(value);\n    this.masterListLength = value ? value.length : 0;\n  }\n\n  constructor(\n    public mobileHelperService: LuxMasterDetailMobileHelperService,\n    private cdr: ChangeDetectorRef,\n    private cfr: ComponentFactoryResolver,\n    private liveAnnouncer: LiveAnnouncer\n  ) {\n    this.mobileHelperService.register();\n  }\n\n  ngOnInit() {\n    this.handleMasterListUpdate();\n    this.handleViewCollapse();\n    this.mobileHelperService.openMaster();\n  }\n\n  ngAfterViewInit() {\n    this.handleDetailUpdate();\n    this.handleMasterQueryList();\n  }\n\n  ngOnDestroy() {\n    this.mobileHelperService.unregister();\n    this.updateDetailSubscription.unsubscribe();\n  }\n\n  ngDoCheck() {\n    // Wurde ein Element in die Masterliste gepusht oder entfernt?\n    if (this.luxMasterList && this.luxMasterList.length !== this.masterListLength) {\n      if (this.luxMasterList.length > this.masterListLength) {\n        this.announcePossibleInfiniteScrolling();\n      }\n\n      // Wenn ja, das selektierte Detail neurendern\n      this.masterListLength = this.luxMasterList.length;\n      this.luxSelectedDetail = this.luxMasterList[this.selectedPosition];\n\n      this.announcePossibleInfiniteScrolling();\n    }\n\n    // Ausrichtung der Empty-Indikatoren der Masterliste prüfen\n    if (!this.mobileHelperService.isMobile() && (!this.luxMasterList || this.luxMasterList.length === 0)) {\n      this.checkEmptyIndicatorAlignment();\n    }\n  }\n\n  /**\n   * Wenn in der LuxList ein neuer Selected-Wert gepusht wird, diesen abfangen und\n   * ein neues Detail auswählen.\n   * @param $event\n   */\n  onSelectedChange($event: number) {\n    if ($event > -1) {\n      this.selectedPosition = $event;\n\n      this.updateDetail$.next(this.luxMasterList[$event]);\n\n      if (this.mobileHelperService.isMobile()) {\n        this.mobileHelperService.closeMaster();\n      }\n    }\n  }\n\n  /**\n   * Bestimmt ob die Masterliste auf- oder eingeklappt ist.\n   * @param open\n   */\n  toggleList(open: boolean) {\n    if (open) {\n      this.mobileHelperService.openMaster();\n    } else {\n      this.mobileHelperService.closeMaster();\n    }\n\n    if (this.tabsComponent) {\n      this.tabsComponent.rerenderTabs();\n    }\n  }\n\n  /**\n   * Prueft ob die Detailansicht gerade fuer den User sichtbar ist.\n   * @returns boolean\n   */\n  isDetailInvisible(): boolean {\n    return this.mobileHelperService.isMobile() && this.luxOpen;\n  }\n\n  onInfiniteScrollingLoad($event) {\n    this.luxScrolled.emit($event);\n  }\n\n  onSwipeLeft() {\n    if (this.mobileHelperService.isMobile()) {\n      this.mobileHelperService.closeMaster();\n    }\n  }\n\n  onSwipeRight() {\n    if (this.mobileHelperService.isMobile()) {\n      this.mobileHelperService.openMaster();\n    }\n  }\n\n  /**\n   * Kapselung von der übergebenen luxCompareWith-Funktion.\n   * Fängt undefinierte Objekte ab und returned stattdessen false.\n   * @param o1\n   * @param o2\n   */\n  compareObjects(o1, o2) {\n    if (!o1 || !o2) {\n      return false;\n    }\n    return this.luxCompareWith(o1, o2);\n  }\n\n  /**\n   * Steuert das Breitenverhaeltnis von Master und Detail je nachdem\n   * ob der Master auf- oder eingeklappt ist und ob eine Mobilansicht aktiv ist.\n   */\n  private updateOpen() {\n    if (this.luxOpen) {\n      if (this.mobileHelperService.isMobile()) {\n        this.flexMaster = '100';\n        this.flexDetail = '0';\n      } else {\n        this.flexMaster = '30';\n        this.flexDetail = '70';\n      }\n    } else {\n      if (this.mobileHelperService.isMobile()) {\n        this.flexMaster = '0';\n        this.flexDetail = '100';\n      } else {\n        this.flexMaster = '5';\n        this.flexDetail = '95';\n      }\n    }\n  }\n\n  /**\n   * Kümmert sich um Änderungen an der HTML-Node der Master-Liste.\n   * Rückt dabei das selektierte Element in den Fokus und berechnet wie viele Elemente\n   * gerade in der Liste sichtbar sein können (für das Durchschalten mit Pfeiltasten benötigt).\n   */\n  private handleMasterQueryList() {\n    this.luxMasterQueryList.changes.subscribe((masterListElements: QueryList<ElementRef>) => {\n      if (masterListElements.first) {\n        const { nativeElement } = masterListElements.first;\n        this.maxItemsVisible = Math.floor(nativeElement.offsetHeight / nativeElement.offsetHeight);\n      }\n      // Der Abschnitt hier fängt den Fall ab, dass z.B. das LuxMasterList-Array selbst angepasst wird (z.B. durch Array.reverse)\n      // Das sorgt dafür, dass das visuell selektierte Element auch das passende zur Detail-View ist.\n      const newSelectedPosition: number = this.luxMasterList.indexOf(this.luxSelectedDetail);\n      if (newSelectedPosition !== this.selectedPosition) {\n        setTimeout(() => {\n          this.selectedPosition = newSelectedPosition;\n        });\n      }\n    });\n  }\n\n  /**\n   * Kümmert sich um die Kollabierung der Master-Liste, wenn zwischen Mobil- und Desktopansicht gewechselt wird.\n   */\n  private handleViewCollapse() {\n    this.mobileHelperService.masterCollapsedObservable.subscribe((open: boolean) => {\n      // Falls nichts selektiert ist, sollte die Darstellung beim Wechsel in kleine Media Queries die Masterliste zeigen\n      if (this.mobileHelperService.isMobile() && !this.luxSelectedDetail && !open) {\n        open = true;\n      }\n      this._luxOpen = open;\n      this.updateOpen();\n    });\n  }\n\n  /**\n   * Kümmert sich um Änderungen an dem selektierten Detail.\n   * Dabei werden mehrere Zuweisungen an das Detail über throttleTime gebündelt und nur das Aktuellste genommen.\n   * Anschließend wird die Komponente angewiesen das neue Detail-Objekt zu rendern.\n   */\n  private handleDetailUpdate() {\n    this.updateDetailSubscription = this.updateDetail$.asObservable().subscribe((detail: any) => {\n      if (!detail) {\n        this.detailViewContainerRef.clear();\n        this.setNewDetail(detail);\n      } else {\n        if (!this.compareObjects(this.luxSelectedDetail, detail)) {\n          this.detailViewContainerRef.clear();\n\n          if (detail) {\n            this.detailContext = { $implicit: detail };\n\n            // Den Detail-Wrapper erzeugen und abfangen, wann die Nodes geladen worden sind\n            const child = this.cfr.resolveComponentFactory(LuxDetailWrapperComponent);\n            const childRef = this.detailViewContainerRef.createComponent(child);\n            const instance = childRef.instance;\n            instance.luxDetailContext = this.detailContext;\n            instance.luxDetailTemplate = this.detailView.tempRef;\n            instance.luxDetailRendered.subscribe(() => {\n              this.setNewDetail(detail);\n            });\n            // Die Detailansicht nach dem Wechsel wieder nach oben scrollen lassen\n            this.detailViewContainerRef.element.nativeElement.parentNode.scrollTop = 0;\n\n            this.cdr.detectChanges();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Wird aufgerufen nachdem ein neues Detail-Template gerendert wurde und aktualisiert\n   * luxSelectedDetail dementsprechend.\n   */\n  private setNewDetail(detail: any) {\n    if (!this.compareObjects(this.luxSelectedDetail, detail)) {\n      this._luxSelectedDetail = detail;\n      this.selectedPosition = this.luxMasterList.indexOf(detail);\n      this.luxSelectedDetailChange.emit(this.luxSelectedDetail);\n      // Die Master-Liste fokussieren (die Liste gibt es nur einmal, weil wir auf Changes hören, ist sie aber in einer QueryList)\n      this.luxMasterQueryList.first.nativeElement.focus();\n\n      if (this.mobileHelperService.isMobile()) {\n        this.luxOpen = false;\n      }\n      this.mobileHelperService.hasValue = !!this._luxSelectedDetail;\n      this.cdr.detectChanges();\n    }\n  }\n\n  /**\n   * Kümmert sich um den Fall, dass die Master-Liste selbst sich ändert.\n   */\n  private handleMasterListUpdate() {\n    this._luxMasterList\n      .asObservable()\n      .pipe(\n        // Workaround um ExpressionChanged-Fehler zu vermeiden\n        delay(0),\n        tap(() => {\n          if (!this.luxMasterList || this.luxMasterList.length === 0) {\n            this.luxSelectedDetail = undefined;\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * Prüft ob das Header- oder -Footer-Element der Masterliste ca. 50% der Master-Höhe einnehmen.\n   *\n   * Wenn ja, wird die Ausrichtung des Master-Empty-Labels und Master-Empty-Icons nicht mehr anhand des Detail bestimmt.\n   */\n  private checkEmptyIndicatorAlignment() {\n    const headerHeight = this.masterHeader ? this.masterHeader.nativeElement.offsetHeight : 0;\n    const footerHeight = this.masterFooter ? this.masterFooter.nativeElement.offsetHeight : 0;\n\n    if (this.masterContainer) {\n      // Max-Height ist die Hälfte der Master-Container Höhe minus eine kleine Pauschale von 100px damit\n      // die Ansicht nicht zu knapp ist\n      const maxHeight = this.masterContainer.nativeElement.offsetHeight / 2 - 100;\n      this.alignEmptyIndicators = !(headerHeight > maxHeight || footerHeight > maxHeight);\n    }\n  }\n\n  /**\n   * Meldet über den LiveAnnouncer, dass evtl. weitere Daten via InfiniteScrolling nachgeladen werden könnten.\n   *\n   * \"assertive\", damit die Meldung auf jeden Fall vom ScreenReader vorgelesen wird und nicht von etwaigen anderen\n   * Aussagen verdeckt wird.\n   */\n  private announcePossibleInfiniteScrolling() {\n    this.liveAnnouncer.announce(\n      'Die Masterliste hat weitere Einträge erhalten. ' +\n        'Aufgrund des Infinite-Scrollings könnten vielleicht noch mehr Einträge nachgeladen werden.',\n      'assertive'\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-panel-action',\n  template: '<mat-action-row><ng-content></ng-content></mat-action-row>'\n})\nexport class LuxPanelActionComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-panel-content',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxPanelContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-panel-header-description',\n  template: '<mat-panel-description><ng-content></ng-content></mat-panel-description>'\n})\nexport class LuxPanelHeaderDescriptionComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-panel-header-title',\n  template: '<mat-panel-title><ng-content></ng-content></mat-panel-title>'\n})\nexport class LuxPanelHeaderTitleComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { MatExpansionPanel } from '@angular/material';\nimport { LuxAccordionComponent } from '../lux-accordion/lux-accordion.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'lux-panel',\n  templateUrl: './lux-panel.component.html',\n  styleUrls: ['./lux-panel.component.scss']\n})\nexport class LuxPanelComponent implements OnInit, OnDestroy {\n  @Input() luxDisabled: boolean;\n  @Input() luxExpanded: boolean = false;\n  @Input() luxHideToggle: boolean;\n\n  @Input() luxCollapsedHeaderHeight: string;\n  @Input() luxExpandedHeaderHeight: string;\n\n  @Output() luxOpened = new EventEmitter<any>();\n  @Output() luxClosed = new EventEmitter<any>();\n  @Output() luxExpandedChange: EventEmitter<boolean> = new EventEmitter();\n\n  @ViewChild(MatExpansionPanel, { static: true }) matExpansionPanel: MatExpansionPanel;\n\n  @HostBinding('class.lux-pr-1') pr1: boolean = true;\n  @HostBinding('class.lux-pl-1') pl1: boolean = true;\n\n  subscription: Subscription;\n\n  constructor(@Optional() @Inject(forwardRef(() => LuxAccordionComponent)) private parent: LuxAccordionComponent) {}\n\n  ngOnInit() {\n    if (this.parent) {\n      if (this.luxHideToggle === undefined) {\n        this.luxHideToggle = this.parent.luxHideToggle;\n      }\n      if (this.luxDisabled === undefined) {\n        this.luxDisabled = this.parent.luxDisabled;\n      }\n      if (this.luxExpandedHeaderHeight === undefined) {\n        this.luxExpandedHeaderHeight = this.parent.luxExpandedHeaderHeight;\n      }\n      if (this.luxCollapsedHeaderHeight === undefined) {\n        this.luxCollapsedHeaderHeight = this.parent.luxCollapsedHeaderHeight;\n      }\n\n      // Diese Zeile wird benötigt, damit der Multi-Mode\n      // (nur ein Abschnitt darf geöffnet sein) des Accordions funktioniert.\n      this.matExpansionPanel.accordion = this.parent.matAccordion;\n\n      // Um eine zyklische Abhängigkeit mit dem lux-accordion zu vermeiden,\n      // wurde hier ein Event verwendet.\n      this.subscription = this.parent.changed$.subscribe(propertyName => {\n        if (propertyName === 'luxHideToggle') {\n          this.luxHideToggle = this.parent.luxHideToggle;\n        } else if (propertyName === 'luxDisabled') {\n          this.luxDisabled = this.parent.luxDisabled;\n        } else if (propertyName === 'luxExpandedHeaderHeight') {\n          this.luxExpandedHeaderHeight = this.parent.luxExpandedHeaderHeight;\n        } else if (propertyName === 'luxCollapsedHeaderHeight') {\n          this.luxCollapsedHeaderHeight = this.parent.luxCollapsedHeaderHeight;\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.parent) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  onOpened(eventValue) {\n    this.luxOpened.emit(eventValue);\n    this.luxExpanded = true;\n    this.luxExpandedChange.emit(this.luxExpanded);\n  }\n\n  onClosed(eventValue) {\n    this.luxClosed.emit(eventValue);\n    this.luxExpanded = false;\n    this.luxExpandedChange.emit(this.luxExpanded);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-step-content',\n  template: '<ng-content></ng-content>',\n  styles: ['']\n})\nexport class LuxStepContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { LuxComponentsConfigService } from '../../../lux-components-config/lux-components-config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'lux-step-header',\n  template: `\n    <div [ngClass]=\"{ 'lux-uppercase': labelUppercase }\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styles: ['']\n})\nexport class LuxStepHeaderComponent implements OnInit, OnDestroy {\n  private configSubscription: Subscription;\n\n  labelUppercase: boolean;\n\n  constructor(public componentsConfigService: LuxComponentsConfigService) {}\n\n  ngOnInit() {\n    this.configSubscription = this.componentsConfigService.config.subscribe(() => {\n      this.labelUppercase = this.componentsConfigService.isLabelUppercaseForSelector('lux-step');\n    });\n  }\n\n  ngOnDestroy() {\n    this.configSubscription.unsubscribe();\n  }\n}\n","import { Component, Input, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'lux-step',\n  template: `\n    <ng-template #header>\n      <ng-content select=\"lux-step-header\"></ng-content>\n    </ng-template>\n    <ng-template #content>\n      <ng-content select=\"lux-step-content\"></ng-content>\n    </ng-template>\n  `\n})\nexport class LuxStepComponent {\n  private _iconChange: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private _luxIconName: string = undefined;\n\n  @ViewChild('header', { static: true }) headerTemplate: TemplateRef<any>;\n  @ViewChild('content', { static: true }) contentTemplate: TemplateRef<any>;\n\n  @Input() luxIconSize: string = '1x';\n  @Input() luxOptional: boolean = false;\n  @Input() luxEditable: boolean = true;\n  @Input() luxCompleted: boolean = true;\n  @Input() luxStepControl: FormGroup;\n\n  get luxIconName(): string {\n    return this._luxIconName;\n  }\n\n  @Input()\n  set luxIconName(iconName: string) {\n    this._luxIconName = iconName;\n    this._iconChange.next(true);\n  }\n\n  getIconChangeObsv(): Observable<boolean> {\n    return this._iconChange.asObservable();\n  }\n\n  constructor() {}\n\n  /**\n   * Gibt an, ob der Step als abgeschlossen gilt.\n   *\n   * Möglichkeiten:\n   *  1. Hat ein luxStepControl, welches valid ist\n   *  2. Der Wert luxCompleted ist true\n   *  3. Der Wert luxOptional ist true\n   */\n  isCompleted() {\n    if (this.luxStepControl) {\n      return this.luxStepControl.valid;\n    }\n    return this.luxCompleted || this.luxOptional;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { LuxStepperComponent } from './lux-stepper.component';\n\n@Injectable()\nexport class LuxStepperHelperService {\n  private switchStep: Map<LuxStepperComponent, BehaviorSubject<boolean>> = new Map();\n\n  constructor() {}\n\n  /**\n   * Springt im Stepper zum naechsten Step.\n   * Alternativ (ohne Stepper als Parameter) laesst die Funktion alle\n   * bekannten Stepper einen Schritt nach vorne springen.\n   *\n   * Voraussetzung: luxLinear = false oder aktuell Form ist valide.\n   */\n  public nextStep(stepper?: LuxStepperComponent) {\n    if (stepper) {\n      const subject = this.switchStep.get(stepper);\n      if (subject) {\n        subject.next(true);\n      }\n    } else {\n      this.switchStep.forEach((switchStep: BehaviorSubject<boolean>) => switchStep.next(true));\n    }\n  }\n\n  /**\n   * Springt im Stepper zum vorherigen Step.\n   * Alternativ (ohne Stepper als Parameter) laesst die Funktion alle\n   * Bekannten Stepper einen Schritt zurueckspringen.\n   */\n  public previousStep(stepper?: LuxStepperComponent) {\n    if (stepper) {\n      const subject = this.switchStep.get(stepper);\n      if (subject) {\n        subject.next(false);\n      }\n    } else {\n      this.switchStep.forEach((switchStep: BehaviorSubject<boolean>) => switchStep.next(false));\n    }\n  }\n\n  /**\n   * Gibt das Observable der internen Map fuer den Stepper zurueck.\n   * @param stepper\n   * @returns Observable<boolean> | Observable<any>\n   */\n  public getObservable(stepper: LuxStepperComponent) {\n    const subject = this.switchStep.get(stepper);\n    return subject ? subject.asObservable() : of(null);\n  }\n\n  /**\n   * Traegt den Stepper in die Map der dem Service bekannten Stepper ein.\n   * @param stepper\n   */\n  public registerStepper(stepper: LuxStepperComponent) {\n    if (!this.switchStep.get(stepper)) {\n      this.switchStep.set(stepper, new BehaviorSubject(false));\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  ViewContainerRef\n} from '@angular/core';\nimport { ILuxStepperButtonConfig } from './lux-stepper-model/lux-stepper-button-config.interface';\nimport { LuxStepperHelperService } from './lux-stepper-helper.service';\nimport { LuxStepComponent } from './lux-stepper-subcomponents/lux-step.component';\nimport { ILuxStepperConfiguration } from './lux-stepper-model/lux-stepper-configuration.interface';\nimport { MatHorizontalStepper, MatVerticalStepper } from '@angular/material';\nimport { LuxIconComponent } from '../../lux-icon/lux-icon/lux-icon.component';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\n\n@Component({\n  selector: 'lux-stepper',\n  templateUrl: './lux-stepper.component.html',\n  styleUrls: ['./lux-stepper.component.scss']\n})\nexport class LuxStepperComponent implements AfterViewInit {\n  private readonly _DEFAULT_PREV_BTN_CONF: ILuxStepperButtonConfig = {\n    label: 'Zurück'\n  };\n  private readonly _DEFAULT_NEXT_BTN_CONF: ILuxStepperButtonConfig = {\n    label: 'Weiter'\n  };\n  private readonly _DEFAULT_FIN_BTN_CONF: ILuxStepperButtonConfig = {\n    label: 'Abschließen',\n    color: 'primary'\n  };\n\n  @ContentChildren(LuxStepComponent) luxSteps: QueryList<LuxStepComponent>;\n\n  @Output() luxFinishButtonClicked: EventEmitter<any> = new EventEmitter();\n  @Output() luxStepChanged: EventEmitter<StepperSelectionEvent> = new EventEmitter<StepperSelectionEvent>();\n  @Output() luxCurrentStepNumberChange: EventEmitter<number> = new EventEmitter<number>();\n\n  matStepper: MatHorizontalStepper | MatVerticalStepper;\n  matStepLabels: ViewContainerRef[];\n\n  stepperConfiguration: ILuxStepperConfiguration = {\n    luxCurrentStepNumber: 0,\n    luxShowNavigationButtons: true,\n    luxHorizontalStepAnimationActive: true,\n    luxEditedIconName: 'fa-pencil'\n  };\n\n  constructor(\n    public stepperService: LuxStepperHelperService,\n    private cdr: ChangeDetectorRef,\n    private cfr: ComponentFactoryResolver,\n    private elementRef: ElementRef\n  ) {\n    // Die Default-Konfiguration präventiv als Startwert setzen\n    this.luxPreviousButtonConfig = this._DEFAULT_PREV_BTN_CONF;\n    this.luxNextButtonConfig = this._DEFAULT_NEXT_BTN_CONF;\n    this.luxFinishButtonConfig = this._DEFAULT_FIN_BTN_CONF;\n    // Den Stepper im Helper-Service bekannt machen\n    this.stepperService.registerStepper(this);\n  }\n\n  ngAfterViewInit() {\n    // Änderungen an den luxSteps sollten auch dem Konfigurationsobjekt bekannt gemacht werden\n    this.luxSteps.changes.subscribe(() => {\n      this.stepperConfiguration.luxSteps = this.luxSteps.toArray();\n      this.cdr.detectChanges();\n    });\n    // Initial die aktuellen luxSteps in die Konfiguration schreiben\n    this.stepperConfiguration.luxSteps = this.luxSteps.toArray();\n    this.cdr.detectChanges();\n\n    // Falls initial bereits bestimmt wurde, dass individuelle Icons genutzt werden, diese generieren\n    if (this.stepperConfiguration.luxUseCustomIcons) {\n      this.generateCustomIcons();\n    }\n\n    // Auf next/previous Aufrufe aus dem Service horchen und entsprechend reagieren\n    this.stepperService.getObservable(this).subscribe((next: boolean) => {\n      // Voraussetzung: Stepper nicht deaktiviert\n      if (!this.stepperConfiguration.luxDisabled) {\n        if (next === true) {\n          this.checkValidation();\n          this.matStepper.next();\n          this.matStepper._stepHeader.toArray()[this.matStepper.selectedIndex].focus();\n        } else if (next === false) {\n          this.matStepper.previous();\n          this.matStepper._stepHeader.toArray()[this.matStepper.selectedIndex].focus();\n        }\n      }\n    });\n\n    // Änderungen an den Icons jedes einzelnen Steps führt zu Neugenerierung aller individuellen Icons\n    // ==> Material erlaubt leider nur alle Icons identisch zu ändern, nicht für jeden Step einzeln, deshalb\n    // generieren wir selbst die Icons.\n    this.luxSteps.toArray().forEach((luxStep: LuxStepComponent) => {\n      luxStep.getIconChangeObsv().subscribe((iconChange: boolean) => {\n        if (this.stepperConfiguration.luxUseCustomIcons && iconChange) {\n          this.clearCustomIcons();\n          this.generateCustomIcons();\n        }\n      });\n    });\n\n    this.setFocusedCSS(this.luxCurrentStepNumber);\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Wird beim Wechsel des aktuellen Steps (Klick auf Tab oder .next()/.previous() Aufruf) aufgerufen.\n   * @param $event\n   */\n  onStepChanged($event: StepperSelectionEvent) {\n    this.luxCurrentStepNumber = $event.selectedIndex;\n    this.luxStepChanged.emit($event);\n\n    const matStepHeaders: NodeListOf<any> = this.elementRef.nativeElement.querySelectorAll('mat-step-header');\n    if (matStepHeaders.item($event.selectedIndex).className.indexOf('lux-step-header-touched') === -1) {\n      matStepHeaders.item($event.selectedIndex).className += ' lux-step-header-touched';\n    }\n\n    this.setFocusedCSS($event.selectedIndex);\n  }\n\n  /**\n   * Generiert die individuellen Icons fuer die Steps.\n   */\n  generateCustomIcons() {\n    const factory = this.cfr.resolveComponentFactory(LuxIconComponent);\n    let index = 0;\n    this.matStepLabels.forEach((stepLabel: ViewContainerRef) => {\n      this.generateCustomIconForStep(stepLabel, this.luxSteps.toArray()[index], factory);\n      index++;\n    });\n  }\n\n  /**\n   * Entfernt die eigenen Icons fuer die Steps.\n   */\n  clearCustomIcons() {\n    this.matStepLabels.forEach((stepLabel: ViewContainerRef) => {\n      stepLabel.clear();\n    });\n  }\n\n  /**\n   * Stößt die Validierungsprüfung für den aktuell sichtbaren Step und dessen StepControl (wenn vorhanden) an.\n   */\n  checkValidation() {\n    const stepControl = this.luxSteps.toArray()[this.stepperConfiguration.luxCurrentStepNumber].luxStepControl;\n    if (stepControl) {\n      LuxUtil.showValidationErrors(stepControl);\n    }\n  }\n\n  /**\n   * Generiert die Icons fuer einen einzelnen Step\n   * @param stepLabel\n   * @param luxStep\n   * @param factory\n   */\n  private generateCustomIconForStep(\n    stepLabel: ViewContainerRef,\n    luxStep: LuxStepComponent,\n    factory: ComponentFactory<LuxIconComponent>\n  ) {\n    if (luxStep && luxStep.luxIconName) {\n      // Das edited und normal Icon generieren\n      const componentIconEdited: ComponentRef<LuxIconComponent> = stepLabel.createComponent(factory);\n      const instanceIconEdited: LuxIconComponent = componentIconEdited.instance;\n\n      instanceIconEdited.luxIconName = this.luxEditedIconName;\n      instanceIconEdited.luxIconSize = '2x';\n      instanceIconEdited.luxRounded = true;\n      instanceIconEdited.luxMargin = '0 8px 0 0';\n      componentIconEdited.location.nativeElement.className += ' lux-stepper-edited-icon';\n\n      const componentIconNormal: ComponentRef<LuxIconComponent> = stepLabel.createComponent(factory);\n      const instanceIconNormal: LuxIconComponent = componentIconNormal.instance;\n      instanceIconNormal.luxIconName = luxStep.luxIconName;\n      instanceIconNormal.luxIconSize = '2x';\n      instanceIconNormal.luxRounded = true;\n      instanceIconNormal.luxMargin = '0 8px 0 0';\n      componentIconNormal.location.nativeElement.className += ' lux-stepper-normal-icon';\n    }\n  }\n\n  /**\n   * Aktualisiert die aktuellen Icons, entfernt zunächst die individuellen Icons und\n   * versucht anschließend diese neu zu generieren (nötig bei Änderungen).\n   */\n  private updateIcons() {\n    if (this.matStepLabels) {\n      this.clearCustomIcons();\n      if (this.stepperConfiguration.luxUseCustomIcons) {\n        this.generateCustomIcons();\n      }\n    }\n  }\n\n  private setFocusedCSS(index: number) {\n    const matStepHeaders: NodeListOf<any> = this.elementRef.nativeElement.querySelectorAll('mat-step-header');\n    if (matStepHeaders.item(index).className.indexOf('lux-step-header-touched') === -1) {\n      matStepHeaders.item(index).className += ' lux-step-header-touched';\n    }\n  }\n\n  // region ###### Accessoren, die auf die stepperConfiguration verweisen ######\n\n  /**** Getter/Setter luxCurrentStepNumber ****/\n  get luxCurrentStepNumber() {\n    return this.stepperConfiguration.luxCurrentStepNumber;\n  }\n\n  @Input() set luxCurrentStepNumber(step: number) {\n    if (step !== this.luxCurrentStepNumber) {\n      setTimeout(() => {\n        // OutOfBound-Steps abfangen\n        step = step < 0 ? 0 : step;\n        step = step >= this.luxSteps.length ? this.luxSteps.length - 1 : step;\n\n        this.stepperConfiguration.luxCurrentStepNumber = step;\n        this.luxCurrentStepNumberChange.emit(this.stepperConfiguration.luxCurrentStepNumber);\n      });\n    }\n  }\n\n  /**** Getter/Setter luxUseCustomIcons ****/\n  get luxUseCustomIcons() {\n    return this.stepperConfiguration.luxUseCustomIcons;\n  }\n\n  @Input() set luxUseCustomIcons(use: boolean) {\n    this.stepperConfiguration.luxUseCustomIcons = use;\n    setTimeout(() => {\n      this.updateIcons();\n    });\n  }\n\n  /**** Getter/Setter luxEditedIconName ****/\n  get luxEditedIconName() {\n    return this.stepperConfiguration.luxEditedIconName;\n  }\n\n  @Input() set luxEditedIconName(iconName: string) {\n    this.stepperConfiguration.luxEditedIconName = iconName;\n    this.updateIcons();\n  }\n\n  /**** Getter/Setter luxVerticalStepper ****/\n  get luxVerticalStepper() {\n    return this.stepperConfiguration.luxVerticalStepper;\n  }\n\n  @Input() set luxVerticalStepper(vertical: boolean) {\n    this.stepperConfiguration.luxVerticalStepper = vertical;\n  }\n\n  /**** Getter/Setter luxLinear ****/\n  get luxLinear() {\n    return this.stepperConfiguration.luxLinear;\n  }\n\n  @Input() set luxLinear(linear: boolean) {\n    this.stepperConfiguration.luxLinear = linear;\n  }\n\n  /**** Getter/Setter luxDisabled ****/\n  get luxDisabled() {\n    return this.stepperConfiguration.luxDisabled;\n  }\n\n  @Input() set luxDisabled(disabled: boolean) {\n    this.stepperConfiguration.luxDisabled = disabled;\n  }\n\n  /**** Getter/Setter luxShowNavigationButtons ****/\n  get luxShowNavigationButtons() {\n    return this.stepperConfiguration.luxShowNavigationButtons;\n  }\n\n  @Input() set luxShowNavigationButtons(showNavButtons: boolean) {\n    this.stepperConfiguration.luxShowNavigationButtons = showNavButtons;\n  }\n\n  /**** Getter/Setter luxHorizontalStepAnimationActive ****/\n  get luxHorizontalStepAnimationActive() {\n    return this.stepperConfiguration.luxHorizontalStepAnimationActive;\n  }\n\n  @Input() set luxHorizontalStepAnimationActive(animationActive: boolean) {\n    this.stepperConfiguration.luxHorizontalStepAnimationActive = animationActive;\n  }\n\n  /**** Getter/Setter luxPreviousButtonConfig ****/\n  get luxPreviousButtonConfig() {\n    return this.stepperConfiguration.luxPreviousButtonConfig;\n  }\n\n  @Input() set luxPreviousButtonConfig(config: ILuxStepperButtonConfig) {\n    this.stepperConfiguration.luxPreviousButtonConfig = config ? config : this._DEFAULT_PREV_BTN_CONF;\n  }\n\n  /**** Getter/Setter luxNextButtonConfig ****/\n  get luxNextButtonConfig() {\n    return this.stepperConfiguration.luxNextButtonConfig;\n  }\n\n  @Input() set luxNextButtonConfig(config: ILuxStepperButtonConfig) {\n    this.stepperConfiguration.luxNextButtonConfig = config ? config : this._DEFAULT_NEXT_BTN_CONF;\n  }\n\n  /**** Getter/Setter luxFinishButtonConfig ****/\n  get luxFinishButtonConfig() {\n    return this.stepperConfiguration.luxFinishButtonConfig;\n  }\n\n  @Input() set luxFinishButtonConfig(config: ILuxStepperButtonConfig) {\n    this.stepperConfiguration.luxFinishButtonConfig = config ? config : this._DEFAULT_FIN_BTN_CONF;\n  }\n\n  // endregion\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\n\n@Component({\n  selector: 'lux-tile',\n  templateUrl: './lux-tile.component.html',\n  styleUrls: ['./lux-tile.component.scss']\n})\nexport class LuxTileComponent {\n  private static _notificationNewClass = 'lux-notification-new';\n  private static _notificationReadClass = 'lux-notification-read';\n\n  @Input() luxLabel: string = undefined;\n  @Input() luxTagId: string = undefined;\n  @Input() luxShowNotification;\n  @Input() luxCounter: number;\n  @Input() luxCounterCap: number = 10;\n\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(public queryService: LuxMediaQueryObserverService) {}\n\n  clicked() {\n    this.luxClicked.emit();\n  }\n\n  getNotificationIconColorClass(): string {\n    return this.luxShowNotification === true || this.luxShowNotification === 'true'\n      ? LuxTileComponent._notificationNewClass\n      : LuxTileComponent._notificationReadClass;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-side-nav-footer',\n  template: '<lux-divider></lux-divider><div class=\"lux-side-nav-footer-content\"><ng-content></ng-content></div>'\n})\nexport class LuxSideNavFooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-side-nav-header',\n  template: '<div class=\"lux-side-nav-header-content\"><ng-content></ng-content></div>'\n})\nexport class LuxSideNavHeaderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-app-content',\n  templateUrl: './lux-app-content.component.html',\n  styleUrls: ['./lux-app-content.component.scss']\n})\nexport class LuxAppContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import {\n  AfterViewInit,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewContainerRef\n} from '@angular/core';\nimport { MatHorizontalStepper, MatVerticalStepper } from '@angular/material';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\nimport { ILuxStepperConfiguration } from './lux-stepper-configuration.interface';\n\n/**\n * Parent-Klasse für den LuxStepperVertical und LuxStepperHorizontal, beide Komponenten werden ausschließlich von\n * dem LuxStepper zur Darstellung genutzt.\n */\nexport class LuxStepperParent implements AfterViewInit {\n  // Diese Outputs werden bei den Klicks auf die Stepper-eigenen Navigations-Buttons augelöst und informieren die\n  // LuxStepperComponent\n  @Output() luxFinButtonClicked: EventEmitter<any> = new EventEmitter();\n  @Output() luxNextButtonClicked: EventEmitter<any> = new EventEmitter();\n  @Output() luxPrevButtonClicked: EventEmitter<any> = new EventEmitter();\n  // Wird beim Wechsel des Steps (über Header oder Button) aufgerufen\n  @Output() luxStepChanged: EventEmitter<StepperSelectionEvent> = new EventEmitter<StepperSelectionEvent>();\n  @Output() luxCheckValidation: EventEmitter<void> = new EventEmitter<void>();\n  // Wird beim AfterViewInit und bei jeder Aktualisierung der MatStepLabels aufgerufen um die LuxStepperComponent\n  // über die aktuellen Elemente informiert zu halten\n  @Output() luxMatStepperLoaded: EventEmitter<MatHorizontalStepper | MatVerticalStepper> = new EventEmitter();\n  @Output() luxMatStepLabelsLoaded: EventEmitter<ViewContainerRef[]> = new EventEmitter();\n\n  @ViewChild('stepper', { static: true }) matStepper: MatHorizontalStepper | MatVerticalStepper;\n  @ViewChildren('matStepLabel', { read: ViewContainerRef }) matStepLabels: QueryList<ViewContainerRef>;\n\n  @Input() luxStepperConfig: ILuxStepperConfiguration;\n\n  constructor() {}\n\n  ngAfterViewInit() {\n    // Sobald die Component initialisiert ist, dem Parent (luxStepper) den\n    // MatStepper und die MatStepLabels mitteilen\n    this.luxMatStepperLoaded.emit(this.matStepper);\n    this.luxMatStepLabelsLoaded.emit(this.matStepLabels.toArray());\n    this.matStepLabels.changes.subscribe(() => {\n      this.luxMatStepLabelsLoaded.emit(this.matStepLabels.toArray());\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { LuxStepperParent } from '../../lux-stepper-model/lux-stepper-parent.class';\n\n@Component({\n  selector: 'lux-stepper-horizontal',\n  templateUrl: './lux-stepper-horizontal.component.html',\n  styleUrls: ['./lux-stepper-horizontal.component.scss']\n})\nexport class LuxStepperHorizontalComponent extends LuxStepperParent {\n  constructor() {\n    super();\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { LuxStepComponent } from '../lux-step.component';\nimport { ILuxStepperConfiguration } from '../../lux-stepper-model/lux-stepper-configuration.interface';\n\n@Component({\n  selector: 'lux-stepper-nav-buttons',\n  templateUrl: './lux-stepper-nav-buttons.component.html',\n  styleUrls: ['./lux-stepper-nav-buttons.component.scss']\n})\nexport class LuxStepperNavButtonsComponent implements OnInit {\n  @Output() luxPrevClick: EventEmitter<void> = new EventEmitter();\n  @Output() luxNextClick: EventEmitter<void> = new EventEmitter();\n  @Output() luxFinClick: EventEmitter<void> = new EventEmitter();\n\n  @Input() luxIndex: number;\n  @Input() luxStep: LuxStepComponent;\n  @Input() luxStepperConfig: ILuxStepperConfiguration;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component } from '@angular/core';\nimport { LuxStepperParent } from '../../lux-stepper-model/lux-stepper-parent.class';\n\n@Component({\n  selector: 'lux-stepper-vertical',\n  templateUrl: './lux-stepper-vertical.component.html',\n  styleUrls: ['./lux-stepper-vertical.component.scss']\n})\nexport class LuxStepperVerticalComponent extends LuxStepperParent {\n  constructor() {\n    super();\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'lux-app-header-action-nav-item',\n  templateUrl: './lux-app-header-action-nav-item.component.html',\n  styleUrls: ['./lux-app-header-action-nav-item.component.scss']\n})\nexport class LuxAppHeaderActionNavItemComponent implements OnInit {\n  @Input() luxLabel: string;\n  @Input() luxIconName: string;\n  @Input() luxColor: string;\n  @Input() luxDisabled: boolean;\n  @Input() luxTagId: string;\n\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","// tslint:disable:max-line-length\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatStepperModule,\n  MatTabsModule\n} from '@angular/material';\nimport { LuxActionModule } from '../lux-action/lux-action.module';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxIconComponent } from '../lux-icon/lux-icon/lux-icon.component';\nimport { LuxPipesModule } from '../lux-pipes/lux-pipes.module';\nimport { LuxMediaQueryObserverService } from '../lux-util/lux-media-query-observer.service';\nimport { LuxAccordionComponent } from './lux-accordion/lux-accordion.component';\nimport { LuxAppFooterComponent } from './lux-app-footer/lux-app-footer.component';\nimport { LuxAppHeaderRightNavComponent } from './lux-app-header/lux-app-header-subcomponents/lux-app-header-right-nav/lux-app-header-right-nav.component';\nimport { LuxAppHeaderComponent } from './lux-app-header/lux-app-header.component';\nimport { LuxCardActionsComponent } from './lux-card/lux-card-subcomponents/lux-card-actions.component';\nimport { LuxCardContentExpandedComponent } from './lux-card/lux-card-subcomponents/lux-card-content-expanded.component';\nimport { LuxCardContentComponent } from './lux-card/lux-card-subcomponents/lux-card-content.component';\nimport { LuxCardInfoComponent } from './lux-card/lux-card-subcomponents/lux-card-info.component';\nimport { LuxCardComponent } from './lux-card/lux-card.component';\nimport { LuxDividerComponent } from './lux-divider/lux-divider.component';\nimport { LuxListItemContentComponent } from './lux-list/lux-list-subcomponents/lux-list-item-content.component';\nimport { LuxListItemIconComponent } from './lux-list/lux-list-subcomponents/lux-list-item-icon.component';\nimport { LuxListItemComponent } from './lux-list/lux-list-subcomponents/lux-list-item.component';\nimport { LuxListComponent } from './lux-list/lux-list.component';\nimport { LuxDetailViewComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-detail-view/lux-detail-view.component';\nimport { LuxMasterFooterComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-master-footer/lux-master-footer.component';\nimport { LuxMasterHeaderContentComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-master-header/lux-master-header-content.component';\nimport { LuxMasterHeaderComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-master-header/lux-master-header.component';\nimport { LuxMasterSimpleComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-master-simple/lux-master-simple.component';\nimport { LuxMasterViewComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-master-view/lux-master-view.component';\nimport { LuxMasterDetailComponent } from './lux-master-detail/lux-master-detail.component';\nimport { LuxPanelActionComponent } from './lux-panel/lux-panel-subcomponents/lux-panel-action.component';\nimport { LuxPanelContentComponent } from './lux-panel/lux-panel-subcomponents/lux-panel-content.component';\nimport { LuxPanelHeaderDescriptionComponent } from './lux-panel/lux-panel-subcomponents/lux-panel-header-description.component';\nimport { LuxPanelHeaderTitleComponent } from './lux-panel/lux-panel-subcomponents/lux-panel-header-title.component';\nimport { LuxPanelComponent } from './lux-panel/lux-panel.component';\nimport { LuxStepContentComponent } from './lux-stepper/lux-stepper-subcomponents/lux-step-content.component';\nimport { LuxStepHeaderComponent } from './lux-stepper/lux-stepper-subcomponents/lux-step-header.component';\nimport { LuxStepComponent } from './lux-stepper/lux-stepper-subcomponents/lux-step.component';\nimport { LuxStepperComponent } from './lux-stepper/lux-stepper.component';\nimport { LuxTabComponent } from './lux-tabs/lux-tabs-subcomponents/lux-tab.component';\nimport { LuxTabsComponent } from './lux-tabs/lux-tabs.component';\nimport { LuxTileComponent } from './lux-tile/lux-tile.component';\nimport { LuxDetailWrapperComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-detail-view/lux-detail-wrapper.component';\nimport { LuxSideNavComponent } from './lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav.component';\nimport { LuxSideNavFooterComponent } from './lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-footer.component';\nimport { LuxSideNavHeaderComponent } from './lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-header.component';\nimport { LuxSideNavItemComponent } from './lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-item.component';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxAppContentComponent } from './lux-app-content/lux-app-content.component';\nimport { LuxStepperHorizontalComponent } from './lux-stepper/lux-stepper-subcomponents/lux-stepper-horizontal/lux-stepper-horizontal.component';\nimport { LuxStepperNavButtonsComponent } from './lux-stepper/lux-stepper-subcomponents/lux-stepper-nav-buttons/lux-stepper-nav-buttons.component';\nimport { LuxStepperVerticalComponent } from './lux-stepper/lux-stepper-subcomponents/lux-stepper-vertical/lux-stepper-vertical.component';\nimport { LuxAppHeaderActionNavComponent } from './lux-app-header/lux-app-header-subcomponents/lux-app-header-action-nav/lux-app-header-action-nav.component';\nimport { LuxAppHeaderActionNavItemComponent } from './lux-app-header/lux-app-header-subcomponents/lux-app-header-action-nav/lux-app-header-action-nav-item/lux-app-header-action-nav-item.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatDividerModule,\n    LuxIconModule,\n    LuxActionModule,\n    LuxDirectivesModule,\n    LuxPipesModule,\n    LuxComponentsConfigModule,\n    MatProgressSpinnerModule\n  ],\n  declarations: [\n    LuxAppHeaderComponent,\n    LuxAppFooterComponent,\n    LuxListItemComponent,\n    LuxListItemIconComponent,\n    LuxListItemContentComponent,\n    LuxListComponent,\n    LuxMasterDetailComponent,\n    LuxMasterViewComponent,\n    LuxDetailViewComponent,\n    LuxMasterSimpleComponent,\n    LuxMasterFooterComponent,\n    LuxMasterHeaderComponent,\n    LuxMasterHeaderContentComponent,\n    LuxTabComponent,\n    LuxTabsComponent,\n    LuxCardComponent,\n    LuxCardInfoComponent,\n    LuxCardContentComponent,\n    LuxCardContentExpandedComponent,\n    LuxCardActionsComponent,\n    LuxAccordionComponent,\n    LuxPanelComponent,\n    LuxPanelContentComponent,\n    LuxPanelActionComponent,\n    LuxPanelHeaderTitleComponent,\n    LuxPanelHeaderDescriptionComponent,\n    LuxStepperComponent,\n    LuxStepComponent,\n    LuxStepHeaderComponent,\n    LuxStepContentComponent,\n    LuxDividerComponent,\n    LuxAppHeaderRightNavComponent,\n    LuxTileComponent,\n    LuxDetailWrapperComponent,\n    LuxSideNavComponent,\n    LuxSideNavFooterComponent,\n    LuxSideNavHeaderComponent,\n    LuxSideNavItemComponent,\n    LuxAppContentComponent,\n    LuxStepperHorizontalComponent,\n    LuxStepperNavButtonsComponent,\n    LuxStepperVerticalComponent,\n    LuxAppHeaderActionNavComponent,\n    LuxAppHeaderActionNavItemComponent\n  ],\n  exports: [\n    LuxAppHeaderComponent,\n    LuxAppFooterComponent,\n    LuxListItemComponent,\n    LuxListItemIconComponent,\n    LuxListItemContentComponent,\n    LuxListComponent,\n    LuxMasterDetailComponent,\n    LuxMasterViewComponent,\n    LuxDetailViewComponent,\n    LuxMasterSimpleComponent,\n    LuxMasterFooterComponent,\n    LuxMasterHeaderComponent,\n    LuxMasterHeaderContentComponent,\n    LuxTabComponent,\n    LuxTabsComponent,\n    LuxCardComponent,\n    LuxCardInfoComponent,\n    LuxCardContentComponent,\n    LuxCardContentExpandedComponent,\n    LuxCardActionsComponent,\n    LuxAccordionComponent,\n    LuxPanelComponent,\n    LuxPanelContentComponent,\n    LuxPanelActionComponent,\n    LuxPanelHeaderTitleComponent,\n    LuxPanelHeaderDescriptionComponent,\n    LuxStepperComponent,\n    LuxStepComponent,\n    LuxStepHeaderComponent,\n    LuxStepContentComponent,\n    LuxDividerComponent,\n    LuxAppHeaderRightNavComponent,\n    LuxTileComponent,\n    LuxDetailWrapperComponent,\n    LuxSideNavComponent,\n    LuxSideNavFooterComponent,\n    LuxSideNavHeaderComponent,\n    LuxSideNavItemComponent,\n    LuxAppContentComponent,\n    LuxStepperHorizontalComponent,\n    LuxStepperNavButtonsComponent,\n    LuxStepperVerticalComponent,\n    LuxAppHeaderActionNavComponent,\n    LuxAppHeaderActionNavItemComponent\n  ],\n  providers: [LuxMediaQueryObserverService],\n  entryComponents: [LuxIconComponent, LuxDetailWrapperComponent]\n})\nexport class LuxLayoutModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent, MatAutocompleteTrigger, MatOptionSelectionChange } from '@angular/material';\nimport { LuxFormComponentBase } from '../lux-form-model/lux-form-component-base.class';\nimport { debounceTime, distinctUntilChanged, map, startWith } from 'rxjs/operators';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-autocomplete',\n  templateUrl: './lux-autocomplete.component.html',\n  styleUrls: ['./lux-autocomplete.component.scss']\n})\nexport class LuxAutocompleteComponent extends LuxFormComponentBase implements OnInit, AfterViewInit {\n  private selected$: ReplaySubject<any> = new ReplaySubject<any>(1);\n\n  filteredOptions: Observable<any>;\n\n  @Input() luxPlaceholder: string = '';\n  @Input() luxReadonly: boolean;\n  @Input() luxOptions: any[] = [];\n  @Input() luxOptionLabelProp: string = 'label';\n  @Input() luxLookupDelay: number = 500;\n  @Input() luxErrorMessageNotAnOption: string = 'Der eingegebene Wert ist nicht Teil der Auswahl.';\n  @Input() luxTagId: string;\n  @Input() luxSelectAllOnClick: boolean = true;\n  @Input() luxStrict: boolean = true;\n\n  @Output() luxValueChange: EventEmitter<any> = new EventEmitter();\n  @Output() luxOptionSelected: EventEmitter<any> = new EventEmitter();\n  @Output() luxBlur: EventEmitter<any> = new EventEmitter<any>();\n  @Output() luxFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChild('autoCompleteInput', { read: MatAutocompleteTrigger, static: false })\n  matAutoComplete: MatAutocompleteTrigger;\n  @ViewChild('autoCompleteInput', { read: ElementRef, static: false }) matInput: ElementRef;\n\n  get luxValue(): any {\n    return this.getValue();\n  }\n\n  @Input() set luxValue(value: any) {\n    this.setValue(value);\n  }\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    protected config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.selected$.pipe(distinctUntilChanged()).subscribe(value => {\n      if (this.luxStrict) {\n        if (value === '') {\n          this.luxOptionSelected.emit(null);\n          this.luxValueChange.emit(null);\n        } else {\n          const selectedOption = this.luxOptions.find(option => value === option);\n          if (selectedOption) {\n            this.luxOptionSelected.emit(selectedOption);\n            this.luxValueChange.emit(selectedOption);\n          }\n        }\n      } else {\n        this.luxOptionSelected.emit(value);\n        this.luxValueChange.emit(value);\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.matAutoComplete.panelClosingActions\n      .pipe(debounceTime(this.luxLookupDelay))\n      .subscribe((value: MatOptionSelectionChange) => {\n        if (this.luxStrict) {\n          const filterResult = this.filter(this.getOptionLabel(this.luxValue));\n\n          if (filterResult.length === 1) {\n            this.formControl.setValue(filterResult[0]);\n          }\n\n          this.handleErrors();\n        }\n      });\n\n    this.filteredOptions = this.formControl.valueChanges.pipe(\n      startWith(''),\n      debounceTime(this.luxLookupDelay),\n      map(value => this.getOptionLabel(value)),\n      map(() => {\n        const filterLabel = this.getOptionLabel(this.luxValue);\n        return filterLabel ? this.filter(filterLabel) : this.luxOptions;\n      })\n    );\n  }\n\n  /**\n   * @override errorMessageModifier - Modifikation der Fehlermeldung\n   * @param value\n   * @param errors\n   */\n  errorMessageModifier(value, errors) {\n    if (errors['incorrect']) {\n      return this.luxErrorMessageNotAnOption;\n    }\n    return undefined;\n  }\n\n  /**\n   * Regelt die Darstellung der gewaehlten Option im Normalfall.\n   * (Ausnahme: Focus-Verlust)\n   * @param option\n   * @returns string\n   */\n  displayFn(option: any): string {\n    return this.getOptionLabel(this.luxValue);\n  }\n\n  /**\n   * Filtert das Options-Array nach dem filterTerm und\n   * gibt das Ergebnis als Array zurueck.\n   * @param filterTerm\n   * @returns any[]\n   */\n  filter(filterTerm: any) {\n    return this.luxOptions.filter(option => {\n      const compareValue = this.getOptionLabel(option);\n      return (\n        compareValue\n          .trim()\n          .toLowerCase()\n          .indexOf(filterTerm.trim().toLowerCase()) > -1\n      );\n    });\n  }\n\n  /**\n   * Click-Event Handling\n   * Selektiert den gesamten Text im Input, wenn selectAllOnClick = true ist.\n   * @param clickEvent\n   */\n  onClick(clickEvent: any) {\n    if (this.luxSelectAllOnClick) {\n      clickEvent.target.setSelectionRange(0, clickEvent.target.value.length);\n    }\n  }\n\n  /**\n   * Gibt den darzustellenden Wert einer Option bzw.\n   * die Option selbst (wenn string) wider.\n   * @param option\n   * @returns any\n   */\n  getOptionLabel(option: any) {\n    if (typeof option === 'string') {\n      return option;\n    } else if (!option) {\n      return '';\n    } else {\n      return option[this.luxOptionLabelProp];\n    }\n  }\n\n  selected($event: MatAutocompleteSelectedEvent) {\n    this.luxValue = $event.option.value;\n  }\n\n  private handleErrors() {\n    const errors = this.formControl ? this.formControl.errors : null;\n    if (\n      this.luxOptions.indexOf(this.luxValue) > -1 ||\n      (!!errors && Object.keys(errors).length > 0 && errors['required'])\n    ) {\n      this.handleOtherErrors(errors);\n    } else {\n      this.handleIncorrectError(errors);\n    }\n  }\n\n  private handleOtherErrors(errors: any) {\n    if (errors && errors['incorrect']) {\n      delete errors['incorrect'];\n    }\n\n    this.formControl.setErrors(errors && Object.keys(errors).length !== 0 ? errors : null);\n  }\n\n  private handleIncorrectError(errors: any) {\n    if (this.luxStrict && this.luxValue) {\n      errors = errors ? errors : {};\n      if (!errors['incorrect']) {\n        errors['incorrect'] = true;\n      }\n      this.formControl.setErrors(errors);\n    }\n  }\n\n  // region overridden methods\n  notifyFormValueChanged(formValue: any) {\n    this.selected$.next(formValue);\n    this.luxValueChange.emit(formValue);\n\n    if (formValue && formValue[this.luxOptionLabelProp]) {\n      this.matInput.nativeElement.value = formValue[this.luxOptionLabelProp];\n    }\n  }\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxValueChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxValue);\n  }\n\n  // endregion\n}\n","import { ControlContainer, ValidatorFn, Validators } from '@angular/forms';\nimport { ChangeDetectorRef, EventEmitter, Input, Output, SimpleChanges } from '@angular/core';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormComponentBase } from './lux-form-component-base.class';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n/**\n * Basis-Klasse für FormComponents, die einen ähnlichen Grundaufbau für das Aktivieren eines Boolean-Wertes besitzen\n * (LuxToggle und LuxCheckbox z.B.).\n */\nexport abstract class LuxFormCheckableBaseClass extends LuxFormComponentBase {\n  @Output() luxCheckedChange: EventEmitter<boolean> = new EventEmitter();\n\n  @Input() luxTagId: string;\n  @Input() luxReadonly: boolean;\n\n  get luxChecked() {\n    return this.getValue();\n  }\n\n  @Input() set luxChecked(checked: boolean) {\n    this.setValue(checked);\n  }\n\n  protected constructor(\n    controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  // region Overridden methods\n  notifyFormValueChanged(formValue: boolean) {\n    // Aktualisierungen an dem FormControl-Value sollen auch via EventEmitter bekannt gemacht werden\n    this.luxCheckedChange.emit(formValue);\n\n    // Bei luxRequired = true && einem false-Wert entsprechend einen Fehler setzen\n    if (formValue === false && this.luxRequired && this.formControl.errors === null) {\n      this.formControl.setErrors({ required: true });\n    }\n  }\n\n  errorMessageModifier(value, errors) {\n    if (errors.required) {\n      return 'Das ist ein Pflichtfeld';\n    }\n    return undefined;\n  }\n\n  protected checkValidatorsContainRequired(validators: ValidatorFn | ValidatorFn[]) {\n    // Fall: required = true, aber neue Validatoren werden gesetzt\n    if (this.luxRequired === true) {\n      // Sind es mehrere Validatoren, aber kein .requiredTrue? Dann wird er ergänzt\n      if (Array.isArray(validators) && validators.indexOf(Validators.requiredTrue) === -1) {\n        validators.push(Validators.requiredTrue);\n      } else if (!Array.isArray(validators) && validators !== Validators.requiredTrue) {\n        // Ist es nur ein einzelner Validator und nicht .requiredTrue? Dann Array erstellen und beide kombinieren\n        validators = [validators, Validators.requiredTrue];\n      }\n    } else if (this.luxRequired === false) {\n      if (Array.isArray(validators)) {\n        validators = validators.filter((validator: ValidatorFn) => validator !== Validators.requiredTrue);\n      } else if (validators === Validators.requiredTrue) {\n        validators = undefined;\n      }\n    }\n\n    return validators;\n  }\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxCheckedChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxChecked);\n  }\n\n  // endregion\n}\n","import { ChangeDetectorRef, Component, OnInit, Optional } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormCheckableBaseClass } from '../lux-form-model/lux-form-checkable-base.class';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-checkbox',\n  templateUrl: './lux-checkbox.component.html',\n  styleUrls: ['./lux-checkbox.component.scss']\n})\nexport class LuxCheckboxComponent extends LuxFormCheckableBaseClass implements OnInit {\n  constructor(\n    @Optional() public controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n}\n","import { Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { ThemePalette } from '@angular/material';\nimport { ILuxChipSelected } from '../lux-chips-model/lux-chip-selected.interface';\n\n@Component({\n  selector: 'lux-chip-group',\n  template: ''\n})\nexport class LuxChipGroupComponent implements OnInit {\n  private _luxColor: ThemePalette = 'primary';\n\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n\n  @Output() luxChipClicked = new EventEmitter<number>();\n  @Output() luxChipAdded = new EventEmitter<string>();\n  @Output() luxChipRemoved = new EventEmitter<number>();\n  @Output() luxChipSelected = new EventEmitter<ILuxChipSelected>();\n\n  @Input() luxLabels: string[] = [];\n  @Input() luxDisabled: boolean = false;\n  @Input() luxRemovable: boolean = true;\n  @Input() luxSelected: boolean = true;\n\n  get luxColor(): ThemePalette {\n    return this._luxColor;\n  }\n\n  @Input() set luxColor(color: ThemePalette) {\n    if (color !== 'primary' && color !== 'accent' && color !== 'warn') {\n      color = undefined;\n    }\n    this._luxColor = color;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  add(label: string) {\n    this.luxLabels.push(label);\n    this.luxChipAdded.emit(label);\n  }\n\n  remove(index: number) {\n    this.luxChipRemoved.emit(index);\n    this.luxLabels.splice(index, 1);\n  }\n\n  click(index: number) {\n    this.luxChipClicked.emit(index);\n  }\n\n  select(selected: boolean, index: number) {\n    this.luxChipSelected.emit({ index, selected });\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { ThemePalette } from '@angular/material';\nimport { ILuxChipSelected } from '../lux-chips-model/lux-chip-selected.interface';\n\n@Component({\n  selector: 'lux-chip',\n  template: `\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  `\n})\nexport class LuxChipComponent implements OnInit {\n  private removeClicked: boolean = false;\n\n  private _luxColor: ThemePalette = 'primary';\n\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  @Output() luxChipRemoved = new EventEmitter<number>();\n  @Output() luxChipClicked = new EventEmitter<number>();\n  @Output() luxChipSelected = new EventEmitter<ILuxChipSelected>();\n\n  @Input() luxDisabled: boolean = false;\n  @Input() luxRemovable: boolean = true;\n  @Input() luxSelected: boolean = true;\n\n  get luxColor(): ThemePalette {\n    return this._luxColor;\n  }\n\n  @Input() set luxColor(color: ThemePalette) {\n    if (color !== 'primary' && color !== 'accent' && color !== 'warn') {\n      color = undefined;\n    }\n    this._luxColor = color;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  remove(index: number) {\n    this.luxChipRemoved.emit(index);\n    this.removeClicked = true;\n  }\n\n  click(index: number) {\n    if (!this.removeClicked) {\n      this.luxChipClicked.emit(index);\n    }\n  }\n\n  select(selected: boolean, index: number) {\n    this.luxSelected = selected;\n    this.luxChipSelected.emit({ index, selected });\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { MatAutocomplete, MatAutocompleteTrigger, MatChip } from '@angular/material';\nimport { LuxChipGroupComponent } from './lux-chips-subcomponents/lux-chip-group.component';\nimport { LuxChipComponent } from './lux-chips-subcomponents/lux-chip.component';\nimport { Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'lux-chips',\n  templateUrl: './lux-chips.component.html',\n  styleUrls: ['./lux-chips.component.scss']\n})\nexport class LuxChipsComponent implements OnDestroy {\n  private readonly inputValueSubscription: Subscription = new Subscription();\n  private readonly newChipSubscription: Subscription = new Subscription();\n\n  private _luxDisabled: boolean = false;\n  private _luxAutocompleteOptions: string[] = [];\n  private _luxLabel: string = 'Neu';\n\n  filteredOptions: string[] = [];\n  inputValue$: Subject<string> = new Subject<string>();\n  newChip$: Subject<any> = new Subject<any>();\n\n  @Input() luxOrientation: 'horizontal' | 'vertical' = 'horizontal';\n  @Input() luxInputAllowed: boolean = false;\n  @Input() luxNewChipGroup: LuxChipGroupComponent;\n  @Input() luxMultiple: boolean = true;\n\n  @Output() luxChipAdded = new EventEmitter<string>();\n\n  @ContentChildren(LuxChipComponent) luxChipComponents: QueryList<LuxChipComponent>;\n  @ContentChildren(LuxChipGroupComponent) luxChipGroupComponents: QueryList<LuxChipGroupComponent>;\n  @ViewChildren(MatChip) matChips: QueryList<MatChip>;\n\n  @ViewChild('input', { read: MatAutocompleteTrigger, static: false }) matAutocompleteTrigger: MatAutocompleteTrigger;\n  @ViewChild('auto', { read: MatAutocomplete, static: false }) matAutocomplete: MatAutocomplete;\n\n  get luxDisabled(): boolean {\n    return this._luxDisabled;\n  }\n\n  @Input() set luxDisabled(disabled: boolean) {\n    this._luxDisabled = disabled;\n    setTimeout(() => {\n      this.luxChipGroupComponents.forEach(chipGroup => (chipGroup.luxDisabled = disabled));\n      this.luxChipComponents.forEach(chip => (chip.luxDisabled = disabled));\n    });\n  }\n\n  get luxAutocompleteOptions(): string[] {\n    return this._luxAutocompleteOptions;\n  }\n\n  @Input() set luxAutocompleteOptions(options: string[]) {\n    this._luxAutocompleteOptions = options ? options : [];\n    this.filteredOptions = this.luxAutocompleteOptions;\n  }\n\n  get luxInputLabel(): string {\n    return this._luxLabel;\n  }\n\n  @Input() set luxInputLabel(label: string) {\n    this._luxLabel = label;\n  }\n\n  // Für lux-form-control, diese ruft luxLabel auf\n  get luxLabel(): string {\n    return this._luxLabel;\n  }\n\n  get chipComponents(): LuxChipComponent[] {\n    return <any>this.luxChipComponents;\n  }\n\n  get chipGroupComponents(): LuxChipGroupComponent[] {\n    return <any>this.luxChipGroupComponents;\n  }\n\n  constructor(@Optional() private controlContainer: ControlContainer) {\n    this.newChipSubscription = this.newChip$.subscribe((value: string) => {\n      this.add(value);\n      this.filteredOptions = this.luxAutocompleteOptions ? this.luxAutocompleteOptions : [];\n    });\n\n    this.inputValueSubscription = this.inputValue$\n      .asObservable()\n      .pipe(\n        startWith(''),\n        distinctUntilChanged(),\n        map((value: string) => {\n          if (!value) {\n            this.filteredOptions = [...this.luxAutocompleteOptions];\n          } else {\n            this.filteredOptions = this.luxAutocompleteOptions.filter(\n              (compareValue: string) =>\n                compareValue\n                  .trim()\n                  .toLowerCase()\n                  .indexOf(value.trim().toLowerCase()) > -1\n            );\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    if (this.newChipSubscription) {\n      this.newChipSubscription.unsubscribe();\n    }\n    if (this.inputValueSubscription) {\n      this.inputValueSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Fuegt einen Chip hinzu.\n   * Fuegt ihn entweder der explizit mitgeteilten newChipList hinzu oder einfach\n   * der letzten mitgegebenen Liste.\n   * @param value\n   */\n  add(value: string) {\n    if (value && value.trim().length > 0) {\n      if (this.luxNewChipGroup) {\n        this.luxNewChipGroup.add(value);\n      } else {\n        this.luxChipAdded.emit(value);\n      }\n\n      // Autocomplete-Feld in jedem Fall schließen (Delay über Timeout, damit kein visuelles Flackern entsteht)\n      setTimeout(() => this.matAutocompleteTrigger.closePanel());\n    }\n  }\n\n  /**\n   * Wird bei Eingabe von Werten in das Input-Feld aufgerufen und schreibt einen neuen Wert\n   * in das inputValue-Subject.\n   * @param value\n   */\n  inputChanged(value: string) {\n    this.inputValue$.next(value);\n  }\n\n  /**\n   * Wird beim Selektieren einer Option im Autocomplete ausgeführt.\n   * @param input\n   * @param value\n   */\n  autoCompleteAdd(input, value) {\n    this.newChip$.next(value);\n    input.value = '';\n  }\n\n  /**\n   * Wird beim Input-Event des Eingabefelds ausgeführt, fragt aber vorher ab, ob das Autocomplete offen ist.\n   * Wenn ja, wird kein neuer Chip erzeugt, da das Autocomplete dies übernimmt.\n   * @param input\n   */\n  inputAdd(input) {\n    if (!this.matAutocomplete.isOpen) {\n      // falls nur eine Option übrig ist, diese als value nehmen anstelle des input textes\n      if (\n        this.luxAutocompleteOptions &&\n        this.luxAutocompleteOptions.length > 1 &&\n        this.filteredOptions &&\n        this.filteredOptions.length === 1\n      ) {\n        this.newChip$.next(this.filteredOptions[0]);\n        input.value = '';\n      } else {\n        this.newChip$.next(input.value);\n        input.value = '';\n      }\n    }\n  }\n}\n","import { LuxFormComponentBase } from './lux-form-component-base.class';\nimport { ChangeDetectorRef, EventEmitter, Input, Output, SimpleChanges } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n/**\n * Basis-Klasse für FormComponents, die einen ähnlichen Grundaufbau für das Eintippen von String-Daten haben\n * (Input und Textarea z.B.).\n */\nexport abstract class LuxFormInputBaseClass extends LuxFormComponentBase {\n  @Output() luxValueChange: EventEmitter<string> = new EventEmitter();\n  @Output() luxBlur: EventEmitter<any> = new EventEmitter<any>();\n  @Output() luxFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input() luxPlaceholder: string = '';\n  @Input() luxReadonly: boolean;\n  @Input() luxTagId: string;\n  @Input() luxAutocomplete: string = 'on';\n\n  get luxValue(): string {\n    return this.getValue();\n  }\n\n  @Input() set luxValue(value: string) {\n    this.setValue(value);\n  }\n\n  protected constructor(\n    controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  // region Overridden methods\n\n  notifyFormValueChanged(formValue: any) {\n    // Aktualisierungen an dem FormControl-Value sollen auch via EventEmitter bekannt gemacht werden\n    this.luxValueChange.emit(formValue);\n  }\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxValueChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxValue);\n  }\n\n  // endregion\n}\n","import { NativeDateAdapter } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport DateTimeFormatOptions = Intl.DateTimeFormatOptions;\n\n@Injectable()\nexport class LuxDatepickerAdapter extends NativeDateAdapter {\n  // dd.MM.yyyy\n  private readonly dotRegExp = new RegExp(/\\d{1,2}\\.\\d{1,2}\\.\\d{4}/);\n\n  // MM/dd/yyyy\n  private readonly backslashRegExp = new RegExp(/\\d{1,2}\\/\\d{1,2}\\/\\d{4}/);\n\n  // dd-MM-yyyy\n  private readonly hyphenRegExp = new RegExp(/\\d{1,2}-\\d{1,2}-\\d{4}/);\n\n  // yyyy-MM-dd\n  private readonly hyphenRegExp_1 = new RegExp(/\\d{4}-\\d{1,2}-\\d{1,2}/);\n\n  format(date: Date | string, displayFormat: DateTimeFormatOptions): string {\n    if (date) {\n      if (displayFormat) {\n        if (typeof date === 'string') {\n          date = new Date(date);\n        }\n        return date.toLocaleDateString(this.locale, displayFormat);\n      } else {\n        return (date as Date).toLocaleDateString(this.locale);\n      }\n    } else {\n      return '';\n    }\n  }\n\n  parse(value: string): Date | null {\n    if (value) {\n      // Prüfen, ob der Wert ein ISO-String ist\n      if (LuxUtil.ISO_8601_FULL.test(value)) {\n        return new Date(value);\n      }\n      // Hat der String das Format dd.MM.YYYY ?\n      if (this.dotRegExp.test(value)) {\n        return this.getUTCNulled_ddMMYYYY(value, '.');\n      } else if (this.backslashRegExp.test(value)) {\n        return this.getUTCNulled_MMddYYY(value, '/');\n      } else if (this.hyphenRegExp.test(value)) {\n        return this.getUTCNulled_ddMMYYYY(value, '-');\n      } else if (this.hyphenRegExp_1.test(value)) {\n        return this.getUTCNulled_YYYYMMdd(value, '-');\n      }\n      return <any>value;\n    }\n    return null;\n  }\n\n  /**\n   * UTC Date mit 0-Werten für Time aus einem ddMMYYYY-String erhalten.\n   * @param dateString\n   * @param separator\n   */\n  private getUTCNulled_ddMMYYYY(dateString: string, separator: string) {\n    const splitDate = dateString.split(separator);\n    const tempDate = new Date(0);\n    tempDate.setUTCFullYear(+splitDate[2], +splitDate[1] - 1, +splitDate[0]);\n    return tempDate;\n  }\n\n  /**\n   * UTC Date mit 0-Werten für Time aus einem YYYYMMdd-String erhalten.\n   * @param dateString\n   * @param separator\n   */\n  private getUTCNulled_YYYYMMdd(dateString: string, separator: string) {\n    const splitDate = dateString.split(separator);\n    const tempDate = new Date(0);\n    tempDate.setUTCFullYear(+splitDate[0], +splitDate[1] - 1, +splitDate[2]);\n    return tempDate;\n  }\n\n  /**\n   * UTC Date mit 0-Werten für Time aus einem MMddYYYY-String erhalten.\n   * @param dateString\n   * @param separator\n   */\n  private getUTCNulled_MMddYYY(dateString: string, separator: string) {\n    const splitDate = dateString.split(separator);\n    const tempDate = new Date(0);\n    tempDate.setUTCFullYear(+splitDate[2], +splitDate[0] - 1, +splitDate[1]);\n    return tempDate;\n  }\n\n  isValid(date: any) {\n    return LuxUtil.isDate(date);\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS, MatDatepicker } from '@angular/material';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { Subscription } from 'rxjs';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LuxFormInputBaseClass } from '../lux-form-model/lux-form-input-base.class';\nimport { LuxDatepickerAdapter } from './lux-datepicker-adapter';\n\nexport const APP_DATE_FORMATS = {\n  parse: {\n    dateInput: { month: '2-digit', year: 'numeric', day: '2-digit' }\n  },\n  display: {\n    dateInput: { month: '2-digit', year: 'numeric', day: '2-digit' },\n    monthYearLabel: { year: 'numeric', month: 'long' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' }\n  }\n};\n\n@Component({\n  selector: 'lux-datepicker',\n  templateUrl: './lux-datepicker.component.html',\n  providers: [\n    { provide: DateAdapter, useClass: LuxDatepickerAdapter, deps: [MAT_DATE_LOCALE, Platform] },\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\n  ]\n})\nexport class LuxDatepickerComponent extends LuxFormInputBaseClass implements OnInit, OnChanges, OnDestroy, DoCheck {\n  private originalTouchUi;\n  private mediaSubscription: Subscription;\n  private previousISO: string;\n\n  min: Date;\n  max: Date;\n  start: Date;\n\n  @Input() luxStartView: 'month' | 'year' = 'month';\n  @Input() luxTouchUi: boolean = false;\n  @Input() luxOpened: boolean = false;\n  @Input() luxStartDate: string = null;\n  @Input() luxShowToggle: boolean = true;\n  @Input() luxLocale: string = 'de-DE';\n  @Input() luxCustomFilter: any = undefined;\n  @Input() luxMaxDate: string = undefined;\n  @Input() luxMinDate: string = undefined;\n\n  @ViewChild(MatDatepicker, { static: false }) matDatepicker: MatDatepicker<any>;\n  @ViewChild('datepickerInput', { read: ElementRef, static: false }) datepickerInput: ElementRef;\n\n  get luxValue(): string {\n    return this.getValue();\n  }\n\n  @Input() set luxValue(value: string) {\n    this.setValue(value);\n  }\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    private dateAdapter: DateAdapter<Date>,\n    private mediaObserver: LuxMediaQueryObserverService,\n    private elementRef: ElementRef,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n    // den Standard-Wert für Autocomplete für Datepicker ausschalten\n    this.luxAutocomplete = 'off';\n    this.dateAdapter.setLocale(this.luxLocale);\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    super.ngOnChanges(simpleChanges);\n    if (simpleChanges.luxOpened) {\n      // Evtl. gibt es ohne das Timeout sonst Fehler, weil der matDatepicker noch nicht gesetzt ist\n      setTimeout(() => {\n        this.triggerOpenClose();\n      });\n    }\n    if (simpleChanges.luxLocale && simpleChanges.luxLocale.currentValue) {\n      this.dateAdapter.setLocale(simpleChanges.luxLocale.currentValue);\n    }\n    if (simpleChanges.luxMaxDate && typeof simpleChanges.luxMaxDate.currentValue === 'string') {\n      this.max = this.dateAdapter.parse(simpleChanges.luxMaxDate.currentValue, {});\n    }\n    if (simpleChanges.luxMinDate && typeof simpleChanges.luxMinDate.currentValue === 'string') {\n      this.min = this.dateAdapter.parse(simpleChanges.luxMinDate.currentValue, {});\n    }\n    if (simpleChanges.luxStartDate && typeof simpleChanges.luxStartDate.currentValue === 'string') {\n      this.start = this.dateAdapter.parse(simpleChanges.luxStartDate.currentValue, {});\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.originalTouchUi = this.luxTouchUi;\n    this.mediaSubscription = this.mediaObserver.getMediaQueryChangedAsObservable().subscribe(() => {\n      this.checkMediaObserver();\n    });\n  }\n\n  ngOnDestroy() {\n    this.mediaSubscription.unsubscribe();\n  }\n\n  /**\n   * Erzeugt für die Unter- bzw. Überschreitung\n   * @param value\n   * @param errors\n   */\n  errorMessageModifier(value, errors) {\n    if (errors.matDatepickerMin) {\n      return 'Das Datum unterschreitet den Minimalwert';\n    } else if (errors.matDatepickerMax) {\n      return 'Das Datum überschreitet den Maximalwert';\n    } else if (errors.required) {\n      if (this.datepickerInput && this.datepickerInput.nativeElement.value) {\n        return 'Das Datum ist ungültig';\n      } else {\n        return 'Das Datum darf nicht leer sein';\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Checkt ob eine mobile Media-Query vorliegt.\n   * Wenn ja, wird automagisch die TouchUI aktiviert.\n   * Wenn nein, wird der vom Aufrufer/originale luxTouchUI-Wert genutzt.\n   */\n  private checkMediaObserver() {\n    if (this.mediaObserver.isXS() || this.mediaObserver.isSM()) {\n      this.luxTouchUi = true;\n    } else {\n      this.luxTouchUi = this.originalTouchUi;\n    }\n  }\n\n  /**\n   * Führt .open() bzw. .close() vom MatDatepicker aus, abhängig vom Wert für luxOpened.\n   */\n  private triggerOpenClose() {\n    if (this.luxOpened) {\n      this.matDatepicker.open();\n    } else {\n      this.matDatepicker.close();\n    }\n  }\n\n  /**\n   * Aktualisiert den FormControl-Value und den Wert im Parent über valueChange mithilfe des übergebenen ISO-Strings.\n   * @param isoValue\n   */\n  private setISOValue(isoValue: string) {\n    setTimeout(() => {\n      this.previousISO = isoValue;\n\n      // valueChange-Emitter anstoßen\n      this.notifyFormValueChanged(isoValue);\n\n      // \"silently\" den FormControl auf den (potentiell) geänderten Wert aktualisieren\n      this.formControl.setValue(isoValue, {\n        emitEvent: false,\n        emitModelToViewChange: false,\n        emitViewToModelChange: false\n      });\n\n      // Per Hand dem Input-Element einen formatierten String übergeben\n      if (!this.datepickerInput.nativeElement.value && isoValue) {\n        this.datepickerInput.nativeElement.value = this.dateAdapter.format(\n          <any>isoValue,\n          APP_DATE_FORMATS.display.dateInput\n        );\n      }\n    });\n  }\n\n  // region overridden methods\n\n  protected setValue(value: any) {\n    if (value !== this.luxValue) {\n      if (!this.formControl) {\n        this._initialValue = value;\n        return;\n      }\n      this.formControl.setValue(value);\n    }\n  }\n\n  protected initFormValueSubscription() {\n    // Aktualisierungen an dem FormControl-Value sollen auch via EventEmitter bekannt gemacht werden\n    this._formValueChangeSubscr = this.formControl.valueChanges.subscribe((value: any) => {\n      this.updateDateValue(value);\n    });\n\n    if (this.formControl.value) {\n      // Es kann vorkommen, dass der initiale Wert nicht im ISO-Format angegeben ist.\n      // Dann muss der Wert noch umgewandelt werden.\n      this.updateDateValue(this.formControl.value);\n    } else if (this._initialValue !== null && this._initialValue !== undefined) {\n      // Vorhandenen Initialwert setzen\n      this.formControl.setValue(this._initialValue);\n    }\n  }\n\n  private updateDateValue(value: any) {\n    if (!value) {\n      this.setISOValue(value);\n      return;\n    }\n\n    // Nachfolgend erstellen\n    if (typeof value === 'string') {\n      value = this.dateAdapter.parse(value, {});\n    }\n\n    const eventDate: Date = value;\n    const tempDate = new Date(0);\n    tempDate.setUTCFullYear(eventDate.getFullYear(), eventDate.getMonth(), eventDate.getDate());\n    tempDate.setUTCHours(0, 0, 0, 0);\n\n    // Sicherheitshalber noch einmal prüfen, kann vorkommen das ein unsinniger Wert eingetragen wird\n    // z.B. 'asdf', das führt zu InvalidDate's\n    if (LuxUtil.isDate(tempDate) && this.previousISO !== tempDate.toISOString()) {\n      this.setISOValue(tempDate.toISOString());\n    }\n  }\n\n  // endregion\n}\n","/**\n * Enums, welche die auswaehlbaren Felder fuer den Response einer Lookup-Service-Abfrage beinhaltet.\n */\nexport enum LuxFieldValues {\n  kurz = 'kurz',\n  lang1 = 'lang1',\n  lang2 = 'lang2',\n  gueltig_von = 'gueltig_von',\n  gueltig_bis = 'gueltig_bis'\n}\n\nexport enum LuxBehandlungsOptionenUngueltige {\n  anzeigen = 'anzeigen',\n  ausgrauen = 'ausgrauen',\n  ausblenden = 'ausblenden'\n}\n\n/**\n * Class, welche benutzt wird um die Abfrage an den Lookup-Service zu modifizeren.\n */\nexport class LuxLookupParameters {\n  knr: number;\n  keys: any[];\n  fields: LuxFieldValues[];\n  raw: boolean;\n\n  constructor(data: { knr: number; keys?: string[]; fields?: LuxFieldValues[]; raw?: boolean }) {\n    this.knr = data.knr;\n    this.keys = !!data.keys ? data.keys : [];\n    this.fields = !!data.fields\n      ? data.fields\n      : [\n          LuxFieldValues.kurz,\n          LuxFieldValues.lang1,\n          LuxFieldValues.lang2,\n          LuxFieldValues.gueltig_bis,\n          LuxFieldValues.gueltig_von\n        ];\n    this.raw = !!data.raw ? data.raw : false;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ControlContainer, ValidatorFn, Validators } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LuxFormComponentBase } from './lux-form-component-base.class';\nimport { ILuxFileError, LuxFileErrorCause } from '../lux-file/lux-file-model/lux-file-error.interface';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { ILuxFileActionConfig } from '../lux-file/lux-file-model/lux-file-action-config.interface';\nimport { isObservable, Observable, throwError } from 'rxjs';\nimport { ILuxFileObject } from '../lux-file/lux-file-model/lux-file-object.interface';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\n\nexport abstract class LuxFormFileBase extends LuxFormComponentBase {\n  defaultReadFileDelay: number = 1000;\n\n  private _luxAccept: string = '';\n  private _luxSelectedFiles: ILuxFileObject[];\n\n  protected _luxUploadActionConfig: ILuxFileActionConfig = {\n    disabled: false,\n    hidden: false,\n    iconName: 'fas fa-cloud-upload-alt',\n    label: 'Hochladen'\n  };\n  protected _luxDeleteActionConfig: ILuxFileActionConfig = {\n    disabled: false,\n    hidden: false,\n    iconName: 'fas fa-trash',\n    label: 'Löschen'\n  };\n  protected _luxViewActionConfig: ILuxFileActionConfig = {\n    disabled: false,\n    hidden: true,\n    iconName: 'fas fa-eye',\n    label: 'Ansehen'\n  };\n  protected _luxDownloadActionConfig: ILuxFileActionConfig = {\n    disabled: false,\n    hidden: true,\n    iconName: 'fas fa-download',\n    label: 'Download'\n  };\n\n  progress: number = -1;\n  forceProgressIndeterminate: boolean = false;\n\n  @ViewChild('downloadLink', { read: ElementRef, static: true }) downloadLink: ElementRef;\n  @ViewChild('fileupload', { read: ElementRef, static: true }) fileuploadInput: ElementRef;\n\n  @Output() luxSelectedFilesChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input() luxUploadReportProgress: boolean = false;\n  @Input() luxContentsAsBlob: boolean = false;\n  @Input() luxTagId: string;\n  @Input() luxMaxSizeMB: number = 10;\n  @Input() luxCapture: string = '';\n  @Input() luxUploadUrl: string = '';\n  @Input() luxDnDActive: boolean = true;\n\n  @HostBinding('class.lux-file-highlight') isDragActive: boolean = false;\n\n  @HostListener('dragover', ['$event']) onDragOver($event) {\n    if (this.isDnDAllowed()) {\n      this.handleDragOver($event);\n    }\n  }\n\n  @HostListener('dragleave', ['$event']) onDragLeave($event) {\n    if (this.isDnDAllowed()) {\n      this.handleDragLeave($event);\n    }\n  }\n\n  @HostListener('drop', ['$event']) onDrop($event) {\n    if (this.isDnDAllowed()) {\n      this.handleDrop($event);\n    }\n  }\n\n  get luxUploadActionConfig(): ILuxFileActionConfig {\n    return this._luxUploadActionConfig;\n  }\n\n  @Input() set luxUploadActionConfig(config: ILuxFileActionConfig) {\n    if (config) {\n      this._luxUploadActionConfig = config;\n    }\n  }\n\n  get luxDeleteActionConfig(): ILuxFileActionConfig {\n    return this._luxDeleteActionConfig;\n  }\n\n  @Input() set luxDeleteActionConfig(config: ILuxFileActionConfig) {\n    if (config) {\n      this._luxDeleteActionConfig = config;\n    }\n  }\n\n  get luxViewActionConfig(): ILuxFileActionConfig {\n    return this._luxViewActionConfig;\n  }\n\n  @Input() set luxViewActionConfig(config: ILuxFileActionConfig) {\n    if (config) {\n      this._luxViewActionConfig = config;\n    }\n  }\n\n  get luxDownloadActionConfig(): ILuxFileActionConfig {\n    return this._luxDownloadActionConfig;\n  }\n\n  @Input() set luxDownloadActionConfig(config: ILuxFileActionConfig) {\n    if (config) {\n      this._luxDownloadActionConfig = config;\n    }\n  }\n\n  get luxSelectedFiles(): any {\n    return this.getValue();\n  }\n\n  @Input() set luxSelectedFiles(selectedFiles: any) {\n    this.setValue(selectedFiles);\n  }\n\n  get luxAccept(): any {\n    return this._luxAccept;\n  }\n\n  @Input() set luxAccept(accepts: any) {\n    if (!accepts) {\n      accepts = '';\n    }\n    this._luxAccept = Array.isArray(accepts) ? accepts.join(',') : accepts;\n  }\n\n  get progressMode(): string {\n    return (this.progress === 0 && !this.luxUploadReportProgress) || this.forceProgressIndeterminate\n      ? 'indeterminate'\n      : 'determinate';\n  }\n\n  get isProgressVisible(): boolean {\n    return this.progress >= 0 || this.forceProgressIndeterminate;\n  }\n\n  protected constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService,\n    protected http: HttpClient,\n    private liveAnnouncer: LiveAnnouncer\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  /**\n   * Wird beim Fokussieren des Elements aufgerufen und markiert das FormControl als \"touched\".\n   * @param $event\n   */\n  onFocusIn($event) {\n    this.formControl.markAsTouched();\n    this.luxFocusIn.emit($event);\n  }\n\n  /**\n   * Entfernt die aktuell selektierten Dateien und entfernt etwaige (spezifische) Fehler aus dem FormControl.\n   * @param $event\n   */\n  clearFiles($event?) {\n    this.formControl.markAsTouched();\n    this.formControl.markAsDirty();\n\n    this.luxSelectedFiles = undefined;\n    this.notifyFormValueChanged();\n    this.clearFormControlErrors();\n    if (this.luxDeleteActionConfig.onClick) {\n      this.luxDeleteActionConfig.onClick();\n    }\n\n    this.announceAllFilesRemove();\n  }\n\n  /**\n   * Löst den Download der übergebenen Datei aus.\n   * @param file\n   */\n  downloadFile(file: ILuxFileObject | ILuxFileObject[]) {\n    this.formControl.markAsTouched();\n    file = Array.isArray(file) ? file[0] : file;\n    const downloadLink = <HTMLAnchorElement>this.downloadLink.nativeElement;\n    downloadLink.download = file.name;\n\n    if (file.content instanceof Blob) {\n      if (window.navigator.msSaveBlob) {\n        // IE\n        window.navigator.msSaveOrOpenBlob(file.content, file.name);\n      } else {\n        const url = window.URL.createObjectURL(file.content);\n        downloadLink.href = url;\n        downloadLink.click();\n        window.URL.revokeObjectURL(url);\n      }\n    } else {\n      if (window.navigator.msSaveBlob) {\n        // IE\n        try {\n          const arrBuffer = LuxUtil.base64ToArrayBuffer(file.content.split(',')[1]);\n          window.navigator.msSaveOrOpenBlob(new Blob([arrBuffer], { type: file.type }), file.name);\n        } catch (e) {\n          console.log(e);\n        }\n      } else {\n        downloadLink.href = file.content;\n        downloadLink.click();\n      }\n    }\n\n    if (this.luxDownloadActionConfig.onClick) {\n      this.luxDownloadActionConfig.onClick(file);\n    }\n  }\n\n  /**\n   * Löst den base64Callback der übergebenen Datei aus.\n   * Schreibt dann anschließend den Base64-String in die Datei.\n   * @param file\n   */\n  viewFile(file: ILuxFileObject) {\n    this.formControl.markAsTouched();\n    // Wenn die Datei bereits einen Base64-Wert besitzt, den onClick-Callback ausführen\n    if (file.content) {\n      this.triggerViewFileClick(file);\n      return;\n    }\n    const callbackResult = file.contentCallback();\n    // Wenn der Callback ein Observable ist, dieses auflösen und dem File-Base64 zuweisen\n    if (isObservable(callbackResult)) {\n      (<Observable<string>>callbackResult).subscribe((content: any) => {\n        file.content = content;\n        this.triggerViewFileClick(file);\n      });\n    } else {\n      // Wenn der Callback ein normaler String oder Promise ist, diesen auflösen und den File-Base64 aktualisieren\n      Promise.resolve(<any>callbackResult).then((content: any) => {\n        file.content = content;\n        this.triggerViewFileClick(file);\n      });\n    }\n  }\n\n  /**\n   * Wandelt File-Objekt zu LuxFileObjects um und versucht diese Hochzuladen.\n   * Gibt ein Promise mit den neuen FileObjects zurück bzw. einen Fehler aus den internen Promises.\n   * @param files\n   */\n  async updateSelectedFiles(files: FileList | File[]) {\n    try {\n      let newFiles = [];\n      await this.mapFilesToFileObjects(files).then((fileObjects: ILuxFileObject[]) => (newFiles = fileObjects));\n      await this.uploadFiles(newFiles);\n      if (this.luxUploadActionConfig.onClick) {\n        this.luxUploadActionConfig.onClick(newFiles && newFiles.length === 1 ? newFiles[0] : newFiles);\n      }\n      this.formControl.markAsTouched();\n      this.formControl.markAsDirty();\n      return Promise.resolve(newFiles);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * Stößt das Hochladen der Dateien zu einer bestimmten URL an.\n   */\n  async uploadFiles(files: ILuxFileObject[] | ILuxFileObject) {\n    if (!this.luxUploadUrl) {\n      this.forceProgressIndeterminate = false;\n      return Promise.resolve();\n    }\n\n    if (this.luxUploadReportProgress) {\n      this.forceProgressIndeterminate = false;\n    }\n\n    this.progress = 0;\n    // Ansonsten die Dateien in einem FormData-Objekt sammeln und über den httpClient hochladen\n    const formData = new FormData();\n    let selectedFiles = [];\n    if (!files) {\n      selectedFiles = [];\n    } else if (!Array.isArray(files)) {\n      selectedFiles.push(files);\n    } else {\n      selectedFiles.push(...files);\n    }\n    selectedFiles.forEach((fileObject: ILuxFileObject) => {\n      formData.append(fileObject.name, fileObject.content);\n    });\n\n    await new Promise((resolve, reject) => {\n      const options = {};\n      if (this.luxUploadReportProgress) {\n        options['reportProgress'] = true;\n        options['observe'] = 'events';\n      }\n      options['responseType'] = 'blob';\n\n      this.http.post(this.luxUploadUrl, formData, options).subscribe(\n        (event: any) => {\n          // wenn wir eine determinierte Fortschrittsanzeige haben, dann muss der Fortschritt auch korrekt abgefangen werden\n          if (this.luxUploadReportProgress) {\n            if (event.type === HttpEventType.UploadProgress) {\n              this.progress = Math.round((event.loaded / event.total) * 100);\n            } else if (event.type === HttpEventType.Response) {\n              resolve();\n            }\n          } else {\n            resolve();\n          }\n        },\n        error => {\n          // Hier geben wir den speziellen Fehler noch mal in die console\n          console.error(error);\n          // Für den Fall das der Upload fehlschlägt, melden wir einen Fehler am Component\n          reject(error);\n          return throwError(error);\n        }\n      );\n    }).then(\n      () => {\n        this.progress = -1;\n        this.forceProgressIndeterminate = false;\n        return Promise.resolve();\n      },\n      error => {\n        this.progress = -1;\n        this.forceProgressIndeterminate = false;\n        return Promise.reject({\n          cause: LuxFileErrorCause.UploadFileError,\n          exception: error,\n          file: files\n        });\n      }\n    );\n  }\n\n  /**\n   * Liest die übergebenen Dateien aus und erzeugt daraus ein Promise, welches abgefragt werden kann.\n   * Fängt potentielle Fehler ab und gibt diese als abgelehnte Promises zurück.\n   * @param files\n   */\n  async mapFilesToFileObjects(files: FileList | File[]) {\n    this._luxSelectedFiles = [];\n    const filesArray: File[] = Array.from(files);\n    const newFiles: ILuxFileObject[] = [];\n    for (const file of filesArray) {\n      if (!file) {\n        continue;\n      }\n\n      // Prüfen ob Dateigröße überschritten worden ist\n      if (this.getFileSizeInMB(file) > this.luxMaxSizeMB) {\n        return Promise.reject({\n          cause: LuxFileErrorCause.MaxSizeError,\n          exception: this.getMaxSizeErrorMessage(file),\n          file: file\n        });\n      }\n\n      // Prüfen ob der Dateityp \"accepted\" ist\n      const splitAccepted = this.luxAccept ? this.luxAccept.split(',') : [];\n      const splitFileEnding = file.name.split('.');\n      const fileEnding = `.${splitFileEnding[splitFileEnding.length - 1]}`;\n      let isAccepted: boolean = splitAccepted.length === 0 ? true : false;\n      splitAccepted.forEach((accepted: string) => {\n        if (accepted) {\n          accepted = accepted.toLocaleLowerCase();\n\n          if (accepted === '.txt') {\n            accepted = 'text/plain';\n          }\n        }\n\n        if (!isAccepted) {\n          // Für spezielle Wildcards nutzen wir diese Umwandlung\n          switch (accepted) {\n            case 'image/*':\n              accepted = 'image';\n              break;\n            case 'video/*':\n              accepted = 'video';\n              break;\n            case 'audio/*':\n              accepted = 'audio';\n              break;\n          }\n\n          if (accepted === fileEnding.toLocaleLowerCase() || file.type.toLocaleLowerCase().indexOf(accepted) > -1) {\n            isAccepted = true;\n          }\n        }\n      });\n\n      if (!isAccepted) {\n        return Promise.reject({\n          cause: LuxFileErrorCause.FileNotAccepted,\n          exception: this.getFileNotAcceptedMessage(file),\n          file: file\n        });\n      }\n\n      if (this.luxContentsAsBlob) {\n        // Wenn direkt die Blobs genutzt werden sollen, einfach die Datei als content merken\n        newFiles.push({ name: file.name, content: <Blob>file, type: file.type });\n      } else {\n        // Das Auslesen der Datei anstoßen, wenn erfolgreich, wird die Datei zu selectedFiles hinzugefügt.\n        // Bei einem Fehler wird das Promise rejected und gibt einen Fehler zurück.\n        await this.readFile(file)\n          .then((content: any) => {\n            newFiles.push({ name: file.name, content: content, type: file.type });\n          })\n          .catch(error => {\n            return Promise.reject({\n              cause: LuxFileErrorCause.ReadingFileError,\n              exception: error,\n              file: file\n            });\n          });\n      }\n    }\n\n    // Das Array mit den neuen Dateien zurückgeben\n    return Promise.resolve(newFiles);\n  }\n\n  /**\n   * Liest (asynchron) den Base64-String aus der übergebenen Datei heraus bzw. gibt den Fehler zurück, wenn einer\n   * aufgetreten ist.\n   * @param file\n   */\n  readFile(file: File) {\n    return new Promise((resolve, reject) => {\n      const reader = new window['FileReader']();\n\n      reader.onload = fileData => resolve(fileData.target.result);\n      reader.onerror = error => reject(error);\n      reader.readAsDataURL(file);\n    });\n  }\n\n  /**\n   * Wird beim Drag-Over über dem LuxFormControl aufgerufen.\n   * @param $event\n   */\n  handleDragOver($event) {\n    this.isDragActive = true;\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    // Der Drop Effect wird nur gesetzt, wenn die Property auch\n    // vorhanden ist. In den Tests gibt es keinen Drop Effect.\n    if ($event.dataTransfer && $event.dataTransfer.dropEffect) {\n      $event.dataTransfer.dropEffect = 'copy';\n    }\n  }\n\n  /**\n   * Wird beim Drag-Leave über dem LuxFormControl aufgerufen.\n   * @param $event\n   */\n  handleDragLeave($event) {\n    if ($event.target.nodeName.toLocaleLowerCase() === 'lux-file-input') {\n      this.isDragActive = false;\n    }\n\n    $event.stopPropagation();\n    $event.preventDefault();\n  }\n\n  /**\n   * Wird beim Drop eines/mehrerer gezogener Elemente über dem LuxFormControl aufgerufen und löst\n   * die Auswähl-Methoden für die entsprechenden Dateien aus.\n   */\n  handleDrop($event) {\n    this.forceProgressIndeterminate = true;\n    this.isDragActive = false;\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    if ($event.dataTransfer) {\n      this.selectFiles($event.dataTransfer.files);\n    }\n  }\n\n  /**\n   * Funktion, die das Auswählen von Dateien handeln soll.\n   * Die erbenden Klassen implementieren diese Funktion aus.\n   */\n  abstract selectFiles(files: FileList | File[]);\n\n  /**\n   * Prüft ob der Base64-String für die Datei gesetzt ist und ob ein onClick-Aufruf für die View-Action vorhanden ist.\n   * Wenn ja, wird dieser ausgeführt.\n   * @param file\n   */\n  protected triggerViewFileClick(file: ILuxFileObject) {\n    if (file.content && this.luxViewActionConfig.onClick) {\n      this.luxViewActionConfig.onClick(file);\n    }\n  }\n\n  /**\n   * Entfernt die in dieser Component gesetzten Fehlermeldungen.\n   */\n  protected clearFormControlErrors() {\n    // Das aktuelle Fehlerobjekt auslesen\n    let errors = this.formControl.errors;\n    if (errors) {\n      // Die componentspezifischen Fehler aus dem Objekt entfernen\n      for (const cause of Object.keys(LuxFileErrorCause)) {\n        delete errors[LuxFileErrorCause[cause]];\n      }\n      // Falls errors ein leeres Objekt ist, nehmen wir stattdessen null\n      errors = Object.keys(errors).length === 0 ? null : errors;\n      // Das neue Fehlerobjekt in das FormControl schreiben\n      this.formControl.setErrors(errors);\n    }\n  }\n\n  /**\n   * Aktualisiert das Fehlerobjekt am FormControl, damit eine entsprechende Fehlermeldung angezeigt werden kann.\n   * Leert die Anzeige und gibt Events mit leerem Array aus.\n   * @param error\n   */\n  protected setFormControlErrors(error: ILuxFileError) {\n    this.forceProgressIndeterminate = false;\n    // Vorherige definierte Fehler entfernen\n    this.clearFormControlErrors();\n    // Hier aktualisieren wir das Fehlerobjekt an dem zugrunde liegenden FormControl dieser Component\n    const errors = this.formControl.errors ? this.formControl.errors : {};\n    errors[error.cause] = { file: error.file };\n    this.formControl.setErrors(errors);\n  }\n\n  /**\n   * Berechnet die Größe der übergebenen Datei in MB.\n   * @param file\n   */\n  protected getFileSizeInMB(file: File) {\n    return file.size / 1000000;\n  }\n\n  /**\n   * Gibt die Message für Überschreitung der maximalen Dateigröße zurück.\n   * @param file\n   */\n  protected getMaxSizeErrorMessage(file: File): string {\n    return (\n      `Die Datei \"${file.name}\" überschreitet mit ${+this.getFileSizeInMB(file).toFixed(2)}MB ` +\n      `die erlaubte Dateigröße von ${+this.luxMaxSizeMB.toFixed(2)}MB`\n    );\n  }\n\n  /**\n   * Gibt die Message für Fehler beim Auslesen einer Datei zurück.\n   * @param file\n   */\n  protected getReadingFileErrorMessage(file: File): string {\n    return `Beim Lesen der Datei \"${file.name}\" ist ein Fehler aufgetreten`;\n  }\n\n  /**\n   * Gibt die Message für Fehler beim Upload einer Datei zurück.\n   * @param files\n   */\n  protected getUploadFileErrorMessage(files: File[]): string {\n    if (!files) {\n      return 'Das Hochladen ist fehlgeschlagen';\n    }\n    return `Das Hochladen der ${files.length > 1 ? 'ausgewählten Dateien' : 'ausgewählten Datei'} ist fehlgeschlagen`;\n  }\n\n  /**\n   * Gibt die Message für falsche Dateitypen zurück.\n   * @param file\n   */\n  protected getFileNotAcceptedMessage(file: File): string {\n    return `Die Datei \"${file.name}\" hat einen nicht akzeptierten Dateityp`;\n  }\n\n  /**\n   * Gibt die Message für falsche Dateitypen zurück.\n   * @param file\n   */\n  protected getMultipleForbiddenMessage(): string {\n    return `Es darf nur eine Datei ausgewählt werden`;\n  }\n\n  /**\n   * Meldet dem ScreenReader, dass gerade eine/mehrere Dateien bearbeitet werden (Ladeanzeige).\n   * @param multiple\n   */\n  protected announceFileProcess(multiple: boolean) {\n    this.liveAnnouncer.announce(\n      `Bitte warten. Die ${multiple ? 'Dateien werden' : 'Datei wird'} verarbeitet.`,\n      'assertive'\n    );\n  }\n\n  /**\n   * Meldet dem ScreenReader, dass alle Dateien entfernt werden sollen.\n   */\n  protected announceAllFilesRemove() {\n    this.liveAnnouncer.announce(`Alle Dateien werden entfernt.`, 'assertive');\n  }\n\n  /**\n   * Meldet dem ScreenReader, dass eine bestimmte Datei entfernt werden soll.\n   * @param fileName\n   */\n  protected announceFileRemove(fileName: string) {\n    this.liveAnnouncer.announce(`Die Datei ${fileName} wird entfernt.`, 'assertive');\n  }\n\n  /**\n   * Gibt wieder, ob Drag-and-Drop gerade aktiv und möglich ist.\n   */\n  private isDnDAllowed(): boolean {\n    return this.luxDnDActive && !this.luxDisabled && !this.luxReadonly;\n  }\n\n  // region Overridden methods\n\n  protected errorMessageModifier(value: any, errors: any) {\n    if (errors[LuxFileErrorCause.MaxSizeError]) {\n      return this.getMaxSizeErrorMessage(errors[LuxFileErrorCause.MaxSizeError].file);\n    } else if (errors[LuxFileErrorCause.ReadingFileError]) {\n      return this.getReadingFileErrorMessage(errors[LuxFileErrorCause.ReadingFileError].file);\n    } else if (errors[LuxFileErrorCause.UploadFileError]) {\n      return this.getUploadFileErrorMessage(errors[LuxFileErrorCause.UploadFileError].file);\n    } else if (errors[LuxFileErrorCause.FileNotAccepted]) {\n      return this.getFileNotAcceptedMessage(errors[LuxFileErrorCause.FileNotAccepted].file);\n    } else if (errors[LuxFileErrorCause.MultipleForbidden]) {\n      return this.getMultipleForbiddenMessage();\n    }\n\n    return undefined;\n  }\n\n  protected notifyFormValueChanged() {\n    this.luxSelectedFilesChange.emit(this.luxSelectedFiles);\n\n    // Wir leeren nach jedem Value-Change das Input, da wir das FormControl bereits als SSoT besitzen\n    // und das Input durch den Browser gelegentlich sonst geblockt werden (wenn eine Datei ausgewählt worden ist)\n    this.fileuploadInput.nativeElement.value = null;\n  }\n\n  protected updateValidators(validators: ValidatorFn | ValidatorFn[]) {\n    if (!validators && this.luxRequired) {\n      validators = Validators.required;\n    }\n\n    super.updateValidators(validators);\n  }\n\n  protected initFormValueSubscription() {\n    this._formValueChangeSubscr = this.formControl.valueChanges.subscribe(() => {\n      // Wenn die Dateien erfolgreich gelesen werden konnten, die (spezifischen) Fehler entfernen\n      this.clearFormControlErrors();\n    });\n\n    if (this._initialValue !== null && this._initialValue !== undefined) {\n      this.setValue(this._initialValue);\n    }\n  }\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxSelectedFilesChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxSelectedFiles);\n  }\n\n  // endregion\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../../lux-util/lux-console.service';\nimport { LuxFormFileBase } from '../../lux-form-model/lux-form-file-base.class';\nimport { ILuxFileError } from '../lux-file-model/lux-file-error.interface';\nimport { ILuxFileObject } from '../lux-file-model/lux-file-object.interface';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { HttpClient } from '@angular/common/http';\nimport { LuxComponentsConfigService } from '../../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-file-input',\n  templateUrl: './lux-file-input.component.html',\n  styleUrls: ['./lux-file-input.component.scss']\n})\nexport class LuxFileInputComponent extends LuxFormFileBase {\n  @ViewChild('visibleInput', { read: ElementRef, static: false }) visibleInput: ElementRef;\n\n  @Output() luxBlur: EventEmitter<any> = new EventEmitter<any>();\n  @Output() luxFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input() luxPlaceholder: string = '';\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    http: HttpClient,\n    liveAnnouncer: LiveAnnouncer,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config, http, liveAnnouncer);\n  }\n\n  /**\n   * Wird bei der Auswahl von Dateien (Dialog oder DnD) aufgerufen.\n   * Aktualisiert die aktuell selektierten Dateien, stößt einen Upload an, handelt Fehlermeldungen und\n   * emittet die entspechenden Events.\n   * @param files\n   */\n  selectFiles(files: File[]) {\n    this.formControl.markAsTouched();\n    this.formControl.markAsDirty();\n    this.forceProgressIndeterminate = true;\n    this.announceFileProcess(files && files.length > 1);\n\n    if (!files || files.length === 0) {\n      this.forceProgressIndeterminate = false;\n      return;\n    }\n\n    // Timeout, um Flackern durch Progress zu vermeiden\n    setTimeout(() => {\n      this.updateSelectedFiles(files).then(\n        (newFiles: ILuxFileObject[]) => {\n          this.luxSelectedFiles = newFiles[0];\n          this.notifyFormValueChanged();\n        },\n        error => this.setFormControlErrors(error)\n      );\n    }, this.defaultReadFileDelay);\n  }\n\n  // region Overridden methods\n\n  protected errorMessageModifier(value: any, errors: any): string | undefined {\n    if (errors.required) {\n      return 'Es muss eine Datei ausgewählt werden';\n    }\n    return super.errorMessageModifier(value, errors);\n  }\n\n  protected setFormControlErrors(error: ILuxFileError) {\n    this.luxSelectedFiles = undefined;\n\n    super.setFormControlErrors(error);\n  }\n\n  // endregion\n}\n","import {\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../../lux-util/lux-console.service';\nimport { LuxFormFileBase } from '../../lux-form-model/lux-form-file-base.class';\nimport { HttpClient } from '@angular/common/http';\nimport { LuxFileErrorCause } from '../lux-file-model/lux-file-error.interface';\nimport { Subscription } from 'rxjs';\nimport { ILuxFileListActionConfig } from '../lux-file-model/lux-file-list-action-config.interface';\nimport { ILuxFileObject } from '../lux-file-model/lux-file-object.interface';\nimport { LuxComponentsConfigService } from '../../../lux-components-config/lux-components-config.service';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { LuxCardComponent } from '../../../lux-layout/lux-card/lux-card.component';\n\n@Component({\n  selector: 'lux-file-list',\n  templateUrl: './lux-file-list.component.html',\n  styleUrls: ['./lux-file-list.component.scss']\n})\nexport class LuxFileListComponent extends LuxFormFileBase implements AfterViewInit, AfterViewChecked, OnDestroy {\n  private _fileEntryNodesChangeSubscr: Subscription;\n\n  protected _luxUploadActionConfig: ILuxFileListActionConfig = {\n    disabled: false,\n    disabledHeader: false,\n    hidden: false,\n    hiddenHeader: false,\n    iconName: 'fas fa-cloud-upload-alt',\n    iconNameHeader: 'fas fa-cloud-upload-alt',\n    label: 'Hochladen',\n    labelHeader: 'Neue Dateien hochladen'\n  };\n  protected _luxDeleteActionConfig: ILuxFileListActionConfig = {\n    disabled: false,\n    disabledHeader: false,\n    hidden: false,\n    hiddenHeader: false,\n    iconName: 'fas fa-trash',\n    iconNameHeader: 'fas fa-trash',\n    label: 'Löschen',\n    labelHeader: 'Alle Dateien entfernen'\n  };\n\n  fileIcons: string[] = [];\n\n  rowWidth = 0;\n  iconActionBarWidth = 50;\n  alwaysVisibleView = false;\n  alwaysVisibleUpload = false;\n  alwaysVisibleDownload = false;\n  alwaysVisibleDelete = false;\n\n  @ViewChildren('fileEntry', { read: ElementRef }) fileEntries: QueryList<ElementRef>;\n  @ViewChild('fileuploadSingle', { read: ElementRef, static: true }) fileuploadSingleInput: ElementRef;\n  @ViewChild(LuxCardComponent, { read: ElementRef, static: true }) fileCard: ElementRef;\n\n  @Input() luxShowPreview: boolean = true;\n  @Input() luxMultiple: boolean = true;\n  @Input() luxBackgroundIconName: string = 'fas fa-cloud-upload-alt';\n\n  get luxUploadActionConfig(): ILuxFileListActionConfig {\n    return this._luxUploadActionConfig;\n  }\n\n  @Input() set luxUploadActionConfig(config: ILuxFileListActionConfig) {\n    if (config) {\n      this._luxUploadActionConfig = config;\n    }\n  }\n\n  get luxDeleteActionConfig(): ILuxFileListActionConfig {\n    return this._luxDeleteActionConfig;\n  }\n\n  @Input() set luxDeleteActionConfig(config: ILuxFileListActionConfig) {\n    if (config) {\n      this._luxDeleteActionConfig = config;\n    }\n  }\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    http: HttpClient,\n    liveAnnouncer: LiveAnnouncer,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config, http, liveAnnouncer);\n  }\n\n  ngAfterViewInit() {\n    this._fileEntryNodesChangeSubscr = this.fileEntries.changes.subscribe(() => {\n      this.updateIconAndImage();\n    });\n\n    this.updateIconAndImage();\n  }\n\n  private updateIconAndImage() {\n    this.setFileIcons();\n\n    if (this.luxShowPreview) {\n      this.setImgSrcs();\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    if (this._fileEntryNodesChangeSubscr) {\n      this._fileEntryNodesChangeSubscr.unsubscribe();\n    }\n  }\n\n  shouldDisplayPreviewImg(index: number): boolean {\n    return (\n      this.luxShowPreview && this.fileIcons && this.fileIcons[index] && this.fileIcons[index] === 'fas fa-file-image'\n    );\n  }\n\n  /**\n   * Entfernt eine Datei aus den selektierten Dateien.\n   * @param index\n   */\n  removeFile(index: number) {\n    this.formControl.markAsTouched();\n    this.formControl.markAsDirty();\n\n    // Wenn mehrere Dateien selektiert sind, diese nach der entfernten Datei filtern ansonsten \"undefined\" nutzen\n    const newFiles = Array.isArray(this.luxSelectedFiles)\n      ? this.luxSelectedFiles.filter((file, searchIndex) => searchIndex !== index)\n      : undefined;\n\n    // Via LiveAnnouncer mitteilen welche Datei entfernt wird\n    this.announceFileRemove(\n      Array.isArray(this.luxSelectedFiles) ? this.luxSelectedFiles[index].name : this.luxSelectedFiles.name\n    );\n\n    // Wir entfernen hier nur eine Datei, deshalb ist das neue Auslesen der Base64-Strings nicht nötig\n    this.uploadFiles(newFiles).then(\n      () => {\n        this.luxSelectedFiles = newFiles && newFiles.length === 1 ? newFiles[0] : newFiles;\n        this.notifyFormValueChanged();\n      },\n      error => this.setFormControlErrors(error)\n    );\n    if (this.luxDeleteActionConfig.onClick) {\n      this.luxDeleteActionConfig.onClick();\n    }\n  }\n\n  /**\n   * Fügt weitere Dateien zu den bereits vorhandenen hinzu bzw. ersetzt diese.\n   * @param files\n   */\n  selectFiles(files: FileList | File[]) {\n    this.formControl.markAsTouched();\n    this.formControl.markAsDirty();\n    this.forceProgressIndeterminate = true;\n    this.announceFileProcess(files && files.length > 1);\n\n    if (!files || files.length === 0) {\n      this.forceProgressIndeterminate = false;\n      return;\n    }\n\n    // Timeout, um Flackern durch Progress zu vermeiden\n    setTimeout(() => {\n      // Prüfen ob die Dateien bereits vorhanden sind\n      let selectedFilesArray = [];\n      const replaceableFilesMap = new Map<number, File>();\n      if (this.luxSelectedFiles) {\n        files = Array.from(files);\n        selectedFilesArray = Array.isArray(this.luxSelectedFiles) ? this.luxSelectedFiles : [this.luxSelectedFiles];\n        // zu ersetzende Indizes herausfinden\n        files.forEach((file: File) => {\n          const index = selectedFilesArray.findIndex((compareFile: ILuxFileObject) => compareFile.name === file.name);\n          if (index > -1) {\n            replaceableFilesMap.set(index, file);\n          }\n        });\n      }\n\n      // Wenn mehrere Dateien selektiert sind und luxMultiple dies unterbindet, Fehler werfen und Fn beenden\n      // Ausnahme ist, wenn die Dateien nur ersetzt werden sollen\n      if (\n        !this.luxMultiple &&\n        ((!this.luxSelectedFiles && files.length > 1) ||\n          (this.luxSelectedFiles && this.luxSelectedFiles.length > 1) ||\n          (this.luxSelectedFiles && replaceableFilesMap.size !== files.length))\n      ) {\n        this.setFormControlErrors({\n          cause: LuxFileErrorCause.MultipleForbidden,\n          exception: this.getMultipleForbiddenMessage(),\n          file: null\n        });\n        return;\n      }\n\n      this.updateSelectedFiles(files).then(\n        (newFiles: ILuxFileObject[]) => {\n          const tempSelectedFiles = selectedFilesArray;\n\n          // die zu ersetzenden Dateien durchgehen und aktualisieren\n          replaceableFilesMap.forEach((file: File, index: number) => {\n            const replaceableFileObject = newFiles.find((newFile: ILuxFileObject) => newFile.name === file.name);\n            // das gefundene Objekt aus den newFiles entfernen\n            newFiles = newFiles.filter(newFile => newFile !== replaceableFileObject);\n            // die selectedFiles aktualisieren\n            tempSelectedFiles[index] = replaceableFileObject;\n          });\n          // die übrigen neuen Dateien anfügen\n          tempSelectedFiles.push(...newFiles);\n\n          this.luxSelectedFiles =\n            tempSelectedFiles && tempSelectedFiles.length === 1 ? tempSelectedFiles[0] : tempSelectedFiles;\n          this.notifyFormValueChanged();\n        },\n        error => this.setFormControlErrors(error)\n      );\n    }, this.defaultReadFileDelay);\n  }\n\n  /**\n   * Aktualisiert die Preview-Bilder für die (Image-)Dateien.\n   *\n   * Aktualisierung absichtlich via Funktion und nicht Property-Binding, da potentiell Stack-Size Fehler auftreten,\n   * wenn (große) Base64-Strings gegen die src gebunden werden.\n   */\n  private setImgSrcs() {\n    this.fileEntries.forEach((item: ElementRef, index: number) => {\n      const imgElement: HTMLImageElement = (<HTMLElement>item.nativeElement).querySelector('img');\n      if (imgElement && this.luxSelectedFiles) {\n        const targetFileContent = Array.isArray(this.luxSelectedFiles)\n          ? this.luxSelectedFiles[index].content\n          : this.luxSelectedFiles.content;\n        if (targetFileContent instanceof Blob) {\n          this.readFile(<File>targetFileContent).then((content: string) => {\n            imgElement.src = content;\n          });\n        } else {\n          imgElement.src = targetFileContent;\n        }\n      }\n    });\n  }\n\n  /**\n   * Setzt die Icons für die Elemente in der Auflistung\n   */\n  private setFileIcons() {\n    if (!this.luxSelectedFiles) {\n      return;\n    }\n\n    this.fileIcons = [];\n    const selectedFiles = [];\n\n    if (!Array.isArray(this.luxSelectedFiles)) {\n      selectedFiles.push(this.luxSelectedFiles);\n    } else {\n      selectedFiles.push(...this.luxSelectedFiles);\n    }\n    selectedFiles.forEach((selectedFile: ILuxFileObject) => {\n      let newFileIcon = 'fas fa-file';\n      if (selectedFile.type) {\n        if (selectedFile.type.indexOf('image') > -1) {\n          newFileIcon = 'fas fa-file-image';\n        } else if (selectedFile.type.indexOf('pdf') > -1) {\n          newFileIcon = 'fas fa-file-pdf';\n        } else if (selectedFile.type.indexOf('spreadsheet') > -1) {\n          newFileIcon = 'fas fa-file-excel';\n        } else if (selectedFile.type.indexOf('officedocument') > -1) {\n          newFileIcon = 'fas fa-file-signature';\n        } else if (selectedFile.type.indexOf('json') > -1) {\n          newFileIcon = 'fas fa-file-code';\n        }\n      }\n      this.fileIcons.push(newFileIcon);\n    });\n    this.cdr.detectChanges();\n  }\n\n  ngAfterViewChecked(): void {\n    this.resizeIconActionBar();\n  }\n\n  isArray(object: any): boolean {\n    return object && Array.isArray(object);\n  }\n\n  private resizeIconActionBar() {\n    if (this.fileEntries && this.fileEntries.first && this.cdr) {\n      const newRowWidth = this.fileEntries.first.nativeElement.offsetWidth;\n      if (this.rowWidth !== newRowWidth) {\n        this.rowWidth = newRowWidth;\n\n        if (this.rowWidth >= 500) {\n          this.iconActionBarWidth = 200;\n          this.alwaysVisibleView = true;\n          this.alwaysVisibleUpload = true;\n          this.alwaysVisibleDownload = true;\n          this.alwaysVisibleDelete = true;\n        } else if (this.rowWidth >= 400) {\n          this.iconActionBarWidth = 150;\n          this.alwaysVisibleView = false;\n          this.alwaysVisibleUpload = false;\n          this.alwaysVisibleDownload = true;\n          this.alwaysVisibleDelete = true;\n        } else {\n          this.iconActionBarWidth = 50;\n          this.alwaysVisibleView = false;\n          this.alwaysVisibleUpload = false;\n          this.alwaysVisibleDownload = false;\n          this.alwaysVisibleDelete = false;\n        }\n\n        this.cdr.detectChanges();\n      }\n    }\n  }\n\n  // region Overridden methods\n\n  protected errorMessageModifier(value: any, errors: any): string | undefined {\n    if (errors.required) {\n      return 'Es muss mindestens eine Datei ausgewählt werden';\n    }\n    return super.errorMessageModifier(value, errors);\n  }\n\n  protected triggerViewFileClick(file: ILuxFileObject) {\n    super.triggerViewFileClick(file);\n\n    this.updateIconAndImage();\n  }\n\n  protected notifyFormValueChanged() {\n    super.notifyFormValueChanged();\n    this.formControl.updateValueAndValidity();\n\n    this.fileuploadSingleInput.nativeElement.value = null;\n  }\n\n  // endregion\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n/**\n * Diese Component ist nur eine leichte Ergänzung zu LuxProgress und wird nicht vom Modul exportiert.\n *\n * Leider musste das CSS kopiert werden, da wir hier nicht direkt LuxProgress nutzen können.\n * (Stand: 12.06.2019, LuxProgress ist Teil des LuxCommonModule und sorgt für Cycle-Dependencies) - DRon\n */\n@Component({\n  selector: 'lux-file-progress',\n  templateUrl: './lux-file-progress.component.html',\n  styleUrls: ['./lux-file-progress.component.scss']\n})\nexport class LuxFileProgressComponent implements OnInit {\n  @Input() luxProgress: number = 0;\n  @Input() luxMode: 'determinate' | 'indeterminate' = 'indeterminate';\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-input-prefix',\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: []\n})\nexport class LuxInputPrefixComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-input-suffix',\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: []\n})\nexport class LuxInputSuffixComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { ChangeDetectorRef, Component, ContentChild, ElementRef, Input, Optional, ViewChild } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxInputPrefixComponent } from './lux-input-subcomponents/lux-input-prefix.component';\nimport { LuxInputSuffixComponent } from './lux-input-subcomponents/lux-input-suffix.component';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormInputBaseClass } from '../lux-form-model/lux-form-input-base.class';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-input',\n  templateUrl: './lux-input.component.html',\n  styleUrls: ['./lux-input.component.scss']\n})\nexport class LuxInputComponent extends LuxFormInputBaseClass {\n  private readonly symbolRegExp = /[,.]/;\n\n  @Input() luxType: string = 'text';\n  @Input() luxNumberAlignLeft: boolean = false;\n  @Input() luxMaxLength: number;\n  @ContentChild(LuxInputPrefixComponent, { static: false }) inputPrefix: LuxInputPrefixComponent;\n  @ContentChild(LuxInputSuffixComponent, { static: false }) inputSuffix: LuxInputSuffixComponent;\n  @ViewChild('input', { read: ElementRef, static: false }) inputElement: ElementRef;\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  /**\n   * Wird bei jedem Tastendruck auf dem Inputfeld aufgerufen.\n   * @param $event\n   */\n  onKeyDown($event: KeyboardEvent) {\n    // Soll nur für number-Inputs greifen\n    if (this.inputElement) {\n      const value = this.inputElement.nativeElement.value;\n      // Doppelte Punkt-/Komma-Setzung und E's vermeiden\n      if (\n        value &&\n        this.symbolRegExp.test($event.key) &&\n        (this.inputElement.nativeElement.value.match(this.symbolRegExp) || []).length > 0\n      ) {\n        $event.preventDefault();\n      }\n    }\n  }\n}\n","import { LuxFormComponentBase } from './lux-form-component-base.class';\nimport { ChangeDetectorRef, EventEmitter, Input, Output, SimpleChanges } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n/**\n * Basis-Klasse für FormComponents, die einen ähnlichen Grundaufbau für die Auswahl von\n * Optionen aus einem Array anbieten (Radio-Buttons und Selects z.B.).\n */\nexport abstract class LuxFormSelectableBase extends LuxFormComponentBase {\n  private _luxOptions: any[] = [];\n\n  @Output() luxSelectedChange: EventEmitter<any> = new EventEmitter();\n\n  @Input() luxOptionLabelProp: string = '';\n  @Input() luxTagId: string;\n  @Input() luxPickValue: (selected) => {};\n  @Input() luxReadonly: boolean;\n  @Input() luxCompareWith = (o1, o2) => o1 === o2;\n\n  get luxSelected(): any {\n    return this.getValue();\n  }\n\n  @Input() set luxSelected(selected: any) {\n    this.setValue(selected);\n  }\n\n  get luxOptions(): any[] {\n    return this._luxOptions;\n  }\n\n  @Input() set luxOptions(options: any[]) {\n    this._luxOptions = options;\n    this.checkSelectedAndUpdate(this.luxSelected);\n  }\n\n  protected constructor(\n    controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  // region Overridden methods\n\n  notifyFormValueChanged(formValue: any) {\n    this.checkSelectedAndUpdate(formValue);\n  }\n\n  // endregion\n\n  /**\n   * Versucht, wenn Options und FormControl vorhanden sind, den selected-Wert mit den Options\n   * zu vergleichen und dann auch wenn möglich als luxSelected-Wert zu sichern.\n   * @param selected\n   */\n  private checkSelectedAndUpdate(selected: any) {\n    if (this.luxOptions && this.luxOptions.length > 0 && this.formControl) {\n      if (this.luxPickValue && selected instanceof Object && !Array.isArray(selected)) {\n        // Wenn der Wert zufälligerweise noch ein Objekt sein sollte, versuchen den Key auszulesen\n        selected = this.luxPickValue(selected);\n\n        // Da der Wert neu gesetzt wurde, diesen im nächsten Zyklus erst in die Werte schreiben\n        setTimeout(() => {\n          this.checkSelectedAndUpdate(selected);\n        });\n      } else {\n        // Für den Fall, das der eingesetzte Wert sich doch noch vom FormControl-Value unterscheidet,\n        // diesen ergänzen\n        if (this.luxSelected !== selected) {\n          this.luxSelected = selected;\n        }\n        this.checkSelectedInOptions(selected);\n        setTimeout(() => {\n          this.luxSelectedChange.emit(selected);\n        });\n      }\n    }\n  }\n\n  /**\n   * Prüft ob der übergebene Wert in den luxOptions ist.\n   * Kann auch ein Array als \"selected\" enthalten.\n   * Wenn der Wert nicht gefunden werden konnte wird eine Fehlermeldung in der console ausgegeben.\n   * @param selected\n   */\n  private checkSelectedInOptions(selected: any) {\n    const selectedAsArray = Array.isArray(selected) ? selected : [selected];\n    if (selected && this.luxOptions && !this.allSelectedInOptions(selectedAsArray)) {\n      // Selected nicht in Options = einen Fehler in die Console loggen\n      this.logSelectedNotFound(selected);\n    }\n  }\n\n  /**\n   * Prüft ob die übergebenen Select-Objekte in den luxOptions enthalten sind.\n   * @param selectedAsArray\n   */\n  private allSelectedInOptions(selectedAsArray: any[]): boolean {\n    // Prüfen ob ein Unterarray von Elementen existiert.\n    const optionsHasSubarray =\n      this.luxOptions.length === 0\n        ? false\n        : // Dieses kann direkt in den Options stehen oder als value-Property\n          Array.isArray(this.luxOptions[0]) ||\n          (!!this.luxPickValue && Array.isArray(this.luxPickValue(this.luxOptions[0])));\n\n    const targetLength = optionsHasSubarray ? 1 : selectedAsArray.length;\n    const length = this.luxOptions.filter((optionEntry: any) => {\n      if (optionsHasSubarray) {\n        return this.luxPickValue\n          ? this.luxPickValue(optionEntry) === selectedAsArray\n          : this.compareObjects(optionEntry, selectedAsArray);\n      } else {\n        return selectedAsArray.find((selectedEntry: any | any[]) => {\n          return this.luxPickValue\n            ? this.luxPickValue(optionEntry) === selectedEntry\n            : this.compareObjects(optionEntry, selectedEntry);\n        });\n      }\n    }).length;\n\n    return length === targetLength;\n  }\n\n  /**\n   * Loggt die Fehlermeldung in die Console, wenn das neue Value-Objekt nicht in den Options gefunden\n   * werden konnte.\n   * @param selected\n   */\n  private logSelectedNotFound(selected: any) {\n    this.logger.error(\n      `\\n### Das Objekt ${JSON.stringify(selected)} ist nicht Teil der möglichen Optionen.\\n` +\n        `\\n### Komponente: \"${this}\"\\n` +\n        `Prüfen Sie evtl. die luxCompareWith-Funktion, um Properties anstelle ganzer Objekte zu vergleichen.`\n    );\n  }\n\n  /**\n   * Kapselung von der übergebenen luxCompareWith-Funktion.\n   * Fängt undefinierte Objekte ab und returned stattdessen false.\n   * @param o1\n   * @param o2\n   */\n  compareObjects = (o1, o2) => {\n    if ((!o1 && o2) || (o1 && !o2)) {\n      return false;\n    } else if (this.luxCompareWith && !!o1 && !!o2) {\n      return this.luxCompareWith(o1, o2);\n    } else {\n      return o1 === o2;\n    }\n  };\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxSelectedChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxSelected);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Optional,\n  TemplateRef\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormSelectableBase } from '../lux-form-model/lux-form-selectable-base.class';\nimport { Subscription } from 'rxjs';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-radio',\n  templateUrl: './lux-radio.component.html',\n  styleUrls: ['./lux-radio.component.scss']\n})\nexport class LuxRadioComponent extends LuxFormSelectableBase implements OnDestroy {\n  forceVertical: boolean = false;\n\n  // Potentiell eingebettetes Template für Darstellung der Labels\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n\n  @HostBinding('class.lux-pb-3') pb3: boolean = true;\n  @Input() luxGroupName: string = '';\n  @Input() luxOrientationVertical: boolean = true;\n\n  private mediaSubscription$: Subscription;\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService,\n    private mediaObserver: LuxMediaQueryObserverService\n  ) {\n    super(controlContainer, cdr, logger, config);\n\n    this.mediaSubscription$ = this.mediaObserver.getMediaQueryChangedAsObservable().subscribe(() => {\n      this.forceVertical = this.mediaObserver.isXS();\n    });\n    this.forceVertical = this.mediaObserver.isXS();\n  }\n\n  get isVertical(): boolean {\n    return this.luxOrientationVertical || this.forceVertical;\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.mediaSubscription$.unsubscribe();\n    this.mediaSubscription$ = null;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Input,\n  Optional,\n  QueryList,\n  TemplateRef,\n  ViewChildren\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormSelectableBase } from '../lux-form-model/lux-form-selectable-base.class';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { MatOption } from '@angular/material';\n\n@Component({\n  selector: 'lux-select',\n  templateUrl: './lux-select.component.html',\n  styleUrls: ['./lux-select.component.scss']\n})\nexport class LuxSelectComponent extends LuxFormSelectableBase {\n  // Potentiell eingebettetes Template für Darstellung der Labels\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n  @ViewChildren(MatOption) matOptions: QueryList<MatOption>;\n\n  @Input() luxPlaceholder: string;\n  @Input() luxMultiple: boolean = false;\n  @Input() luxTagId: string;\n\n  displayedViewValue: string;\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService,\n    private liveAnnouncer: LiveAnnouncer\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  notifyFormValueChanged(formValue: any) {\n    super.notifyFormValueChanged(formValue);\n    const matOption = this.matOptions.find((option: MatOption) => option.value === formValue);\n    if (matOption) {\n      this.displayedViewValue = matOption.viewValue;\n      this.liveAnnouncer.announce(matOption.viewValue, 'assertive');\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { MatSlider, MatSliderChange } from '@angular/material';\nimport { LuxFormComponentBase } from '../lux-form-model/lux-form-component-base.class';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\nexport declare type SLIDER_TICK_INTERVAL = 'auto' | number;\nexport declare type SLIDER_COLORS = 'primary' | 'accent' | 'warn';\n\n// @dynamic Erklärung steht in der Datei \"lux-decorators.ts\".\n@Component({\n  selector: 'lux-slider',\n  templateUrl: './lux-slider.component.html',\n  styleUrls: ['./lux-slider.component.scss']\n})\nexport class LuxSliderComponent extends LuxFormComponentBase implements OnInit, OnChanges {\n  @ViewChild(MatSlider, { static: false }) matSlider: MatSlider;\n\n  @Output() luxChange: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n  @Output() luxInput: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n  @Output() luxValueChange: EventEmitter<number> = new EventEmitter<number>();\n  @Output() luxValuePercent: EventEmitter<number> = new EventEmitter<number>();\n\n  @Input() luxColor: SLIDER_COLORS = 'primary';\n  @Input() luxVertical: boolean = false;\n  @Input() luxInvert: boolean = false;\n  @Input() luxShowThumbLabel: boolean = true;\n  @Input() luxShowThumbLabelAlways: boolean = true;\n  @Input() luxTickInterval: SLIDER_TICK_INTERVAL = 0;\n  @Input() luxTagId: string = undefined;\n  @Input() luxDisplayWith: (value: number | null) => string | number;\n\n  get luxValue(): number {\n    return this.getValue();\n  }\n\n  @Input() set luxValue(value: number) {\n    if (!this.luxReadonly && !this.luxDisabled) {\n      this.setValue(value);\n    }\n  }\n\n  _luxMax: number = 100;\n  _luxRequired: boolean = false;\n  _luxMin: number = 0;\n  _luxStep: number = 1;\n\n  get luxMax() {\n    return this._luxMax;\n  }\n\n  @Input() set luxMax(value: number) {\n    this._luxMax = value;\n\n    if (value > 0 && value > this.luxMin) {\n      this._luxMax = value;\n    }\n  }\n\n  get luxMin() {\n    return this._luxMin;\n  }\n\n  @Input() set luxMin(value: number) {\n    this._luxMin = value;\n\n    if (value >= 0 && value < this.luxMax) {\n      this._luxMin = value;\n    }\n  }\n\n  get luxStep() {\n    return this._luxStep;\n  }\n\n  @Input() set luxStep(value: number) {\n    this._luxStep = value;\n\n    if (value <= this.luxMax - this.luxMin) {\n      this._luxStep = value;\n    }\n  }\n\n  get luxRequired() {\n    return this._luxRequired;\n  }\n\n  @Input() set luxRequired(value: boolean) {\n    this._luxRequired = value;\n\n    if (value === true) {\n      this.logger.error('Der LuxSlider kann nicht als Required-Feld deklariert werden.');\n    }\n  }\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.formControl.statusChanges.subscribe((status: string) => {\n      if (status === 'DISABLED') {\n        this.redrawSliderWorkaround();\n      }\n    });\n  }\n\n  ngOnChanges(simpleChanges) {\n    super.ngOnChanges(simpleChanges);\n    if (simpleChanges.luxDisabled) {\n      this.redrawSliderWorkaround();\n    }\n  }\n\n  /**\n   * Wird beim Aendern des Slider-Wertes aufgerufen.\n   * @param changeEvent\n   */\n  onChange(changeEvent: MatSliderChange) {\n    this.luxValue = changeEvent.value;\n    this.luxChange.emit(changeEvent);\n  }\n\n  /**\n   * Wird beim Bewegen des Sliders aufgerufen.\n   * @param inputEvent\n   */\n  onInput(inputEvent: MatSliderChange) {\n    this.luxValue = inputEvent.value;\n    this.luxInput.emit(inputEvent);\n    if (!this.formControl.touched) {\n      this.formControl.markAsTouched();\n    }\n  }\n\n  // region Overridden methods\n  notifyFormValueChanged(formValue: any) {\n    if (this.luxValue < this.luxMin) {\n      setTimeout(() => {\n        this.luxValue = this.luxMin;\n      });\n    } else if (this.luxValue > this.luxMax) {\n      setTimeout(() => {\n        this.luxValue = this.luxMax;\n      });\n    } else {\n      this.luxValueChange.emit(formValue);\n      this.luxValuePercent.emit(((formValue - this.luxMin) * 100) / (this.luxMax - this.luxMin));\n    }\n  }\n  // endregion\n\n  /**\n   * Workaround, ohne den der Slider leider nicht beim Wechsel zum disabled-State den Gab\n   * um den Thumb herum zeichnet. - dron\n   */\n  private redrawSliderWorkaround() {\n    if (!this.matSlider) {\n      return;\n    }\n\n    this.matSlider.step = this.luxStep - 1;\n    setTimeout(() => {\n      this.matSlider.step = this.luxStep;\n    });\n  }\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxValueChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxValue);\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnInit, Optional } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormInputBaseClass } from '../lux-form-model/lux-form-input-base.class';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-textarea',\n  templateUrl: './lux-textarea.component.html',\n  styleUrls: ['./lux-textarea.component.scss']\n})\nexport class LuxTextareaComponent extends LuxFormInputBaseClass implements OnInit {\n  @Input() luxMaxRows: number = -1;\n  @Input() luxMinRows: number = 0;\n  @Input() luxMaxLength: number;\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n}\n","import { ChangeDetectorRef, Component, OnInit, Optional } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormCheckableBaseClass } from '../lux-form-model/lux-form-checkable-base.class';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-toggle',\n  templateUrl: './lux-toggle.component.html',\n  styleUrls: ['./lux-toggle.component.scss']\n})\nexport class LuxToggleComponent extends LuxFormCheckableBaseClass implements OnInit {\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[luxFileCapture]'\n})\nexport class LuxFileCaptureDirective {\n  _luxFileCapture: string;\n\n  @Input()\n  get luxFileCapture() {\n    return this._luxFileCapture;\n  }\n\n  set luxFileCapture(label: string) {\n    this._luxFileCapture = label;\n\n    if (this._luxFileCapture) {\n      this.renderer.setAttribute(this.elementRef.nativeElement, 'capture', this._luxFileCapture);\n    } else {\n      this.renderer.removeAttribute(this.elementRef.nativeElement, 'capture');\n    }\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {}\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[luxMaxLengthAttr]'\n})\nexport class LuxMaxLengthDirective {\n  _luxMaxLengthAttr: string;\n\n  @Input()\n  get luxMaxLengthAttr() {\n    return this._luxMaxLengthAttr;\n  }\n\n  set luxMaxLengthAttr(maxLength: string) {\n    this._luxMaxLengthAttr = maxLength;\n\n    if (this._luxMaxLengthAttr) {\n      this.renderer.setAttribute(this.elementRef.nativeElement, 'maxlength', this._luxMaxLengthAttr);\n    } else {\n      this.renderer.removeAttribute(this.elementRef.nativeElement, 'maxlength');\n    }\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatNativeDateModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule\n} from '@angular/material';\nimport { LuxActionModule } from '../lux-action/lux-action.module';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxLayoutModule } from '../lux-layout/lux-layout.module';\nimport { LuxPipesModule } from '../lux-pipes/lux-pipes.module';\nimport { LuxMediaQueryObserverService } from '../lux-util/lux-media-query-observer.service';\nimport { LuxAutocompleteComponent } from './lux-autocomplete/lux-autocomplete.component';\nimport { LuxCheckboxComponent } from './lux-checkbox/lux-checkbox.component';\nimport { LuxChipGroupComponent } from './lux-chips/lux-chips-subcomponents/lux-chip-group.component';\nimport { LuxChipComponent } from './lux-chips/lux-chips-subcomponents/lux-chip.component';\nimport { LuxChipsComponent } from './lux-chips/lux-chips.component';\nimport { LuxDatepickerComponent } from './lux-datepicker/lux-datepicker.component';\nimport { LuxFileInputComponent } from './lux-file/lux-file-input/lux-file-input.component';\nimport { LuxFileListComponent } from './lux-file/lux-file-list/lux-file-list.component';\nimport { LuxFileProgressComponent } from './lux-file/lux-file-subcomponents/lux-file-progress/lux-file-progress.component';\nimport { LuxFormHintComponent } from './lux-form-control/lux-form-control-subcomponents/lux-form-hint.component';\nimport { LuxFormLabelComponent } from './lux-form-control/lux-form-control-subcomponents/lux-form-label.component';\nimport { LuxFormControlComponent } from './lux-form-control/lux-form-control.component';\nimport { LuxInputPrefixComponent } from './lux-input/lux-input-subcomponents/lux-input-prefix.component';\nimport { LuxInputSuffixComponent } from './lux-input/lux-input-subcomponents/lux-input-suffix.component';\nimport { LuxInputComponent } from './lux-input/lux-input.component';\nimport { LuxRadioComponent } from './lux-radio/lux-radio.component';\nimport { LuxSelectComponent } from './lux-select/lux-select.component';\nimport { LuxSliderComponent } from './lux-slider/lux-slider.component';\nimport { LuxTextareaComponent } from './lux-textarea/lux-textarea.component';\nimport { LuxToggleComponent } from './lux-toggle/lux-toggle.component';\nimport { LuxFileCaptureDirective } from './lux-file/lux-file-model/lux-file-capture.directive';\nimport { LuxMaxLengthDirective } from './lux-form-control/lux-form-directives/lux-maxlength/lux-max-length.directive';\n\n@NgModule({\n  declarations: [\n    LuxToggleComponent,\n    LuxSelectComponent,\n    LuxInputComponent,\n    LuxInputPrefixComponent,\n    LuxInputSuffixComponent,\n    LuxCheckboxComponent,\n    LuxChipsComponent,\n    LuxChipComponent,\n    LuxChipGroupComponent,\n    LuxRadioComponent,\n    LuxDatepickerComponent,\n    LuxAutocompleteComponent,\n    LuxSliderComponent,\n    LuxTextareaComponent,\n    LuxFormControlComponent,\n    LuxFormHintComponent,\n    LuxFormLabelComponent,\n    LuxFileListComponent,\n    LuxFileInputComponent,\n    LuxFileProgressComponent,\n    LuxFileCaptureDirective,\n    LuxMaxLengthDirective\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatAutocompleteModule,\n    MatSliderModule,\n    LuxIconModule,\n    LuxDirectivesModule,\n    LuxPipesModule,\n    LuxComponentsConfigModule,\n    LuxActionModule,\n    LuxLayoutModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    LuxToggleComponent,\n    LuxSelectComponent,\n    LuxInputComponent,\n    LuxInputPrefixComponent,\n    LuxInputSuffixComponent,\n    LuxCheckboxComponent,\n    LuxChipsComponent,\n    LuxChipComponent,\n    LuxChipGroupComponent,\n    LuxRadioComponent,\n    LuxDatepickerComponent,\n    LuxAutocompleteComponent,\n    LuxSliderComponent,\n    LuxTextareaComponent,\n    LuxFormControlComponent,\n    LuxFormHintComponent,\n    LuxFormLabelComponent,\n    LuxFileListComponent,\n    LuxFileInputComponent,\n    LuxFileCaptureDirective,\n    LuxMaxLengthDirective\n  ],\n  providers: [LuxMediaQueryObserverService]\n})\nexport class LuxFormModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { LuxUtil } from '../../lux-util/lux-util';\n\n@Component({\n  selector: 'lux-spinner',\n  templateUrl: './lux-spinner.component.html',\n  styleUrls: ['./lux-spinner.component.scss']\n})\nexport class LuxSpinnerComponent implements OnInit {\n  @Input() luxIndeterminate: boolean = true;\n  @Input() luxValue: number = 0;\n\n  constructor() {}\n\n  get mode() {\n    return this.luxIndeterminate ? 'indeterminate' : 'determinate';\n  }\n\n  ngOnInit() {}\n\n  isIE(): boolean {\n    return LuxUtil.isIE();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-label',\n  template: '<span [id]=\"luxId\"><ng-content></ng-content></span>'\n})\nexport class LuxLabelComponent implements OnInit {\n  @Input() luxId;\n\n  constructor() {}\n\n  ngOnInit() {\n    if (!this.luxId) {\n      console.error('lux-label -> Das Attribut \"luxId\" muss gesetzt werden.');\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { LuxBackgroundColorsEnum } from '../../lux-util/lux-colors.enum';\nimport { LuxUtil } from '../../lux-util/lux-util';\n\n@Component({\n  selector: 'lux-badge',\n  templateUrl: './lux-badge.component.html',\n  styleUrls: ['./lux-badge.component.scss']\n})\nexport class LuxBadgeComponent implements OnInit {\n  readonly ICON_SIZE: string = '1x';\n  readonly DEFAULT_BADGE_COLOR = LuxBackgroundColorsEnum.gray;\n\n  @Input() luxUppercase: boolean = true;\n  @Input() luxIconName: string = '';\n\n  constructor() {\n    this.luxColor = this.DEFAULT_BADGE_COLOR;\n  }\n\n  private _backgroundCSSClass: string = '';\n\n  get backgroundCSSClass() {\n    return this._backgroundCSSClass;\n  }\n\n  private _fontCSSClass: string = '';\n\n  public get fontCSSClass() {\n    return this._fontCSSClass;\n  }\n\n  @Input()\n  set luxColor(color: LuxBackgroundColorsEnum) {\n    const result = LuxUtil.getColorsByBgColorsEnum(color);\n    this._backgroundCSSClass = result.backgroundCSSClass;\n    this._fontCSSClass = result.fontCSSClass;\n\n    if (!LuxBackgroundColorsEnum[color]) {\n      this.luxColor = this.DEFAULT_BADGE_COLOR;\n    }\n  }\n\n  ngOnInit() {}\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LuxBackgroundColorsEnum } from '../../lux-util/lux-colors.enum';\n\nexport declare type PROGRESS_MODES = 'determinate' | 'indeterminate';\nexport declare type PROGRESS_TYPES = 'Progressbar' | 'Spinner';\n\n@Component({\n  selector: 'lux-progress',\n  templateUrl: './lux-progress.component.html',\n  styleUrls: ['./lux-progress.component.scss']\n})\nexport class LuxProgressComponent implements OnInit {\n  readonly DEFAULT_PROGRESS_COLOR = LuxBackgroundColorsEnum.blue;\n\n  private _luxMode: PROGRESS_MODES;\n  private _luxType: PROGRESS_TYPES;\n  private _luxColor: LuxBackgroundColorsEnum;\n\n  isIE: boolean = false;\n  animDurationCSS: string = '';\n  typeCSS: string = '';\n\n  @Input() luxValue: number = 0;\n  // Nur für ProgressBar\n  @Input() luxSize: 'small' | 'medium' | 'large' = 'medium';\n  @Input() luxTagId: string;\n\n  @Input()\n  set luxColor(value: LuxBackgroundColorsEnum) {\n    this._luxColor = LuxBackgroundColorsEnum[value] ? LuxBackgroundColorsEnum[value] : this.DEFAULT_PROGRESS_COLOR;\n  }\n\n  get luxColor() {\n    return this._luxColor;\n  }\n\n  @Input() set luxMode(mode: PROGRESS_MODES) {\n    this._luxMode = mode;\n  }\n\n  get luxMode() {\n    if (this._luxMode !== 'determinate' && this._luxMode !== 'indeterminate') {\n      return 'indeterminate';\n    }\n    return this._luxMode;\n  }\n\n  @Input() set luxType(type: PROGRESS_TYPES) {\n    this._luxType = type;\n    if (this._luxType === 'Progressbar') {\n      this.typeCSS = 'lux-progress-bar';\n    } else if (this._luxType === 'Spinner') {\n      this.typeCSS = 'lux-progress-spinner';\n    } else {\n      this.luxType = 'Progressbar';\n    }\n  }\n\n  get luxType() {\n    return this._luxType;\n  }\n\n  constructor() {\n    this.luxMode = 'indeterminate';\n    this.luxType = 'Progressbar';\n  }\n\n  ngOnInit() {\n    this.isIE = LuxUtil.isIE();\n  }\n}\n","import { MatTableDataSource } from '@angular/material';\n\n/**\n * Diese Ableitung berücksichtigt bei der Sortierung Sonderzeichen (z.B. öäüßé,...)\n * und ignoriert die Groß- und Kleinschreibung.\n */\nexport class LuxTableDataSource<T> extends MatTableDataSource<T> {\n  totalElements: number;\n  selectedEntries: Set<any> = new Set<any>();\n\n  /**\n   * Diese Methode liefert eine sortierte Kopie des Datenarrays zurück.\n   * Die Sortierung berücksichtig ist nicht Case-Sensitive und berücksichtig\n   * Sonderzeichen (z.B. öäüßé,...)\n   */\n  _orderData(data: T[]): T[] {\n    const _this = this;\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    const active = this.sort.active;\n    const direction = this.sort.direction;\n\n    if (active === 'multiSelect') {\n      // muss checken welche in dem sorted array sind und alle anderen darunter\n      const selected = data.filter(value => this.selectedEntries.has(value));\n      const notSelected = data.filter(value => !selected.some(selectedValue => selectedValue === value));\n\n      if (direction === 'asc') {\n        return [...selected, ...notSelected];\n      } else if (direction === 'desc') {\n        return [...notSelected, ...selected];\n      } else {\n        return data.slice();\n      }\n    }\n\n    return data.slice().sort((a, b) => {\n      let valueA = _this.sortingDataAccessor(a, active);\n      let valueB = _this.sortingDataAccessor(b, active);\n\n      if (!valueA) {\n        valueA = '';\n      }\n\n      if (!valueB) {\n        valueB = '';\n      }\n\n      if (typeof valueA === 'number' && typeof valueB === 'string') {\n        valueA = '' + valueA;\n      }\n\n      if (typeof valueA === 'string' && typeof valueB === 'number') {\n        valueB = '' + valueB;\n      }\n\n      if (typeof valueA === 'string' && typeof valueB === 'string') {\n        const stringA = (valueA as string).toLocaleLowerCase();\n        const stringB = (valueB as string).toLocaleLowerCase();\n        return stringA.localeCompare(stringB) * (direction === 'asc' ? 1 : -1);\n      }\n\n      return (valueA < valueB ? -1 : 1) * (direction === 'asc' ? 1 : -1);\n    });\n  }\n\n  /**\n   * Override update paginator method\n   * to ensure total unfiltered element count is consistent with the http result\n   */\n  public _updatePaginator(filteredDataLength: number): void {\n    if (this.filter === '') {\n      super._updatePaginator(this.totalElements);\n    } else {\n      super._updatePaginator(filteredDataLength);\n    }\n  }\n}\n","import { MatPaginatorIntl } from '@angular/material';\n\nexport class LuxPaginatorIntl extends MatPaginatorIntl {\n  constructor() {\n    super();\n\n    // Original Properties überschreiben\n    this.itemsPerPageLabel = 'Elemente pro Seite';\n    this.nextPageLabel = 'Nächste Seite';\n    this.previousPageLabel = 'Vorherige Seite';\n    this.lastPageLabel = 'Letzte Seite';\n    this.firstPageLabel = 'Erste Seite';\n    this.getRangeLabel = this.customRangeLabel;\n  }\n\n  /**\n   * Deutsche Fassunng des Material-Paginators\n   * @param page\n   * @param pageSize\n   * @param length\n   */\n  private customRangeLabel(page: number, pageSize: number, length: number) {\n    if (length === 0 || pageSize === 0) {\n      return '0 von ' + length;\n    }\n    length = Math.max(length, 0);\n    const startIndex = page * pageSize;\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\n    const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n    return startIndex + 1 + ' - ' + endIndex + ' von ' + length;\n  }\n}\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-table-column-header',\n  template: ''\n})\nexport class LuxTableColumnHeaderComponent {\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n}\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-table-column-content',\n  template: ''\n})\nexport class LuxTableColumnContentComponent {\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-table-column-footer',\n  template: ''\n})\nexport class LuxTableColumnFooterComponent {\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n}\n","import { Component, ContentChild, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { LuxTableColumnHeaderComponent } from './lux-table-column-header.component';\nimport { LuxTableColumnContentComponent } from './lux-table-column-content.component';\nimport { LuxTableColumnFooterComponent } from './lux-table-column-footer.component';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'lux-table-column',\n  template:\n    '<ng-content select=\"lux-table-column-header\"></ng-content>' +\n    '<ng-content select=\"lux-table-column-content\"></ng-content>' +\n    '<ng-content select=\"lux-table-column-footer\"></ng-content>'\n})\nexport class LuxTableColumnComponent implements OnInit, OnChanges {\n  change$: Subject<void> = new Subject<void>();\n\n  @Input() luxColumnDef: string = undefined;\n  @Input() luxSortable: boolean = false;\n  @Input() luxSticky: boolean = false;\n  @Input() luxResponsiveBehaviour: string;\n  @Input() luxResponsiveAt: string | string[];\n\n  @ContentChild(LuxTableColumnHeaderComponent, { static: false }) header: LuxTableColumnHeaderComponent;\n  @ContentChild(LuxTableColumnContentComponent, { static: false }) content: LuxTableColumnContentComponent;\n  @ContentChild(LuxTableColumnFooterComponent, { static: false }) footer: LuxTableColumnFooterComponent;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    this.change$.next();\n  }\n}\n","// tslint:disable:member-ordering\nimport {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport { MatPaginator, MatPaginatorIntl, MatSort, Sort } from '@angular/material';\nimport { ICustomCSSConfig } from './lux-table-custom-css-config.interface';\nimport { LuxTableDataSource } from './lux-table-data-source';\nimport { ILuxTableHttpDaoStructure } from './lux-table-http/lux-table-http-dao-structure.interface';\nimport { ILuxTableHttpDao } from './lux-table-http/lux-table-http-dao.interface';\nimport { of, Subject, Subscription } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LuxPaginatorIntl } from '../../lux-util/lux-paginator-intl';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\nimport { LuxTableColumnComponent } from './lux-table-subcomponents/lux-table-column.component';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'lux-table',\n  templateUrl: './lux-table.component.html',\n  styleUrls: ['./lux-table.component.scss'],\n  providers: [{ provide: MatPaginatorIntl, useClass: LuxPaginatorIntl }]\n})\nexport class LuxTableComponent implements OnInit, AfterViewInit, DoCheck, OnDestroy {\n  static AUTO_PAGINATION_START: number = 100; // 100 Elemente bis automatisch die Pagination aktiviert wird\n\n  private _luxClasses: ICustomCSSConfig | ICustomCSSConfig[] = [];\n  private _luxShowPagination: boolean = false;\n  private _dataColumnDefs: string[] = [];\n  private _luxMultiSelect: boolean;\n  private _luxShowFilter: boolean = false;\n  private _dataSource: LuxTableDataSource<any> = new LuxTableDataSource<any>([]);\n  private _luxPickValue = o => o;\n  private _luxCompareWith = (o1, o2) => o1 === o2;\n\n  private previousWidth: number;\n  private previousHeight: number;\n  private httpRequestConf: { page?; pageSize?; filter?; sort?; order? } = {};\n\n  private mediaQuerySubscription: Subscription;\n  private httpDaoSubscription: Subscription;\n  private filterChangedSubscription: Subscription;\n  private columnSubscriptions: Subscription[] = [];\n  private tableColumnsChangedSubscription: Subscription;\n  private sortChangedSubscription: Subscription;\n  private paginatorPageSubscription: Subscription;\n  private selectedSubscription: Subscription;\n\n  filtered$: Subject<string> = new Subject<string>();\n  currentCustomClasses: { entry: any; classes: string }[] = [];\n  isLoadingResults: boolean;\n  isIE: boolean = false;\n  allSelected: boolean;\n  mediaQuery: string;\n  movedTableColumns: LuxTableColumnComponent[] = [];\n  tableMinWidth: string;\n  tableHeightCSSCalc: string;\n\n  @Input() luxColWidthsPercent: number[] = [];\n  @Input() luxFilterText: string = 'Filter';\n  @Input() luxNoDataText: string = 'Keine Daten gefunden.';\n  @Input() luxPageSize: number = 10;\n  @Input() luxPageSizeOptions = [5, 10, 25, 50];\n  @Input() luxHttpDAO: ILuxTableHttpDao;\n  @Input() luxMinWidthPx: number = -1;\n  @Input() luxAutoPaginate: boolean = true;\n  @Input() luxHideBorders: boolean = false;\n\n  @Output() luxSelectedChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('paginator', { read: ElementRef, static: true }) paginatorElement: ElementRef;\n  @ViewChild('filter', { read: ElementRef, static: true }) filterElement: ElementRef;\n  @ViewChild('tableContainer', { read: ElementRef, static: true }) tableContainerElement: ElementRef;\n  @ContentChildren(LuxTableColumnComponent) tableColumns: QueryList<LuxTableColumnComponent>;\n\n  // region Setter/Getters\n  get luxClasses(): ICustomCSSConfig | ICustomCSSConfig[] {\n    return this._luxClasses;\n  }\n\n  @Input() set luxClasses(classes: ICustomCSSConfig | ICustomCSSConfig[]) {\n    if (classes && !Array.isArray(classes)) {\n      classes = [classes];\n    }\n\n    this._luxClasses = classes;\n    this.insertCustomCSSClasses();\n  }\n\n  get luxShowPagination(): boolean {\n    return this._luxShowPagination;\n  }\n\n  @Input() set luxShowPagination(show: boolean) {\n    this._luxShowPagination = show;\n    setTimeout(() => {\n      this.handlePagination();\n    });\n  }\n\n  get luxShowFilter(): boolean {\n    return this._luxShowFilter;\n  }\n\n  @Input() set luxShowFilter(show: boolean) {\n    this._luxShowFilter = show;\n    this.handleFilter();\n  }\n\n  get dataColumnDefs(): string[] {\n    return this._dataColumnDefs;\n  }\n\n  get dataSource(): LuxTableDataSource<any> {\n    return this._dataSource;\n  }\n\n  get luxData(): any[] {\n    return this.dataSource.data;\n  }\n\n  @Input()\n  set luxData(data: any[]) {\n    data = data ? data : [];\n    this.dataSource.data = data;\n    if (this.dataSource) {\n      setTimeout(() => {\n        this.updateDataSourceAttributes(data);\n        this.handleSort();\n        this.insertCustomCSSClasses();\n        this.updateColumnsByMediaQuery();\n        this.calculateProportions();\n        this.updateSelection();\n      });\n    }\n  }\n\n  get luxMultiSelect(): boolean {\n    return this._luxMultiSelect;\n  }\n\n  @Input() set luxMultiSelect(multiSelect: boolean) {\n    this._luxMultiSelect = multiSelect;\n    if (this.luxMultiSelect) {\n      this.luxSelected.clear();\n      this._dataColumnDefs.unshift('multiSelect');\n    } else {\n      this._dataColumnDefs = this._dataColumnDefs.filter((col: string) => col !== 'multiSelect');\n    }\n\n    setTimeout(() => {\n      this.calculateProportions();\n    });\n  }\n\n  private _luxSelected: Set<any> = new Set();\n\n  get luxSelected(): Set<any> {\n    return this._luxSelected;\n  }\n\n  /**\n   * Die Auswahl der Selektierten Elemente ist eigentlich ein Set,\n   * nimmt aber Arrays von Außen entgegen (zur Vereinfachung).\n   * @param selected\n   */\n  @Input() set luxSelected(selected: Set<any>) {\n    this.luxSelected.clear();\n    if (selected) {\n      selected.forEach(entry => {\n        this.luxSelected.add(entry);\n      });\n    }\n    if (this.luxData && this.luxData.length > 0) {\n      this.updateSelection();\n    }\n  }\n\n  get luxPickValue() {\n    return this._luxPickValue;\n  }\n\n  // Funktion, um den zu vergleichenden Wert aus den einzelnen Objekten zu ziehen.\n  // Standardmäßig einfach das Objekt zurückgeben.\n  @Input() set luxPickValue(pickFn) {\n    this._luxPickValue = pickFn ? pickFn : o => o;\n  }\n\n  get luxCompareWith() {\n    return this._luxCompareWith;\n  }\n\n  // Vergleichsfunktion; vergleicht standardmäßig einfach die Referenzen der beiden Objekte.\n  @Input() set luxCompareWith(compareFn) {\n    this._luxCompareWith = compareFn ? compareFn : (o1, o2) => o1 === o2;\n  }\n\n  /**\n   * Eigene Implementierung der Filterung für diese Tabelle.\n   * Iteriert über die Values des einzelnen Objektes und prüft dann ob der Filter-Wert irgendwo vorkommt.\n   * @param data\n   * @param filter\n   */\n  private customFilterPredicate = (data: any, filter: string = '') => {\n    for (const property in data) {\n      if (data.hasOwnProperty(property)) {\n        const dataEntry = data[property];\n        if (LuxUtil.isDate(dataEntry)) {\n          if (\n            dataEntry\n              .toLocaleString()\n              .toLowerCase()\n              .indexOf(filter) > -1\n          ) {\n            return true;\n          }\n        } else {\n          if ((dataEntry + '').toLowerCase().indexOf(filter) > -1) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  // endregion\n\n  constructor(\n    private queryObserver: LuxMediaQueryObserverService,\n    private luxConsole: LuxConsoleService,\n    private liveAnnouncer: LiveAnnouncer\n  ) {\n    // Datasource um eigene Filter-Funktionalitaet ergaenzen\n    this.dataSource.filterPredicate = this.customFilterPredicate;\n\n    this.isIE = LuxUtil.isIEorEdge();\n\n    this.mediaQuerySubscription = this.queryObserver.getMediaQueryChangedAsObservable().subscribe((query: string) => {\n      this.mediaQuery = query;\n      this.updateColumnsByMediaQuery();\n    });\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      if (this.luxHttpDAO) {\n        this.loadHttpDAOData();\n      } else {\n        this.updateDataSourceAttributes(this.luxData);\n        this.handleSort();\n        this.insertCustomCSSClasses();\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    if (this.tableColumns) {\n      // Für den Fall das Spalten wegfallen/dazu kommen\n      this.tableColumnsChangedSubscription = this.tableColumns.changes.subscribe(() => {\n        this.updateColumnsByMediaQuery();\n        this.updateColumnSubscriptions();\n      });\n\n      // Für den Fall das sich Änderungen innerhalb der Spalten ergeben\n      this.updateColumnSubscriptions();\n\n      // Nach dem Init sollten einmal die Spalten aktualisiert werden\n      setTimeout(() => {\n        this.updateColumnsByMediaQuery();\n      });\n    }\n\n    if (this.luxShowPagination) {\n      this.handlePagination();\n    }\n  }\n\n  ngDoCheck() {\n    if (\n      this.tableContainerElement.nativeElement.offsetWidth !== this.previousWidth ||\n      this.tableContainerElement.nativeElement.offsetHeight !== this.previousHeight\n    ) {\n      this.previousWidth = this.tableContainerElement.nativeElement.offsetWidth;\n      this.previousHeight = this.tableContainerElement.nativeElement.offsetHeight;\n\n      this.calculateProportions();\n    }\n  }\n\n  ngOnDestroy() {\n    // Subscriptions auflösen\n    this.columnSubscriptions.forEach((subscription: Subscription) => {\n      subscription.unsubscribe();\n    });\n    if (this.httpDaoSubscription) {\n      this.httpDaoSubscription.unsubscribe();\n    }\n    if (this.filterChangedSubscription) {\n      this.filterChangedSubscription.unsubscribe();\n    }\n    if (this.tableColumnsChangedSubscription) {\n      this.tableColumnsChangedSubscription.unsubscribe();\n    }\n    if (this.sortChangedSubscription) {\n      this.sortChangedSubscription.unsubscribe();\n    }\n    if (this.paginatorPageSubscription) {\n      this.paginatorPageSubscription.unsubscribe();\n    }\n    if (this.selectedSubscription) {\n      this.selectedSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Zieht sich die aktuellen CSS-Klassen aus den zugewiesenen\n   * CSS-Klassen.\n   * @param row\n   * @returns string\n   */\n  getCustomClassesForIndex(row: any): string {\n    const customClasses = this.currentCustomClasses.find(value => value.entry === row);\n    return customClasses ? customClasses.classes : '';\n  }\n\n  /**\n   * TrackBy-Funktion um die Tabelle etwas schneller zu machen.\n   * @param index\n   * @param item\n   */\n  trackFn(index, item) {\n    return index;\n  }\n\n  /**\n   * Wird beim Klick auf eine Row aufgerufen und handelt das Sichern und Entfernen von\n   * selektierten Einträgen.\n   * @param entry\n   */\n  changeSelectedEntry(entry: any) {\n    if (this.luxMultiSelect) {\n      if (this.luxSelected.has(entry)) {\n        this.luxSelected.delete(entry);\n      } else {\n        this.luxSelected.add(entry);\n      }\n    } else {\n      if (this.luxSelected.has(entry)) {\n        // Wenn der selektierte Eintrag erneut angeklickt wird,\n        // wird die Selektion entfernt.\n        this.luxSelected.clear();\n      } else {\n        this.luxSelected.clear();\n        this.luxSelected.add(entry);\n      }\n    }\n\n    this.luxSelectedChange.next(Array.from(this.luxSelected));\n    this.dataSource.selectedEntries = this.luxSelected;\n    this.allSelected = this.checkFilteredAllSelected();\n  }\n\n  /**\n   * Selektiert/Deselektiert alle Einträge in dieser Tabelle.\n   *\n   * Voraussetzung dafür ist, das Multiselect aktiv ist und keine Http-Table vorliegt.\n   */\n  changeSelectedEntries() {\n    if (this.luxMultiSelect && !this.luxHttpDAO) {\n      if (this.checkFilteredAllSelected()) {\n        this.dataSource.filteredData.forEach((dataEntry: any) => this.luxSelected.delete(dataEntry));\n      } else {\n        this.dataSource.filteredData.forEach((dataEntry: any) => this.luxSelected.add(dataEntry));\n      }\n      this.luxSelectedChange.next(Array.from(this.luxSelected));\n      this.dataSource.selectedEntries = this.luxSelected;\n      this.allSelected = this.checkFilteredAllSelected();\n    }\n  }\n\n  /**\n   * Prüft ob die aktuell angezeigten Einträge alle selektiert sind oder nicht.\n   */\n  checkFilteredAllSelected(): boolean {\n    let result = true;\n    if (this.luxSelected.size === 0) {\n      result = false;\n    } else {\n      // Prüfen ob die gefilterten Daten selected sind\n      this.dataSource.filteredData.forEach((dataEntry: any) => {\n        if (!this.luxSelected.has(dataEntry)) {\n          result = false;\n        }\n      });\n    }\n\n    return result;\n  }\n\n  /**\n   * Gibt zurück, ob irgendein Footer-Element für diese Tabelle aktuell sichtbar ist.\n   */\n  anyFootersAvailable() {\n    return this.luxMultiSelect || !!this.tableColumns.find((column: LuxTableColumnComponent) => !!column.footer);\n  }\n\n  /**\n   * Aktualisiert die DataSource und evtl. Subscriptions sowie die CustomCSS-Classes\n   * nach einer Änderung.\n   */\n  private updateDataSourceAttributes(data: any[]) {\n    if (!this.luxHttpDAO && this.luxAutoPaginate && data && data.length > LuxTableComponent.AUTO_PAGINATION_START) {\n      this.luxShowPagination = true;\n    }\n    if (!this.luxHttpDAO) {\n      if (this.luxShowPagination) {\n        this.handlePagination();\n      }\n    }\n    if (!this.luxHttpDAO) {\n      this.dataSource.sort = this.sort;\n    }\n    if (!this.luxHttpDAO) {\n      this.dataSource.totalElements = this.dataSource.data ? this.dataSource.data.length : 0;\n    }\n  }\n\n  /**\n   * Prueft anhand der mitgegebenen Callbacks die CSS-Klassen\n   * fuer die einzelnen Rows.\n   */\n  private insertCustomCSSClasses() {\n    if (this.luxClasses && this.dataSource.data) {\n      this.currentCustomClasses = [];\n      this.dataSource.data.forEach((entry: any, i: number) => {\n        let classes = '';\n        (<ICustomCSSConfig[]>this.luxClasses).forEach((cssClass: ICustomCSSConfig) => {\n          if (cssClass.check(entry)) {\n            classes += cssClass.class + ' ';\n          }\n        });\n        this.currentCustomClasses.push({ entry: entry, classes: classes });\n      });\n    }\n  }\n\n  /**\n   * Gibt das Aria-Label für die Sortierung der Spalten-Überschrift zurück.\n   * @param tableColumnDef\n   */\n  getAriaSortingLabel(tableColumnDef: string) {\n    if (this.sort.active === tableColumnDef) {\n      if (this.sort.direction === 'asc') {\n        return 'aufsteigend sortiert';\n      }\n      if (this.sort.direction === 'desc') {\n        return 'absteigend sortiert';\n      }\n    }\n    return 'nicht sortiert';\n  }\n\n  /**\n   * Gibt über den liveAnnouncer eine Nachricht aus, dass sich die Sortierung einer Spalte geändert hat.\n   * @param $event\n   */\n  announceSortChange($event: Sort) {\n    const index = this.tableColumns\n      .toArray()\n      .findIndex((tableColumn: LuxTableColumnComponent) => $event.active === tableColumn.luxColumnDef);\n    let columnDef = index > -1 ? this.tableColumns.toArray()[index].luxColumnDef : null;\n    if (columnDef === null) {\n      columnDef = $event.active === 'multiSelect' ? 'multiSelect' : null;\n    }\n    if (columnDef !== null) {\n      let directionDescription;\n      switch ($event.direction) {\n        case 'desc':\n          directionDescription = 'absteigend';\n          break;\n        case 'asc':\n          directionDescription = 'aufsteigend';\n          break;\n        case '':\n          directionDescription = 'nicht mehr';\n          break;\n      }\n      this.liveAnnouncer.announce(`Spalte ${columnDef} sortiert nun ${directionDescription}`, 'assertive');\n    }\n  }\n\n  /**\n   * Aktualisiert die momentan angezeigten Spalten anhand der für sie definierten\n   * Responsive-Queries und Verhaltensweisen.\n   */\n  private updateColumnsByMediaQuery() {\n    if (!this.tableColumns) {\n      return;\n    }\n\n    this._dataColumnDefs = [];\n\n    // wenn Multiselect, dann benötigen wir hier noch eine Spalte mehr\n    if (this.luxMultiSelect) {\n      this._dataColumnDefs.push('multiSelect');\n    }\n\n    this.tableColumns.forEach((column: LuxTableColumnComponent) => this._dataColumnDefs.push(column.luxColumnDef));\n    this.movedTableColumns = [];\n    // Zuerst die auszublendenden Spalten durchgehen\n    this.tableColumns.forEach((tableColumn: LuxTableColumnComponent) => {\n      if (\n        (tableColumn.luxResponsiveAt && !tableColumn.luxResponsiveBehaviour) ||\n        (!tableColumn.luxResponsiveAt && tableColumn.luxResponsiveBehaviour)\n      ) {\n        this.luxConsole.error(\n          `Achtung! Die Column '${tableColumn.luxColumnDef}' hat entweder keine Media-Queries ` +\n            `oder kein Responsive-Verhalten zugewiesen bekommen.`\n        );\n      } else if (this.doesResponsiveAtApply(tableColumn.luxResponsiveAt)) {\n        // Schauen, ob eine Spalte angegeben wurde, in welche sich diese hier verschieben kann\n        if (this._dataColumnDefs.find((column: string) => column === tableColumn.luxResponsiveBehaviour)) {\n          // Wenn ja, die Spalte merken und vorerst ausblenden\n          this.movedTableColumns.push(tableColumn);\n        }\n\n        this._dataColumnDefs = this.dataColumnDefs.filter(\n          (dataColumn: string) => dataColumn !== tableColumn.luxColumnDef\n        );\n      }\n    });\n  }\n\n  /**\n   * Prüft ob die aktuelle MediaQuery mit der übergebenen MediaQuery/den übergebenen MediaQueries übereinstimmt.\n   * @param responsiveAt\n   */\n  private doesResponsiveAtApply(responsiveAt: string | string[]) {\n    const mediaQueries: string[] = [];\n    if (!Array.isArray(responsiveAt)) {\n      mediaQueries.push(responsiveAt);\n    } else {\n      mediaQueries.push(...responsiveAt);\n    }\n\n    for (const mediaQuery of mediaQueries) {\n      if (mediaQuery === this.mediaQuery) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Durchläuft die aktuellen TableColumns und hört auf Changes in den Properties\n   * der Columns und merkt sich die Subscriptions.\n   */\n  private updateColumnSubscriptions() {\n    this.columnSubscriptions.forEach((subscription: Subscription) => {\n      subscription.unsubscribe();\n    });\n    this.columnSubscriptions = [];\n    this.tableColumns.forEach((column: LuxTableColumnComponent) => {\n      this.columnSubscriptions.push(\n        column.change$.subscribe(() => {\n          this.updateColumnsByMediaQuery();\n        })\n      );\n    });\n  }\n\n  /**\n   * Triggert über das DAO die Abfrage nach neuen Daten.\n   * Sendet dabei das Request-Conf Objekt, welches Informationen bzgl.\n   * page, pageSize, filter, sort, order mitgibt.\n   * @param filteredBy?\n   */\n  private loadHttpDAOData(filteredBy?: string) {\n    this.isLoadingResults = true;\n    this.luxHttpDAO\n      .loadData(this.httpRequestConf)\n      .pipe(\n        tap((data: ILuxTableHttpDaoStructure) => {\n          this.isLoadingResults = false;\n          // Wenn ein Filter-Text gegeben ist, sich dieser aber vom Aktuellen unterscheiden, brechen wir die Datenaktualisierung ab\n          if (filteredBy && this.httpRequestConf.filter !== filteredBy) {\n            return;\n          }\n\n          if (data) {\n            this.dataSource.totalElements = data.totalCount;\n            this.luxData = data.items;\n\n            if (this.luxAutoPaginate && data.totalCount > LuxTableComponent.AUTO_PAGINATION_START) {\n              this.luxShowPagination = true;\n            }\n          } else {\n            this.dataSource.totalElements = 0;\n            this.luxData = [];\n          }\n        }),\n        catchError(error => {\n          this.isLoadingResults = false;\n          return of(error);\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * Wird aufgerufen wenn der Sort neu zur DataSource hinzugefügt werden soll (Data wurde neu gesetzt).\n   * Resettet die Pagination und aktualisiert wenn es sich um eine asynchrone Tabelle handelt die\n   * requestConf.\n   */\n  private handleSort() {\n    if (this.sort) {\n      if (this.sortChangedSubscription) {\n        this.sortChangedSubscription.unsubscribe();\n      }\n      this.sortChangedSubscription = this.sort.sortChange.subscribe((sort: any) => {\n        this.paginator.pageIndex = 0;\n\n        if (this.luxHttpDAO) {\n          this.httpRequestConf.page = this.paginator.pageIndex;\n          this.httpRequestConf.sort = sort.active;\n          this.httpRequestConf.order = sort.direction;\n          this.loadHttpDAOData();\n        }\n      });\n    }\n\n    this.calculateProportions();\n  }\n\n  /**\n   * Wird nach dem set von luxShowFilter aufgerufen und fängt neue Filter-Operationen ab und\n   * aktualisiert dementsprechend die Daten.\n   */\n  private handleFilter() {\n    if (this.filterChangedSubscription) {\n      this.filterChangedSubscription.unsubscribe();\n    }\n    if (this.luxShowFilter) {\n      this.filterChangedSubscription = this.filtered$\n        .asObservable()\n        .pipe(\n          tap(() => (this.isLoadingResults = true)),\n          debounceTime(500),\n          distinctUntilChanged((x: string, y: string) => {\n            if (x === y) {\n              this.isLoadingResults = false;\n            }\n\n            return x === y;\n          })\n        )\n        .subscribe((filterValue: string) => {\n          filterValue = filterValue.trim();\n          filterValue = filterValue.toLocaleLowerCase();\n          this.paginator.pageIndex = 0;\n          this.isLoadingResults = false;\n          if (!this.luxHttpDAO) {\n            this.dataSource.filter = filterValue;\n          }\n          if (this.luxHttpDAO) {\n            this.httpRequestConf.filter = filterValue;\n            this.loadHttpDAOData(filterValue);\n          }\n        });\n    }\n    this.calculateProportions();\n  }\n\n  /**\n   * Wird nach dem set von luxShowPagination aufgerufen und setzt wenn es sich hier um\n   * eine asynchrone Tabelle handelt eine Subscription um Pagination-Änderungen zu erhalten.\n   */\n  private handlePagination() {\n    if (this.luxShowPagination) {\n      if (this.luxHttpDAO) {\n        if (this.paginatorPageSubscription) {\n          this.paginatorPageSubscription.unsubscribe();\n        }\n        this.paginatorPageSubscription = this.paginator.page.subscribe(() => {\n          this.httpRequestConf.page = this.paginator.pageIndex;\n          this.httpRequestConf.pageSize = this.paginator.pageSize;\n          this.loadHttpDAOData();\n        });\n        this.httpRequestConf.page = this.paginator.pageIndex;\n        this.httpRequestConf.pageSize = this.paginator.pageSize;\n      }\n      if (!this.luxHttpDAO) {\n        this.dataSource.paginator = this.paginator;\n      }\n    } else {\n      this.dataSource.paginator = null;\n    }\n    this.calculateProportions();\n  }\n\n  /**\n   * Erzeugt einen neuen String für die Höhenberechnung der Tabelle und setzt die Minimalbreite für die Tabelle\n   * (wenn möglich).\n   */\n  private calculateProportions() {\n    setTimeout(() => {\n      const filter = this.filterElement ? this.filterElement.nativeElement.offsetHeight : 0;\n      const pagination = this.paginatorElement ? this.paginatorElement.nativeElement.scrollHeight : 0;\n      const temp = 'calc(100% - ' + pagination + 'px' + ' - ' + filter + 'px)';\n\n      if (temp !== this.tableHeightCSSCalc) {\n        this.tableHeightCSSCalc = temp;\n      }\n\n      this.tableMinWidth = this.luxMinWidthPx > -1 ? this.luxMinWidthPx + 'px' : 'unset';\n    });\n  }\n\n  /**\n   * Aktualisiert die selectedEntries dieser Component anhand der aktuell gesetzten luxSelected-Elemente.\n   *\n   * Dabei werden die einzelnen Elemente zuerst mithilfe der luxCompareWith- und luxPickValue-Functions miteinander\n   * verglichen.\n   */\n  private updateSelection() {\n    // Prüfen ob selected gesetzt ist\n    if (this.luxSelected.size > 0) {\n      // Die selected-Einträge durchgehen und schauen ob diese im data-Block enthalten sind\n      const foundEntries = [];\n      this.luxSelected.forEach((entry: any) => {\n        const newEntry = this.dataSource.data.find((dataEntry: any) => {\n          return this.luxCompareWith(this.luxPickValue(entry), this.luxPickValue(dataEntry));\n        });\n\n        // Merkt sich die Entry wenn sie noch nicht in der Selected-Liste ist (wenn es sich um eine HTTP-Tabelle handelt)\n        if (newEntry && (!this.luxHttpDAO || (this.luxHttpDAO && !this.luxSelected.has(newEntry)))) {\n          foundEntries.push(newEntry);\n          this.luxSelected.delete(entry);\n        }\n      });\n      // Nur bei nicht-HTTP-Tabellen die Selektion einmal leeren\n      if (!this.luxHttpDAO) {\n        this.luxSelected.clear();\n      }\n      foundEntries.forEach((entry: boolean) => this.luxSelected.add(entry));\n    }\n\n    this.dataSource.selectedEntries = this.luxSelected;\n    this.luxSelectedChange.next(Array.from(this.luxSelected));\n    this.allSelected = this.checkFilteredAllSelected();\n  }\n}\n","import { animate, style, transition, trigger } from '@angular/animations';\n\n/**\n * Animation für das Aus- und Einklappen der LuxMessageBox.\n */\nexport const visibilityTrigger = trigger('messageBoxVisibility', [\n  transition(':enter', [\n    style({ transform: 'translateY(-100%)', height: 0 }),\n    animate('.5s', style({ transform: 'translateY(0)', height: '*' }))\n  ]),\n  transition(':leave', [\n    style({ transform: 'translateY(0)', height: '*' }),\n    animate('.5s', style({ transform: 'translateY(-100%)', height: 0 }))\n  ])\n]);\n","import { Component, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\nimport { visibilityTrigger } from './lux-message-box-model/lux-message-box.animations';\nimport { ILuxMessageChangeEvent, ILuxMessageCloseEvent } from './lux-message-box-model/lux-message-events.interface';\nimport { ILuxMessage } from './lux-message-box-model/lux-message.interface';\nimport { MatPaginatorIntl, PageEvent } from '@angular/material';\nimport { LuxPaginatorIntl } from '../../lux-util/lux-paginator-intl';\n\n@Component({\n  selector: 'lux-message-box',\n  templateUrl: './lux-message-box.component.html',\n  styleUrls: ['./lux-message-box.component.scss'],\n  animations: [visibilityTrigger],\n  providers: [{ provide: MatPaginatorIntl, useClass: LuxPaginatorIntl }]\n})\nexport class LuxMessageBoxComponent implements OnInit {\n  private _luxMessages: ILuxMessage[] = [];\n  private _luxMaximumDisplayed: number = 1;\n  private _luxIndex: number = 0;\n\n  displayedMessages: ILuxMessage[] = [];\n\n  @HostBinding('class.mat-elevation-z4') boxShadow: boolean = true;\n\n  @Output() luxMessageChanged: EventEmitter<ILuxMessageChangeEvent> = new EventEmitter<ILuxMessageChangeEvent>();\n  @Output() luxMessageClosed: EventEmitter<ILuxMessageCloseEvent> = new EventEmitter<ILuxMessageCloseEvent>();\n  @Output() luxMessageBoxClosed: EventEmitter<void> = new EventEmitter<void>();\n\n  @Input() set luxIndex(index: number) {\n    if (index < 0) {\n      index = 0;\n    }\n    if (index > this.luxMessages.length) {\n      index = this.luxMessages.length;\n    }\n\n    this._luxIndex = index;\n    this.updateDisplayedMessages(index);\n  }\n\n  get luxIndex(): number {\n    return this._luxIndex;\n  }\n\n  @Input() set luxMaximumDisplayed(max: number) {\n    if (max < 0) {\n      max = 0;\n    }\n    this._luxMaximumDisplayed = max;\n\n    this.updateDisplayedMessages(this.luxIndex);\n  }\n\n  get luxMaximumDisplayed(): number {\n    return this._luxMaximumDisplayed;\n  }\n\n  @Input() set luxMessages(messages: ILuxMessage[]) {\n    if (messages && messages.length > 0) {\n      this._luxMessages = messages;\n      this.updateDisplayedMessages(this.luxIndex);\n    } else {\n      // Wenn es vorher Werte gab, ein Closed-Event ausgeben\n      if (this.luxMessages.length > 0) {\n        this.luxMessageBoxClosed.emit();\n      }\n      this._luxMessages = [];\n    }\n  }\n\n  get luxMessages(): ILuxMessage[] {\n    return this._luxMessages;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Wird aufgerufen, wenn der Close-Button für eine MessageBox aufgerufen wurde.\n   *\n   * Gibt eine Event-Payload mit der betroffenen Nachricht mit Index weiter.\n   * @param $event\n   */\n  messageClosed($event: ILuxMessage) {\n    const eventPayload: ILuxMessageCloseEvent = {\n      index: this.luxMessages.findIndex((compareMessage: ILuxMessage) => compareMessage === $event),\n      message: $event\n    };\n    this.luxMessageClosed.emit(eventPayload);\n\n    this.luxMessages = this.luxMessages.filter((message: ILuxMessage) => message !== $event);\n  }\n\n  /**\n   * Aktualisiert die angezeigten Nachrichten und den Paginator,\n   * gibt außerdem das Change-Event mit den angezeigten/vorherigen Nachrichten.\n   * @param $event\n   */\n  pageChanged($event: PageEvent) {\n    const previousDisplayedMessages = [...this.displayedMessages];\n    const previousIndex = this.luxIndex;\n\n    this.updateDisplayedMessages($event.pageIndex);\n\n    const messageChangePayload: ILuxMessageChangeEvent = {\n      currentPage: {\n        index: this.luxIndex,\n        messages: [...this.displayedMessages]\n      },\n      previousPage: {\n        index: previousIndex,\n        messages: previousDisplayedMessages\n      }\n    };\n\n    this.luxMessageChanged.emit(messageChangePayload);\n  }\n\n  /**\n   * Aktualisiert die aktuell angezeigten Nachrichten anhand des Index.\n   * @param pageIndex\n   * @param pageSize\n   */\n  updateDisplayedMessages(pageIndex: number) {\n    const start = pageIndex * this.luxMaximumDisplayed;\n    const end = start + this.luxMaximumDisplayed;\n\n    // Wenn der luxIndex und der PageIndex ungleich sind, den luxIndex aktualisieren\n    if (this.luxIndex !== pageIndex) {\n      this._luxIndex = pageIndex;\n    }\n\n    // Checken, ob der Index nicht die Array-Größe sprengt\n    if (this.luxIndex > this.luxMessages.length) {\n      this._luxIndex = this.luxMessages.length;\n    }\n\n    if (this.luxIndex < 0) {\n      this._luxIndex = 0;\n    }\n\n    // Nachrichten aktualisieren\n    this.displayedMessages = this.luxMessages.slice(start, end);\n\n    // Wenn die angezeigten Nachrichten leer sind, aber noch weitere vorhanden sind, die vorherige Seite anzeigen\n    if (this.displayedMessages.length === 0 && this.luxMessages.length > 0 && this.luxIndex > 0) {\n      this.updateDisplayedMessages(this.luxIndex - 1);\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ILuxMessage } from '../lux-message-box-model/lux-message.interface';\nimport { LuxUtil } from '../../../lux-util/lux-util';\n\n@Component({\n  selector: 'lux-message',\n  templateUrl: './lux-message.component.html'\n})\nexport class LuxMessageComponent implements OnInit {\n  private _luxMessage: ILuxMessage;\n\n  backgroundCSSClass: string = 'lux-bg-color-blue';\n  fontCSSClass: string = 'lux-font-color-white';\n\n  @Output() luxMessageClosed: EventEmitter<ILuxMessage> = new EventEmitter<ILuxMessage>();\n\n  @Input() set luxMessage(message: ILuxMessage) {\n    this._luxMessage = message;\n    if (this.luxMessage) {\n      this.updateColor();\n    }\n  }\n\n  get luxMessage(): ILuxMessage {\n    return this._luxMessage;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Setzt die Messages auf ein leeres Array um so die MessageBox auszublenden.\n   */\n  close() {\n    this.luxMessageClosed.emit(this.luxMessage);\n  }\n\n  /**\n   * Aktualisiert die Farbe dieser Box passend zur Farbe der Nachricht.\n   */\n  private updateColor() {\n    const color = this.luxMessage.color;\n    const result = LuxUtil.getColorsByBgColorsEnum(color);\n\n    this.fontCSSClass = result.fontCSSClass;\n    this.backgroundCSSClass = result.backgroundCSSClass;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LuxFormModule } from '../lux-form/lux-form.module';\nimport {\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSortModule,\n  MatTableModule\n} from '@angular/material';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxSpinnerComponent } from './lux-spinner/lux-spinner.component';\nimport { LuxLabelComponent } from './lux-label/lux-label.component';\nimport { LuxBadgeComponent } from './lux-badge/lux-badge.component';\nimport { LuxProgressComponent } from './lux-progress/lux-progress.component';\nimport { LuxTableComponent } from './lux-table/lux-table.component';\nimport { LuxTableColumnFooterComponent } from './lux-table/lux-table-subcomponents/lux-table-column-footer.component';\nimport { LuxTableColumnComponent } from './lux-table/lux-table-subcomponents/lux-table-column.component';\nimport { LuxMessageBoxComponent } from './lux-message-box/lux-message-box.component';\nimport { LuxMessageComponent } from './lux-message-box/lux-message-box-subcomponents/lux-message.component';\nimport { LuxTableColumnHeaderComponent } from './lux-table/lux-table-subcomponents/lux-table-column-header.component';\nimport { LuxTableColumnContentComponent } from './lux-table/lux-table-subcomponents/lux-table-column-content.component';\nimport { LuxMediaQueryObserverService } from '../lux-util/lux-media-query-observer.service';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LuxActionModule } from '../lux-action/lux-action.module';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    LuxFormModule,\n    LuxActionModule,\n    LuxIconModule,\n    LuxDirectivesModule,\n    LuxComponentsConfigModule\n  ],\n  declarations: [\n    LuxSpinnerComponent,\n    LuxLabelComponent,\n    LuxBadgeComponent,\n    LuxProgressComponent,\n    LuxTableComponent,\n    LuxTableColumnFooterComponent,\n    LuxTableColumnComponent,\n    LuxTableColumnHeaderComponent,\n    LuxTableColumnContentComponent,\n    LuxMessageBoxComponent,\n    LuxMessageComponent\n  ],\n  providers: [LuxMediaQueryObserverService],\n  exports: [\n    LuxSpinnerComponent,\n    LuxLabelComponent,\n    LuxBadgeComponent,\n    LuxProgressComponent,\n    LuxTableComponent,\n    LuxTableColumnFooterComponent,\n    LuxTableColumnComponent,\n    LuxTableColumnHeaderComponent,\n    LuxTableColumnContentComponent,\n    LuxMessageBoxComponent,\n    LuxMessageComponent\n  ]\n})\nexport class LuxCommonModule {}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class LuxHttpErrorInterceptor implements HttpInterceptor {\n  static dataStream: ReplaySubject<any> = new ReplaySubject(1);\n\n  constructor() {}\n\n  static dataStream$(): Observable<any> {\n    return LuxHttpErrorInterceptor.dataStream.asObservable();\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap(\n        () => {\n          LuxHttpErrorInterceptor.dataStream.next([]);\n        },\n        error => {\n          if (error instanceof HttpErrorResponse && error.status === 400) {\n            LuxHttpErrorInterceptor.dataStream.next(error.error.errors);\n          }\n        }\n      )\n    );\n  }\n}\n","import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { LuxHttpErrorInterceptor } from './lux-http-error-interceptor';\nimport { Subscription } from 'rxjs';\nimport { ILuxMessage } from '../../lux-common/lux-message-box/lux-message-box-model/lux-message.interface';\nimport { LuxBackgroundColorsEnum } from '../../lux-util/lux-colors.enum';\n\n@Component({\n  selector: 'lux-http-error',\n  templateUrl: 'lux-http-error.component.html',\n  styleUrls: ['lux-http-error.component.scss']\n})\nexport class LuxHttpErrorComponent implements OnInit, OnDestroy, AfterViewInit {\n  private subs: Subscription[] = [];\n\n  errors: any[];\n\n  constructor(router: Router) {\n    // Beim Ansteuern einer neuen Route, die aktuellen Fehler resetten.\n    router.events.forEach(event => {\n      if (event instanceof NavigationStart) {\n        LuxHttpErrorInterceptor.dataStream.next([]);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.errors = [];\n  }\n\n  ngAfterViewInit() {\n    // Wenn neue Fehler-Objekte kommen, diese umformatieren und in der LuxMessageBoxComponent anzeigen.\n    this.subs.push(\n      LuxHttpErrorInterceptor.dataStream$().subscribe((errors: any[]) => {\n        this.updateErrors(errors);\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    // Alle bekannten Subscriptions auflösen.\n    this.subs.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n\n  /**\n   * Updated das aktuelle Errors-Array mit dem übergebenen Wert.\n   * Liest dabei die Message aus dem Fehler und erzeugt LuxMessage-Objekte für die LuxMessageBoxComponent.\n   * @param errors\n   */\n  private updateErrors(errors: any[]) {\n    const errorMessages: ILuxMessage[] = [];\n    if (errors && errors.length > 0) {\n      errors.forEach((error: any) => {\n        errorMessages.push({\n          text: this.readErrorMessage(error),\n          color: LuxBackgroundColorsEnum.red,\n          iconName: 'fa-bug'\n        });\n      });\n    }\n    setTimeout(() => {\n      this.errors = errorMessages;\n    });\n  }\n\n  /**\n   * Versucht eine Fehlermeldung aus dem Fehler zu lesen.\n   * Zuerst wird geschaut, ob der Fehler selbst nur ein String ist ==> Wenn ja, diesen zurückgeben.\n   * Dann wird geprüft, ob der Fehler eine \"message\"-Property besitzt ==> Wenn ja, diese zurückgeben\n   * Als letzter Ausweg wird das \"error\"-Objekt selbst über die toString-Methode zurückgegeben.\n   * @param error\n   */\n  private readErrorMessage(error: any): string {\n    if (typeof error === 'string') {\n      return error;\n    } else if (error.hasOwnProperty('message')) {\n      return error['message'];\n    } else {\n      return error.toString();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ILuxErrorPageConfig } from '../lux-error-interfaces/lux-error-page-config.interface';\nimport { ILuxError } from '../lux-error-interfaces/lux-error.interface';\n\n/**\n * Dieser Service dient dazu, die aktuellen Fehlermeldungen und die Error-Page Konfiguration zu speichern.\n *\n * Er wird von LuxErrorService und LuxErrorPageComponent benutzt, ohne ihn gäbe es Cycle-Dependency Fehler.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LuxErrorStoreService {\n  private _config: ILuxErrorPageConfig;\n  private _error: ILuxError;\n  private _lastErrors: ILuxError[];\n\n  /**\n   * Enthaelt die normale Konfiguration der Fehlerseite, kann bei Bedarf mit setConfig ueberschrieben werden.\n   */\n  private readonly _defaultConfig: ILuxErrorPageConfig = {\n    iconName: 'far fa-times-circle',\n    iconSize: '5x',\n    errorText: 'Uups... da ist etwas schief gelaufen. Wir kennen die Fehlerdetails bereits und kümmern uns darum.',\n    homeRedirectText: 'Zurück zur Startseite',\n    homeRedirectUrl: '',\n    errorPageUrl: 'errorpage',\n    skipLocationChange: true\n  };\n\n  /**\n   * Gibt die aktuelle Konfiguration zurueck.\n   * @returns ILuxErrorPageConfig\n   */\n  get config() {\n    return this._config;\n  }\n\n  /**\n   * Gibt ein Array der letzten Fehler zurueck.\n   * @returns Array<ILuxError[]>\n   */\n  get lastErrors() {\n    return Array.of(this._lastErrors);\n  }\n\n  /**\n   * Gibt den aktuellen Fehler zurueck.\n   * @returns ILuxError\n   */\n  get error(): ILuxError {\n    return this._error;\n  }\n\n  /**\n   * Sichert den Fehler in der Property und fügt ihn der \"lastErrors\"-Liste hinzu.\n   * @param newError\n   */\n  set error(newError: ILuxError) {\n    this._error = newError;\n    this._lastErrors.push(newError);\n  }\n\n  constructor() {}\n\n  /**\n   * Initialisiert den Service.\n   */\n  init() {\n    this._lastErrors = [];\n    this._error = null;\n    this._config = {};\n    this.safeNewConfig(this._defaultConfig);\n  }\n\n  /**\n   *\n   * @param luxErrorPageConfig\n   */\n  safeNewConfig(luxErrorPageConfig: ILuxErrorPageConfig) {\n    // wenn keine Config übergeben wird, ein leeres Objekt erzeugen\n    // das sorgt dafür, dass wenigstens die default-Werte genommen werden\n    luxErrorPageConfig = luxErrorPageConfig ? luxErrorPageConfig : {};\n    // alle Werte der übergebenen Config prüfen und ggf. default-Werte nutzen\n    Object.keys(luxErrorPageConfig).forEach(e => {\n      if (luxErrorPageConfig[e] !== undefined && luxErrorPageConfig[e] !== null) {\n        this._config[e] = luxErrorPageConfig[e];\n      } else {\n        this._config[e] = this._defaultConfig[e];\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ILuxErrorPageConfig } from './lux-error-interfaces/lux-error-page-config.interface';\nimport { ILuxError } from './lux-error-interfaces/lux-error.interface';\nimport { LuxErrorStoreService } from './lux-error-services/lux-error-store.service';\n\n@Component({\n  selector: 'lux-error-page',\n  templateUrl: './lux-error-page.component.html',\n  styleUrls: ['./lux-error-page.component.scss']\n})\nexport class LuxErrorPageComponent implements OnInit {\n  get error(): ILuxError {\n    return this.errorStore.error;\n  }\n\n  get errorConfig(): ILuxErrorPageConfig {\n    return this.errorStore.config;\n  }\n\n  constructor(private router: Router, private errorStore: LuxErrorStoreService) {}\n\n  ngOnInit() {}\n\n  /**\n   * Navigiert ueber den Router zum eingetragenen Home-Pfad\n   */\n  clickHomeRedirect() {\n    this.router.navigate([this.errorConfig.homeRedirectUrl]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxHttpErrorComponent } from './lux-http-error/lux-http-error.component';\nimport { LuxHttpErrorInterceptor } from './lux-http-error/lux-http-error-interceptor';\nimport { LuxLayoutModule } from '../lux-layout/lux-layout.module';\nimport { LuxErrorPageComponent } from './lux-error-page/lux-error-page.component';\nimport { RouterModule } from '@angular/router';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxCommonModule } from '../lux-common/lux-common.module';\nimport { LuxActionModule } from '../lux-action/lux-action.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    RouterModule,\n    LuxIconModule,\n    LuxLayoutModule,\n    LuxCommonModule,\n    LuxActionModule,\n    LuxComponentsConfigModule\n  ],\n  entryComponents: [LuxErrorPageComponent],\n  declarations: [LuxHttpErrorComponent, LuxErrorPageComponent],\n  exports: [LuxHttpErrorComponent, LuxErrorPageComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LuxHttpErrorInterceptor,\n      multi: true\n    }\n  ]\n})\nexport class LuxErrorModule {}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { ILuxErrorPageConfig } from '../lux-error-interfaces/lux-error-page-config.interface';\nimport { ILuxError } from '../lux-error-interfaces/lux-error.interface';\nimport { LuxErrorPageComponent } from '../lux-error-page.component';\nimport { LuxErrorStoreService } from './lux-error-store.service';\n\n@Injectable()\nexport class LuxErrorService {\n  constructor(private router: Router, private errorStore: LuxErrorStoreService) {\n    this.errorStore.init();\n    this.setConfig(null);\n  }\n\n  /**\n   * Ueberschreibt die aktuelle Konfiguration fuer die Fehlerseite.\n   * Uebernimmt so viele Werte wie moeglich aus der uebergebenen Konfiguration,\n   * sonst werden die Default-Werte genutzt.\n   * @param luxErrorPageConfig\n   */\n  setConfig(luxErrorPageConfig: ILuxErrorPageConfig) {\n    this.errorStore.safeNewConfig(luxErrorPageConfig);\n    // potentielle alte Route zu LuxErrorPageComponent entfernen\n    this.router.config = this.router.config.filter(entry => entry.component !== LuxErrorPageComponent);\n    // neue Route eintragen\n    this.router.config.unshift({ path: this.errorStore.config.errorPageUrl, component: LuxErrorPageComponent });\n  }\n\n  /**\n   * Navigiert zur Fehlerkomponente und versucht einen Fehler\n   * (wenn mitgegeben) zu sichern.\n   * @param error\n   * @returns Observable<any>\n   */\n  navigateToErrorPage(error?: ILuxError): Observable<any> {\n    if (error) {\n      this.errorStore.error = error;\n    }\n    const { errorPageUrl, skipLocationChange } = this.errorStore.config;\n    return of(this.router.navigateByUrl(errorPageUrl, { skipLocationChange }));\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { LuxFilePreviewData } from './lux-file-preview-data';\n\nexport const LUX_FILE_PREVIEW_DATA = new InjectionToken<LuxFilePreviewData>('LUX_FILE_PREVIEW_DATA');\n\nexport interface LuxFilePreviewConfig {\n  panelClass?: string;\n  hasBackdrop?: boolean;\n  backdropClass?: string;\n  previewData: LuxFilePreviewData;\n}\n","import { OverlayRef } from '@angular/cdk/overlay';\n\nexport class LuxFilePreviewRef {\n  constructor(private overlayRef: OverlayRef) {}\n\n  close(): void {\n    this.overlayRef.dispose();\n  }\n}\n","import { ESCAPE } from '@angular/cdk/keycodes';\nimport { HostListener, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LUX_FILE_PREVIEW_DATA } from '../lux-file-preview-config';\nimport { LuxFilePreviewData } from '../lux-file-preview-data';\nimport { LuxFilePreviewRef } from '../lux-file-preview-ref';\n\nexport class LuxFilePreviewBase implements OnInit, OnDestroy {\n  url: string;\n  urls: string[] = [];\n\n  paddingWith = 100;\n  paddingHeight = 150;\n\n  height: number;\n  width: number;\n\n  startPhase = true;\n  startDurationMs = 250;\n  loading = true;\n  loadingTimer: any;\n\n  downloadIconName = 'fas fa-download';\n  downloadTagId = 'file-preview-download-btn';\n  downloadAriaLabel = 'Datei herunterladen';\n\n  closeIconName = 'fas fa-window-close';\n  closeTagId = 'file-preview-close-btn';\n  closeAriaLabel = 'Dateivorschau schließen';\n\n  @HostListener('document:keydown', ['$event'])\n  handleKeydown(event: KeyboardEvent) {\n    if (event.keyCode === ESCAPE) {\n      this.onClose();\n    }\n  }\n\n  @HostListener('window:resize')\n  windowResize() {\n    this.updateWidthAndHeight();\n  }\n\n  constructor(\n    protected previewRef: LuxFilePreviewRef,\n    @Inject(LUX_FILE_PREVIEW_DATA) protected previewData: LuxFilePreviewData,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  ngOnInit() {\n    this.loadingTimer = setTimeout(() => {\n      this.startPhase = false;\n    }, this.startDurationMs);\n\n    this.updateWidthAndHeight();\n\n    setTimeout(() => {\n      let myBlob: Blob;\n      if ('string' === typeof this.previewData.fileObject.content) {\n        myBlob = new Blob([LuxUtil.base64ToArrayBuffer(this.previewData.fileObject.content.split(',')[1])], {\n          type: this.previewData.fileObject.type\n        });\n      } else {\n        myBlob = this.previewData.fileObject.content;\n      }\n\n      this.url = window.URL.createObjectURL(myBlob);\n      this.urls.push(this.url);\n    });\n  }\n\n  ngOnDestroy() {\n    this.urls.forEach(url => {\n      window.URL.revokeObjectURL(url);\n    });\n  }\n\n  onDownload() {\n    this.previewData.fileComponent.downloadFile(this.previewData.fileObject);\n    this.previewRef.close();\n  }\n\n  onClose() {\n    this.previewRef.close();\n  }\n\n  loadingFinished() {\n    this.loading = false;\n  }\n\n  clearFocus() {\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  updateWidthAndHeight() {\n    this.width = window.innerWidth - this.paddingWith;\n    this.height = window.innerHeight - this.paddingHeight;\n  }\n}\n","import { AfterViewInit, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LuxFilePreviewBase } from '../lux-file-preview-base/lux-file-preview-base';\nimport { LUX_FILE_PREVIEW_DATA } from '../lux-file-preview-config';\nimport { LuxFilePreviewData } from '../lux-file-preview-data';\nimport { LuxFilePreviewRef } from '../lux-file-preview-ref';\n\n@Component({\n  selector: 'lux-file-preview-imgviewer',\n  templateUrl: './lux-file-preview-imgviewer.component.html',\n  styleUrls: ['./lux-file-preview-imgviewer.component.scss']\n})\nexport class LuxFilePreviewImgViewerComponent extends LuxFilePreviewBase implements OnInit, AfterViewInit {\n  @ViewChild('previewImg', { static: false }) previewImg: ElementRef;\n\n  zoomActive = false;\n  zoomWidth = 0;\n  zoomStep = 250;\n\n  constructor(\n    protected previewRef: LuxFilePreviewRef,\n    @Inject(LUX_FILE_PREVIEW_DATA) protected previewData: LuxFilePreviewData,\n    public sanitizer: DomSanitizer\n  ) {\n    super(previewRef, previewData, sanitizer);\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.zoomActive =\n        this.previewImg && this.previewImg.nativeElement.naturalWidth - this.paddingWith > window.innerWidth;\n    });\n  }\n\n  onLoad(event: Event) {\n    this.zoomActive =\n      this.previewImg && this.previewImg.nativeElement.naturalWidth - this.paddingWith > window.innerWidth;\n    this.loadingFinished();\n  }\n\n  onZoomIn() {\n    this.zoomWidth += this.zoomStep;\n    this.clearFocus();\n  }\n\n  onZoomOut() {\n    this.zoomWidth -= this.zoomStep;\n    this.clearFocus();\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LuxFilePreviewBase } from '../lux-file-preview-base/lux-file-preview-base';\nimport { LUX_FILE_PREVIEW_DATA } from '../lux-file-preview-config';\nimport { LuxFilePreviewData } from '../lux-file-preview-data';\nimport { LuxFilePreviewRef } from '../lux-file-preview-ref';\n\n@Component({\n  selector: 'lux-file-preview-notsupportedviewer',\n  templateUrl: './lux-file-preview-notsupportedviewer.component.html',\n  styleUrls: ['./lux-file-preview-notsupportedviewer.component.scss']\n})\nexport class LuxFilePreviewNotSupportedViewerComponent extends LuxFilePreviewBase implements OnInit {\n  counter = 5;\n  timer: any;\n\n  downloadLabelDefault = 'Download... ';\n  downloadLabel = this.downloadLabelDefault + this.counter;\n\n  constructor(\n    protected previewRef: LuxFilePreviewRef,\n    @Inject(LUX_FILE_PREVIEW_DATA) protected previewData: LuxFilePreviewData,\n    protected sanitizer: DomSanitizer\n  ) {\n    super(previewRef, previewData, sanitizer);\n  }\n\n  ngOnInit() {\n    this.updateDownloadLabel();\n  }\n\n  onDownload() {\n    clearTimeout(this.timer);\n\n    super.onDownload();\n  }\n\n  onClose() {\n    clearTimeout(this.timer);\n\n    super.onClose();\n  }\n\n  updateDownloadLabel() {\n    this.timer = setTimeout(() => {\n      if (this.counter > 0) {\n        this.counter--;\n        this.downloadLabel = this.downloadLabelDefault + this.counter;\n        this.updateDownloadLabel();\n      } else {\n        this.onDownload();\n      }\n    }, 1000);\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { PdfViewerComponent } from 'ng2-pdf-viewer';\nimport { LuxFilePreviewBase } from '../lux-file-preview-base/lux-file-preview-base';\nimport { LUX_FILE_PREVIEW_DATA } from '../lux-file-preview-config';\nimport { LuxFilePreviewData } from '../lux-file-preview-data';\nimport { LuxFilePreviewRef } from '../lux-file-preview-ref';\n\n@Component({\n  selector: 'lux-file-preview-pdfviewer',\n  templateUrl: './lux-file-preview-pdfviewer.component.html',\n  styleUrls: ['./lux-file-preview-pdfviewer.component.scss']\n})\nexport class LuxFilePreviewPdfViewerComponent extends LuxFilePreviewBase implements OnInit {\n  showAll = true;\n\n  page = 1;\n  numPages = 0;\n\n  loadingDivLeft: number;\n  loadingDivTop: number;\n  loadingDivWidth = 100;\n  loadingDivHeight = 50;\n\n  options: any[] = [\n    { label: ' 15%', value: 0.15 },\n    { label: ' 25%', value: 0.25 },\n    { label: ' 50%', value: 0.5 },\n    { label: ' 75%', value: 0.75 },\n    { label: '100%', value: 1.0 },\n    { label: '150%', value: 1.5 },\n    { label: '200%', value: 2.0 }\n  ];\n  zoom: any = this.options[4];\n\n  constructor(\n    protected previewRef: LuxFilePreviewRef,\n    @Inject(LUX_FILE_PREVIEW_DATA) protected previewData: LuxFilePreviewData,\n    protected sanitizer: DomSanitizer\n  ) {\n    super(previewRef, previewData, sanitizer);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.loadingDivLeft = window.innerWidth / 2 - this.loadingDivWidth / 2;\n    this.loadingDivTop = window.innerHeight / 2 - this.loadingDivHeight / 2;\n  }\n\n  onPrevPage() {\n    this.page--;\n    this.clearFocus();\n  }\n\n  onNextPage() {\n    this.page++;\n    this.clearFocus();\n  }\n\n  pageRendered(e: any) {\n    if (e && e.pageNumber === 1) {\n      this.loadingFinished();\n    }\n  }\n\n  callBackFn(pdf: any) {\n    this.numPages = pdf.numPages;\n\n    pdf.getPage(1).then((page: any) => {\n      let viewportWidth = 0;\n      let currentIndex = 0;\n\n      while (viewportWidth === 0 || viewportWidth > this.width) {\n        viewportWidth =\n          (page as any).getViewport({\n            scale: this.zoom.value\n          }).width * PdfViewerComponent.CSS_UNITS;\n\n        currentIndex = this.options.findIndex(currentZoom => currentZoom === this.zoom);\n\n        if (currentIndex === 0) {\n          break;\n        }\n\n        if (viewportWidth > this.width) {\n          this.zoom = this.options[Math.max(currentIndex - 1, 0)];\n        }\n      }\n    });\n  }\n\n  onError(event: any) {\n    console.log(event);\n  }\n\n  onProgress(progressData: any) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\nimport { LUX_FILE_PREVIEW_DATA } from '../lux-file-preview-config';\nimport { LuxFilePreviewData } from '../lux-file-preview-data';\n\n@Component({\n  selector: 'lux-file-preview-toolbar',\n  templateUrl: './lux-file-preview-toolbar.component.html',\n  styleUrls: ['./lux-file-preview-toolbar.component.scss']\n})\nexport class LuxFilePreviewToolbarComponent {\n  constructor(\n    public mediaQueryService: LuxMediaQueryObserverService,\n    @Inject(LUX_FILE_PREVIEW_DATA) public data: LuxFilePreviewData\n  ) {}\n}\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { LUX_FILE_PREVIEW_DATA } from './lux-file-preview-config';\nimport { LuxFilePreviewData } from './lux-file-preview-data';\nimport { LuxFilePreviewImgViewerComponent } from './lux-file-preview-imgviewer/lux-file-preview-imgviewer.component';\nimport { LuxFilePreviewNotSupportedViewerComponent } from './lux-file-preview-notsupportedviewer/lux-file-preview-notsupportedviewer.component';\nimport { LuxFilePreviewPdfViewerComponent } from './lux-file-preview-pdfviewer/lux-file-preview-pdfviewer.component';\n\n@Component({\n  selector: 'lux-file-preview',\n  templateUrl: './lux-file-preview.component.html',\n  styleUrls: ['./lux-file-preview.component.scss']\n})\nexport class LuxFilePreviewComponent implements OnInit {\n  @ViewChild(LuxFilePreviewPdfViewerComponent, { static: false }) pdfViewer: LuxFilePreviewPdfViewerComponent;\n  @ViewChild(LuxFilePreviewImgViewerComponent, { static: false }) imgViewer: LuxFilePreviewImgViewerComponent;\n  @ViewChild(LuxFilePreviewNotSupportedViewerComponent, { static: false })\n  notSupportedViewer: LuxFilePreviewNotSupportedViewerComponent;\n\n  fileType: 'img' | 'pdf' | 'notsupported' = 'notsupported';\n\n  constructor(@Inject(LUX_FILE_PREVIEW_DATA) public data: LuxFilePreviewData) {}\n\n  ngOnInit(): void {\n    if (this.data.fileObject.type.indexOf('image/') > -1) {\n      this.fileType = 'img';\n    } else if (this.data.fileObject.type.indexOf('application/pdf') > -1) {\n      this.fileType = 'pdf';\n    } else {\n      this.fileType = 'notsupported';\n    }\n  }\n\n  onClose() {\n    if (this.pdfViewer) {\n      this.pdfViewer.onClose();\n    } else if (this.imgViewer) {\n      this.imgViewer.onClose();\n    } else {\n      this.notSupportedViewer.onClose();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\nimport { LuxActionModule } from '../lux-action/lux-action.module';\nimport { LuxCommonModule } from '../lux-common/lux-common.module';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\nimport { LuxFormModule } from '../lux-form/lux-form.module';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxLayoutModule } from '../lux-layout/lux-layout.module';\nimport { LuxFilePreviewImgViewerComponent } from './lux-file-preview-imgviewer/lux-file-preview-imgviewer.component';\nimport { LuxFilePreviewNotSupportedViewerComponent } from './lux-file-preview-notsupportedviewer/lux-file-preview-notsupportedviewer.component';\nimport { LuxFilePreviewPdfViewerComponent } from './lux-file-preview-pdfviewer/lux-file-preview-pdfviewer.component';\nimport { LuxFilePreviewToolbarComponent } from './lux-file-preview-toolbar/lux-file-preview-toolbar.component';\nimport { LuxFilePreviewComponent } from './lux-file-preview.component';\n\n@NgModule({\n  declarations: [\n    LuxFilePreviewComponent,\n    LuxFilePreviewToolbarComponent,\n    LuxFilePreviewPdfViewerComponent,\n    LuxFilePreviewImgViewerComponent,\n    LuxFilePreviewNotSupportedViewerComponent\n  ],\n  imports: [\n    CommonModule,\n    PdfViewerModule,\n    FlexLayoutModule,\n    LuxCommonModule,\n    LuxLayoutModule,\n    LuxActionModule,\n    LuxIconModule,\n    LuxFormModule,\n    LuxDirectivesModule\n  ],\n  exports: [\n    LuxFilePreviewComponent,\n    LuxFilePreviewToolbarComponent,\n    LuxFilePreviewPdfViewerComponent,\n    LuxFilePreviewImgViewerComponent,\n    LuxFilePreviewNotSupportedViewerComponent\n  ]\n})\nexport class LuxFilePreviewModule {}\n","import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable, Injector } from '@angular/core';\nimport { LUX_FILE_PREVIEW_DATA, LuxFilePreviewConfig } from './lux-file-preview-config';\nimport { LuxFilePreviewRef } from './lux-file-preview-ref';\nimport { LuxFilePreviewComponent } from './lux-file-preview.component';\n\nexport const DEFAULT_FILE_PREVIEW_CONFIG: LuxFilePreviewConfig = {\n  hasBackdrop: true,\n  backdropClass: 'lux-file-preview-backdrop',\n  panelClass: 'lux-file-preview-panel',\n  previewData: {\n    fileComponent: null,\n    fileObject: null\n  }\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LuxFilePreviewService {\n  constructor(private injector: Injector, private overlay: Overlay) {}\n\n  open(config: LuxFilePreviewConfig): LuxFilePreviewRef {\n    const previewConfig = { ...DEFAULT_FILE_PREVIEW_CONFIG, ...config };\n    const overlayRef = this.createOverlay(previewConfig);\n    const previewRef = new LuxFilePreviewRef(overlayRef);\n    const previewComponent = this.attachDialogContainer(overlayRef, previewRef, previewConfig);\n\n    overlayRef.backdropClick().subscribe(() => previewComponent.onClose());\n\n    return previewRef;\n  }\n\n  private attachDialogContainer(overlayRef: OverlayRef, dialogRef: LuxFilePreviewRef, config: LuxFilePreviewConfig) {\n    const injector = this.createInjector(config, dialogRef);\n    const containerPortal = new ComponentPortal(LuxFilePreviewComponent, null, injector);\n    const containerRef: ComponentRef<LuxFilePreviewComponent> = overlayRef.attach(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  private createOverlay(config: LuxFilePreviewConfig) {\n    return this.overlay.create(this.getOverlayConfig(config));\n  }\n\n  private createInjector(config: LuxFilePreviewConfig, dialogRef: LuxFilePreviewRef): PortalInjector {\n    const injectionTokens = new WeakMap();\n\n    injectionTokens.set(LuxFilePreviewRef, dialogRef);\n    injectionTokens.set(LUX_FILE_PREVIEW_DATA, config.previewData);\n\n    return new PortalInjector(this.injector, injectionTokens);\n  }\n\n  private getOverlayConfig(config: LuxFilePreviewConfig): OverlayConfig {\n    const positionStrategy = this.overlay\n      .position()\n      .global()\n      .centerHorizontally()\n      .centerVertically();\n\n    const overlayConfig = new OverlayConfig({\n      hasBackdrop: config.hasBackdrop,\n      backdropClass: config.backdropClass,\n      panelClass: config.panelClass,\n      scrollStrategy: this.overlay.scrollStrategies.block(),\n      positionStrategy\n    });\n\n    return overlayConfig;\n  }\n}\n","export interface ILuxAppFooterButtonInfo {\n  label: string;\n  cmd: string;\n  color?: string;\n  disabled?: boolean;\n  hidden?: boolean;\n  raised?: boolean;\n  iconName?: string;\n  alwaysVisible?: boolean;\n  onClick?: (that: ILuxAppFooterButtonInfo) => void;\n}\n\nexport class LuxAppFooterButtonInfo implements ILuxAppFooterButtonInfo {\n  label: string;\n  color: string;\n  disabled: boolean;\n  cmd: string;\n  hidden: boolean;\n  raised: boolean;\n  iconName: string;\n  alwaysVisible: boolean;\n  onClick: (that: ILuxAppFooterButtonInfo) => void;\n\n  constructor(\n    label: string,\n    cmd: string,\n    color?: string,\n    disabled?: boolean,\n    hidden?: boolean,\n    raised?: boolean,\n    iconName?: string,\n    alwaysVisible?: boolean,\n    onClick?: (that: ILuxAppFooterButtonInfo) => void\n  ) {\n    this.label = label;\n    this.color = color;\n    this.disabled = disabled;\n    this.cmd = cmd;\n    this.hidden = hidden === true ? true : false;\n    this.raised = raised === undefined || raised === null || raised === true ? true : false;\n    this.iconName = iconName;\n    this.alwaysVisible =\n      alwaysVisible === undefined || alwaysVisible === null || alwaysVisible === false ? false : true;\n    this.onClick = onClick ? onClick : (that: ILuxAppFooterButtonInfo) => {};\n  }\n\n  /**\n   * Statische Methode um ein Info-Objekt zu generieren.\n   * Nimmt ein Objekt vom Typ ILuxAppFooterButtonInfo entgegen.\n   * @param data\n   * @returns eine Button Info\n   */\n  static generateInfo(data: ILuxAppFooterButtonInfo): LuxAppFooterButtonInfo {\n    const info: LuxAppFooterButtonInfo = new LuxAppFooterButtonInfo(\n      data.label,\n      data.cmd,\n      data.color,\n      data.disabled,\n      data.hidden,\n      data.raised,\n      data.iconName,\n      data.alwaysVisible,\n      data.onClick\n    );\n\n    return info;\n  }\n}\n","export interface ILuxAppFooterLinkInfo {\n  label: string;\n  path: string;\n  alwaysVisible?: boolean;\n  blank?: boolean;\n}\n\nexport class LuxAppFooterLinkInfo implements ILuxAppFooterLinkInfo {\n  label: string;\n  path: string;\n  alwaysVisible: boolean;\n  blank: boolean;\n\n  constructor(label: string, path: string, alwaysVisible?: boolean, blank?: boolean) {\n    this.label = label;\n    this.path = path;\n    this.alwaysVisible = alwaysVisible;\n    this.blank = blank;\n  }\n\n  /**\n   * Statische Methode um ein Info-Objekt zu generieren.\n   * Nimmt ein Objekt vom Typ ILuxAppFooterLinkInfo entgegen.\n   * @param data\n   * @returns eine Link Info\n   */\n  static generateInfo(data: ILuxAppFooterLinkInfo): LuxAppFooterLinkInfo {\n    const info: LuxAppFooterLinkInfo = new LuxAppFooterLinkInfo(data.label, data.path, data.alwaysVisible);\n\n    return info;\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LuxLookupParameters } from '../lux-lookup-model/lux-lookup-parameters';\nimport { LuxLookupTableEntry } from '../lux-lookup-model/lux-lookup-table-entry';\n\n@Injectable()\nexport class LuxLookupService {\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Liefert die Eintraege einer Schluesseltabelle.\n   *\n   * @param tableNo\n   * @param parameters\n   * @param url\n   * @returns Observable<LuxLookupTableEntry[]>\n   */\n  getLookupTable(tableNo: string, parameters: LuxLookupParameters, url: string): Observable<LuxLookupTableEntry[]> {\n    const httpParameters = this.generateParameters(parameters);\n    return this.http.get<LuxLookupTableEntry[]>(url + 'getLookupTable/' + tableNo, { params: httpParameters });\n  }\n\n  /**\n   * Generiert die Standard-Parameter fuer einen Lookup-Request.\n   *\n   * @param parameters\n   * @returns HttpParams\n   */\n  private generateParameters(parameters: LuxLookupParameters): HttpParams {\n    let httpParameters = new HttpParams();\n    httpParameters = httpParameters.append('knr', '' + parameters.knr);\n    httpParameters = httpParameters.append('raw', '' + parameters.raw);\n\n    if (parameters.keys && parameters.keys.length > 0) {\n      parameters.keys.forEach((key: string) => {\n        httpParameters = httpParameters.append('keys', key);\n      });\n    }\n\n    if (parameters.fields && parameters.fields.length > 0) {\n      parameters.fields.forEach((field: string) => {\n        httpParameters = httpParameters.append('fields', field);\n      });\n    }\n\n    return httpParameters;\n  }\n}\n","// tslint:disable:max-line-length\n\nimport {\n  ChangeDetectorRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { LuxBehandlungsOptionenUngueltige, LuxLookupParameters } from './lux-lookup-parameters';\nimport { LuxLookupTableEntry } from './lux-lookup-table-entry';\nimport { LuxLookupService } from '../lux-lookup-service/lux-lookup.service';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxFormComponentBase } from '../../lux-form/lux-form-model/lux-form-component-base.class';\nimport { LuxLookupHandlerService } from '../lux-lookup-service/lux-lookup-handler.service';\nimport { LuxLookupErrorStateMatcher } from './lux-lookup-error-state-matcher';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { Subscription } from 'rxjs';\nimport { LuxComponentsConfigParameters } from '../../lux-components-config/lux-components-config-parameters.interface';\n\nexport abstract class LuxLookupComponent extends LuxFormComponentBase implements OnInit, OnChanges, OnDestroy {\n  LuxBehandlungsOptionenUngueltige = LuxBehandlungsOptionenUngueltige;\n\n  lookupService: LuxLookupService;\n  lookupHandler: LuxLookupHandlerService;\n  componentsConfigService: LuxComponentsConfigService;\n\n  stateMatcher: LuxLookupErrorStateMatcher;\n  apiPath: string;\n\n  @Input() luxPlaceholder: string;\n  @Input() luxReadonly: boolean;\n  @Input() luxLookupId: string;\n  @Input() luxTableNo: string;\n  @Input() luxRenderProp: any;\n  @Input() luxBehandlungUngueltige: LuxBehandlungsOptionenUngueltige = LuxBehandlungsOptionenUngueltige.ausgrauen;\n  @Input() luxParameters: LuxLookupParameters;\n  @Input() luxCustomStyles;\n  @Input() luxCustomInvalidStyles;\n  @Input() luxTagId: string;\n  @Output() luxDataLoaded: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() luxValueChange: EventEmitter<LuxLookupTableEntry | LuxLookupTableEntry[]> = new EventEmitter<\n    LuxLookupTableEntry\n  >();\n  entries: LuxLookupTableEntry[] = [];\n\n  private configSubscription: Subscription;\n\n  protected constructor(\n    lookupService: LuxLookupService,\n    lookupHandler: LuxLookupHandlerService,\n    controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    componentsConfigService: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, componentsConfigService);\n\n    this.lookupService = lookupService;\n    this.lookupHandler = lookupHandler;\n    this.componentsConfigService = componentsConfigService;\n  }\n\n  get luxValue(): any {\n    return this.getValue();\n  }\n\n  @Input() set luxValue(value: any) {\n    this.setValue(value);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (!this.luxLookupId) {\n      console.error(\n        `Die Lookup-Komponente mit der Tabellen-Nr. ${this.luxTableNo} besitzt keine LookupId. Bitte tragen Sie diese nach.`\n      );\n    }\n\n    this.lookupHandler.addLookupElement(this.luxLookupId);\n    this.lookupHandler.getLookupElementObsv(this.luxLookupId).subscribe(() => {\n      this.fetchLookupData();\n    });\n\n    this.configSubscription = this.componentsConfigService.config.subscribe(\n      (newConfig: LuxComponentsConfigParameters) => {\n        this.apiPath = newConfig.lookupServiceUrl;\n\n        this.lookupHandler.reloadData(this.luxLookupId);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this.configSubscription.unsubscribe();\n  }\n\n  /**\n   * Gibt zurueck, ob die RenderProperty eine Funktion ist oder nicht.\n   *\n   * @returns boolean\n   */\n  isRenderPropAFunction(): boolean {\n    return typeof this.luxRenderProp === 'function';\n  }\n\n  /**\n   * Gibt zurück ob sich das entsprechende Element in der Liste ungültiger Elemente befindet.\n   * @param LuxLookupTableEntry entry\n   * @returns boolean\n   */\n  isUngueltig(entry: LuxLookupTableEntry | LuxLookupTableEntry[]) {\n    let isUngueltig = false;\n    if (entry) {\n      if (!Array.isArray(entry)) {\n        if (entry.gueltigkeitBis) {\n          isUngueltig = Date.now() > +entry.gueltigkeitBis;\n        }\n      } else {\n        entry.forEach(element => {\n          if (element.gueltigkeitBis && !isUngueltig) {\n            isUngueltig = Date.now() > +element.gueltigkeitBis;\n          }\n        });\n      }\n    }\n\n    return isUngueltig;\n  }\n\n  /**\n   * Gibt zurück ob ungültige Einträge angezeigt werden sollen.\n   * @returns boolean\n   */\n  showUngueltige() {\n    return (\n      this.luxBehandlungUngueltige === this.LuxBehandlungsOptionenUngueltige.ausgrauen ||\n      this.luxBehandlungUngueltige === this.LuxBehandlungsOptionenUngueltige.anzeigen\n    );\n  }\n\n  /**\n   * Gibt zurück ob ungültige Einträge deaktiviert werden sollen.\n   * @returns boolean\n   */\n  disableUngueltige() {\n    return this.luxBehandlungUngueltige === this.LuxBehandlungsOptionenUngueltige.ausgrauen;\n  }\n\n  /**\n   * Gibt die mitgegebenen Styles abhaengig ob das Element invalid ist zurueck.\n   * @param boolean invalid\n   * @returns LuxLookupOptionStyle\n   */\n  getStyles(invalid: boolean) {\n    if (invalid) {\n      return this.luxCustomInvalidStyles ? this.luxCustomInvalidStyles : {};\n    }\n    return this.luxCustomStyles ? this.luxCustomStyles : {};\n  }\n\n  /**\n   * @override errorMessageModifier - Modifikation der Fehlermeldung\n   * @param value\n   * @param errors\n   */\n  errorMessageModifier(value, errors) {\n    if (errors['ungueltig']) {\n      return 'Der ausgewählte Wert ist ungültig.';\n    }\n    return undefined;\n  }\n\n  getLabel(entry: any): string {\n    if (this.isRenderPropAFunction()) {\n      return this.luxRenderProp(entry);\n    }\n    if (entry[this.luxRenderProp as string]) {\n      return entry[<string>this.luxRenderProp];\n    }\n    return 'Fehler beim Auslesen (Property unbekannt)';\n  }\n\n  /**\n   * Holt die Lookup-Table Daten vom Backend\n   */\n  protected fetchLookupData() {\n    const backendRequest = this.lookupService.getLookupTable(this.luxTableNo, this.luxParameters, this.apiPath);\n    backendRequest.subscribe(\n      (entries: LuxLookupTableEntry[]) => {\n        this.setLookupData(entries);\n        this.luxDataLoaded.emit(true);\n      },\n      () => {\n        this.luxDataLoaded.emit(false);\n      }\n    );\n  }\n\n  /**\n   * Setzt die aktuellen Werte auf die mitgegebenen Entries.\n   * @param entries\n   */\n  protected setLookupData(entries: LuxLookupTableEntry[]) {\n    this.entries = entries;\n    if (this.entries) {\n      // Merken welche Eintraege ungueltig sind, um bei vielen Informationen\n      // nicht die ganzen Funktionsaufrufe zu haben\n      this.entries.forEach((entry: LuxLookupTableEntry) => {\n        entry.isUngueltig = this.isUngueltig(entry);\n      });\n    }\n  }\n\n  // region Overridden methods\n  notifyFormValueChanged(formValue: any) {\n    this.luxValueChange.emit(formValue);\n  }\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxValueChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxValue);\n  }\n\n  // endregion\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class LuxLookupHandlerService {\n  private lookupElements: Map<string, Subject<any>> = new Map();\n\n  constructor() {}\n\n  /**\n   * Fügt ein LookupComponent zu der Map hinzu.\n   * @param string name\n   */\n  addLookupElement(name: string) {\n    this.lookupElements.set(name, new Subject<boolean>());\n  }\n\n  /**\n   * Gibt das Subject einer LookupComponent als Observable zurück (oder null).\n   * @param string name\n   * @returns Observable<any> | null\n   */\n  getLookupElementObsv(name: string): Observable<any> | null {\n    const lookupEl = this.getLookupElementSubject(name);\n    if (lookupEl) {\n      return lookupEl.asObservable();\n    }\n    return null;\n  }\n\n  /**\n   * Gibt das Subject einer LookupComponent zurück (oder null).\n   * @param string name\n   * @returns Observable<any> | null\n   */\n  getLookupElementSubject(name: string) {\n    const lookupEl = this.lookupElements.get(name);\n    if (lookupEl) {\n      return lookupEl;\n    }\n    return null;\n  }\n\n  /**\n   * Stößt das Neuladen von Schlüsseltabellendaten einer LookupComponent an.\n   * @param string name\n   */\n  reloadData(lookupId: string) {\n    const lookupEl = this.getLookupElementSubject(lookupId);\n    if (lookupEl) {\n      lookupEl.next();\n    } else {\n      console.error('Die Lookup-Komponente ' + lookupId + ' konnte nicht gefunden werden.');\n    }\n  }\n}\n","import { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material';\nimport { LuxLookupComponent } from '../lux-lookup-model/lux-lookup-component';\n\nexport class LuxLookupErrorStateMatcher implements ErrorStateMatcher {\n  lookupComponent: LuxLookupComponent;\n\n  constructor(lookupComponent: LuxLookupComponent) {\n    this.lookupComponent = lookupComponent;\n  }\n\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const lookupValue = this.lookupComponent.luxValue;\n    if (lookupValue) {\n      // Wenn ein selektierter Wert ungültig ist, Fehler anzeigen\n      if (\n        (!Array.isArray(lookupValue) && lookupValue.isUngueltig) ||\n        (Array.isArray(lookupValue) && lookupValue.filter(value => value.isUngueltig).length > 0)\n      ) {\n        if (!control.errors || !control.errors.ungueltig) {\n          setTimeout(() => {\n            control.setErrors({ ungueltig: 'true' });\n          });\n        }\n        return true;\n      }\n    }\n    return !!control.errors && control.touched;\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, Input, Optional, ViewChild } from '@angular/core';\nimport { LuxLookupTableEntry } from '../lux-lookup-model/lux-lookup-table-entry';\nimport { LuxLookupService } from '../lux-lookup-service/lux-lookup.service';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxLookupComponent } from '../lux-lookup-model/lux-lookup-component';\nimport { MatSelect, MatSelectChange } from '@angular/material';\nimport { LuxLookupHandlerService } from '../lux-lookup-service/lux-lookup-handler.service';\nimport { LuxLookupErrorStateMatcher } from '../lux-lookup-model/lux-lookup-error-state-matcher';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-lookup-combobox',\n  templateUrl: './lux-lookup-combobox.component.html',\n  styleUrls: ['./lux-lookup-combobox.component.scss']\n})\nexport class LuxLookupComboboxComponent extends LuxLookupComponent implements AfterViewInit {\n  @Input() luxMultiple: boolean = false;\n  @Input() luxEntryBlockSize: number = 25;\n\n  displayedEntries: LuxLookupTableEntry[];\n  @ViewChild(MatSelect, { static: false }) matSelect: MatSelect;\n\n  constructor(\n    lookupService: LuxLookupService,\n    lookupHandler: LuxLookupHandlerService,\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    componentsConfigService: LuxComponentsConfigService\n  ) {\n    super(lookupService, lookupHandler, controlContainer, cdr, logger, componentsConfigService);\n\n    this.stateMatcher = new LuxLookupErrorStateMatcher(this);\n  }\n\n  ngAfterViewInit() {\n    this.matSelect.openedChange.subscribe((open: boolean) => {\n      if (open) {\n        this.registerPanelScrollEvent(this.matSelect.panel.nativeElement);\n      }\n    });\n  }\n\n  /**\n   * Vergleicht die Optionen anhand der Key-Werte\n   * @param value1\n   * @param value2\n   * @returns boolean\n   */\n  compareByKey(value1, value2) {\n    const key1 = value1 ? value1.key : -1;\n    const key2 = value2 ? value2.key : -2;\n\n    return key1 === key2;\n  }\n\n  setLookupData(entries: LuxLookupTableEntry[]) {\n    super.setLookupData(entries);\n    if (this.entries.length > this.luxEntryBlockSize) {\n      this.displayedEntries = this.entries.splice(0, this.luxEntryBlockSize);\n    } else {\n      this.displayedEntries = [...this.entries];\n    }\n  }\n\n  /**\n   * Setzt den aktuellen Value-Wert auf den ausgewählten Wert.\n   * @param $event\n   */\n  selected($event: MatSelectChange) {\n    this.luxValue = $event.value;\n  }\n\n  /**\n   * Fuegt beim Oeffnen des Selects einen Scrolllistener hinzu.\n   */\n  private registerPanelScrollEvent(panelElement) {\n    panelElement.addEventListener('scroll', event => this.loadOnScroll(event));\n  }\n\n  /**\n   * Stoesst das Nachladen von Elementen an, wenn ein bestimmter Scrollwert erreicht wurde.\n   * @param event - ScrollEvent\n   */\n  private loadOnScroll(event) {\n    const position = event.target;\n    if ((position.scrollTop + position.clientHeight) / position.scrollHeight > 85 / 100) {\n      this.reloadNextDataBlock();\n    }\n  }\n\n  /**\n   * Laed den naechsten Block Daten aus den Entries nach.\n   */\n  private reloadNextDataBlock() {\n    const start = this.displayedEntries.length - 1;\n    const end =\n      start + this.luxEntryBlockSize > this.entries.length\n        ? this.entries.length - start\n        : start + this.luxEntryBlockSize;\n    this.displayedEntries.push(...this.entries.splice(start, end));\n  }\n}\n","import { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { LuxLookupComponent } from '../lux-lookup-model/lux-lookup-component';\nimport { LuxLookupTableEntry } from '../lux-lookup-model/lux-lookup-table-entry';\nimport { LuxLookupErrorStateMatcher } from '../lux-lookup-model/lux-lookup-error-state-matcher';\n\nexport class LuxAutocompleteErrorStateMatcher extends LuxLookupErrorStateMatcher {\n  entries: LuxLookupTableEntry[] = [];\n\n  constructor(lookupComponent: LuxLookupComponent, entries: LuxLookupTableEntry[]) {\n    super(lookupComponent);\n\n    this.entries = entries;\n  }\n\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    if (control && typeof control.value === 'string' && control.value.length > 0) {\n      if (!control.errors || !control.errors.noResult) {\n        setTimeout(() => {\n          control.setErrors({ noResult: true });\n        });\n      }\n      return true;\n    }\n\n    return super.isErrorState(control, form);\n  }\n}\n","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { LuxLookupComponent } from '../lux-lookup-model/lux-lookup-component';\nimport { LuxLookupService } from '../lux-lookup-service/lux-lookup.service';\nimport { ControlContainer } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map, startWith } from 'rxjs/operators';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent, MatAutocompleteTrigger } from '@angular/material';\nimport { LuxAutocompleteErrorStateMatcher } from './lux-autocomplete-error-state-matcher';\nimport { LuxLookupHandlerService } from '../lux-lookup-service/lux-lookup-handler.service';\nimport { LuxLookupTableEntry } from '../lux-lookup-model/lux-lookup-table-entry';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-lookup-autocomplete',\n  templateUrl: './lux-lookup-autocomplete.component.html',\n  styleUrls: ['./lux-lookup-autocomplete.component.scss']\n})\nexport class LuxLookupAutocompleteComponent extends LuxLookupComponent implements OnInit {\n  filteredEntries: Observable<LuxLookupTableEntry[]>;\n  entriesCount: number;\n  latestSearchValue: string;\n\n  @Input() luxDebounceTime: number = 250;\n  @Input() luxMaximumDisplayed: number = 50;\n\n  @Output() luxBlur: EventEmitter<any> = new EventEmitter<any>();\n  @Output() luxFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChild(MatAutocomplete, { static: false }) matAutocomplete: MatAutocomplete;\n  @ViewChild(MatAutocompleteTrigger, { static: false }) matAutocompleteTrigger: MatAutocompleteTrigger;\n\n  constructor(\n    lookupService: LuxLookupService,\n    lookupHandler: LuxLookupHandlerService,\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    componentsConfigService: LuxComponentsConfigService\n  ) {\n    super(lookupService, lookupHandler, controlContainer, cdr, logger, componentsConfigService);\n\n    this.stateMatcher = new LuxAutocompleteErrorStateMatcher(this, this.entries);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.filteredEntries = this.formControl.valueChanges.pipe(\n      debounceTime(this.luxDebounceTime),\n      distinctUntilChanged(),\n      startWith<string | LuxLookupTableEntry>(''),\n      map((value: any) => {\n        const searchValue = typeof value === 'string' ? value : this.displayFn(value);\n        this.latestSearchValue = searchValue;\n        let filteredValues = searchValue ? this.filter(searchValue) : this.entries ? this.entries.slice() : [];\n        this.entriesCount = filteredValues.length;\n        if (this.entriesCount > this.luxMaximumDisplayed) {\n          filteredValues = filteredValues.splice(0, this.luxMaximumDisplayed);\n        }\n        return filteredValues;\n      })\n    );\n  }\n\n  /**\n   * Vergleicht den eingegebenen Wert mit den Display-Werten der Einträge.\n   * @param filterTerm\n   * @returns LuxLookupTableEntry[]\n   */\n  filter(filterTerm: any): LuxLookupTableEntry[] {\n    return this.entries.filter(option => {\n      const compareValue = this.displayFn(option);\n      return (\n        compareValue\n          .trim()\n          .toLowerCase()\n          .indexOf(filterTerm.trim().toLowerCase()) > -1\n      );\n    });\n  }\n\n  /**\n   * Bestimmt wie eingegebene Optionen dargestellt werden.\n   * @param option\n   * @returns string\n   */\n  displayFn(option: LuxLookupTableEntry): string {\n    if (typeof option === 'string') {\n      return option;\n    } else if (this.isRenderPropAFunction()) {\n      return (<Function>this.luxRenderProp)(option);\n    } else if (option) {\n      return option[<string>this.luxRenderProp]\n        ? option[<string>this.luxRenderProp]\n        : 'Fehler beim Auslesen (Property unbekannt)';\n    }\n  }\n\n  /**\n   * Wird beim Klick auf das Input Feld aufgerufen.\n   * @param clickEvent\n   */\n  onClick(clickEvent: any) {\n    clickEvent.target.setSelectionRange(0, clickEvent.target.value.length);\n    // Beim Klick wenn kein Wert gesetzt ist, das Panel oeffnen\n    if (!this.luxValue) {\n      this.matAutocompleteTrigger._onChange('');\n      this.matAutocompleteTrigger.openPanel();\n    }\n  }\n\n  /**\n   * Setzt den aktuellen Value-Wert auf den ausgewählten Wert.\n   * @param MatAutocompleteSelectedEvent $event\n   */\n  selected($event: MatAutocompleteSelectedEvent) {\n    this.luxValue = $event.option.value;\n    if (this.isInForm()) {\n      this.formControl.setValue(this.luxValue);\n    }\n  }\n\n  /**\n   * @override errorMessageModifier - Modifikation der Fehlermeldung\n   * @param value\n   * @param errors\n   */\n  errorMessageModifier(value, errors) {\n    const msg = super.errorMessageModifier(value, errors);\n    if (msg) {\n      return msg;\n    }\n\n    if (errors['noResult']) {\n      return 'Der eingegebene Eintrag ist nicht Teil der Schlüsseltabelle.';\n    }\n    return undefined;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxLookupParameters } from '../lux-lookup-model/lux-lookup-parameters';\nimport { LuxLookupTableEntry } from '../lux-lookup-model/lux-lookup-table-entry';\nimport { LuxLookupHandlerService } from '../lux-lookup-service/lux-lookup-handler.service';\nimport { LuxLookupService } from '../lux-lookup-service/lux-lookup.service';\n\n@Component({\n  selector: 'lux-lookup-label',\n  templateUrl: './lux-lookup-label.component.html'\n})\nexport class LuxLookupLabelComponent implements OnInit {\n  lookupService: LuxLookupService;\n  lookupHandler: LuxLookupHandlerService;\n  logger: LuxConsoleService;\n  lookupParameters: LuxLookupParameters;\n\n  entry: LuxLookupTableEntry;\n\n  @Input() luxLookupKnr: number;\n  @Input() luxLookupId: string;\n  @Input() luxLookupUrl: string = '/lookup/';\n  @Input() luxTableNo: string;\n  @Input() luxTableKey: string;\n  @Input() luxBezeichnung: string = 'kurz';\n\n  constructor(\n    lookupService: LuxLookupService,\n    lookupHandler: LuxLookupHandlerService,\n    luxConsoleLogger: LuxConsoleService\n  ) {\n    this.lookupService = lookupService;\n    this.lookupHandler = lookupHandler;\n    this.logger = luxConsoleLogger;\n  }\n\n  ngOnInit() {\n    if (!this.luxLookupId) {\n      console.error(\n        'Das Lookup-Label mit der Tabellen-Nr. ${this.luxTableNo} besitzt keine LookupId.' +\n          'Bitte tragen Sie diese nach.'\n      );\n    }\n\n    if (!this.luxTableNo) {\n      console.error(\n        'Das Lookup-Label mit der LookupId ${this.luxLookupId} besitzt keine Tabellen-Nummer. ' +\n          'Bitte tragen Sie diese nach.'\n      );\n    }\n\n    if (!this.luxTableKey) {\n      console.error(\n        'Das Lookup-Label mit der Tabellen-Nr. ${this.luxTableNo} besitzt keinen Tabellen-Key.' +\n          'Bitte tragen Sie diese nach.'\n      );\n    }\n\n    this.fetchLookupData();\n\n    this.lookupHandler.addLookupElement(this.luxLookupId);\n    this.lookupHandler.getLookupElementObsv(this.luxLookupId).subscribe(() => {\n      this.fetchLookupData();\n    });\n  }\n\n  protected fetchLookupData() {\n    const keys: string[] = [this.luxTableKey];\n\n    this.lookupParameters = new LuxLookupParameters({ knr: this.luxLookupKnr, keys });\n\n    this.lookupService\n      .getLookupTable(this.luxTableNo, this.lookupParameters, this.luxLookupUrl)\n      .subscribe((entries: LuxLookupTableEntry[]) => {\n        if (typeof entries !== 'undefined' && entries.length === 1) {\n          this.entry = entries[0];\n        }\n      });\n  }\n\n  /**\n   * liefert die Bezeichnung (Kurz- oder Langbezeichnung) des Entries für den Key zur Tabelle.\n   *\n   * @returns string\n   */\n  getBezeichnung(): string {\n    let bezeichnung = '';\n\n    if (this.entry) {\n      if ('kurz' === this.luxBezeichnung) {\n        bezeichnung = this.entry.kurzText;\n      } else if ('lang' === this.luxBezeichnung) {\n        bezeichnung = this.entry.langText1;\n\n        if (!bezeichnung) {\n          bezeichnung = this.entry.kurzText;\n        }\n      }\n    }\n\n    return bezeichnung;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule, MatFormFieldModule, MatInputModule, MatSelectModule } from '@angular/material';\nimport { LuxLookupComboboxComponent } from './lux-lookup-combobox/lux-lookup-combobox.component';\nimport { LuxLookupService } from './lux-lookup-service/lux-lookup.service';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\nimport { LuxLookupAutocompleteComponent } from './lux-lookup-autocomplete/lux-lookup-autocomplete.component';\nimport { LuxFormModule } from '../lux-form/lux-form.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LuxLookupLabelComponent } from './lux-lookup-label/lux-lookup-label.component';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    LuxDirectivesModule,\n    LuxFormModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    FlexLayoutModule,\n    LuxComponentsConfigModule\n  ],\n  declarations: [LuxLookupComboboxComponent, LuxLookupAutocompleteComponent, LuxLookupLabelComponent],\n  providers: [HttpClient, LuxLookupService],\n  exports: [LuxLookupComboboxComponent, LuxLookupAutocompleteComponent, LuxLookupLabelComponent]\n})\nexport class LuxLookupModule {}\n","/**\n * Kennzeichnet einen einzelnen Eintrag in einer Schluesseltabelle.\n */\nexport class LuxLookupTableEntry {\n  gueltigkeitBis?: string | number;\n  gueltigkeitVon?: string | number;\n  key: string;\n  kurzText?: string;\n  langText1?: string;\n  langText2?: string;\n\n  /*\n   * Properties, die nur intern genutzt werden\n   */\n  isUngueltig?: boolean;\n\n  constructor(partial: Partial<LuxLookupTableEntry>) {\n    Object.assign(this, partial);\n  }\n}\n","export class LuxSnackbarConfig {\n  iconName?: string = '';\n  iconSize?: string = '3x';\n  iconColor?: string = '';\n  text?: string = '';\n  textColor?: string = '';\n  action?: string = '';\n  actionColor?: string = '';\n\n  constructor(partial: Partial<LuxSnackbarConfig>) {\n    Object.assign(this, partial);\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBarRef } from '@angular/material';\nimport { LuxSnackbarConfig } from '../lux-snackbar-config';\nimport { Observable, Subject } from 'rxjs';\nimport { LuxUtil } from '../../../lux-util/lux-util';\nimport { LuxBackgroundColorsEnum } from '../../../lux-util/lux-colors.enum';\n\n@Component({\n  selector: 'lux-snackbar',\n  templateUrl: './lux-snackbar.component.html',\n  styleUrls: ['./lux-snackbar.component.scss']\n})\nexport class LuxSnackbarComponent implements OnInit {\n  private action$: Subject<void> = new Subject<void>();\n\n  textFontColor: string;\n  actionFontColor: string;\n  iconFontColor: string;\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public config: LuxSnackbarConfig,\n    public snackbarRef: MatSnackBarRef<LuxSnackbarComponent>\n  ) {}\n\n  ngOnInit() {\n    Object.keys(this.config).forEach((key: string) => {\n      if (this.config[key]) {\n        this.config[key] = this.config[key].trim();\n      }\n    });\n    // stupid-cast, um den string weiterzugeben, da die fn daraus den enum-wert herleiten kann\n    this.textFontColor = LuxUtil.getColorsByBgColorsEnum(\n      this.checkColorInEnum(this.config.textColor)\n    ).backgroundCSSClass;\n    this.actionFontColor = LuxUtil.getColorsByBgColorsEnum(\n      this.checkColorInEnum(this.config.actionColor)\n    ).backgroundCSSClass;\n    this.iconFontColor = LuxUtil.getColorsByBgColorsEnum(\n      this.checkColorInEnum(this.config.iconColor)\n    ).backgroundCSSClass;\n  }\n\n  onAction(): Observable<void> {\n    return this.action$.asObservable();\n  }\n\n  actionClick() {\n    this.snackbarRef.dismiss();\n    this.action$.next();\n  }\n\n  /**\n   * Prüft ob die übergebene Farbe Teil des Enums ist.\n   * Wenn nicht, wird standardmäßig \"gray\" zurückgegeben.\n   * @param colorToCheck\n   */\n  private checkColorInEnum(colorToCheck: string): LuxBackgroundColorsEnum {\n    if (LuxBackgroundColorsEnum[colorToCheck]) {\n      return LuxBackgroundColorsEnum[colorToCheck];\n    }\n    return LuxBackgroundColorsEnum.gray;\n  }\n}\n","import { Observable, ReplaySubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LuxDialogRef {\n  private _matDialogRef: MatDialogRef<any>;\n  private _dialogConfirmed: ReplaySubject<void> = new ReplaySubject(1);\n  private _dialogDeclined: ReplaySubject<void> = new ReplaySubject(1);\n  private _dialogClosed: ReplaySubject<any> = new ReplaySubject(1);\n  private _data: any;\n\n  /**\n   * Gibt die Component, die in dem Dialog angezeigt wird wieder.\n   */\n  get componentInstance(): any {\n    return this._matDialogRef.componentInstance;\n  }\n\n  /**\n   * Damit hier ein Wert abgegeben wird, muss \"closeDialog\" ein Result mit dem Wert \"true\" übergeben bekommen.\n   */\n  get dialogConfirmed(): Observable<void> {\n    return this._dialogConfirmed.asObservable();\n  }\n\n  /**\n   * Damit hier ein Wert abgegeben wird, muss \"closeDialog\" ein Result mit dem Wert \"false\" übergeben bekommen.\n   */\n  get dialogDeclined(): Observable<void> {\n    return this._dialogDeclined.asObservable();\n  }\n\n  /**\n   * Wird bei Beenden des Dialogs ausgelöst.\n   */\n  get dialogClosed(): Observable<any> {\n    return this._dialogClosed.asObservable();\n  }\n\n  /**\n   * Enthält die Daten für die Dialog-Component.\n   */\n  get data(): any {\n    return this._data;\n  }\n\n  constructor() {}\n\n  /**\n   * (Re-)Initialisiert diese Dialog-Referenz neu.\n   * @param matDialogRef\n   * @param data\n   */\n  init(matDialogRef: MatDialogRef<any>, data: any) {\n    this._matDialogRef = matDialogRef;\n    this._dialogConfirmed = new ReplaySubject(1);\n    this._dialogDeclined = new ReplaySubject(1);\n    this._dialogClosed = new ReplaySubject(1);\n    this._data = data;\n  }\n\n  /**\n   * Schließt den Dialog und gibt nach Beenden die entsprechenden Events aus.\n   * @param result\n   */\n  closeDialog(result?: any) {\n    this._matDialogRef.close(result);\n    this._matDialogRef.afterClosed().subscribe((dialogResult: any) => {\n      if (dialogResult === true) {\n        this._dialogConfirmed.next();\n      } else if (dialogResult === false) {\n        this._dialogDeclined.next();\n      }\n      this._dialogClosed.next(result);\n    });\n  }\n}\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { LuxDialogRef } from '../lux-dialog-model/lux-dialog-ref.class';\nimport { ILuxDialogPresetConfig } from '../lux-dialog-model/lux-dialog-preset-config.interface';\n\n/**\n * Diese Component wird von dem LuxDialogService zur Darstellung via \"open\" genutzt und nimmt ein Konfig-Objekt\n * vom Typ LuxDialogConfig entgegen.\n */\n@Component({\n  selector: 'lux-dialog-preset',\n  templateUrl: './lux-dialog-preset.component.html',\n  styleUrls: ['./lux-dialog-preset.component.scss']\n})\nexport class LuxDialogPresetComponent implements OnInit {\n  data: ILuxDialogPresetConfig;\n\n  constructor(public dialogRef: LuxDialogRef) {}\n\n  ngOnInit() {\n    this.data = this.dialogRef.data;\n  }\n\n  /**\n   * Schließt den Dialog beim \"positiven\" Beenden des Dialogs mit dem Wert true.\n   */\n  onConfirmClick() {\n    this.dialogRef.closeDialog(true);\n  }\n\n  /**\n   * Schließt den Dialog beim \"negativen\" Beenden des Dialogs mit dem Wert false.\n   */\n  onDeclineClick() {\n    this.dialogRef.closeDialog(false);\n  }\n}\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\n/**\n * Diese Component stellt eine Grundstruktur für Dialoge dar und kann von Aufrufern als Alternative\n * zu LuxDialogPresetComponent genutzt werden (wenn andere Inhalte, etc. gewünscht sind).\n */\n@Component({\n  selector: 'lux-dialog-structure',\n  templateUrl: './lux-dialog-structure.component.html',\n  styleUrls: ['./lux-dialog-structure.component.scss']\n})\nexport class LuxDialogStructureComponent implements OnInit, AfterViewInit {\n  @ViewChild('dialogBase', { read: ElementRef, static: true }) dialogBase: ElementRef;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    // den Fokus auf den Dialog selbst setzen (damit eine Tastatur-Steuerung von oben nach unten stattfinden kann)\n    (<HTMLHeadingElement>this.dialogBase.nativeElement).focus();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-dialog-title',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxDialogTitleComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-dialog-content',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxDialogContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-dialog-actions',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxDialogActionsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","// tslint:disable:max-line-length\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatDialogModule, MatSnackBarModule } from '@angular/material';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxSnackbarComponent } from './lux-snackbar/lux-snackbar-component/lux-snackbar.component';\nimport { LuxActionModule } from '../lux-action/lux-action.module';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxDialogPresetComponent } from './lux-dialog/lux-dialog-preset/lux-dialog-preset.component';\nimport { LuxLayoutModule } from '../lux-layout/lux-layout.module';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\nimport { LuxDialogStructureComponent } from './lux-dialog/lux-dialog-structure/lux-dialog-structure.component';\nimport { LuxDialogTitleComponent } from './lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-title.component';\nimport { LuxDialogContentComponent } from './lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-content.component';\nimport { LuxDialogActionsComponent } from './lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-actions.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    LuxIconModule,\n    LuxActionModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    LuxComponentsConfigModule,\n    LuxLayoutModule,\n    MatDialogModule,\n    A11yModule,\n    LuxDirectivesModule\n  ],\n  declarations: [\n    LuxSnackbarComponent,\n    LuxDialogPresetComponent,\n    LuxDialogStructureComponent,\n    LuxDialogTitleComponent,\n    LuxDialogContentComponent,\n    LuxDialogActionsComponent\n  ],\n  exports: [\n    LuxSnackbarComponent,\n    LuxDialogPresetComponent,\n    LuxDialogStructureComponent,\n    LuxDialogTitleComponent,\n    LuxDialogContentComponent,\n    LuxDialogActionsComponent\n  ],\n  providers: [],\n  entryComponents: [LuxDialogPresetComponent]\n})\nexport class LuxPopupsModule {}\n","import { ComponentType } from '@angular/cdk/portal';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarDismiss } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { LuxSnackbarComponent } from './lux-snackbar-component/lux-snackbar.component';\nimport { LuxSnackbarConfig } from './lux-snackbar-config';\n\n/**\n * Über den LuxSnackbarService können einfach Snackbarinfos angezeigt werden.\n */\n@Injectable()\nexport class LuxSnackbarService {\n  private static readonly VERTICAL_POSITION = 'top';\n  private static readonly HORIZONTAL_POSITION = 'end';\n\n  constructor(private snackBar: MatSnackBar) {}\n\n  /**\n   * Diese Methode öffnet eine Snackbar mit einem Text.\n   *\n   * @param message Ein Text.\n   * @param duration Eine Dauer in Msec (z.B. 2000 = 2 Sekunden). Wenn die Snackbar permanent angezeigt werden soll,\n   * muss der Wert 0 angegeben werden.\n   * @param actionName Eine Bezeichnung (z.B. Wiederherstellen) für die Action. Dieser Parameter ist optional und\n   * muss nicht angegeben werden.\n   */\n  public openText(message: string, duration: number, actionName?: string): void {\n    this.snackBar.open(message, actionName, {\n      duration: duration,\n      verticalPosition: LuxSnackbarService.VERTICAL_POSITION,\n      horizontalPosition: LuxSnackbarService.HORIZONTAL_POSITION,\n      panelClass: 'lux-snackbar'\n    });\n  }\n\n  /**\n   * Diese Methode öffnet eine Snackbar, in der die übergebene Komponente angezeigt wird.\n   *\n   * @param component Die Komponente, die angezeigt werden soll.\n   * @param duration Eine Dauer in Msec (z.B. 2000 = 2 Sekunden). Wenn die Snackbar permanent angezeigt werden soll,\n   * muss der Wert 0 angegeben werden.\n   * @param data Ein Datenobjekt, das an die Komponente weitergereicht wird. Mit dem Code folgenden Code, können die\n   * Daten verwendet werden. constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any).\n   */\n  public openComponent(component: ComponentType<any>, duration: number = 0, data?: any) {\n    this.snackBar.openFromComponent(component, {\n      duration: duration,\n      data: data,\n      verticalPosition: LuxSnackbarService.VERTICAL_POSITION,\n      horizontalPosition: LuxSnackbarService.HORIZONTAL_POSITION,\n      panelClass: 'lux-snackbar'\n    });\n  }\n\n  /**\n   * Oeffnet eine Snackbar anhand der uebergebenen Konfiguration.\n   * Ermoeglicht eine genaue Konfiguration der Snackbar.\n   * @param config\n   */\n  public open(duration: number, config?: LuxSnackbarConfig) {\n    this.snackBar.openFromComponent(LuxSnackbarComponent, {\n      duration: duration,\n      data: config,\n      verticalPosition: LuxSnackbarService.VERTICAL_POSITION,\n      horizontalPosition: LuxSnackbarService.HORIZONTAL_POSITION,\n      panelClass: 'lux-snackbar'\n    });\n  }\n\n  /**\n   * Diese Methode liefert ein Observable zurück, das den Aufrufer benachrichtigt, wenn die Action in der Snackbar\n   * geklickt wird.\n   */\n  public onAction(): Observable<void> {\n    if (this.snackBar._openedSnackBarRef.instance instanceof LuxSnackbarComponent) {\n      return this.snackBar._openedSnackBarRef.instance.onAction();\n    }\n\n    return this.snackBar._openedSnackBarRef.onAction();\n  }\n\n  /**\n   * Diese Methode liefert ein Observable zurück, das den Aufrufer benachrichtigt, wenn die Action in der Snackbar\n   * geklickt wird.\n   */\n  public afterDismissed(): Observable<MatSnackBarDismiss> {\n    return this.snackBar._openedSnackBarRef.afterDismissed();\n  }\n\n  /**\n   * Diese Methode blendet die Snackbar aus.\n   */\n  public dismiss() {\n    this.snackBar.dismiss();\n  }\n}\n","/**\n * Config-Interface für die Dialoge.\n */\nexport interface ILuxDialogConfig {\n  width?: string;\n  height?: string;\n  panelClass?: string | string[];\n  disableClose?: boolean;\n}\n\nexport const DEFAULT_DIALOG_CONF: ILuxDialogConfig = {\n  width: 'auto',\n  height: 'auto',\n  panelClass: [],\n  disableClose: true\n};\n","import { ILuxDialogAction } from './lux-dialog-action.interface';\nimport { TemplateRef } from '@angular/core';\nimport { ILuxDialogConfig } from './lux-dialog-config.interface';\n\n/**\n * Config-Interface für die LuxDialogPresetComponent.\n */\nexport interface ILuxDialogPresetConfig extends ILuxDialogConfig {\n  confirmAction?: ILuxDialogAction;\n  declineAction?: ILuxDialogAction;\n  title?: string;\n  content?: string;\n  contentTemplate?: TemplateRef<any>;\n}\n\nexport const DEFAULT_DIALOG_PRESET_CONF: ILuxDialogPresetConfig = {\n  width: 'auto',\n  height: 'auto',\n  title: '',\n  content: '',\n  panelClass: [],\n  disableClose: true,\n  contentTemplate: undefined,\n  confirmAction: {\n    label: 'Bestätigen',\n    raised: true\n  },\n  declineAction: {\n    label: 'Ablehnen',\n    raised: true\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxDialogRef } from './lux-dialog-model/lux-dialog-ref.class';\nimport { DEFAULT_DIALOG_CONF, ILuxDialogConfig } from './lux-dialog-model/lux-dialog-config.interface';\nimport {\n  DEFAULT_DIALOG_PRESET_CONF,\n  ILuxDialogPresetConfig\n} from './lux-dialog-model/lux-dialog-preset-config.interface';\nimport { LuxDialogPresetComponent } from './lux-dialog-preset/lux-dialog-preset.component';\n\n@Injectable()\nexport class LuxDialogService {\n  private static readonly ALREADY_OPENED_ERROR: string = 'Aktuell ist bereits ein Dialog geöffnet';\n\n  private dialogOpened: boolean = false;\n\n  constructor(private matDialog: MatDialog, private logger: LuxConsoleService, private luxDialogRef: LuxDialogRef) {}\n\n  /**\n   * Öffnet einen Dialog basierend auf der übergebenen Component und den entsprechenden Daten.\n   * @param component\n   * @param config\n   * @param data\n   */\n  openComponent(component: ComponentType<any>, config?: ILuxDialogConfig, data?: any): LuxDialogRef {\n    this.handleOpen(component, config, data, DEFAULT_DIALOG_CONF);\n    return this.luxDialogRef;\n  }\n\n  /**\n   * Öffnet einen Dialog basierend auf der LuxDialogComponent und der LuxDialogConfig.\n   * @param config\n   */\n  open(config?: ILuxDialogPresetConfig): LuxDialogRef {\n    // Eine Dialog-Instanz erzeugen, als Data übergeben wir hier noch einmal die Config\n    this.handleOpen(LuxDialogPresetComponent, config, config, DEFAULT_DIALOG_PRESET_CONF);\n    return this.luxDialogRef;\n  }\n\n  /**\n   * Prüft ob bereits ein Dialog geöffnet ist und etwaige CSS-Klassen für den Dialog gegeben sind.\n   * Anschließend wird der Dialog mit den übergebenen Config-Optionen und Data-Informationen geöffnet.\n   * @param component\n   * @param config\n   * @param data\n   * @param defaultConfig\n   */\n  private handleOpen(\n    component: ComponentType<any>,\n    config: ILuxDialogConfig,\n    data: any,\n    defaultConfig: ILuxDialogConfig | ILuxDialogPresetConfig\n  ) {\n    if (this.dialogOpened) {\n      this.logger.error(LuxDialogService.ALREADY_OPENED_ERROR);\n      return null;\n    }\n\n    // Wenn keine Config übergeben ist, die defaultConfig nehmen\n    config = config ? config : defaultConfig;\n\n    // Die CSS-Klassen fürs Panel herausfinden\n    const panelClass = ['lux-dialog'];\n    if (config.panelClass) {\n      if (Array.isArray(config.panelClass)) {\n        panelClass.push(...config.panelClass);\n      } else {\n        panelClass.push(config.panelClass);\n      }\n    }\n\n    // Dialog öffnen und Konfiguration übergeben\n    const matDialogRef = this.matDialog.open(component, {\n      width: config.width,\n      height: config.height,\n      autoFocus: false,\n      restoreFocus: true,\n      disableClose: config.disableClose,\n      panelClass: panelClass\n    });\n\n    this.luxDialogRef.init(matDialogRef, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Der LuxStorageService speichert Daten im lokalen Browserstorage.\n * Wenn man beim Speichern (Methode -> setItem) angibt, dass es sich um sensible Daten handelt,\n * können diese einfach über die Methode 'clearSensitiveItems' gelöscht werden.\n */\n@Injectable()\nexport class LuxStorageService {\n  private readonly postfixSensitive = '.sensitive';\n\n  private itemSources: Map<string, BehaviorSubject<string>> = new Map();\n\n  constructor() {\n    addEventListener('storage', (event: StorageEvent) => {\n      if (event.key) {\n        if (this.itemSources.has(event.key)) {\n          this.itemSources.get(event.key).next(event.newValue);\n        }\n      }\n    });\n  }\n\n  /**\n   * Diese Methode liefert den Wert für den übergebenen Schlüssel zurück.\n   *\n   * @param key - Der eindeutige Schlüssel.\n   * @returns Liefert den Wert für den übergebenen Schlüssel zurück.\n   */\n  getItem(key: string): string {\n    if (!this.itemSources.has(key)) {\n      this.itemSources.set(key, new BehaviorSubject<string>(localStorage.getItem(key)));\n    }\n\n    return this.itemSources.get(key).getValue();\n  }\n\n  /**\n   * Diese Methode liefert ein Observable zurück, das über alle Änderungen an dem Schlüssel informiert wird.\n   *\n   * @param key - Der eindeutige Schlüssel.\n   * @returns Liefert ein Observable zurück, das über alle Änderungen an dem Schlüssel informiert wird.\n   */\n  getItemAsObservable(key: string): Observable<string> {\n    if (!this.itemSources.has(key)) {\n      this.itemSources.set(key, new BehaviorSubject<string>(localStorage.getItem(key)));\n    }\n\n    return this.itemSources.get(key).asObservable();\n  }\n\n  /**\n   * Diese Methode setzt den übergebenen Wert für den Schlüssel. Zusätzlich muss angegeben werden, ob es sich um\n   * sensible oder personenbezogene Daten handelt.\n   *\n   * @param key - Der eindeutige Schlüssel.\n   * @param value - Der neue Wert.\n   * @param sensitive - Gibt an, ob es sich um sensible oder personenbezogene Daten handelt. Diese können leicht über\n   *                    die Methode 'clearSensitiveItems' (z.B. beim Ausloggen) gelöscht werden.\n   */\n  setItem(key: string, value: string, sensitive: boolean): void {\n    try {\n      localStorage.setItem(key, value);\n\n      if (sensitive) {\n        localStorage.setItem(key + this.postfixSensitive, 'true');\n      }\n      if (this.itemSources.has(key)) {\n        this.itemSources.get(key).next(localStorage.getItem(key));\n      }\n    } catch (error) {\n      this.itemSources.get(key).error(error);\n    }\n  }\n\n  /**\n   * Diese Methode entfernt den übergebenen Schlüssel.\n   *\n   * @param key - Der eindeutige Schlüssel.\n   */\n  removeItem(key: string): void {\n    localStorage.removeItem(key);\n    localStorage.removeItem(key + this.postfixSensitive);\n\n    if (this.itemSources.has(key)) {\n      this.itemSources.get(key).next(localStorage.getItem(key));\n    }\n  }\n\n  /**\n   * Diese Methode löscht alle sensiblen und personenbezogenen Einträge (d.h. alle Items bei denen das Flag 'sensitive'\n   * auf true gesetzt wurde).\n   */\n  clearSensitiveItems(): void {\n    // Alle Schlüssel sammeln.\n    const keys: string[] = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      keys.push(localStorage.key(i));\n    }\n\n    // Alle sensiblen Einträge löschen.\n    keys.forEach(key => {\n      if (key && key.endsWith(this.postfixSensitive)) {\n        this.removeItem(key.replace(this.postfixSensitive, ''));\n      }\n    });\n  }\n\n  /**\n   * Diese Methode löscht alle Einträge aus dem Storage.\n   */\n  clearAll(): void {\n    localStorage.clear();\n    this.itemSources.forEach((itemSource: BehaviorSubject<string>) => {\n      itemSource.next(null);\n      itemSource.complete();\n    });\n\n    this.itemSources.clear();\n  }\n}\n","import { SPACE } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\nimport { DebugElement, Provider } from '@angular/core';\nimport { ComponentFixture, getTestBed, TestBed, tick } from '@angular/core/testing';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatCommonModule,\n  MatDatepickerModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatNativeDateModule,\n  MatOptionModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatTooltipModule\n} from '@angular/material';\nimport { BrowserModule, By } from '@angular/platform-browser';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { LuxActionModule } from '../../lux-action/lux-action.module';\nimport { LuxDirectivesModule } from '../../lux-directives/lux-directives.module';\nimport { LuxFormModule } from '../../lux-form/lux-form.module';\nimport { LuxIconModule } from '../../lux-icon/lux-icon.module';\nimport { LuxLayoutModule } from '../../lux-layout/lux-layout.module';\nimport { LuxPipesModule } from '../../lux-pipes/lux-pipes.module';\nimport { LuxLookupModule } from '../../lux-lookup/lux-lookup.module';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { LuxComponentsConfigModule } from '../../lux-components-config/lux-components-config.module';\n// Wichtig, damit die Testhelper-Funktion \"configureTestSuite\" funktioniert (darf nicht wegformatiert werden).\n// import 'jasmine' hat leider nicht den gewünschten Effekt.\n// import {} from 'jasmine';\n// noinspection ES6UnusedImports\nimport {} from 'jasmine';\nimport { LuxErrorModule } from '../../lux-error/lux-error.module';\nimport { LuxCommonModule } from '../../lux-common/lux-common.module';\nimport { LuxPopupsModule } from '../../lux-popups/lux-popups.module';\n\nexport class LuxTestHelper {\n  public static COMMON_ANGULAR_MODULES: any[] = [\n    NoopAnimationsModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    BrowserModule,\n    RouterTestingModule\n  ];\n\n  public static MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatChipsModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDividerModule,\n    MatSelectModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatAutocompleteModule,\n    MatSliderModule,\n    MatOptionModule,\n    MatCommonModule,\n    MatBadgeModule\n  ];\n\n  public static LUX_MODULES: any[] = [\n    LuxFormModule,\n    LuxLayoutModule,\n    LuxActionModule,\n    LuxDirectivesModule,\n    LuxPipesModule,\n    LuxIconModule,\n    LuxLookupModule,\n    LuxErrorModule,\n    LuxCommonModule,\n    LuxPopupsModule,\n    LuxComponentsConfigModule.forRoot({\n      generateLuxTagIds: false,\n      displayLuxConsoleLogs: true,\n      labelConfiguration: {\n        allUppercase: true,\n        notAppliedTo: []\n      },\n      cardExpansionAnimationActive: true\n    })\n  ];\n\n  /**\n   * Wichtig: aus fakeAsync-Block heraus aufrufen, da hier tick() genutzt wird.\n   */\n  public static setInputValue(input: any, value: any, fixture: any) {\n    if (input) {\n      input.value = value;\n      input.dispatchEvent(LuxTestHelper.createFakeEvent('input'));\n      LuxTestHelper.wait(fixture);\n    } else {\n      console.error('UNIT-TEST FEHLER: input ist nicht definiert.');\n    }\n  }\n\n  /**\n   * Wichtig: aus fakeAsync-Block heraus aufrufen, da hier tick() genutzt wird.\n   * Wartet asynchrone Aufrufe ab und ruft die ChangeDetection auf\n   * @param fixture\n   * @param tickDuration\n   */\n  public static wait(fixture: any, tickDuration?: number) {\n    fixture.detectChanges();\n    tick(tickDuration);\n    fixture.detectChanges();\n  }\n\n  /**\n   * Wichtig: aus fakeAsync-Block heraus aufrufen, da hier tick() genutzt wird.\n   * Sendet ein Klick-Event ab und wartet dann.\n   * @param fixture\n   * @param DebugElement\n   */\n  public static click(fixture: any, debugElement: DebugElement) {\n    debugElement.triggerEventHandler('click', null);\n    LuxTestHelper.wait(fixture);\n  }\n\n  /**\n   * Wichtig: aus fakeAsync-Block heraus aufrufen, da hier tick() genutzt wird.\n   * Sendet ein Change-Event ab und wartet dann.\n   * @param fixture\n   * @param DebugElement\n   */\n  public static radioButtonChange(fixture: any, radioButton: DebugElement) {\n    radioButton.nativeElement.dispatchEvent(LuxTestHelper.createFakeEvent('change'));\n    LuxTestHelper.wait(fixture);\n  }\n\n  /**\n   * Erstellt eine ComponentFixture fuer die mitgegebene Komponente, optional ist es moeglich\n   * weitere Provider und Declarations einzutragen. Diese werden dann im Testmodul eingetragen.\n   * @param component\n   * @param providers\n   * @param declarations\n   * @deprecated Stattdessen configureTestModule in Kombination mit configureTestSuite verwenden --> erheblich performanter\n   */\n  public static createComponent(\n    component: any,\n    providers: Provider[] = [],\n    declarations: any[] = []\n  ): ComponentFixture<any> {\n    TestBed.configureTestingModule({\n      imports: [\n        ...LuxTestHelper.COMMON_ANGULAR_MODULES,\n        ...LuxTestHelper.MATERIAL_MODULES,\n        ...LuxTestHelper.LUX_MODULES\n      ],\n      declarations: [...declarations, component],\n      providers: [...providers]\n    });\n\n    TestBed.compileComponents();\n\n    return TestBed.createComponent(component);\n  }\n\n  /** Utility to dispatch any event on a Node. */\n  public static dispatchEvent(node: Node | Window, event: Event): Event {\n    node.dispatchEvent(event);\n    return event;\n  }\n\n  /** Shorthand to dispatch a fake event on a specified node. */\n  public static dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event {\n    return LuxTestHelper.dispatchEvent(node, LuxTestHelper.createFakeEvent(type, canBubble));\n  }\n\n  /** Shorthand to dispatch a keyboard event with a specified key code. */\n  public static dispatchKeyboardEvent(node: Node, type: string, keyCode: number, target?: Element): KeyboardEvent {\n    return LuxTestHelper.dispatchEvent(node, LuxTestHelper.createKeyboardEvent(type, keyCode, target)) as KeyboardEvent;\n  }\n\n  /** Focuses an input and sets its value. Dispatches an fake input event afterwards. */\n  public static typeInElement(element: HTMLInputElement, value: string, noInputEvent?: boolean) {\n    element.focus();\n    element.value = value;\n    if (!noInputEvent) {\n      LuxTestHelper.dispatchFakeEvent(element, 'input');\n    }\n  }\n\n  /** Steuerung und triggern von Overlays implementieren **/\n\n  /**\n   * Inserts data into an input field, that has to update asynchrounos before calling a callback-function\n   * Allows to use RxJs Interval-Timers within the Target-Components.\n   */\n  public static typeInElementAsynch(text: string, fixture: ComponentFixture<any>, element: HTMLInputElement, callback) {\n    fixture.whenStable().then(() => {\n      LuxTestHelper.typeInElement(element, text);\n      fixture.detectChanges();\n\n      fixture.whenStable().then(() => {\n        LuxTestHelper.dispatchKeyboardEvent(element, 'keydown', SPACE);\n        fixture.detectChanges();\n\n        fixture.whenStable().then(() => {\n          callback();\n        });\n      });\n    });\n  }\n\n  /** Dispatches a keydown event from an element. */\n  public static createKeyboardEvent(type: string, keyCode: number, target?: Element, key?: string) {\n    const event = document.createEvent('KeyboardEvent') as any;\n    // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n    const initEventFn = (event.initKeyEvent || event.initKeyboardEvent).bind(event);\n    const originalPreventDefault = event.preventDefault;\n\n    initEventFn(type, true, true, window, 0, 0, 0, 0, 0, keyCode);\n\n    // Webkit Browsers don't set the keyCode when calling the init function.\n    // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n    Object.defineProperties(event, {\n      keyCode: { get: () => keyCode },\n      key: { get: () => key },\n      target: { get: () => target }\n    });\n\n    // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n    event.preventDefault = function() {\n      Object.defineProperty(event, 'defaultPrevented', { get: () => true });\n      return originalPreventDefault.apply(this, arguments);\n    };\n\n    return event;\n  }\n\n  /** Creates a fake event object with any desired event type. */\n  public static createFakeEvent(type: string, canBubble = false, cancelable = true) {\n    let event;\n    if (typeof Event === 'function') {\n      event = new Event(type);\n    } else {\n      event = document.createEvent('Event');\n      event.initEvent(type, canBubble, cancelable);\n    }\n\n    return event;\n  }\n\n  /**\n   * Selektiert ein Element anhand der Query von dem Fixture\n   */\n  public static selectOneFromFixture(fixture: ComponentFixture<any>, query: string): DebugElement {\n    return fixture.debugElement.query(By.css(query));\n  }\n\n  /**\n   * Selektiert ein Array von Elementen anhand der Query von dem Fixture\n   */\n  public static selectAllFromFixture(fixture: ComponentFixture<any>, query: string): DebugElement[] {\n    return fixture.debugElement.queryAll(By.css(query));\n  }\n\n  /**\n   * Entfernt nicht-ASCII-Chars aus dem String (Beim IE wichtig, dieser fügt gerne versteckte Steuerzeichen\n   * in Input-Feldern an die Strings).\n   * @param dateString\n   */\n  public static stringWithoutASCIIChars(dateString: string): string {\n    const exp = new RegExp('[^A-Za-z 0-9 \\\\.,\\\\?\"\"!@#\\\\$%\\\\^&\\\\*\\\\(\\\\)-_=\\\\+;:<>\\\\/\\\\\\\\\\\\|\\\\}\\\\{\\\\[\\\\]`~]*', 'g');\n    return dateString.replace(exp, '');\n  }\n\n  /**\n   *  Deaktiviert den Reset des Testmoduls am Ende eines Testdurchlaufs.\n   *  Verbessert die Performance der Karma-Tests erheblich.\n   *  Am Ende der Testsuite wird diese Funktion wieder aktiviert.\n   *\n   *  Funktion dafür einfach am Anfang einer Testsuite (erstes describe) aufrufen und in einem beforeAll das Testmodul\n   *  erzeugen. Dieses wird nun nicht mehr nach jedem Test neu erzeugt.\n   */\n  public static configureTestSuite() {\n    const testBedApi: any = getTestBed();\n    const originReset = TestBed.resetTestingModule;\n\n    beforeAll(() => {\n      TestBed.resetTestingModule();\n      TestBed.resetTestingModule = () => TestBed;\n    });\n\n    afterEach(() => {\n      testBedApi._activeFixtures.forEach((fixture: ComponentFixture<any>) => fixture.destroy());\n      testBedApi._instantiated = false;\n    });\n\n    afterAll(() => {\n      TestBed.resetTestingModule = originReset;\n      TestBed.resetTestingModule();\n    });\n  }\n\n  /**\n   * Konfiguriert das TestModul für eine Testsuite, kann dabei Provider und Komponenten (Deklarationen) entgegennehmen.\n   * @param providers\n   * @param declarations\n   * @param imports\n   */\n  public static configureTestModule(providers: Provider[] = [], declarations: any[] = [], imports: any[] = []) {\n    TestBed.configureTestingModule({\n      imports: [\n        ...LuxTestHelper.COMMON_ANGULAR_MODULES,\n        ...LuxTestHelper.MATERIAL_MODULES,\n        ...LuxTestHelper.LUX_MODULES,\n        ...imports\n      ],\n      declarations: [...declarations],\n      providers: [...providers]\n    });\n\n    TestBed.compileComponents();\n  }\n\n  /**\n   * Erstellt ein leeres File-Objekt mit Namen und Typ via Blob-Constructor (um Edge/IE-Fehler zu vermeiden).\n   * @param name\n   * @param type\n   */\n  public static createFileBrowserSafe(name, type) {\n    const file = new Blob([''], { type: type });\n    file['name'] = name;\n\n    return <File>file;\n  }\n}\n","import { OverlayContainer } from '@angular/cdk/overlay';\nimport { inject } from '@angular/core/testing';\n\nexport class LuxOverlayHelper {\n  private overlayContainer: OverlayContainer;\n  private htmlElement: HTMLElement;\n\n  constructor() {\n    inject([OverlayContainer], (oc: OverlayContainer) => {\n      this.overlayContainer = oc;\n      this.htmlElement = oc.getContainerElement();\n    })();\n  }\n\n  public selectAllFromOverlay(query) {\n    return this.htmlElement.querySelectorAll(query) as NodeListOf<HTMLElement>;\n  }\n\n  public selectOneFromOverlay(query) {\n    return this.htmlElement.querySelector(query) as HTMLElement;\n  }\n}\n"]}