{"version":3,"file":"ihk-gfi-lux-components.js","sources":["ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-base.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-label.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-infinite-scroll/lux-infinite-scroll.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/lux-colors.enum.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/lux-util.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-components-config/lux-components-hammer-config.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-components-config/lux-components-config.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-components-config/lux-components-config.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-control/lux-form-control-subcomponents/lux-form-label.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-control/lux-form-control-subcomponents/lux-form-hint.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-model/lux-form-component-base.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-control/lux-form-control.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-tag-id/lux-tag-id.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-tooltip/lux-tooltip.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-tabindex/lux-tab-index.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-ripple/lux-ripple.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-expanded.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-role.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-haspopup.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-hidden.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-describedby.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-invalid.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-required.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-aria/lux-aria-labelledby.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-badge-notification/lux-badge-notification.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-directives/lux-directives.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-icon/lux-icon/lux-icon.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-icon/lux-image/lux-image.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-icon/lux-icon.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-action-model/lux-action-component-base.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-button/lux-button.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-link/lux-link.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-menu/lux-menu-subcomponents/lux-menu-item.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-menu/lux-menu-subcomponents/lux-menu-trigger.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-menu/lux-menu.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-action/lux-action.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-pipes/lux-relative-timestamp/lux-relative-timestamp.pipe.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-pipes/lux-render-property/lux-render-property.pipe.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-pipes/lux-property-from-object/lux-property-from-object.pipe.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-pipes/lux-alphabetically-sorted/lux-alphabetically-sorted.pipe.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-pipes/lux-pipes.module.ts","ng://@ihk-gfi/lux-components/src/environments/environment.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/lux-console.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/lux-media-query-observer.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-accordion/lux-accordion.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-footer/lux-app-footer-button.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-footer/lux-app-footer-link.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-footer/lux-app-footer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-app-header-right-nav/lux-app-header-right-nav.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-mobile-helper.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-item.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-model/lux-side-nav-animations.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-app-header-action-nav/lux-app-header-action-nav.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-card/lux-card-subcomponents/lux-card-actions.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-card/lux-card-subcomponents/lux-card-content-expanded.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-card/lux-card-subcomponents/lux-card-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-card/lux-card-subcomponents/lux-card-info.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-card/lux-card-model/lux-card-animations.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-card/lux-card.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-divider/lux-divider.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-list/lux-list-subcomponents/lux-list-item-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-list/lux-list-subcomponents/lux-list-item-icon.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-list/lux-list-subcomponents/lux-list-item.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-list/lux-list.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-detail-view/lux-detail-view.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-footer/lux-master-footer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-header/lux-master-header-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-header/lux-master-header.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-simple/lux-master-simple.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-view/lux-master-view.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-tabs/lux-tabs-subcomponents/lux-tab.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-tabs/lux-tabs.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-detail-view/lux-detail-wrapper.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-master-detail/lux-master-detail.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-panel/lux-panel-subcomponents/lux-panel-action.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-panel/lux-panel-subcomponents/lux-panel-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-panel/lux-panel-subcomponents/lux-panel-header-description.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-panel/lux-panel-subcomponents/lux-panel-header-title.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-panel/lux-panel.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-step-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-step-header.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-step.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-helper.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-tile/lux-tile.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-footer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-header.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-content/lux-app-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-model/lux-stepper-parent.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-stepper-horizontal/lux-stepper-horizontal.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-stepper-nav-buttons/lux-stepper-nav-buttons.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-stepper-vertical/lux-stepper-vertical.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-app-header-action-nav/lux-app-header-action-nav-item/lux-app-header-action-nav-item.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-layout.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-autocomplete/lux-autocomplete.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-model/lux-form-checkable-base.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-checkbox/lux-checkbox.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-chips/lux-chips-subcomponents/lux-chip-group.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-chips/lux-chips-subcomponents/lux-chip.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-chips/lux-chips.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-model/lux-form-input-base.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-datepicker/lux-datepicker-adapter.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-datepicker/lux-datepicker.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-file/lux-file-model/lux-file-error.interface.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-model/lux-form-file-base.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-file/lux-file-input/lux-file-input.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-file/lux-file-list/lux-file-list.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-file/lux-file-subcomponents/lux-file-progress/lux-file-progress.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-input/lux-input-subcomponents/lux-input-prefix.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-input/lux-input-subcomponents/lux-input-suffix.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-input/lux-input.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-model/lux-form-selectable-base.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-radio/lux-radio.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-select/lux-select.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-slider/lux-slider.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-textarea/lux-textarea.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-toggle/lux-toggle.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-file/lux-file-model/lux-file-capture.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form-control/lux-form-directives/lux-maxlength/lux-max-length.directive.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-form/lux-form.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-spinner/lux-spinner.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-label/lux-label.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-badge/lux-badge.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-progress/lux-progress.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-table/lux-table-data-source.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/lux-paginator-intl.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-table/lux-table-subcomponents/lux-table-column-header.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-table/lux-table-subcomponents/lux-table-column-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-table/lux-table-subcomponents/lux-table-column-footer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-table/lux-table-subcomponents/lux-table-column.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-table/lux-table.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-message-box/lux-message-box-model/lux-message-box.animations.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-message-box/lux-message-box.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-message-box/lux-message-box-subcomponents/lux-message.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-common/lux-common.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-error/lux-http-error/lux-http-error-interceptor.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-error/lux-http-error/lux-http-error.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-error/lux-error-page/lux-error-services/lux-error-store.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-error/lux-error-page/lux-error-page.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-error/lux-error.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-error/lux-error-page/lux-error-services/lux-error-service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-config.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-ref.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-base/lux-file-preview-base.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-imgviewer/lux-file-preview-imgviewer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-notsupportedviewer/lux-file-preview-notsupportedviewer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-pdfviewer/lux-file-preview-pdfviewer.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview-toolbar/lux-file-preview-toolbar.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-file-preview/lux-file-preview.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-footer/lux-app-footer-button-info.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-layout/lux-app-footer/lux-app-footer-link-info.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-service/lux-lookup.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-model/lux-lookup-parameters.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-model/lux-lookup-component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-service/lux-lookup-handler.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-model/lux-lookup-error-state-matcher.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-combobox/lux-lookup-combobox.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-autocomplete/lux-autocomplete-error-state-matcher.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-autocomplete/lux-lookup-autocomplete.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-label/lux-lookup-label.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-lookup/lux-lookup-model/lux-lookup-table-entry.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-snackbar/lux-snackbar-config.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-snackbar/lux-snackbar-component/lux-snackbar.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-model/lux-dialog-ref.class.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-preset/lux-dialog-preset.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-structure/lux-dialog-structure.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-title.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-content.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-actions.component.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-popups.module.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-snackbar/lux-snackbar.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-model/lux-dialog-config.interface.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog-model/lux-dialog-preset-config.interface.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-popups/lux-dialog/lux-dialog.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/lux-storage.service.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/testing/lux-test-helper.ts","ng://@ihk-gfi/lux-components/src/app/modules/lux-util/testing/lux-test-overlay-helper.ts","ng://@ihk-gfi/lux-components/public_api.ts","ng://@ihk-gfi/lux-components/ihk-gfi-lux-components.ts"],"sourcesContent":["import { AfterViewInit, ElementRef, Renderer2 } from '@angular/core';\n\nexport abstract class LuxAriaBase implements AfterViewInit {\n  protected init = false;\n\n  protected constructor(\n    protected elementRef: ElementRef,\n    protected renderer: Renderer2,\n    protected ariaTagName: string\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.init = true;\n\n    this.renderAria();\n  }\n\n  protected renderAria() {\n    if (this.init) {\n      const selector = this.getSelector();\n\n      let el;\n      if (selector) {\n        el = this.elementRef.nativeElement.querySelector(selector);\n      } else {\n        el = this.elementRef.nativeElement;\n      }\n\n      if (el) {\n        const value = this.getValue();\n        if (value === null || value === undefined) {\n          this.renderer.removeAttribute(el, this.ariaTagName);\n        } else {\n          this.renderer.setAttribute(el, this.ariaTagName, value);\n        }\n      }\n    }\n  }\n\n  abstract getSelector(): string;\n\n  abstract getValue(): string;\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaLabel]'\n})\nexport class LuxAriaLabelDirective extends LuxAriaBase {\n  _luxAriaLabel: string;\n\n  @Input() luxAriaLabelSelector: string;\n\n  @Input()\n  get luxAriaLabel() {\n    return this._luxAriaLabel;\n  }\n\n  set luxAriaLabel(label: string) {\n    this._luxAriaLabel = label;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-label');\n\n    if (!this.luxAriaLabelSelector) {\n      const tagName = elementRef.nativeElement.tagName.toLowerCase();\n      if (tagName === 'lux-button') {\n        this.luxAriaLabelSelector = 'button';\n      } else if (tagName === 'lux-app-header-action-nav-item') {\n        this.luxAriaLabelSelector = 'button';\n      }\n    }\n  }\n\n  getSelector(): string {\n    return this.luxAriaLabelSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaLabel;\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { LuxScrollPosition } from './lux-scroll-position';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Directive({\n  selector: '[luxInfiniteScroll]'\n})\nexport class LuxInfiniteScrollDirective implements OnInit, AfterViewInit, OnDestroy {\n  // Zeitgrenze (ms) nach der das neuste Scroll-Event des Subjects genommen wird\n  static readonly SCROLL_DEBOUNCE_TIME: number = 200;\n\n  private scrollSubscription: Subscription;\n  private scroll$: Subject<void> = new Subject<void>();\n  private lastPosition: LuxScrollPosition = { scrollHeight: 0, scrollTop: 0, clientHeight: 0 };\n\n  // Prozentzahl nach der ein scrollCallback ausgeloest wird\n  @Input() luxScrollPercent = 85;\n  // Direkt bei Initialisierung einen ScrollEvent emitten\n  @Input() luxImmediateCallback = true;\n  // Flag ob aktuell Daten geladen werden (aus aufrufender Komponente)\n  @Input() luxIsLoading = false;\n  // Emitter an den sich andere Komponenten haengen koennen um auf den Scroll zu reagieren\n  @Output() luxScrolled: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Constructor\n   * @param elementRef Ziel-Element dieser Direktive\n   */\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    window.addEventListener('scroll', this.onScroll.bind(this), true);\n    // Die neuen Scroll-Events bündeln und nach der Zeitspanne SCROLL_DEBOUNCE_TIME prüfen ob ein\n    // \"luxScrolled\" emitten soll oder nicht.\n    this.scrollSubscription = this.scroll$\n      .pipe(debounceTime(LuxInfiniteScrollDirective.SCROLL_DEBOUNCE_TIME))\n      .subscribe(() => {\n        this.performScrollCheck();\n      });\n  }\n\n  ngAfterViewInit() {\n    // Prüfen ob ein initiales Laden von Daten starten soll\n    if (this.hasScrollbar() && this.luxImmediateCallback && !this.luxIsLoading) {\n      this.luxScrolled.emit();\n    }\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('scroll', this.onScroll, true);\n    this.scrollSubscription.unsubscribe();\n  }\n\n  /**\n   * Prüft ob ein Scroll-Event auf dem Zielelement stattgefunden hat.\n   * Wenn ja, wird das Subject scroll$ angestoßen.\n   * @param event\n   */\n  onScroll(event: any) {\n    const target = event.target ? event.target : event.srcElement;\n    if (target === this.elementRef.nativeElement) {\n      this.scroll$.next();\n    }\n  }\n\n  /**\n   * Holt die aktuelle Position im Scroll-Bereich und fuehrt\n   * einen Event-Emit durch wenn die Bedingungen erfuellt sind.\n   */\n  private performScrollCheck() {\n    const position: LuxScrollPosition = {\n      scrollTop: this.elementRef.nativeElement.scrollTop,\n      scrollHeight: this.elementRef.nativeElement.scrollHeight,\n      clientHeight: this.elementRef.nativeElement.clientHeight\n    };\n\n    // Wenn nach unten gescrollt wird und die angegebene Prozentzahl ueberschritten wird\n    if (this.isUserScrollingDown(position) && this.isScrollExpectedPercent(position) && !this.luxIsLoading) {\n      this.luxScrolled.emit();\n    }\n\n    this.lastPosition = position;\n  }\n\n  /**\n   * Prueft ob der User gerade nach unten scrollt.\n   * Vergleicht dabei die scrollTop Position des Users mit der des Elements.\n   * @param curPos\n   */\n  private isUserScrollingDown(curPos: LuxScrollPosition) {\n    return this.lastPosition.scrollTop < curPos.scrollTop;\n  }\n\n  /**\n   * Prueft ob der Scrollbereich ueberschritten wurde.\n   * @param position\n   * @returns boolean\n   */\n  private isScrollExpectedPercent(position) {\n    return (position.scrollTop + position.clientHeight) / position.scrollHeight > this.luxScrollPercent / 100;\n  }\n\n  /**\n   * Prüft ob das Zielelement eine Scrollbar gesetzt hat.\n   */\n  private hasScrollbar() {\n    return this.elementRef.nativeElement.scrollHeight > this.elementRef.nativeElement.clientHeight;\n  }\n}\n","/**\n * Enum fuer die moeglichen Background-Farben\n */\nexport enum LuxBackgroundColorsEnum {\n  red = 'red',\n  green = 'green',\n  yellow = 'yellow',\n  blue = 'blue',\n  gray = 'gray',\n  orange = 'orange',\n  brown = 'brown'\n}\n\n/**\n * Enum fuer die moeglichen Schrift-Farben\n */\nexport enum LuxFontColorsEnum {\n  white = 'white',\n  black = 'black'\n}\n","import { FormControl, FormGroup } from '@angular/forms';\nimport { LuxBackgroundColorsEnum, LuxFontColorsEnum } from './lux-colors.enum';\n\nexport class LuxUtil {\n  public static readonly ISO_8601_FULL = new RegExp(\n    '^\\\\d{4}-\\\\d\\\\d-\\\\d\\\\dT\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d(\\\\.\\\\d+)?(([+-]\\\\d\\\\d:\\\\d\\\\d)|Z)?$',\n    'i'\n  );\n\n  /**\n   * Prueft ob ein String leer ist.\n   * @param str\n   * @returns boolean\n   */\n  public static isEmpty(str): boolean {\n    return !str || 0 === str.length;\n  }\n\n  /**\n   * Liest aus einem Objekt ein bestimmtes Feld aus.\n   * Laesst sich auch ueber mehrere Unterobjekte verschachteln.\n   * Beispiele fuer propertyNamePath:\n   * \"value\"\n   * \"unterobjekt1.unterobjekt2.value\"\n   *\n   * @param el\n   * @param propertyNamePath\n   * @returns any\n   */\n  public static readPropertyValueFromObject(el: any, propertyNamePath: string): any {\n    let result = null;\n    if (el && propertyNamePath) {\n      const splitProperties = propertyNamePath.split('.');\n\n      if (splitProperties.length > 0) {\n        let tempObject = el;\n\n        for (const property of splitProperties) {\n          tempObject = tempObject[property];\n        }\n        result = tempObject;\n      } else {\n        result = el[propertyNamePath];\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gibt eine von verschiedenen vordefinierten Fehlernachrichten passend zu den\n   * vorhandenen Fehlern der uebergebenen FormControl zurueck.\n   * @param formControl\n   * @returns string\n   */\n  public static getErrorMessage(formControl: FormControl): string {\n    if (formControl) {\n      if (formControl.hasError('required')) {\n        return 'Dieses Feld darf nicht leer sein';\n      }\n\n      if (formControl.hasError('minlength')) {\n        return 'Die Mindestlänge ist ' + formControl.getError('minlength').requiredLength;\n      }\n\n      if (formControl.hasError('maxlength')) {\n        return 'Die Maximallänge ist ' + formControl.getError('maxlength').requiredLength;\n      }\n\n      if (formControl.hasError('email')) {\n        return 'Dies ist keine gültige E-Mailadresse';\n      }\n\n      if (formControl.hasError('min')) {\n        return 'Der Minimalwert ist ' + formControl.getError('min').min;\n      }\n\n      if (formControl.hasError('max')) {\n        return 'Der Maximalwert ist ' + formControl.getError('max').max;\n      }\n\n      if (formControl.hasError('pattern')) {\n        const pattern = formControl.getError('pattern').requiredPattern;\n        return 'Entspricht nicht dem Muster \"' + pattern.substring(1, pattern.length - 1) + '\"';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Prueft ob der uebergebene Wert ein JS-Datum ist.\n   * @param value\n   * @returns boolean\n   */\n  public static isDate(value: any) {\n    return value instanceof Date && !isNaN(value.valueOf());\n  }\n\n  /**\n   * Zeigt die Validierungsfehler der einzelnen FormControls innerhalb der FormGroup an.\n   * Wenn innerhalb der übergebenen FormGroup weitere Formgroups enthalten sind, werden\n   * diese ebenfalls validiert.\n   * @param formGroup\n   */\n  public static showValidationErrors(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormGroup) {\n        this.showValidationErrors(control);\n      } else {\n        control.markAsTouched({ onlySelf: true });\n      }\n    });\n  }\n\n  /**\n   * Diese Methode scrollt zu der übergebenen Id.\n   *\n   * @param id Eine Elementid (z.B. <tag id=\"myId\">...)\n   */\n  public static goTo(id: string): void {\n    const element: Element = document.querySelector('#' + id);\n    if (element) {\n      setTimeout(() => {\n        element.scrollIntoView();\n      });\n    }\n  }\n\n  /**\n   * Prueft ob die Applikation im IE geoeffnet ist.\n   * @returns boolean\n   */\n  public static isIE(): boolean {\n    const msie = window.document['documentMode'];\n    return msie && msie <= 11;\n  }\n\n  /**\n   * Prueft ob die Applikation im Edge geoeffnet ist.\n   * @returns boolean\n   */\n  public static isEdge(): boolean {\n    return window.navigator.userAgent.indexOf('Edge') > -1;\n  }\n\n  /**\n   * Prueft ob die Applikation im IE oder Edge geoffnet ist.\n   * @returns boolean\n   */\n  public static isIEorEdge(): boolean {\n    return LuxUtil.isIE() || LuxUtil.isEdge();\n  }\n\n  /**\n   * Diese Methode verhindert, dass ein Event weiterverarbeitet wird.\n   *\n   * @param event Ein beliebiges Event.\n   */\n  public static stopEventPropagation(event) {\n    if (event) {\n      if (event.stopPropagation) {\n        event.stopPropagation();\n      } else {\n        console.log('Die Funktion \"event.stopPropagation()\" wird nicht unterstützt.');\n      }\n    }\n  }\n\n  public static getColorsByBgColorsEnum(color: LuxBackgroundColorsEnum): { backgroundCSSClass; fontCSSClass } {\n    const result = { backgroundCSSClass: 'lux-bg-color-blue', fontCSSClass: 'lux-font-color-white' };\n    if (LuxBackgroundColorsEnum[color]) {\n      result.backgroundCSSClass = 'lux-bg-color-' + color;\n      switch (color) {\n        case LuxBackgroundColorsEnum.gray:\n        case LuxBackgroundColorsEnum.orange:\n        case LuxBackgroundColorsEnum.yellow:\n          result.fontCSSClass = 'lux-font-color-' + LuxFontColorsEnum.black;\n          break;\n        default:\n          result.fontCSSClass = 'lux-font-color-' + LuxFontColorsEnum.white;\n          break;\n      }\n    }\n    return result;\n  }\n\n  public static isNumber(toCheck: any): boolean {\n    return !Number.isNaN(+toCheck);\n  }\n\n  public static base64ToArrayBuffer(data) {\n    const binaryString = window.atob(data);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes;\n  }\n}\n","import { GestureConfig } from '@angular/material';\n\ndeclare var Hammer: any;\n\n/**\n * Anpassung der HammerGestureConfigs für die LuxComponents.\n *\n * Verhindert durch providen den Bug im Safari, dass kein Scrollen mehr möglich ist.\n */\nexport class LuxComponentsHammerConfig extends GestureConfig {\n  buildHammer(element: HTMLElement) {\n    // Wenn es sich um die MD-Component handelt, vertikales Scrolling\n    // zusätzlich zu den Swipe-Gesten aktivieren\n    if (element.className.indexOf('lux-master-detail') > -1) {\n      return new Hammer(element, { touchAction: 'pan-y' });\n    } else {\n      // Ansonsten einfach die Hammer-Config von Material übernehmen\n      return super.buildHammer(element);\n    }\n  }\n}\n","import { InjectionToken, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LuxComponentsConfigParameters } from './lux-components-config-parameters.interface';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { LuxComponentsHammerConfig } from './lux-components-hammer-config.class';\n\n// Diesen bitte !nicht! injecten, sondern den LuxComponentsConfigService.\nexport const LuxConfigTokenService = new InjectionToken<LuxComponentsConfigParameters>('luxConfig');\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n  providers: [\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: LuxComponentsHammerConfig\n    }\n  ]\n})\nexport class LuxComponentsConfigModule {\n  // Den InjectionToken mit der übergebenen Konfiguration überschreiben, damit die Komponenten diese nutzen können\n  static forRoot(config: LuxComponentsConfigParameters) {\n    return {\n      ngModule: LuxComponentsConfigModule,\n      providers: [\n        {\n          provide: LuxConfigTokenService,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { LuxConfigTokenService } from './lux-components-config.module';\nimport { LuxComponentsConfigParameters } from './lux-components-config-parameters.interface';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Dieser Service wird dazu verwendet, auf die Konfiguration der LuxComponents zuzugreifen und diese auszulesen bzw.\n * auch zu aktualisieren.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LuxComponentsConfigService {\n  // Fallback-Konfiguration, falls sonst keine gefunden werden konnte\n  public static readonly DEFAULT_CONFIG: LuxComponentsConfigParameters = {\n    displayLuxConsoleLogs: false,\n    generateLuxTagIds: false,\n    lookupServiceUrl: '/lookup/',\n    labelConfiguration: {\n      allUppercase: true,\n      notAppliedTo: ['lux-link', 'lux-side-nav-item', 'lux-menu-item']\n    },\n    cardExpansionAnimationActive: true,\n    displayBindingDebugHint: true,\n    rippleConfiguration: {\n      exitDuration: 500,\n      enterDuration: 500\n    }\n  };\n\n  // Subject mit dem aktuellen Konfig-Wert, welcher ausgelesen werden kann\n  private config$: BehaviorSubject<LuxComponentsConfigParameters> = new BehaviorSubject<LuxComponentsConfigParameters>(\n    null\n  );\n\n  /**\n   * Gibt das Observable mit der aktuell gesetzten Konfiguration zurück.\n   */\n  get config(): Observable<LuxComponentsConfigParameters> {\n    return this.config$.asObservable();\n  }\n\n  /**\n   * Gibt die aktuell gesetzte Konfiguration direkt zurück.\n   */\n  get currentConfig(): LuxComponentsConfigParameters {\n    return this.config$.getValue();\n  }\n\n  constructor(@Inject(LuxConfigTokenService) @Optional() config: LuxComponentsConfigParameters) {\n    // Wenn keine Konfiguration geladen werden konnte, Standard-Konfig benutzen und eine Warnung ausgeben.\n    if (!config) {\n      console.warn(\n        'Achtung: Es wurde keine Konfiguration für die LuxComponents definiert.\\n',\n        'Benutze Standard-Konfiguration:',\n        LuxComponentsConfigService.DEFAULT_CONFIG\n      );\n      this.config$.next(LuxComponentsConfigService.DEFAULT_CONFIG);\n    } else {\n      this.config$.next(this.mergeDefaultData(config));\n    }\n  }\n\n  /**\n   * Gibt zurück, ob die Labels als Uppercase gekennzeichnet sind und ob\n   * die übergebenen Selektoren in den Ausnahmen geführt sind.\n   * @param selector\n   */\n  isLabelUppercaseForSelector(selector: string): boolean {\n    const config = this.config$.value;\n    return config.labelConfiguration.allUppercase && config.labelConfiguration.notAppliedTo.indexOf(selector) === -1;\n  }\n\n  /**\n   * Ersetzt die aktuelle Konfiguration mit der übergebenen (wenn gültiger Wert).\n   * @param config\n   */\n  updateConfiguration(config: LuxComponentsConfigParameters) {\n    if (!config) {\n      console.warn('Die übergebene Konfiguration ist undefined/null und wird nicht übernommen.');\n    } else {\n      this.config$.next(this.mergeDefaultData(config));\n    }\n  }\n\n  /**\n   * Kombiniert die übergebene Konfiguration mit der Standard-Konfig.\n   *\n   * Übernimmt die Werte aus der Standard-Konfig, die nicht im übergebenen gesetzt wurden.\n   * @param config\n   */\n  private mergeDefaultData(config: LuxComponentsConfigParameters): LuxComponentsConfigParameters {\n    const mergedConfig = {};\n    Object.keys(config).forEach((key: string) => {\n      mergedConfig[key] = config[key];\n    });\n    Object.keys(LuxComponentsConfigService.DEFAULT_CONFIG).forEach((key: string) => {\n      if (mergedConfig[key] === undefined || mergedConfig[key] === null) {\n        mergedConfig[key] = LuxComponentsConfigService.DEFAULT_CONFIG[key];\n      }\n    });\n    return mergedConfig as LuxComponentsConfigParameters;\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'lux-form-label',\n  template: '<ng-template><ng-content></ng-content></ng-template>'\n})\nexport class LuxFormLabelComponent implements OnInit {\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'lux-form-hint',\n  template: '<ng-template><ng-content></ng-content></ng-template>\\n'\n})\nexport class LuxFormHintComponent implements OnInit {\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import {\n  ChangeDetectorRef,\n  ContentChild,\n  DoCheck,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChange,\n  SimpleChanges\n} from '@angular/core';\nimport { AbstractControl, ControlContainer, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { LuxFormLabelComponent } from '../lux-form-control/lux-form-control-subcomponents/lux-form-label.component';\nimport { LuxFormHintComponent } from '../lux-form-control/lux-form-control-subcomponents/lux-form-hint.component';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\nlet luxFormControlUID: number = 0;\n\nexport abstract class LuxFormComponentBase implements OnInit, OnChanges, DoCheck, OnDestroy {\n  protected static readonly DEFAULT_CTRL_NAME: string = 'control';\n\n  protected _formValueChangeSubscr: Subscription;\n  protected _formStatusChangeSubscr: Subscription;\n  protected _configSubscription: Subscription;\n\n  private hasHadRequiredValidator: boolean = false;\n\n  protected latestErrors: any = null;\n  protected preventUnwantedValueChange: boolean = false;\n  protected displayBindingDebugHint: boolean = false;\n  protected _initialValue: any;\n  protected _luxDisabled: boolean;\n  protected _luxReadonly: boolean;\n  protected _luxRequired: boolean;\n\n  errorMessage: string = undefined;\n\n  controlContainer: ControlContainer;\n  formGroup: FormGroup;\n  formControl: AbstractControl;\n\n  uid: string = 'lux-form-control-' + luxFormControlUID++;\n\n  @ContentChild(LuxFormLabelComponent, { static: false }) formLabelComponent: LuxFormLabelComponent;\n  @ContentChild(LuxFormHintComponent, { static: false }) formHintComponent: LuxFormHintComponent;\n\n  @HostBinding('class.lux-form-control-readonly') cssReadonly = this._luxReadonly;\n\n  @Output() luxFocusIn: EventEmitter<any> = new EventEmitter<any>();\n  @Output() luxFocusOut: EventEmitter<any> = new EventEmitter<any>();\n  @Output() luxDisabledChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input() luxHint: string;\n  @Input() luxLabel: string;\n\n  @Input() luxControlBinding: string;\n  @Input() luxControlValidators: ValidatorFn | ValidatorFn[];\n  @Input() luxErrorMessage: string;\n  @Input() luxErrorCallback: Function = (value, errors) => undefined;\n\n  get luxDisabled(): boolean {\n    return this._luxDisabled;\n  }\n\n  @Input() set luxDisabled(disabled: boolean) {\n    this._luxDisabled = disabled;\n    this.cdr.detectChanges();\n\n    if (this.formControl) {\n      this.handleFormDisabledState();\n    }\n\n    this.luxDisabledChange.emit(this._luxDisabled);\n  }\n\n  get luxReadonly(): boolean {\n    return this._luxReadonly;\n  }\n\n  @Input() set luxReadonly(readonly: boolean) {\n    this._luxReadonly = readonly;\n    this.cssReadonly = readonly;\n    this.cdr.detectChanges();\n  }\n\n  get luxRequired(): boolean {\n    return this._luxRequired;\n  }\n\n  @Input() set luxRequired(required: boolean) {\n    if (this.isInForm()) {\n      this.logger.error(\n        `Achtung: Bei Komponenten innerhalb von ReactiveForms den Required-Validator anstelle der ` +\n          `Property \"luxRequired\" nutzen.\\n` +\n          `Betroffene Komponente: ${this.luxControlBinding ? this.luxControlBinding : 'Kein Binding gefunden'}`\n      );\n    } else {\n      this._luxRequired = required;\n      this.updateValidators(this.luxControlValidators);\n      // flag um ungewollte Wertänderungen von undefined zu null zu unterbinden\n      this.preventUnwantedValueChange = true;\n      this.cdr.detectChanges();\n    }\n  }\n\n  protected constructor(\n    controlContainer: ControlContainer,\n    protected cdr: ChangeDetectorRef,\n    protected logger: LuxConsoleService,\n    protected configService: LuxComponentsConfigService\n  ) {\n    this.controlContainer = controlContainer;\n    // Wir fragen hier direkt ab, ob die Binding-Warnung ausgegeben werden sollen\n    this.displayBindingDebugHint = this.configService.currentConfig.displayBindingDebugHint;\n  }\n\n  ngOnInit() {\n    this.initFormControl();\n    this.initDisabledState();\n    this.initFormValueSubscription();\n    this.initFormStateSubscription();\n    this.updateValidators(this.luxControlValidators);\n\n    this.triggerOutputPatternCheck();\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges.luxControlValidators && this.formControl) {\n      this.updateValidators(this.luxControlValidators);\n    }\n\n    this.triggerInputPatternCheck(simpleChanges);\n  }\n\n  ngDoCheck() {\n    // Prüfen, ob es neue Fehlermeldungen gibt, wenn ja diese laden und speichern.\n    if (this.latestErrors !== this.formControl.errors && this.formControl.touched) {\n      this.latestErrors = this.formControl.errors;\n      this.errorMessage = this.fetchErrorMessage();\n    }\n\n    // Prüfen, ob für das Reactive-Form-Control ein required-Validator ergänzt worden ist\n    if (this.isInForm()) {\n      const hasRequiredValidator = this.hasRequiredValidator(this.formControl);\n      if (this.hasHadRequiredValidator !== hasRequiredValidator) {\n        this._luxRequired = hasRequiredValidator;\n        this.formControl.updateValueAndValidity();\n        this.cdr.detectChanges();\n      }\n\n      this.hasHadRequiredValidator = hasRequiredValidator;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formValueChangeSubscr) {\n      this._formValueChangeSubscr.unsubscribe();\n    }\n\n    if (this._formStatusChangeSubscr) {\n      this._formStatusChangeSubscr.unsubscribe();\n    }\n\n    if (this._configSubscription) {\n      this._configSubscription.unsubscribe();\n    }\n  }\n\n  isInForm(): boolean {\n    return this.controlContainer != null && !LuxUtil.isEmpty(this.luxControlBinding);\n  }\n\n  /**\n   * Versucht eine Fehlermeldung für diese Komponente auszulesen und gibt diese zurück.\n   * Wenn das Element nicht den \"touched\"-Zustand besitzt, wird keine Fehlermeldung zurückgegeben.\n   */\n  protected fetchErrorMessage(): string {\n    // Control undefined/null oder unberührt? => Keinen Fehler ausgeben\n    if (!this.formControl || !this.formControl.touched) {\n      return undefined;\n    }\n    const { value, errors } = this.formControl;\n\n    // Gibt der Callback bereits einen User-definierten Fehler wieder? => diesen zurückgeben\n    let errorMsg = this.luxErrorMessage\n      ? this.luxErrorMessage\n      : this.luxErrorCallback\n      ? this.luxErrorCallback(value, errors || {})\n      : undefined;\n    if (errors && errorMsg) {\n      return errorMsg;\n    }\n\n    // Evtl. falls vorhanden Fehlerbehandlung der ableitenden Komponente aufrufen\n    errorMsg = this.errorMessageModifier(value, errors || {});\n    if (errorMsg) {\n      return errorMsg;\n    }\n    // Last-but-not-least => versuchen einen Standardfehler auszulesen\n    errorMsg = LuxUtil.getErrorMessage(this.formControl as FormControl);\n\n    return errorMsg;\n  }\n\n  /**\n   * Mappt den Input-Wert aus disabled auf das FormControl.\n   */\n  protected handleFormDisabledState() {\n    if (this.luxDisabled && !this.formControl.disabled) {\n      this.formControl.disable();\n    }\n\n    if (!this.luxDisabled && this.formControl.disabled) {\n      this.formControl.enable();\n    }\n  }\n\n  /**\n   * Method-Stub der von ableitenden Klassen genutzt werden kann, um\n   * weitergreifende Fehlermeldungen anzugeben.\n   */\n  protected errorMessageModifier(value, errors) {}\n\n  /**\n   * Standard-Getter Funktion für den aktuellen Wert in dieser FormComponent.\n   */\n  protected getValue(): any {\n    return this.formControl ? this.formControl.value : this._initialValue;\n  }\n\n  /**\n   * Standard-Setter Funktion für den aktuellen Wert in dieser FormComponent.\n   */\n  protected setValue(value: any) {\n    // Wenn noch kein FormControl vorhanden, den init-Wert merken und Fn beenden\n    if (!this.formControl) {\n      this._initialValue = value;\n      return;\n    }\n\n    // Wenn der Wert bereits in dem FormControl bekannt ist, die Fn beenden\n    if (value === this.formControl.value) {\n      return;\n    }\n    // Den Wert im FormControl merken\n    this.formControl.setValue(value);\n  }\n\n  /**\n   * Wird nach der Aktualisierung des Wertes aufgerufen.\n   * Hier kann z.B. valueChange.emit() ausgeführt werden.\n   * @param formValue\n   */\n  protected notifyFormValueChanged(formValue: any) {}\n\n  /**\n   * Wird nach der Aktualisierung des Status aufgerufen.\n   * @param formStatus\n   */\n  protected notifyFormStatusChanged(formStatus: any) {}\n\n  /**\n   * Prueft ob das uebergebene Control einen required-Validator besitzt.\n   * @param abstractControl\n   */\n  protected hasRequiredValidator(abstractControl: AbstractControl) {\n    if (abstractControl.validator) {\n      const validator = abstractControl.validator({} as AbstractControl);\n      if (validator && (validator.required || validator.requiredTrue)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Initialisiert die FormGroup und das FormControl abhängig davon, ob es sich um eine ReactiveForm-Component\n   * handelt.\n   */\n  protected initFormControl() {\n    if (this.isInForm()) {\n      this.formGroup = <FormGroup>this.controlContainer.control;\n      this.formControl = this.formGroup.controls[this.luxControlBinding];\n    } else {\n      this.formGroup = new FormGroup({\n        control: new FormControl()\n      });\n      this.formControl = this.formGroup.get(LuxFormComponentBase.DEFAULT_CTRL_NAME);\n    }\n  }\n\n  /**\n   * Initialisiert den Disabled-Zustand nach Erstellung dieser Component.\n   */\n  protected initDisabledState() {\n    if (this._luxDisabled) {\n      this.handleFormDisabledState();\n    } else if (this.luxDisabled === undefined) {\n      this.luxDisabled = this.formControl.disabled;\n    }\n  }\n\n  /**\n   * Initialisiert das Handling von Wertaktualisierungen.\n   * Setzt den (optional vorhanden) Initial-Wert und folgende Änderungen über das FormControl.\n   */\n  protected initFormValueSubscription() {\n    if (this._initialValue !== null && this._initialValue !== undefined) {\n      this.setValue(this._initialValue);\n    }\n\n    // Aktualisierungen an dem FormControl-Value sollen auch via EventEmitter bekannt gemacht werden\n    this._formValueChangeSubscr = this.formControl.valueChanges.pipe(distinctUntilChanged()).subscribe((value: any) => {\n      if (this.preventUnwantedValueChange && value === null) {\n        this.preventUnwantedValueChange = false;\n        return;\n      }\n      this.notifyFormValueChanged(value);\n    });\n  }\n\n  /**\n   * Initialisiert das Handling von Statusaktualisierungen.\n   */\n  protected initFormStateSubscription() {\n    this._formStatusChangeSubscr = this.formControl.statusChanges.subscribe((status: any) => {\n      if (status === 'DISABLED' && !this.luxDisabled) {\n        // Das FormControl hat den Zustand \"DISABLED\", aber die Property \"luxDisabled\"\n        // hat noch den Wert \"false\". D.h. der FormControl-Status und die Property\n        // sind nicht mehr synchron.\n        this.luxDisabled = true;\n      } else if ((status === 'VALID' || status === 'INVALID') && this.luxDisabled) {\n        // Das FormControl hat den Zustand \"VALID\" oder \"INVALID\" und ist aktiv,\n        // aber die Property \"luxDisabled\" hat noch den Wert \"true\".\n        // D.h. der FormControl-Status und die Property sind nicht mehr synchron.\n        this.luxDisabled = false;\n      }\n\n      this.notifyFormStatusChanged(status);\n    });\n  }\n\n  /**\n   * Diese Funktion prüft ob luxRequired auf true gesetzt wurde und die übergebenen validators bereits den\n   * required-Validator besitzen.\n   * Für den Fall das luxRequired auf false gesetzt worden ist, wird der Validator entfernt.\n   *\n   * Hinweis: LuxFormCheckableBase überschreibt diese Funktion, um statt required requiredTrue zu setzen.\n   * @param validators\n   */\n  protected checkValidatorsContainRequired(validators: ValidatorFn | ValidatorFn[]) {\n    // Fall: required = true, aber neue Validatoren werden gesetzt\n    if (this.luxRequired === true) {\n      // Sind es mehrere Validatoren, aber kein .required? Dann wird er ergänzt\n      if (Array.isArray(validators) && validators.indexOf(Validators.required) === -1) {\n        validators.push(Validators.required);\n      } else if (!Array.isArray(validators) && validators !== Validators.required) {\n        // Ist es nur ein einzelner Validator und nicht .required? Dann Array erstellen und beide kombinieren\n        validators = [validators, Validators.required];\n      }\n    } else if (this.luxRequired === false) {\n      if (Array.isArray(validators)) {\n        validators = validators.filter((validator: ValidatorFn) => validator !== Validators.required);\n      } else if (validators === Validators.required) {\n        validators = undefined;\n      }\n    }\n\n    return validators;\n  }\n\n  /**\n   * Versucht die Validatoren für diese Komponente zu setzen.\n   * Ist nur erfolgreich, wenn es sich hierbei nicht um eine ReactiveForm-Komponente handelt.\n   * @param validators\n   */\n  protected updateValidators(validators: ValidatorFn | ValidatorFn[]) {\n    if ((!Array.isArray(validators) && validators) || (Array.isArray(validators) && validators.length > 0)) {\n      if (!this.isInForm()) {\n        setTimeout(() => {\n          this.luxControlValidators = this.checkValidatorsContainRequired(validators);\n          this.formControl.setValidators(this.luxControlValidators);\n          this.formControl.updateValueAndValidity();\n        });\n      } else {\n        this.logger.error(\n          `Die Validatoren einer ReactiveForm-Komponente dürfen nicht über ` + `das Template gesetzt werden.`\n        );\n      }\n    }\n  }\n\n  /**\n   * Gibt an, ob diese Component Output-Property-Binding nutzt obwohl diese Component eigentlich ein Reactive FormControl ist.\n   * @param observers\n   */\n  protected checkOutputPatternViolation(observers: any[] | null) {\n    if (this.displayBindingDebugHint && this.isInForm() && observers && observers.length > 0) {\n      this.logPatternViolationWarning();\n    }\n  }\n\n  /**\n   * Gibt an, ob diese Component Input-Property-Binding nutzt obwohl diese Component eigentlich ein Reactive FormControl ist.\n   * Wird von den ngOnChanges Methoden der Child-Klassen aufgerufen.\n   * @param simpleChange\n   */\n  protected checkInputPatternViolation(simpleChange: SimpleChange) {\n    if (this.displayBindingDebugHint && this.isInForm() && simpleChange && simpleChange.firstChange) {\n      this.logPatternViolationWarning();\n    }\n  }\n\n  /**\n   * Die Child-Klassen implementieren diese Funktion um zu prüfen, ob gegen das Output-Binding für ReactiveForms verstoßen wird.\n   */\n  protected abstract triggerOutputPatternCheck();\n\n  /**\n   * Die Child-Klassen implementieren diese Funktion um zu prüfen, ob gegen das Input-Binding für ReactiveForms verstoßen wird.\n   */\n  protected abstract triggerInputPatternCheck(simpleChanges: SimpleChanges);\n\n  /**\n   * Gibt über den LuxConsoleService eine Warnung aus, dass hier gegen das ReactiveForm-Pattern mit Property-Binding\n   * verstoßen worden ist.\n   */\n  private logPatternViolationWarning() {\n    this.logger.warn(\n      `Achtung: Die Component \"${this.luxControlBinding}\" ist Teil einer ReactiveForm, nutzt aber trotzdem Property-Binding.\\n\\n` +\n        `[Mit ReactiveForms]\\n` +\n        `Für Components innerhalb von ReactiveForms können Wertaktualisierungen wie folgt abgefragt werden:\\n\\n` +\n        `// Nicht vergessen unsubscribe in ngOnDestroy für die Subscription aufzurufen\\n` +\n        `this.subscription = this.myForm.get('myFormControl').valueChanges.subscribe((value: any) => console.log(value));\\n\\n` +\n        `Das Setzen von Werten erfolgt zum Beispiel so:\\n\\n` +\n        `this.myForm.get('myFormControl').setValue('myValue');\\n\\n` +\n        `[Ohne ReactiveForms]\\n` +\n        `Für Components außerhalb von ReactiveForms können Wertaktualisierungen wie folgt abgefragt werden:\\n\\n` +\n        `<lux-xyz-form-component (luxValueChange)=\"onValueChange($event)\"><lux-xyz-form-component>\\n\\n` +\n        `Das Setzen von Werten erfolgt zum Beispiel so:\\n\\n` +\n        `<lux-xyz-form-component [luxValue]=\"value\"><lux-xyz-form-component>\\n\\n` +\n        `Alternativ kann über Two-Way-Binding immer der aktuelle Wert in einer Property gehalten werden:\\n\\n` +\n        `<lux-xyz-form-component [(luxValue)]=\"value\"><lux-xyz-form-component>`\n    );\n\n    // Wir deaktivieren weitere Log-Ausgaben für diese Component, um doppelte Meldung zu vermeiden.\n    // z.B. wenn Two-Way-Binding genutzt wird.\n    this.displayBindingDebugHint = false;\n  }\n}\n","import { ChangeDetectorRef, Component, ElementRef, HostBinding, Input } from '@angular/core';\nimport { LuxFormComponentBase } from '../lux-form-model/lux-form-component-base.class';\n\nexport const luxFormControlSelektor: string = 'lux-form-control';\n\n/**\n * @author dron\n * @description Diese Component wird von den anderen LUX-FormControls genutzt, um eine einheitliche Baseline zu erreichen.\n */\n\n@Component({\n  selector: 'lux-form-control',\n  templateUrl: './lux-form-control.component.html',\n  styleUrls: ['./lux-form-control.component.scss']\n})\nexport class LuxFormControlComponent {\n  focused: boolean;\n\n  @HostBinding('class.lux-form-control-scalable-height') _luxScalableHeight: boolean = false;\n  @HostBinding('class.lux-form-control-borderless') _luxHideBottomBorder: boolean = false;\n\n  /**\n   * Die zugrunde liegende FormComponent\n   */\n  @Input() luxFormComponent: LuxFormComponentBase;\n  @Input() luxFormComponentElementRef: ElementRef;\n\n  @Input() luxIgnoreDefaultLabel: boolean = false;\n\n  /**\n   * Dient dazu, eine Component beliebig Hoch werden zu lassen (z.B. Textarea oder Radio).\n   * @param scalable\n   */\n  @Input() set luxScalableHeight(scalable: boolean) {\n    this._luxScalableHeight = scalable;\n  }\n\n  get luxScalableHeight(): boolean {\n    return this._luxScalableHeight;\n  }\n\n  /**\n   * Bestimmt ob die untere Border ausgeblendet werden soll oder nicht (z.B. bei Checkbox).\n   * @param hide\n   */\n  @Input() set luxHideBottomBorder(hide: boolean) {\n    this._luxHideBottomBorder = hide;\n  }\n\n  get luxHideBottomBorder(): boolean {\n    return this._luxHideBottomBorder;\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  /**\n   * Gibt wieder, ob der Fehler für diese FormComponent dargestellt werden soll.\n   */\n  shouldDisplayError() {\n    return this.luxFormComponent.errorMessage && this.luxFormComponent.formControl.touched;\n  }\n\n  shouldDisplayMisc() {\n    return this.luxFormComponent.formHintComponent || this.luxFormComponent.luxHint || this.shouldDisplayError();\n  }\n\n  shouldDisplayLabelByProperty() {\n    return !this.luxFormComponent.formLabelComponent && this.luxFormComponent.luxLabel;\n  }\n\n  shouldDisplayHintByProperty() {\n    return this.luxFormComponent.formHintComponent && !this.luxFormComponent.luxHint;\n  }\n\n  /**\n   * Aktiviert den Fokus dieser Component.\n   */\n  focusin() {\n    this.focused = true;\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Deaktiviert den Fokus dieser Component.\n   */\n  focusout() {\n    this.focused = false;\n    this.cdr.detectChanges();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { LuxComponentsConfigParameters } from '../../lux-components-config/lux-components-config-parameters.interface';\nimport { Subscription } from 'rxjs';\nimport { luxFormControlSelektor } from '../../lux-form/lux-form-control/lux-form-control.component';\n\n@Directive({\n  selector: '[luxTagIdHandler]'\n})\nexport class LuxTagIdDirective implements OnInit, AfterViewInit, OnDestroy {\n  public static readonly luxTagIdAttrName: string = 'data-luxtagid';\n  public static readonly sepParent: string = '.';\n  public static readonly sepComponent: string = '#';\n\n  private configSubscription: Subscription;\n\n  @Input() luxTagId: string;\n\n  generateLuxTagIds: boolean;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    public componentsConfigService: LuxComponentsConfigService\n  ) {}\n\n  ngOnInit() {\n    this.configSubscription = this.componentsConfigService.config.subscribe(\n      (newConfig: LuxComponentsConfigParameters) => {\n        this.generateLuxTagIds = newConfig.generateLuxTagIds;\n      }\n    );\n  }\n\n  ngAfterViewInit() {\n    if (this.generateLuxTagIds) {\n      const luxComponent: Element = this.findLuxComponent(this.elementRef.nativeElement);\n\n      if (luxComponent) {\n        let newTagId = this.luxTagId;\n\n        if (!newTagId) {\n          newTagId = this.getLuxTagId(luxComponent);\n        }\n\n        if (newTagId) {\n          newTagId = this.mergeTagIds(\n            this.getLuxTagIdParent(luxComponent.parentElement, ''),\n            luxComponent.nodeName + LuxTagIdDirective.sepComponent + newTagId\n          );\n          newTagId = newTagId.toLowerCase();\n\n          this.renderer.setAttribute(luxComponent, LuxTagIdDirective.luxTagIdAttrName, newTagId);\n        } else {\n          let usedLabel = false;\n          if (luxComponent.getAttribute('luxLabel')) {\n            newTagId = this.mergeTagIds(luxComponent.getAttribute('luxLabel'), newTagId);\n            newTagId = newTagId.toLowerCase();\n            this.renderer.setAttribute(luxComponent, LuxTagIdDirective.luxTagIdAttrName, newTagId);\n\n            usedLabel = true;\n          } else if (luxComponent.getAttribute('ng-reflect-lux-label')) {\n            newTagId = this.mergeTagIds(luxComponent.getAttribute('ng-reflect-lux-label'), newTagId);\n            newTagId = newTagId.toLowerCase();\n            this.renderer.setAttribute(luxComponent, LuxTagIdDirective.luxTagIdAttrName, newTagId);\n\n            usedLabel = true;\n          } else if (luxComponent.getAttribute('ng-reflect-label')) {\n            newTagId = this.mergeTagIds(luxComponent.getAttribute('ng-reflect-label'), newTagId);\n            newTagId = newTagId.toLowerCase();\n            this.renderer.setAttribute(luxComponent, LuxTagIdDirective.luxTagIdAttrName, newTagId);\n\n            usedLabel = true;\n          } else if (luxComponent.getElementsByClassName('lux-form-label')[0]) {\n            newTagId = this.mergeTagIds(\n              luxComponent.getElementsByClassName('lux-form-label')[0].textContent.trim(),\n              newTagId\n            );\n            newTagId = newTagId.toLowerCase();\n            this.renderer.setAttribute(luxComponent, LuxTagIdDirective.luxTagIdAttrName, newTagId);\n\n            usedLabel = true;\n          }\n\n          if (!usedLabel) {\n            console.warn(\n              'Dem Tag \"' +\n                this.getNodeName(luxComponent) +\n                '(' +\n                this.getParentPath(luxComponent.parentElement, '') +\n                ')' +\n                '\" fehlt das luxTagId-Attribut. Dieses Attribut wird für die automatischen Tests benötigt.'\n            );\n          }\n        }\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.configSubscription.unsubscribe();\n  }\n\n  private getParentPath(element: Element, currentTagId: string): string {\n    if (element && element.parentElement) {\n      return this.getParentPath(element.parentElement, currentTagId + '.' + this.getNodeName(element.parentElement));\n    }\n\n    return currentTagId;\n  }\n\n  private getLuxTagIdParent(element: Element, currentTagId: string): string {\n    if (element) {\n      let newTagId: string = currentTagId;\n      if (element.hasAttribute('luxTagId')) {\n        newTagId = this.mergeTagIds('luxTagId', newTagId);\n      } else if (element.hasAttribute(LuxTagIdDirective.luxTagIdAttrName)) {\n        newTagId = this.mergeTagIds(element.getAttribute(LuxTagIdDirective.luxTagIdAttrName), newTagId);\n      } else if (element.hasAttribute('luxcontrolbinding')) {\n        newTagId = this.mergeTagIds(element.getAttribute('luxcontrolbinding'), newTagId);\n      } else if (element.hasAttribute('formgroupname')) {\n        newTagId = this.mergeTagIds(\n          'formgroup' + LuxTagIdDirective.sepComponent + element.getAttribute('formgroupname'),\n          newTagId\n        );\n      }\n\n      return this.getLuxTagIdParent(element.parentElement, newTagId);\n    }\n\n    return currentTagId;\n  }\n\n  private mergeTagIds(tagId1: string, tagId2: string) {\n    let tagId: string;\n\n    if (!LuxUtil.isEmpty(tagId1) && !LuxUtil.isEmpty(tagId2)) {\n      tagId = tagId1 + LuxTagIdDirective.sepParent + tagId2;\n    } else if (!LuxUtil.isEmpty(tagId1) && LuxUtil.isEmpty(tagId2)) {\n      tagId = tagId1;\n    } else if (LuxUtil.isEmpty(tagId1) && !LuxUtil.isEmpty(tagId2)) {\n      tagId = tagId2;\n    } else {\n      tagId = '';\n    }\n\n    return tagId;\n  }\n\n  private getLuxTagId(element: Element): string {\n    let newId = '';\n\n    if (element) {\n      if (element.hasAttribute('luxTagId')) {\n        newId = element.getAttribute('luxTagId');\n      } else if (element.hasAttribute(LuxTagIdDirective.luxTagIdAttrName)) {\n        newId = element.getAttribute(LuxTagIdDirective.luxTagIdAttrName);\n      } else if (element.hasAttribute('luxcontrolbinding')) {\n        newId = element.getAttribute('luxcontrolbinding');\n      } else if (element.hasAttribute('formgroupname')) {\n        newId = element.getAttribute('formgroupname');\n      }\n    }\n\n    return newId;\n  }\n\n  private findLuxComponent(element: Element): Element {\n    if (element) {\n      const nodeName: string = this.getNodeName(element);\n      if (nodeName && nodeName.startsWith('lux-'.toUpperCase()) && nodeName !== luxFormControlSelektor.toUpperCase()) {\n        return element;\n      } else {\n        return this.findLuxComponent(element.parentElement);\n      }\n    }\n\n    return null;\n  }\n\n  private getNodeName(element: Element): string {\n    return element && element.nodeName ? element.nodeName : '';\n  }\n}\n","import { AriaDescriber, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport {\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  Optional,\n  SimpleChanges,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  MAT_TOOLTIP_DEFAULT_OPTIONS,\n  MAT_TOOLTIP_SCROLL_STRATEGY,\n  MatTooltip,\n  MatTooltipDefaultOptions,\n  TooltipPosition\n} from '@angular/material';\n\n@Directive({\n  selector: '[luxTooltip]',\n  exportAs: 'luxTooltip'\n})\nexport class LuxTooltipDirective extends MatTooltip implements OnChanges {\n  @Input() luxTooltip: string = '???';\n  @Input() luxTooltipHideDelay: number = 0;\n  @Input() luxTooltipShowDelay: number = 0;\n  @Input() luxTooltipPosition: TooltipPosition = 'above';\n  @Input() luxTooltipDisabled: boolean = false;\n\n  constructor(\n    private luxOverlay: Overlay,\n    private luxElementRef: ElementRef,\n    private luxScrollDispatcher: ScrollDispatcher,\n    private luxViewContainerRef: ViewContainerRef,\n    private luxNgZone: NgZone,\n    private luxPlatform: Platform,\n    private luxAriaDescriber: AriaDescriber,\n    private luxFocusMonitor: FocusMonitor,\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) private luxScrollStrategy,\n    @Optional() private luxDir: Directionality,\n    @Optional()\n    @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)\n    private luxDefaultOptions: MatTooltipDefaultOptions\n  ) {\n    super(\n      luxOverlay,\n      luxElementRef,\n      luxScrollDispatcher,\n      luxViewContainerRef,\n      luxNgZone,\n      luxPlatform,\n      luxAriaDescriber,\n      luxFocusMonitor,\n      luxScrollStrategy,\n      luxDir,\n      luxDefaultOptions\n    );\n  }\n\n  @HostListener('longpress') _handleLongPress() {\n    super.show(this.luxTooltipShowDelay);\n  }\n\n  @HostListener('keydown', ['$event']) _handleKeydown(event) {\n    super._handleKeydown(event);\n  }\n\n  @HostListener('touchend') _handleTouchend() {\n    super._handleTouchend();\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    this.message = this.luxTooltip;\n    this.hideDelay = this.luxTooltipHideDelay;\n    this.showDelay = this.luxTooltipShowDelay;\n    this.position = this.luxTooltipPosition;\n    this.disabled = this.luxTooltipDisabled;\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { ReplaySubject, Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[luxTabIndex]'\n})\nexport class LuxTabIndexDirective implements AfterViewInit, OnChanges, OnDestroy {\n  private changesSubscription: Subscription;\n  private changes$: ReplaySubject<SimpleChanges> = new ReplaySubject<SimpleChanges>(1);\n\n  @Input() luxTabIndex: string = '0';\n  @Input() luxApplyToParent: boolean = false;\n  @Input() luxApplyToChildren: boolean = true;\n  @Input() luxPotentialChildren: string[] = ['input', 'textarea', 'a', 'button', 'mat-select'];\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    this.changes$.next(simpleChanges);\n  }\n\n  ngAfterViewInit() {\n    this.updateElementsWithTabIndex();\n    // Dadurch verhindern wir, dass Changes vor afterViewInit zu etwaigen Fehlern führen könnten und erst danach aufgelöst werden\n    this.changesSubscription = this.changes$.subscribe(this.onChanges.bind(this));\n  }\n\n  ngOnDestroy() {\n    if (this.changesSubscription) {\n      this.changesSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Eigener Listener für Änderungen, der erst nach dem AfterViewInit-Lifecycle greift.\n   * Sicherheitshalber, um evtl. noch unaufgelösten Elementen zu entgehen.\n   * @param simpleChanges\n   */\n  private onChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges.luxTabIndex) {\n      this.updateElementsWithTabIndex();\n    }\n  }\n\n  /**\n   * Aktualisiert den Tabindex für\n   *  - das Zielelement, wenn luxApplyToParent === true (default = false) ist\n   *  - potentielle Kindelemente, wenn luxApplyToChildren === true (default) ist\n   */\n  private updateElementsWithTabIndex() {\n    if (this.luxApplyToParent) {\n      this.setTabIndexForElement(this.elementRef.nativeElement);\n    }\n\n    if (this.luxApplyToChildren) {\n      this.luxPotentialChildren.forEach((childQuery: string) => this.setTabIndexByQuery(childQuery));\n    }\n  }\n\n  private setTabIndexByQuery(elementQuery: string) {\n    const elements = this.elementRef.nativeElement.querySelectorAll(elementQuery);\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      this.setTabIndexForElement(element);\n    }\n  }\n\n  private setTabIndexForElement(element: HTMLElement) {\n    this.renderer.setAttribute(element, 'tabIndex', this.luxTabIndex);\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport { Directive, ElementRef, Inject, Input, NgZone, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleGlobalOptions } from '@angular/material';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { Subscription } from 'rxjs';\n\n// @dynamic Erklärung steht in der Datei \"lux-decorators.ts\".\n@Directive({\n  selector: '[luxRipple], [lux-ripple]',\n  host: {\n    class: 'mat-ripple lux-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n})\nexport class LuxRippleDirective extends MatRipple implements OnInit, OnDestroy {\n  private configSubscription: Subscription;\n\n  _luxRippleColor: string;\n  _luxRippleUnbounded: boolean = false;\n  _luxRippleCentered: boolean = false;\n  _luxRippleDisabled: boolean = false;\n  _luxRippleRadius: number = 0;\n  _luxRippleEnterDuration: number = 0;\n  _luxRippleExitDuration: number = 0;\n\n  get luxRippleColor() {\n    return this._luxRippleColor;\n  }\n\n  @Input() set luxRippleColor(value: string) {\n    this._luxRippleColor = value;\n    this.color = value;\n  }\n\n  get luxRippleUnbounded() {\n    return this._luxRippleUnbounded;\n  }\n\n  @Input() set luxRippleUnbounded(value: boolean) {\n    this._luxRippleUnbounded = value;\n    this.unbounded = value;\n  }\n\n  get luxRippleCentered() {\n    return this._luxRippleCentered;\n  }\n\n  @Input() set luxRippleCentered(value: boolean) {\n    this._luxRippleCentered = value;\n    this.centered = value;\n  }\n\n  get luxRippleRadius() {\n    return this._luxRippleRadius;\n  }\n\n  @Input() set luxRippleRadius(value: number) {\n    this._luxRippleRadius = value;\n    this.radius = value;\n  }\n\n  get luxRippleDisabled() {\n    return this._luxRippleDisabled;\n  }\n\n  @Input() set luxRippleDisabled(value: boolean) {\n    this._luxRippleDisabled = value;\n    this.disabled = value;\n  }\n\n  get luxRippleEnterDuration() {\n    return this._luxRippleEnterDuration;\n  }\n\n  @Input() set luxRippleEnterDuration(value: number) {\n    this._luxRippleEnterDuration = value;\n\n    if (!this.animation) {\n      this.animation = {};\n    }\n    this.animation.exitDuration = value;\n  }\n\n  get luxRippleExitDuration() {\n    return this._luxRippleExitDuration;\n  }\n\n  @Input() set luxRippleExitDuration(value: number) {\n    this._luxRippleExitDuration = value;\n\n    if (!this.animation) {\n      this.animation = {};\n    }\n    this.animation.exitDuration = value;\n  }\n\n  constructor(\n    private configService: LuxComponentsConfigService,\n    private luxElementRef: ElementRef<HTMLElement>,\n    private luxNgZone: NgZone,\n    private luxPlatform: Platform,\n    @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) private luxGlobalOptions?: RippleGlobalOptions,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) private luxAnimationMode?: string\n  ) {\n    super(luxElementRef, luxNgZone, luxPlatform, luxGlobalOptions, luxAnimationMode);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    // Globale Konfiguration für die LUX-Ripples auslesen und die Component entsprechend aktualisieren\n    this.configSubscription = this.configService.config.subscribe(({ rippleConfiguration }) => {\n      if (rippleConfiguration) {\n        this.luxRippleEnterDuration = rippleConfiguration.enterDuration;\n        this.luxRippleExitDuration = rippleConfiguration.exitDuration;\n        this.luxRippleColor = rippleConfiguration.color;\n        this.luxRippleCentered = rippleConfiguration.centered;\n        this.luxRippleDisabled = rippleConfiguration.disabled;\n        this.luxRippleRadius = rippleConfiguration.radius;\n        this.luxRippleUnbounded = rippleConfiguration.unbounded;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    if (this.configSubscription) {\n      this.configSubscription.unsubscribe();\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaExpanded]'\n})\nexport class LuxAriaExpandedDirective extends LuxAriaBase {\n  _luxAriaExpanded: string;\n\n  @Input() luxAriaExpandedSelector: string;\n\n  @Input()\n  get luxAriaExpanded() {\n    return this._luxAriaExpanded;\n  }\n\n  set luxAriaExpanded(expanded: string) {\n    this._luxAriaExpanded = expanded;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-expanded');\n\n    if (!this.luxAriaExpandedSelector) {\n      const tagName = elementRef.nativeElement.tagName.toLowerCase();\n      if (tagName === 'lux-button') {\n        this.luxAriaExpandedSelector = 'button';\n      }\n    }\n  }\n\n  getSelector(): string {\n    return this.luxAriaExpandedSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaExpanded;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaRole]'\n})\nexport class LuxAriaRoleDirective extends LuxAriaBase {\n  _luxAriaRole: string;\n\n  @Input() luxAriaRoleSelector: string;\n\n  @Input()\n  get luxAriaRole() {\n    return this._luxAriaRole;\n  }\n\n  set luxAriaRole(role: string) {\n    this._luxAriaRole = role;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'role');\n  }\n\n  getSelector(): string {\n    return this.luxAriaRoleSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaRole;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaHasPopup]'\n})\nexport class LuxAriaHaspopupDirective extends LuxAriaBase {\n  _luxAriaHasPopup: string;\n\n  @Input() luxAriaHasPopupSelector: string;\n\n  @Input()\n  get luxAriaHasPopup() {\n    return this._luxAriaHasPopup;\n  }\n\n  set luxAriaHasPopup(hasPopup: string) {\n    this._luxAriaHasPopup = hasPopup;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-haspopup');\n\n    if (!this.luxAriaHasPopupSelector) {\n      const tagName = elementRef.nativeElement.tagName.toLowerCase();\n      if (tagName === 'lux-button') {\n        this.luxAriaHasPopupSelector = 'button';\n      } else if (tagName === 'lux-app-header-action-nav-item') {\n        this.luxAriaHasPopupSelector = 'button';\n      }\n    }\n  }\n\n  getSelector(): string {\n    return this.luxAriaHasPopupSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaHasPopup;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaHidden]'\n})\nexport class LuxAriaHiddenDirective extends LuxAriaBase {\n  _luxAriaHidden: string;\n\n  @Input() luxAriaHiddenSelector: string;\n\n  @Input()\n  get luxAriaHidden() {\n    return this._luxAriaHidden;\n  }\n\n  set luxAriaHidden(hidden: string) {\n    this._luxAriaHidden = hidden;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-hidden');\n  }\n\n  getSelector(): string {\n    return this.luxAriaHiddenSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaHidden;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaDescribedby]'\n})\nexport class LuxAriaDescribedbyDirective extends LuxAriaBase {\n  _luxAriaDescribedby: string;\n\n  @Input() luxAriaDescribedbySelector: string;\n\n  @Input()\n  get luxAriaDescribedby() {\n    return this._luxAriaDescribedby;\n  }\n\n  set luxAriaDescribedby(describedby: string) {\n    this._luxAriaDescribedby = describedby;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-describedby');\n\n    if (!this.luxAriaDescribedbySelector) {\n      const tagName = elementRef.nativeElement.tagName.toLowerCase();\n      if (tagName === 'lux-button') {\n        this.luxAriaDescribedbySelector = 'button';\n      } else if (tagName === 'lux-app-header-action-nav-item') {\n        this.luxAriaDescribedbySelector = 'button';\n      }\n    }\n  }\n\n  getSelector(): string {\n    return this.luxAriaDescribedbySelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaDescribedby;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaInvalid]'\n})\nexport class LuxAriaInvalidDirective extends LuxAriaBase {\n  _luxAriaInvalid: string;\n\n  @Input() luxAriaInvalidSelector: string;\n\n  @Input()\n  get luxAriaInvalid() {\n    return this._luxAriaInvalid;\n  }\n\n  set luxAriaInvalid(invalid: string) {\n    this._luxAriaInvalid = invalid;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-invalid');\n  }\n\n  getSelector(): string {\n    return this.luxAriaInvalidSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaInvalid;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaRequired]'\n})\nexport class LuxAriaRequiredDirective extends LuxAriaBase {\n  _luxAriaRequired: string;\n\n  @Input() luxAriaRequiredSelector: string;\n\n  @Input()\n  get luxAriaRequired() {\n    return this._luxAriaRequired;\n  }\n\n  set luxAriaRequired(required: string) {\n    this._luxAriaRequired = required;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-required');\n  }\n\n  getSelector(): string {\n    return this.luxAriaRequiredSelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaRequired;\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { LuxAriaBase } from './lux-aria-base';\n\n@Directive({\n  selector: '[luxAriaLabelledby]'\n})\nexport class LuxAriaLabelledbyDirective extends LuxAriaBase {\n  _luxAriaLabelledby: string;\n\n  @Input() luxAriaLabelledbySelector: string;\n\n  @Input()\n  get luxAriaLabelledby() {\n    return this._luxAriaLabelledby;\n  }\n\n  set luxAriaLabelledby(labelledby: string) {\n    this._luxAriaLabelledby = labelledby;\n\n    this.renderAria();\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {\n    super(elementRef, renderer, 'aria-labelledby');\n\n    if (!this.luxAriaLabelledbySelector) {\n      const tagName = elementRef.nativeElement.tagName.toLowerCase();\n      if (tagName === 'lux-button') {\n        this.luxAriaLabelledbySelector = 'button';\n      } else if (tagName === 'lux-app-header-action-nav-item') {\n        this.luxAriaLabelledbySelector = 'button';\n      }\n    }\n  }\n\n  getSelector(): string {\n    return this.luxAriaLabelledbySelector;\n  }\n\n  getValue(): string {\n    return this._luxAriaLabelledby;\n  }\n}\n","import {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  Optional,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { MatBadge } from '@angular/material';\nimport { AriaDescriber } from '@angular/cdk/a11y';\nimport { LuxUtil } from '../../lux-util/lux-util';\n\n@Directive({\n  selector: '[luxBadgeNotification], [lux-badge-notification]',\n  host: {\n    class: 'mat-badge',\n    '[class.mat-badge-overlap]': 'overlap',\n    '[class.mat-badge-above]': 'isAbove()',\n    '[class.mat-badge-below]': '!isAbove()',\n    '[class.mat-badge-before]': '!isAfter()',\n    '[class.mat-badge-after]': 'isAfter()',\n    '[class.mat-badge-small]': 'size === \"small\"',\n    '[class.mat-badge-medium]': 'size === \"medium\"',\n    '[class.mat-badge-large]': 'size === \"large\"',\n    '[class.mat-badge-hidden]': 'hidden || isHidden()',\n    '[class.mat-badge-disabled]': 'disabled',\n    '[class.lux-badge-color-default]': 'color !== \"primary\" && color !== \"warn\" && color !== \"accent\"'\n  }\n})\nexport class LuxBadgeNotificationDirective extends MatBadge implements OnChanges, DoCheck {\n  @Input() luxBadgeNotification: string;\n  @Input() luxBadgeColor: 'primary' | 'warn' | 'accent' | string = 'default';\n  @Input() luxBadgeSize: 'small' | 'medium' | 'large' = 'medium';\n  @Input() luxBadgePosition: 'above after' | 'above before' | 'below before' | 'below after' = 'above after';\n  @Input() luxBadgeDisabled: boolean = false;\n  @Input() luxBadgeHidden: boolean = false;\n  @Input() luxBadgeOverlap: boolean = true;\n  @Input() luxBadgeCap: number;\n\n  constructor(\n    private luxNgZone: NgZone,\n    private luxElementRef: ElementRef<HTMLElement>,\n    private luxAriaDescriber: AriaDescriber,\n    @Optional() private luxRenderer: Renderer2\n  ) {\n    super(luxNgZone, luxElementRef, luxAriaDescriber, luxRenderer);\n\n    luxElementRef.nativeElement.classList.add('lux-badge-notification');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.updateContent(this.luxBadgeNotification);\n    this.color = <any>this.luxBadgeColor;\n    this.size = this.luxBadgeSize;\n    this.position = this.luxBadgePosition;\n    this.disabled = this.luxBadgeDisabled;\n    this.hidden = !!this.luxBadgeHidden;\n    this.overlap = this.luxBadgeOverlap;\n  }\n\n  ngDoCheck() {\n    this.checkMaxNumber();\n  }\n\n  updateContent(value: any) {\n    let newContent = value;\n\n    if (typeof newContent === 'number') {\n      // Wenn der Wert eine Zahl ist, muss dieser für die Weiterverarbeitung in einen String umgewandelt werden.\n      newContent = '' + newContent;\n    } else if (!newContent) {\n      // Die Werte \"undefined\" und \"null\" zum Leerstring umwandeln,\n      // damit diese nicht angezeigt werden.\n      newContent = '';\n    }\n\n    this.content = newContent;\n    this.description = newContent;\n  }\n\n  isHidden(): boolean {\n    return this.hidden || !this.content;\n  }\n\n  /**\n   * Prüft ob der Inhalt eine Zahl, eine Maximalzahl gegeben und diese überschritten worden ist.\n   * Wenn ja, wird der Inhalt mit einem \"+\" abgekürzt.\n   */\n  private checkMaxNumber() {\n    if (this.luxBadgeNotification && this.luxBadgeCap && LuxUtil.isNumber(this.luxBadgeNotification)) {\n      if (+this.luxBadgeNotification > this.luxBadgeCap) {\n        this.updateContent(this.luxBadgeCap + '+');\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LuxAriaLabelDirective } from './lux-aria/lux-aria-label.directive';\nimport { MatBadgeModule, MatRippleModule, MatTooltipModule } from '@angular/material';\nimport { LuxInfiniteScrollDirective } from './lux-infinite-scroll/lux-infinite-scroll.directive';\nimport { LuxTagIdDirective } from './lux-tag-id/lux-tag-id.directive';\nimport { LuxTooltipDirective } from './lux-tooltip/lux-tooltip.directive';\nimport { LuxTabIndexDirective } from './lux-tabindex/lux-tab-index.directive';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxRippleDirective } from './lux-ripple/lux-ripple.directive';\nimport { LuxAriaExpandedDirective } from './lux-aria/lux-aria-expanded.directive';\nimport { LuxAriaRoleDirective } from './lux-aria/lux-aria-role.directive';\nimport { LuxAriaHaspopupDirective } from './lux-aria/lux-aria-haspopup.directive';\nimport { LuxAriaHiddenDirective } from './lux-aria/lux-aria-hidden.directive';\nimport { LuxAriaDescribedbyDirective } from './lux-aria/lux-aria-describedby.directive';\nimport { LuxAriaInvalidDirective } from './lux-aria/lux-aria-invalid.directive';\nimport { LuxAriaRequiredDirective } from './lux-aria/lux-aria-required.directive';\nimport { LuxAriaLabelledbyDirective } from './lux-aria/lux-aria-labelledby.directive';\nimport { LuxBadgeNotificationDirective } from './lux-badge-notification/lux-badge-notification.directive';\n\n@NgModule({\n  imports: [CommonModule, MatTooltipModule, MatBadgeModule, MatRippleModule, LuxComponentsConfigModule],\n  declarations: [\n    LuxInfiniteScrollDirective,\n    LuxTagIdDirective,\n    LuxTooltipDirective,\n    LuxTabIndexDirective,\n    LuxRippleDirective,\n    LuxTabIndexDirective,\n    LuxAriaLabelDirective,\n    LuxAriaExpandedDirective,\n    LuxAriaRoleDirective,\n    LuxAriaHaspopupDirective,\n    LuxAriaHiddenDirective,\n    LuxAriaDescribedbyDirective,\n    LuxAriaInvalidDirective,\n    LuxAriaRequiredDirective,\n    LuxAriaLabelledbyDirective,\n    LuxTabIndexDirective,\n    LuxBadgeNotificationDirective\n  ],\n  exports: [\n    LuxInfiniteScrollDirective,\n    LuxTagIdDirective,\n    LuxTooltipDirective,\n    LuxTabIndexDirective,\n    LuxAriaLabelDirective,\n    LuxAriaExpandedDirective,\n    LuxAriaRoleDirective,\n    LuxAriaHaspopupDirective,\n    LuxAriaHiddenDirective,\n    LuxAriaDescribedbyDirective,\n    LuxAriaInvalidDirective,\n    LuxAriaRequiredDirective,\n    LuxAriaLabelledbyDirective,\n    LuxTabIndexDirective,\n    LuxBadgeNotificationDirective,\n    LuxAriaLabelledbyDirective,\n    LuxTabIndexDirective,\n    LuxRippleDirective\n  ]\n})\nexport class LuxDirectivesModule {}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { LuxBackgroundColorsEnum } from '../../lux-util/lux-colors.enum';\nimport { LuxUtil } from '../../lux-util/lux-util';\n\n@Component({\n  selector: 'lux-icon',\n  templateUrl: './lux-icon.component.html',\n  styleUrls: ['./lux-icon.component.scss']\n})\nexport class LuxIconComponent {\n  public static readonly FA_BRAND = 'fab ';\n  public static readonly FA_SOLID = 'fas ';\n  public static readonly FA_REGULAR = 'far ';\n  public static readonly FA_LIGHT = 'fal ';\n\n  private _luxIconSize: string;\n  private _luxIconName: string;\n  private _luxPadding: string = '4px';\n  private _backgroundCSSClass: string = '';\n  private _fontCSSClass: string = '';\n\n  currentIconSize: number = 1;\n  isIconFA: boolean;\n\n  @HostBinding('style.margin') styleMargin: string = '0';\n\n  @Input() luxRounded: boolean = false;\n\n  get luxMargin(): string {\n    return this.styleMargin;\n  }\n\n  // 'standard margin Werte z.B. '5px 4px 3px 2px'\n  @Input() set luxMargin(margin: string) {\n    this.styleMargin = margin;\n  }\n\n  get luxPadding(): string {\n    return this._luxPadding;\n  }\n\n  // standard padding Werte z.B. '5px 4px 3px 2px'\n  @Input() set luxPadding(padding: string) {\n    this._luxPadding = padding;\n  }\n\n  get luxIconSize(): string {\n    return this._luxIconSize;\n  }\n\n  @Input() set luxIconSize(iconSizeValue: string) {\n    this._luxIconSize = iconSizeValue;\n    if (typeof this.luxIconSize === 'string' && this.luxIconSize.length === 2) {\n      this.currentIconSize = +this.luxIconSize.slice(0, 1);\n    } else {\n      this.currentIconSize = 1;\n    }\n  }\n\n  get luxIconName(): string {\n    return this._luxIconName;\n  }\n\n  @Input()\n  set luxIconName(iconNameValue: string) {\n    if (iconNameValue) {\n      this._luxIconName = this.modifiyIconName(iconNameValue);\n    }\n  }\n\n  get backgroundCSSClass() {\n    return this._backgroundCSSClass;\n  }\n\n  public get fontCSSClass() {\n    return this._fontCSSClass;\n  }\n\n  @Input()\n  set luxColor(color: LuxBackgroundColorsEnum) {\n    if (LuxBackgroundColorsEnum[color]) {\n      const result = LuxUtil.getColorsByBgColorsEnum(color);\n      this._backgroundCSSClass = result.backgroundCSSClass;\n      this._fontCSSClass = result.fontCSSClass;\n    } else {\n      this._backgroundCSSClass = '';\n      this._fontCSSClass = '';\n    }\n  }\n\n  constructor() {}\n\n  /**\n   * Generiert aus dem mitgegebenen Wert einen String-Wert\n   * der entweder als Font-Awesome Icon oder als Material-Icon\n   * interpretiert werden kann.\n   *\n   * @param iconName, z.B. fas fa-cogs\n   * @returns string\n   */\n  private modifiyIconName(iconName: string): string {\n    // Handelt es sich hier um ein Font-Awesome Icon?\n    if (iconName.startsWith('fa')) {\n      // feststellen, ob ein FA-Präfix vorliegt\n      if (\n        iconName.indexOf(LuxIconComponent.FA_BRAND) === -1 &&\n        iconName.indexOf(LuxIconComponent.FA_SOLID) === -1 &&\n        iconName.indexOf(LuxIconComponent.FA_REGULAR) === -1 &&\n        iconName.indexOf(LuxIconComponent.FA_LIGHT) === -1\n      ) {\n        // Wenn nicht, dann\n        iconName = 'fas ' + iconName;\n      }\n      this.isIconFA = true;\n      return iconName;\n    }\n    this.isIconFA = false;\n    // Ansonsten davon ausgehen das es ein Material Icon ist\n    return iconName;\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'lux-image',\n  templateUrl: './lux-image.component.html',\n  styleUrls: ['./lux-image.component.scss']\n})\nexport class LuxImageComponent implements OnInit, OnChanges {\n  @Input() luxImageSrc: string = '';\n  @Input() luxImageWidth: string = 'auto';\n  @Input() luxImageHeight: string = 'auto';\n  @Input() luxRawSrc: boolean = false;\n\n  constructor() {}\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges.luxImageSrc) {\n      if (!this.luxRawSrc) {\n        this.updateImageSrc();\n      }\n    } else if (simpleChanges.luxRawSrc) {\n      if (!this.luxRawSrc) {\n        this.updateImageSrc();\n      }\n    }\n  }\n\n  ngOnInit() {}\n\n  private updateImageSrc() {\n    if (this.luxImageSrc) {\n      // Pruefen ob es sich um ein externes Bild handelt\n      if (this.luxImageSrc.startsWith('http')) {\n        this.sanitizeImageSrc();\n      } else {\n        // Wenn nicht, auf den Assets-Ordner verweisen\n        if (this.luxImageSrc.indexOf('asset') === -1) {\n          this.luxImageSrc = 'assets/' + this.luxImageSrc;\n        }\n        this.sanitizeImageSrc();\n      }\n    }\n  }\n\n  private sanitizeImageSrc() {\n    // Doppelte Slashes entfernen\n    this.luxImageSrc = this.luxImageSrc.replace(/\\/\\/+/g, '/');\n    // Fuehrende Slashes entfernen\n    if (this.luxImageSrc.startsWith('/')) {\n      this.luxImageSrc = this.luxImageSrc.slice(1, this.luxImageSrc.length);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material';\nimport { LuxIconComponent } from './lux-icon/lux-icon.component';\nimport { LuxImageComponent } from './lux-image/lux-image.component';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, FlexLayoutModule, LuxComponentsConfigModule],\n  declarations: [LuxIconComponent, LuxImageComponent],\n  exports: [LuxIconComponent, LuxImageComponent]\n})\nexport class LuxIconModule {}\n","import { EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Base-Klasse der LuxActionComponents.\n *\n * Enthält die Inputs/Outputs, die allen Action-Components gleich sind.\n */\nexport class LuxActionComponentBaseClass {\n  @Input() luxLabel: string;\n  @Input() luxColor: 'primary' | 'accent' | 'warn' | '' = '';\n  @Input() luxRaised: boolean;\n  @Input() luxIconName: string;\n  @Input() luxTagId: string;\n  @Input() luxDisabled: boolean;\n  @Input() luxRounded: boolean;\n  @Input() luxIconAlignWithLabel: boolean = false;\n\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { Component, ElementRef, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { Subscription } from 'rxjs';\nimport { LuxActionComponentBaseClass } from '../lux-action-model/lux-action-component-base.class';\n\n@Component({\n  selector: 'lux-button',\n  templateUrl: './lux-button.component.html',\n  styleUrls: ['./lux-button.component.scss']\n})\nexport class LuxButtonComponent extends LuxActionComponentBaseClass implements OnInit, OnDestroy {\n  public readonly iconSize: string = '2x';\n\n  private configSubscription: Subscription;\n\n  @Input() luxType: 'button' | 'reset' | 'submit' = 'button';\n\n  @HostBinding('class.lux-uppercase') labelUppercase: boolean;\n\n  constructor(public elementRef: ElementRef, public componentsConfigService: LuxComponentsConfigService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.configSubscription = this.componentsConfigService.config.subscribe(() => {\n      // Hintergrund: LuxLink, LuxSideNavItem und LuxMenuItem benutzen alle unter der Haube\n      // den LuxButton. Wenn diese nun als Ausnahmen für Uppercase in der Config eingetragen werden,\n      // darf eine Uppercase-Einstellung für den LuxButton diese nicht überschreiben.\n      // Deshalb prüft der LuxButton hier, ob er Teil einer dieser Komponenten ist.\n      this.detectParent();\n    });\n  }\n\n  ngOnDestroy() {\n    this.configSubscription.unsubscribe();\n  }\n\n  clicked(event: any) {\n    this.luxClicked.emit(event);\n  }\n\n  private detectParent() {\n    const className = this.elementRef.nativeElement.className;\n    let selector = 'lux-button';\n    if (className.indexOf('lux-link') > -1) {\n      selector = 'lux-link';\n    } else if (className.indexOf('lux-side-nav-item') > -1) {\n      selector = 'lux-side-nav-item';\n    } else if (className.indexOf('lux-menu-item') > -1) {\n      selector = 'lux-menu-item';\n    }\n    this.labelUppercase = this.componentsConfigService.isLabelUppercaseForSelector(selector);\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LuxActionComponentBaseClass } from '../lux-action-model/lux-action-component-base.class';\n\n@Component({\n  selector: 'lux-link',\n  templateUrl: './lux-link.component.html',\n  styleUrls: ['./lux-link.component.scss']\n})\nexport class LuxLinkComponent extends LuxActionComponentBaseClass implements OnInit, OnDestroy {\n  public readonly iconSize: string = '2x';\n\n  @Input() luxHref: string;\n  @Input() luxBlank: boolean = false;\n\n  constructor(private router: Router, public cdr: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {}\n\n  redirectToHref($event: any) {\n    this.luxClicked.emit($event);\n    if (this.luxHref) {\n      this.luxHref = this.luxHref.trim();\n      if (!this.luxHref.startsWith('http')) {\n        this.router.navigate([this.luxHref]).then(() => {});\n      } else {\n        window.open(this.luxHref, this.luxBlank ? '_blank' : '_self');\n      }\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { LuxActionComponentBaseClass } from '../../lux-action-model/lux-action-component-base.class';\n\n// @dynamic Erklärung steht in der Datei \"lux-decorators.ts\".\n@Component({\n  selector: 'lux-menu-item',\n  template: ''\n})\nexport class LuxMenuItemComponent extends LuxActionComponentBaseClass {\n  @ViewChild(TemplateRef, { static: false }) templateRef: TemplateRef<any>;\n\n  @Output() luxHiddenChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() luxHideLabelIfExtendedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() luxAlwaysVisibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  _luxAlwaysVisible: boolean = true;\n  _luxHideLabelIfExtended: boolean = false;\n  _luxHidden: boolean = false;\n\n  // Wird vom LuxMenuComponent mit dem berechneten Breitenwert belegt\n  width: number = 0;\n  // Wird vom LuxMenuComponent mit dem passenden Zustand belegt\n  extended: boolean = false;\n\n  get luxAlwaysVisible() {\n    return this._luxAlwaysVisible;\n  }\n\n  @Input() set luxAlwaysVisible(value: boolean) {\n    this._luxAlwaysVisible = value;\n\n    this.luxAlwaysVisibleChange.emit(value);\n  }\n\n  get luxHideLabelIfExtended() {\n    return this._luxHideLabelIfExtended;\n  }\n\n  @Input() set luxHideLabelIfExtended(value: boolean) {\n    this._luxHideLabelIfExtended = value;\n\n    this.luxHideLabelIfExtendedChange.emit(value);\n  }\n\n  get luxHidden() {\n    return this._luxHidden;\n  }\n\n  @Input() set luxHidden(value: boolean) {\n    this._luxHidden = value;\n\n    this.luxHiddenChange.emit(value);\n  }\n\n  constructor() {\n    super();\n  }\n\n  clicked($event: any) {\n    this.luxClicked.emit($event);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lux-menu-trigger',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxMenuTriggerComponent {\n  constructor() {}\n}\n","import {\n  AfterViewChecked,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LuxMenuItemComponent } from './lux-menu-subcomponents/lux-menu-item.component';\nimport { LuxMenuTriggerComponent } from './lux-menu-subcomponents/lux-menu-trigger.component';\n\n// @dynamic Erklärung steht in der Datei \"lux-decorators.ts\".\n@Component({\n  selector: 'lux-menu',\n  templateUrl: './lux-menu.component.html',\n  styleUrls: ['./lux-menu.component.scss']\n})\nexport class LuxMenuComponent implements AfterViewChecked, OnDestroy {\n  // Diese Werte müssen angepasst werden, sollte das Styling dieser Component entsprechend geändert worden sein\n  static readonly PADDING_PX = 16;\n  static readonly MARGIN_PX = 8;\n  static readonly FONT_PX = 14;\n  static readonly ICON_PX = 22;\n\n  // Alle verfgb. MenuItems als Array\n  private _menuItems: LuxMenuItemComponent[] = [];\n\n  // Das Canvas wird genutzt um die Breite potentieller MenuItem-Texte zu berechnen\n  private readonly canvas;\n\n  private menuItemSubstcriptions: Subscription[] = [];\n\n  hideToggle: boolean = false;\n\n  @ViewChild('defaultTrigger', { read: ElementRef, static: false }) defaultTriggerElRef: ElementRef;\n  @ViewChild('menuTrigger', { read: ElementRef, static: false }) menuTriggerElRef: ElementRef;\n  @ViewChild('menuExtendedContainer', { read: ElementRef, static: true }) menuExtendedContainer: ElementRef;\n  @ContentChildren(LuxMenuItemComponent) luxMenuItemComponents: QueryList<LuxMenuItemComponent>;\n  @ContentChild(LuxMenuTriggerComponent, { static: false }) luxMenuTriggerComponent: LuxMenuTriggerComponent;\n\n  @Output() luxMenuClosed: EventEmitter<void> = new EventEmitter<void>();\n\n  @Input() luxMenuIconName: string = 'menu';\n  @Input() luxClassName: string;\n  @Input() luxTagId: string;\n  @Input() luxToggleDisabled: boolean = false;\n\n  _luxDisplayExtended: boolean = false;\n\n  get luxDisplayExtended() {\n    return this._luxDisplayExtended;\n  }\n\n  @Input() set luxDisplayExtended(value: boolean) {\n    this._luxDisplayExtended = value;\n\n    if (this.menuTriggerElRef) {\n      this.updateExtendedMenuItems();\n    }\n  }\n\n  @Input() luxDisplayMenuLeft: boolean = true;\n  @Input() luxMaximumExtended: number = 5;\n\n  @HostListener('window:resize') windowResize() {\n    this.updateExtendedMenuItems();\n  }\n\n  get menuItems(): LuxMenuItemComponent[] {\n    return this._menuItems;\n  }\n\n  set menuItems(menuItems: LuxMenuItemComponent[]) {\n    this._menuItems = menuItems ? menuItems : [];\n\n    this.menuItems.forEach(item => {\n      this.menuItemSubstcriptions.push(\n        item.luxHiddenChange.subscribe(() => {\n          this.updateExtendedMenuItems();\n        })\n      );\n      this.menuItemSubstcriptions.push(\n        item.luxAlwaysVisibleChange.subscribe(() => {\n          this.updateExtendedMenuItems();\n        })\n      );\n      this.menuItemSubstcriptions.push(\n        item.luxHideLabelIfExtendedChange.subscribe(() => {\n          this.updateExtendedMenuItems();\n        })\n      );\n    });\n\n    this.cdr.detectChanges();\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {\n    this.canvas = document.createElement('canvas');\n  }\n\n  ngAfterViewChecked() {\n    this.luxMenuItemComponents.changes.subscribe(() => {\n      this.menuItems = this.luxMenuItemComponents.toArray();\n      this.calculateMenuItemWidths();\n    });\n\n    this.menuItems = this.luxMenuItemComponents.toArray();\n    this.calculateMenuItemWidths();\n    this.updateExtendedMenuItems();\n  }\n\n  ngOnDestroy(): void {\n    this.menuItemSubstcriptions.forEach(menuItemSubscription => {\n      menuItemSubscription.unsubscribe();\n    });\n  }\n\n  /**\n   * Wird beim Klick auf ein MenuItem aufgerufen.\n   *\n   * @param menuItem\n   * @param $event\n   */\n  menuItemClicked(menuItem: LuxMenuItemComponent, $event) {\n    menuItem.clicked($event);\n  }\n\n  /**\n   * Wird nach dem Schließen des Menus aufgerufen und emitted die Output-Property.\n   * Setzt den Fokus auf den Default-Trigger (Custom-Trigger => eigene Verantwortung).\n   */\n  onMenuClosed() {\n    this.luxMenuClosed.emit();\n    if (this.defaultTriggerElRef) {\n      (<any>this.defaultTriggerElRef.nativeElement.children.item(0)).focus();\n    }\n  }\n\n  /**\n   * Berechnet anhand der verfügbaren Breite des Containers (CSS-Class: lux-menu-extended) und der maximalen Anzahl an\n   * extended MenuItems die Anzahl an möglichen MenuItems, die außerhalb des eigentlichen Menus dargestellt werden können.\n   */\n  updateExtendedMenuItems() {\n    if (!this.luxDisplayExtended) {\n      this.hideToggle = false;\n      this.menuItems.forEach((menuItem: LuxMenuItemComponent) => {\n        menuItem.extended = false;\n      });\n      return;\n    }\n\n    const menuTriggerWidth = this.menuTriggerElRef.nativeElement.offsetWidth;\n\n    let availableWidth: number = this.menuExtendedContainer.nativeElement.offsetWidth;\n    let count: number = 0;\n\n    availableWidth -= menuTriggerWidth;\n\n    // mit condition sind hier die Zustände luxVisible = true || false gemeint\n    for (const condition of [true, false]) {\n      for (let i = this.menuItems.length - 1; i >= 0; i--) {\n        const menuItem = this.menuItems[i];\n\n        if (menuItem.luxHidden) {\n          continue;\n        }\n\n        if (menuItem.luxAlwaysVisible === condition) {\n          // Wenn es das letzte Menüitem ist, wird geprüft, ob es anstelle des\n          // Menüitemtriggers dargestellt werden kann.\n          if (i === 0 && availableWidth + menuTriggerWidth >= menuItem.width) {\n            availableWidth += menuTriggerWidth;\n          }\n\n          availableWidth -= menuItem.width;\n\n          if (availableWidth >= 0 && count < this.luxMaximumExtended) {\n            menuItem.extended = true;\n            count++;\n          } else {\n            menuItem.extended = false;\n          }\n        }\n      }\n    }\n\n    // die Anzahl der extended dargestellten Items der Gesamtzahl entspricht blenden wir den Toggle aus\n    const extendedMenuItemCount = this.menuItems.filter(\n      (item: LuxMenuItemComponent) => item.extended && !item.luxHidden\n    ).length;\n    const visibleMenuItemCount = this.menuItems.filter((item: LuxMenuItemComponent) => !item.luxHidden).length;\n    this.hideToggle = extendedMenuItemCount === visibleMenuItemCount;\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Berechnet die Breite für jedes Menuitem und speichert diese abhängig davon ob das Item immer sichtbar sein soll oder nicht\n   * in 2 verschiedenen Maps.\n   */\n  private calculateMenuItemWidths() {\n    this.menuItems.forEach((menuItem: LuxMenuItemComponent) => {\n      menuItem.extended = false;\n      menuItem.width = this.getMenuItemWidth(menuItem);\n    });\n  }\n\n  /**\n   * Gibt die berechnete Breite des MenuItems zurück.\n   * Diese setzt sich aus dem Padding (links und rechts, je 16px), dem Icon (wenn vorhanden, 15px) und der berechneten\n   * Textbreite zusammen.\n   * @param menuItem\n   */\n  private getMenuItemWidth(menuItem: LuxMenuItemComponent): number {\n    if (!menuItem) {\n      return 0;\n    }\n\n    return (\n      LuxMenuComponent.PADDING_PX +\n      (menuItem.luxIconName ? LuxMenuComponent.ICON_PX : 0) +\n      (!menuItem.luxHideLabelIfExtended ? this.getTextWidth(menuItem.luxLabel) : 0) +\n      LuxMenuComponent.MARGIN_PX\n    );\n  }\n\n  /**\n   * Berechnet mithilfe eines Canvas-Objekts die Breite eines einzelnen Textes\n   * @param text\n   */\n  private getTextWidth(text): number {\n    if (!text) {\n      return 0;\n    }\n\n    const canvas = this.canvas;\n    const context = canvas.getContext('2d');\n    context.font = `${LuxMenuComponent.FONT_PX}px sans-serif`;\n    const metrics = context.measureText(text);\n\n    // zusätzlich nutzen wir hier einen Standard-Offset von 20px\n    return metrics.width + 20;\n  }\n\n  hasVisibleMenuItems(): boolean {\n    let hasVisibleMenuItems = false;\n\n    for (let i = 0; i < this.menuItems.length; i++) {\n      const element = this.menuItems[i];\n\n      if (!element.luxHidden && !element.extended) {\n        hasVisibleMenuItems = true;\n        break;\n      }\n    }\n\n    return hasVisibleMenuItems;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatMenuModule } from '@angular/material';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxButtonComponent } from './lux-button/lux-button.component';\nimport { LuxLinkComponent } from './lux-link/lux-link.component';\nimport { LuxMenuItemComponent } from './lux-menu/lux-menu-subcomponents/lux-menu-item.component';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxMenuComponent } from './lux-menu/lux-menu.component';\nimport { LuxMenuTriggerComponent } from './lux-menu/lux-menu-subcomponents/lux-menu-trigger.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LuxIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    LuxDirectivesModule,\n    FlexLayoutModule,\n    LuxComponentsConfigModule\n  ],\n  declarations: [LuxButtonComponent, LuxMenuItemComponent, LuxLinkComponent, LuxMenuComponent, LuxMenuTriggerComponent],\n  exports: [LuxButtonComponent, LuxLinkComponent, LuxMenuComponent, LuxMenuItemComponent, LuxMenuTriggerComponent],\n  entryComponents: [LuxButtonComponent]\n})\nexport class LuxActionModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nexport const day = 'Tagen',\n  week = 'Wochen',\n  month = 'Monaten',\n  year = 'Jahren';\nexport const today = 'Heute',\n  yesterday = 'Gestern',\n  tomorrow = 'Morgen';\nexport const prefixFuture = 'in',\n  prefixPast = 'vor';\n\nexport const MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nexport const timeDeltas = [\n  { name: year, days: 672, dayUnit: 336 },\n  { name: month, days: 56, dayUnit: 28 },\n  { name: week, days: 14, dayUnit: 7 },\n  { name: day, days: 2, dayUnit: 1 }\n];\n\nexport const timeDeltasRelative = [\n  { name: tomorrow, days: 1 },\n  { name: yesterday, days: -1 },\n  { name: today, days: 0 }\n];\n\n@Pipe({\n  name: 'luxRelativeTimestamp'\n})\nexport class LuxRelativeTimestampPipe implements PipeTransform {\n  transform(timestamp: number, defaultText: string = '', prefix?: string): string {\n    if (!timestamp) {\n      return defaultText;\n    }\n\n    const now = new Date();\n    const then = new Date(timestamp);\n\n    const delta = this.calcDiff(now, then);\n    let timeName = null;\n\n    for (const timeDelta of timeDeltas) {\n      const tempDelta = delta < 0 ? delta * -1 : delta;\n\n      if (tempDelta >= timeDelta.days) {\n        if (!prefix) {\n          prefix = delta < 0 ? prefixPast : prefixFuture;\n        }\n\n        let timeUnits = timeDelta.name === day ? tempDelta : Math.floor(tempDelta / timeDelta.dayUnit);\n        timeUnits *= timeUnits < 0 ? -1 : 1;\n        timeName = `${prefix} ${timeUnits} ${timeDelta.name}`;\n        break;\n      }\n    }\n\n    if (timeName === null) {\n      for (const timeDelta of timeDeltasRelative) {\n        if (delta === timeDelta.days) {\n          timeName = timeDelta.name;\n          break;\n        }\n      }\n    }\n    return timeName;\n  }\n\n  private calcDiff(a, b) {\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n    return Math.floor((utc2 - utc1) / MS_PER_DAY);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'luxRenderProperty'\n})\nexport class LuxRenderPropertyPipe implements PipeTransform {\n  transform(value: any, renderPropertyName: string): string {\n    if (!renderPropertyName) {\n      return value;\n    }\n\n    if (!value || !value[renderPropertyName]) {\n      return '';\n    }\n\n    return value[renderPropertyName];\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { LuxUtil } from '../../lux-util/lux-util';\n\n@Pipe({\n  name: 'luxPropertyFromObject'\n})\nexport class LuxPropertyFromObjectPipe implements PipeTransform {\n  /**\n   * Ruft die Funktion aus Util auf, um ein Property aus einem Objekt (auch mit Unterpfaden) auszulesen.\n   */\n  transform(object: any, propertyNamePath: string): any {\n    return LuxUtil.readPropertyValueFromObject(object, propertyNamePath);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'luxAlphabeticallySorted'\n})\nexport class LuxAlphabeticallySortedPipe implements PipeTransform {\n  transform(array: any[]): any {\n    if (!array) {\n      return [];\n    }\n    return this.sortAlphabetically(array);\n  }\n\n  private sortAlphabetically(array) {\n    return array.slice().sort((a, b) => {\n      const valueA = a.label || '';\n      const valueB = b.label || '';\n\n      const stringA = (valueA as string).toLocaleLowerCase();\n      const stringB = (valueB as string).toLocaleLowerCase();\n      return stringA.localeCompare(stringB);\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LuxRelativeTimestampPipe } from './lux-relative-timestamp/lux-relative-timestamp.pipe';\nimport { LuxRenderPropertyPipe } from './lux-render-property/lux-render-property.pipe';\nimport { LuxPropertyFromObjectPipe } from './lux-property-from-object/lux-property-from-object.pipe';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxAlphabeticallySortedPipe } from './lux-alphabetically-sorted/lux-alphabetically-sorted.pipe';\n\n@NgModule({\n  imports: [CommonModule, LuxComponentsConfigModule],\n  declarations: [\n    LuxRelativeTimestampPipe,\n    LuxRenderPropertyPipe,\n    LuxPropertyFromObjectPipe,\n    LuxAlphabeticallySortedPipe\n  ],\n  exports: [LuxRelativeTimestampPipe, LuxRenderPropertyPipe, LuxPropertyFromObjectPipe, LuxAlphabeticallySortedPipe]\n})\nexport class LuxPipesModule {}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  generateLuxTagIds: true\n};\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { LuxComponentsConfigService } from '../lux-components-config/lux-components-config.service';\nimport { LuxComponentsConfigParameters } from '../lux-components-config/lux-components-config-parameters.interface';\n\nexport const noop = (): any => undefined;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LuxConsoleService {\n  static config: LuxComponentsConfigParameters = {};\n\n  constructor(componentsConfigService: LuxComponentsConfigService) {\n    // Aus der Konfiguration die Info erhalten, ob Logs angezeigt werden sollen\n    componentsConfigService.config.subscribe((newConfig: LuxComponentsConfigParameters) => {\n      LuxConsoleService.config = newConfig;\n    });\n  }\n\n  /* Nicht-statische Log-Methoden, sie zeigen auch die Quelle des Logs an! */\n\n  get log() {\n    if (LuxConsoleService.isDebugMode()) {\n      return console.log.bind.call(console.log, console, LuxConsoleService.logDate() + ' -');\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (LuxConsoleService.isDebugMode()) {\n      return console.warn.bind.call(console.warn, console, LuxConsoleService.logDate() + ' -');\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (LuxConsoleService.isDebugMode()) {\n      return console.error.bind.call(console.error, console, LuxConsoleService.logDate() + ' -');\n    } else {\n      return noop;\n    }\n  }\n\n  get group() {\n    if (LuxConsoleService.isDebugMode()) {\n      return console.group.bind.call(console.group, console);\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (LuxConsoleService.isDebugMode()) {\n      return console.info.bind.call(console.info, console);\n    } else {\n      return noop;\n    }\n  }\n\n  get groupEnd() {\n    if (LuxConsoleService.isDebugMode()) {\n      return console.groupEnd.bind.call(console.groupEnd, console);\n    } else {\n      return noop;\n    }\n  }\n\n  /* Statische Log-Methoden, sie zeigen nicht die Quelle des Logs an! */\n\n  static LOG(...args) {\n    if (!LuxConsoleService.isDebugMode()) {\n      return;\n    }\n    if (args.length === 1 && args[0] !== null && typeof args[0] === 'object') {\n      console.log(LuxConsoleService.logDate() + ' -', args[0]);\n    } else if (args.length === 1) {\n      console.log(LuxConsoleService.logDate() + ' -', args[0]);\n    } else {\n      console.log(LuxConsoleService.logDate() + ' - ' + this.getLogValue(args));\n    }\n  }\n\n  static WARN(...args) {\n    if (!LuxConsoleService.isDebugMode()) {\n      return;\n    }\n    if (args.length === 1 && args[0] !== null && typeof args[0] === 'object') {\n      console.warn(LuxConsoleService.logDate() + ' -', args[0]);\n    } else if (args.length === 1) {\n      console.warn(LuxConsoleService.logDate() + ' -', args[0]);\n    } else {\n      console.warn(LuxConsoleService.logDate() + ' - ' + this.getLogValue(args));\n    }\n  }\n\n  static ERROR(...args) {\n    if (!LuxConsoleService.isDebugMode()) {\n      return;\n    }\n    if (args.length === 1 && args[0] !== null && typeof args[0] === 'object') {\n      console.error(LuxConsoleService.logDate() + ' -', args[0]);\n    } else if (args.length === 1) {\n      console.error(LuxConsoleService.logDate() + ' -', args[0]);\n    } else {\n      console.error(LuxConsoleService.logDate() + ' - ' + this.getLogValue(args));\n    }\n  }\n\n  private static logDate() {\n    const now = new Date();\n\n    const day = LuxConsoleService.checkTime(now.getDate());\n    const month = LuxConsoleService.checkTime(now.getMonth() + 1);\n    const year = LuxConsoleService.checkTime(now.getFullYear());\n    const hours = LuxConsoleService.checkTime(now.getHours());\n    const minutes = LuxConsoleService.checkTime(now.getMinutes());\n    const seconds = LuxConsoleService.checkTime(now.getSeconds());\n\n    return day + '.' + month + '.' + year + ' ' + hours + ':' + minutes + ':' + seconds;\n  }\n\n  private static getLogValue(...args) {\n    const logValue = [];\n\n    args.forEach(arg => {\n      if (arg !== null && typeof arg === 'object') {\n        arg = JSON.stringify(arg);\n      }\n      logValue.push(arg);\n    });\n\n    return logValue;\n  }\n\n  private static isDebugMode() {\n    return LuxConsoleService.config ? LuxConsoleService.config.displayLuxConsoleLogs : environment.production;\n  }\n\n  private static checkTime(timeUnit: number) {\n    return timeUnit < 10 ? '0' + timeUnit : timeUnit;\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { LuxConsoleService } from './lux-console.service';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\n\n@Injectable()\nexport class LuxMediaQueryObserverService implements OnDestroy {\n  private _mediaQueryChanged: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private breakpointObserver: BreakpointObserver, private logger: LuxConsoleService) {\n    this.addQuerySubscription(Breakpoints.XSmall, 'xs');\n    this.addQuerySubscription(Breakpoints.Small, 'sm');\n    this.addQuerySubscription(Breakpoints.Medium, 'md');\n    this.addQuerySubscription(Breakpoints.Large, 'lg');\n    this.addQuerySubscription(Breakpoints.XLarge, 'xl');\n  }\n\n  public get activeMediaQuery() {\n    return this._mediaQueryChanged.getValue();\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((subscription: Subscription) => subscription.unsubscribe());\n    this._mediaQueryChanged.complete();\n  }\n\n  public getMediaQueryChangedAsObservable(): Observable<string> {\n    return this._mediaQueryChanged.asObservable();\n  }\n\n  public isXS(): boolean {\n    return this.activeMediaQuery === 'xs';\n  }\n\n  public isSM(): boolean {\n    return this.activeMediaQuery === 'sm';\n  }\n\n  public isMD(): boolean {\n    return this.activeMediaQuery === 'md';\n  }\n\n  public isLG(): boolean {\n    return this.activeMediaQuery === 'lg';\n  }\n\n  public isXL(): boolean {\n    return this.activeMediaQuery === 'xl';\n  }\n\n  private addQuerySubscription(breakpoint: any, breakpointString: string) {\n    this._subscriptions.push(\n      this.breakpointObserver.observe([breakpoint]).subscribe((state: BreakpointState) => {\n        if (state.matches) {\n          this._mediaQueryChanged.next(breakpointString);\n          this.logger.log(`MediaQuery [${this.activeMediaQuery}] activated.`);\n        }\n      })\n    );\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatAccordion } from '@angular/material';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'lux-accordion',\n  templateUrl: './lux-accordion.component.html'\n})\nexport class LuxAccordionComponent implements OnInit, OnDestroy {\n  changed$ = new Subject();\n\n  @Input() luxMode: 'default' | 'flat' = 'default';\n  @Input() luxMulti: boolean = false;\n\n  _luxDisabled: boolean = false;\n  _luxHideToggle: boolean = false;\n  _luxExpandedHeaderHeight: string;\n  _luxCollapsedHeaderHeight: string;\n\n  @Input()\n  get luxDisabled() {\n    return this._luxDisabled;\n  }\n\n  set luxDisabled(disabled: boolean) {\n    this._luxDisabled = disabled;\n\n    this.changed$.next('luxDisabled');\n  }\n\n  @Input()\n  get luxHideToggle() {\n    return this._luxHideToggle;\n  }\n\n  set luxHideToggle(hideToggle: boolean) {\n    this._luxHideToggle = hideToggle;\n\n    this.changed$.next('luxHideToggle');\n  }\n\n  @Input()\n  get luxExpandedHeaderHeight() {\n    return this._luxExpandedHeaderHeight;\n  }\n\n  set luxExpandedHeaderHeight(height: string) {\n    this._luxExpandedHeaderHeight = height;\n\n    this.changed$.next('luxExpandedHeaderHeight');\n  }\n\n  @Input()\n  get luxCollapsedHeaderHeight() {\n    return this._luxCollapsedHeaderHeight;\n  }\n\n  set luxCollapsedHeaderHeight(height: string) {\n    this._luxCollapsedHeaderHeight = height;\n\n    this.changed$.next('luxCollapsedHeaderHeight');\n  }\n\n  @ViewChild(MatAccordion, { static: true }) matAccordion: MatAccordion;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    this.changed$.complete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { LuxAppFooterButtonInfo } from './lux-app-footer-button-info';\n\n@Injectable()\nexport class LuxAppFooterButtonService {\n  private _buttonInfos: LuxAppFooterButtonInfo[] = [];\n\n  get buttonInfos(): LuxAppFooterButtonInfo[] {\n    return this._buttonInfos;\n  }\n\n  set buttonInfos(buttonInfos: LuxAppFooterButtonInfo[]) {\n    this._buttonInfos = buttonInfos ? buttonInfos : [];\n  }\n\n  pushButtonInfos(...value: LuxAppFooterButtonInfo[]) {\n    if (!this.buttonInfos) {\n      this._buttonInfos = [];\n    }\n    this._buttonInfos.push(...value);\n  }\n\n  getButtonInfoByCMD(cmd: string) {\n    return this.buttonInfos.find((buttonInfo: LuxAppFooterButtonInfo) => buttonInfo.cmd === cmd);\n  }\n\n  removeButtonInfoAtIndex(i: number) {\n    this._buttonInfos = this._buttonInfos.filter((info, index) => index !== i);\n  }\n\n  removeButtonInfoByCmd(cmd: string) {\n    this._buttonInfos = this._buttonInfos.filter(info => info.cmd !== cmd);\n  }\n\n  clearButtonInfos() {\n    this._buttonInfos = [];\n  }\n\n  sendButtonCommand(buttonCommand: string) {\n    // Den angeklickten Button erhalten und dessen onClick-Funktion aufrufen.\n    // Als Parameter den Button selbst mitgeben (falls dieser bearbeitet werden muss, z.B.).\n    const clickedButton = this.getButtonInfoByCMD(buttonCommand);\n    if (clickedButton) {\n      clickedButton.onClick(clickedButton);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LuxAppFooterLinkInfo } from './lux-app-footer-link-info';\n\n@Injectable()\nexport class LuxAppFooterLinkService {\n  private _linkInfos: LuxAppFooterLinkInfo[] = [];\n\n  get linkInfos(): LuxAppFooterLinkInfo[] {\n    return this._linkInfos;\n  }\n\n  set linkInfos(value: LuxAppFooterLinkInfo[]) {\n    this._linkInfos = value ? value : [];\n  }\n\n  pushLinkInfos(...value: LuxAppFooterLinkInfo[]) {\n    if (!this._linkInfos) {\n      this._linkInfos = [];\n    }\n    this._linkInfos.push(...value);\n  }\n\n  removeLinkInfoAtIndex(i: number) {\n    this._linkInfos = this._linkInfos.filter((info, index) => index !== i);\n  }\n\n  clearLinkInfos() {\n    this._linkInfos = [];\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\nimport { LuxAppFooterButtonInfo } from './lux-app-footer-button-info';\nimport { LuxAppFooterButtonService } from './lux-app-footer-button.service';\nimport { LuxAppFooterLinkInfo } from './lux-app-footer-link-info';\nimport { LuxAppFooterLinkService } from './lux-app-footer-link.service';\n\n@Component({\n  selector: 'lux-app-footer',\n  templateUrl: './lux-app-footer.component.html',\n  styleUrls: ['./lux-app-footer.component.scss']\n})\nexport class LuxAppFooterComponent {\n  @Input() luxVersion: string;\n\n  constructor(\n    public buttonService: LuxAppFooterButtonService,\n    private linkService: LuxAppFooterLinkService,\n    private mediaObserver: LuxMediaQueryObserverService\n  ) {}\n\n  isMediumOrLargerDevice() {\n    return (\n      this.mediaObserver.isSM() || this.mediaObserver.isMD() || this.mediaObserver.isLG() || this.mediaObserver.isXL()\n    );\n  }\n\n  getButtons(): LuxAppFooterButtonInfo[] {\n    return this.buttonService.buttonInfos;\n  }\n\n  sendButtonCommand(cmd: string) {\n    this.buttonService.sendButtonCommand(cmd);\n  }\n\n  getLinks(): LuxAppFooterLinkInfo[] {\n    return this.linkService.linkInfos;\n  }\n}\n","import { Component, ContentChildren, OnInit } from '@angular/core';\nimport { LuxMenuItemComponent } from '../../../../lux-action/lux-menu/lux-menu-subcomponents/lux-menu-item.component';\n\n@Component({\n  selector: 'lux-app-header-right-nav',\n  template: ''\n})\nexport class LuxAppHeaderRightNavComponent implements OnInit {\n  @ContentChildren(LuxMenuItemComponent) menuItemComponents;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\n\n@Injectable()\nexport class LuxMasterDetailMobileHelperService {\n  private _mdRegistered$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private _masterCollapsed$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n  private _hasValue$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(private mediaObserver: LuxMediaQueryObserverService) {\n    this.mediaObserver.getMediaQueryChangedAsObservable().subscribe(() => {\n      setTimeout(() => {\n        this.handleMasterCollapseState();\n      });\n    });\n  }\n\n  public get masterCollapsed$(): boolean {\n    return this._masterCollapsed$.getValue();\n  }\n\n  public get masterCollapsedObservable(): Observable<boolean> {\n    return this._masterCollapsed$.asObservable();\n  }\n\n  public get isRegisteredObservable(): Observable<boolean> {\n    return this._mdRegistered$.asObservable();\n  }\n\n  public get isRegistered(): boolean {\n    return this._mdRegistered$.getValue();\n  }\n\n  public get hasValueObservable(): Observable<boolean> {\n    return this._hasValue$.asObservable();\n  }\n\n  public get hasValue(): boolean {\n    return this._hasValue$.getValue();\n  }\n\n  public set hasValue(hasValue: boolean) {\n    this._hasValue$.next(hasValue);\n  }\n\n  /**\n   * Sendet ueber den masterCollapsed$-Subject ein Event mit dem Wert true.\n   * Kennzeichnet das der Master geoeffnet werden soll.\n   */\n  public openMaster(): void {\n    this._masterCollapsed$.next(true);\n  }\n\n  /**\n   * Sendet ueber den masterCollapsed$-Subject ein Event mit dem Wert false.\n   * Kennzeichnet das der Master geschlossen werden soll.\n   */\n  public closeMaster(): void {\n    this._masterCollapsed$.next(false);\n  }\n\n  /**\n   * Gibt zurueck ob eine Media-Query fuer XS oder SM aktuell aktiv ist.\n   * @returns boolean\n   */\n  public isMobile(): boolean {\n    return this.mediaObserver.isXS() || this.mediaObserver.isSM();\n  }\n\n  /**\n   * Meldet eine Master-Detail-Komponente fuer diesen Service an.\n   */\n  public register() {\n    if (!this.isRegistered) {\n      this._mdRegistered$.next(true);\n    } else {\n      console.error(\n        'Fehler: Ein Master-Detail-Helper-Service kann nur eine registrierte Master-Detail-Komponente haben.'\n      );\n    }\n  }\n\n  /**\n   * Meldet die aktuelle Master-Detail-Komponente dieses Services ab.\n   */\n  public unregister() {\n    if (this.isRegistered) {\n      this._mdRegistered$.next(false);\n    }\n  }\n\n  /**\n   * Sendet ein Event um den Master zu oeffnen bzw. zu schliessen\n   * wenn sich der Zustand der Media-Query geaendert hat.\n   */\n  private handleMasterCollapseState(): void {\n    setTimeout(() => {\n      if (this.hasValue && (this.mediaObserver.isXS() || this.mediaObserver.isSM())) {\n        this.closeMaster();\n      } else {\n        this.openMaster();\n      }\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\n\n@Component({\n  selector: 'lux-side-nav-item',\n  templateUrl: './lux-side-nav-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LuxSideNavItemComponent implements AfterViewInit, OnChanges {\n  @ViewChild(TemplateRef, { static: false }) templateRef: TemplateRef<any>;\n\n  @Input() luxLabel: string;\n  @Input() luxDisabled: boolean = false;\n  @Input() luxTagId: string;\n  @Input() luxSelected: boolean = false;\n  @Input() luxCloseOnClick: boolean = true;\n  @Input() luxIconName: string;\n  @Input() luxExpandable: boolean = false;\n  @Input() luxExpanded: boolean = true;\n\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(LuxSideNavItemComponent) sideNavItems: QueryList<LuxSideNavItemComponent>;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnChanges() {\n    // Bei Input Änderungen die CD anstossen\n    this.cdr.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    // Nach Abschluss der Initialisierung die CD anstossen\n    this.cdr.detectChanges();\n  }\n\n  onClick($event) {\n    this.luxClicked.emit($event);\n    if (this.luxExpandable) {\n      this.luxExpanded = !this.luxExpanded;\n    }\n  }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\n\nconst ANIMATION_DURATION = '300ms';\n\n/**\n * Animation für das Herein-Sliden der Seitennavigation von Links in den Contentbereich hinein und wieder zurück.\n */\nexport const sideNavAnimation = trigger('expandHide', [\n  state(\n    'void',\n    style({\n      left: '-{{ width }}'\n    }),\n    { params: { width: '100%' } }\n  ),\n  state(\n    'expanded',\n    style({\n      left: '0'\n    }),\n    { params: { width: '100%' } }\n  ),\n  transition('void => expanded', [animate(ANIMATION_DURATION)]),\n  transition('expanded => void', [animate(ANIMATION_DURATION)])\n]);\n\n/**\n * Animation um das Overlay für die Sidebar ein- und auszublenden.\n */\nexport const sideNavOverlayAnimation = trigger('expandHideOverlay', [\n  state(\n    'void',\n    style({\n      opacity: '0'\n    })\n  ),\n  state(\n    'expanded',\n    style({\n      opacity: '1'\n    })\n  ),\n  transition('void => expanded', [animate(ANIMATION_DURATION)]),\n  transition('expanded => void', [animate(ANIMATION_DURATION)])\n]);\n","import {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport { LuxSideNavItemComponent } from './lux-side-nav-subcomponents/lux-side-nav-item.component';\nimport { Subscription } from 'rxjs';\nimport { sideNavAnimation, sideNavOverlayAnimation } from './lux-side-nav-model/lux-side-nav-animations';\n\n@Component({\n  selector: 'lux-side-nav',\n  templateUrl: './lux-side-nav.component.html',\n  styleUrls: ['./lux-side-nav.component.scss'],\n  animations: [sideNavAnimation, sideNavOverlayAnimation]\n})\nexport class LuxSideNavComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() luxDashboardLink: string;\n  @Input() luxDashboardLinkTitle: string = 'LUX Dashboard';\n  @Input() luxOpenLinkBlank: boolean;\n\n  @ContentChildren(LuxSideNavItemComponent, { descendants: true }) sideNavItems: QueryList<LuxSideNavItemComponent>;\n  @ContentChildren(LuxSideNavItemComponent, { descendants: false }) directSideNavItems: QueryList<\n    LuxSideNavItemComponent\n  >;\n\n  @ViewChild('sideNav', { read: ElementRef, static: true }) sideNavEl: ElementRef;\n  @ViewChild('sideNavHeader', { read: ElementRef, static: true }) sideNavHeaderEl: ElementRef;\n  @ViewChild('sideNavFooter', { read: ElementRef, static: true }) sideNavFooterEl: ElementRef;\n\n  focusElement: any;\n  sideNavExpanded: boolean = false;\n  height: number;\n  width: number;\n  visibility = 'hidden';\n\n  private itemClickSubscriptions: Subscription[] = [];\n\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    if (event.key === 'Escape' && this.sideNavExpanded) {\n      // Escape soll nur das Menü schließen, wenn es auch geöffnet ist.\n      this.toggle();\n    }\n  }\n\n  @HostListener('window:resize') windowResize() {\n    this.calculateWidthHeight();\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.sideNavItems.changes.subscribe(() => this.updateItemClickListeners());\n    this.updateItemClickListeners();\n    this.calculateWidthHeight();\n  }\n\n  ngOnDestroy() {\n    this.itemClickSubscriptions.forEach((subscription: Subscription) => subscription.unsubscribe());\n  }\n\n  toggle() {\n    this.sideNavExpanded = !this.sideNavExpanded;\n\n    if (this.sideNavExpanded) {\n      this.visibility = 'visible';\n      this.calculateWidthHeight();\n\n      // Hier wird sich der Menübutton zwischengespeichert\n      this.focusElement = document.activeElement;\n    } else {\n      setTimeout(() => {\n        // Wenn das SideNavMenü geschlossen wird, wird wieder der SideNavMenübutton fokusiert.\n        if (this.focusElement) {\n          this.focusElement.focus();\n        }\n      });\n    }\n  }\n\n  /**\n   * Wenn die Animation beendet ist, wird das Menü ausgeblendet, damit der Fokus weiter zum Inhalt springt und nicht\n   * durch das versteckte Menü wandert. Das ist auch für Screenreader nötig.\n   */\n  updateSideNavAfterAnimationIsFinished() {\n    this.visibility = this.sideNavExpanded ? 'visible' : 'hidden';\n\n    // Den Fokus auf den ersten Button setzen\n    if (this.sideNavExpanded && this.sideNavEl && this.sideNavEl.nativeElement) {\n      setTimeout(() => {\n        const firstButton = (<HTMLElement>this.sideNavEl.nativeElement).querySelector('button');\n        if (firstButton) {\n          firstButton.focus();\n        }\n      });\n    }\n  }\n\n  open() {\n    this.sideNavExpanded = true;\n    this.calculateWidthHeight();\n  }\n\n  close() {\n    this.sideNavExpanded = false;\n  }\n\n  /**\n   * Berechnet die Höhe für den Container der SideNavMenuItems.\n   * Dafür wird die Gesamthöhe minus der Höhe des Headers und des Footers sowie eine feste Höhe\n   * für den App-Header gerechnet.\n   */\n  private calculateWidthHeight() {\n    setTimeout(() => {\n      const totalHeight = this.sideNavEl.nativeElement.offsetHeight;\n      const headerHeight = this.sideNavHeaderEl.nativeElement.offsetHeight;\n      const footerHeight = this.sideNavFooterEl.nativeElement.offsetHeight;\n      this.height = totalHeight - headerHeight - footerHeight;\n      this.width = this.sideNavEl.nativeElement.offsetWidth + 20 /* Sicherheitsaufschlag (Schatten, Scrollbar,...) */;\n    });\n  }\n\n  /**\n   * Hängt sich an die Klick-Events der einzelnen SideNavItems, um so, je nach Einstellung der Items,\n   * die SideNav zu schließen.\n   */\n  private updateItemClickListeners() {\n    this.itemClickSubscriptions.forEach((subscription: Subscription) => subscription.unsubscribe());\n    this.sideNavItems.forEach((item: LuxSideNavItemComponent) => {\n      this.itemClickSubscriptions.push(\n        item.luxClicked.subscribe(() => {\n          if (item.luxCloseOnClick) {\n            this.close();\n          }\n        })\n      );\n    });\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'lux-app-header-action-nav',\n  templateUrl: './lux-app-header-action-nav.component.html',\n  styleUrls: ['./lux-app-header-action-nav.component.scss']\n})\nexport class LuxAppHeaderActionNavComponent implements OnInit {\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","// tslint:disable:max-line-length\nimport { Component, ContentChild, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxMasterDetailMobileHelperService } from '../lux-master-detail/lux-master-detail-mobile-helper.service';\nimport { LuxSideNavComponent } from './lux-app-header-subcomponents/lux-side-nav/lux-side-nav.component';\nimport { LuxAppHeaderRightNavComponent } from './lux-app-header-subcomponents/lux-app-header-right-nav/lux-app-header-right-nav.component';\nimport { LuxAppHeaderActionNavComponent } from './lux-app-header-subcomponents/lux-app-header-action-nav/lux-app-header-action-nav.component';\n\n@Component({\n  selector: 'lux-app-header',\n  templateUrl: './lux-app-header.component.html',\n  styleUrls: ['./lux-app-header.component.scss']\n})\nexport class LuxAppHeaderComponent implements OnInit, OnChanges {\n  @Input() luxUserName: string;\n  @Input() luxAppTitle: string;\n  @Input() luxAppTitleShort: string;\n  @Input() luxIconName: string;\n\n  isMasterOpen: boolean;\n  isMasterDetailAvailable: boolean;\n  masterHasValue: boolean;\n\n  userNameShort: string;\n\n  @ViewChild('customTrigger', { read: ElementRef, static: false }) customTrigger: ElementRef;\n\n  @ContentChild(LuxAppHeaderActionNavComponent, { static: false }) actionNav: LuxAppHeaderActionNavComponent;\n  @ContentChild(LuxAppHeaderRightNavComponent, { static: false }) rightNav: LuxAppHeaderRightNavComponent;\n  @ContentChild(LuxSideNavComponent, { static: false }) sideNav: LuxSideNavComponent;\n\n  constructor(public mobileHelperService: LuxMasterDetailMobileHelperService, private logger: LuxConsoleService) {\n    // Wenn die Master-Ansicht der MD-Komponente aendert, muss ein anderer Navigations-Button angezeigt werden\n    this.mobileHelperService.masterCollapsedObservable.subscribe((isOpen: boolean) => {\n      this.isMasterOpen = isOpen;\n    });\n\n    // Pruefen ob ein Master-Detail aktuell vorhanden ist\n    this.mobileHelperService.isRegisteredObservable.subscribe((isRegistered: boolean) => {\n      this.isMasterDetailAvailable = isRegistered;\n    });\n\n    // Pruefen ob das Master-Detail einen Wert hat\n    this.mobileHelperService.hasValueObservable.subscribe((hasValue: boolean) => {\n      this.masterHasValue = hasValue;\n    });\n  }\n\n  ngOnInit() {}\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges.luxUserName) {\n      this.userNameShort = this.generateUserNameShort();\n    }\n\n    if (!this.luxAppTitleShort || this.luxAppTitleShort.length === 0) {\n      this.logger.warn('Achtung, der Applikations-Header hat keinen Titel für die mobile Ansicht!');\n    }\n  }\n\n  showMasterClick() {\n    this.mobileHelperService.openMaster();\n  }\n\n  isMasterToggleVisible() {\n    return (\n      this.isMasterDetailAvailable && this.mobileHelperService.isMobile() && !this.isMasterOpen && this.masterHasValue\n    );\n  }\n\n  onMenuClosed() {\n    this.customTrigger.nativeElement.focus();\n  }\n\n  private generateUserNameShort(): string {\n    let short = this.luxUserName ? this.luxUserName.trim() : '';\n\n    if (short.length > 0) {\n      short = short.charAt(0);\n    }\n    return short.toUpperCase();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-card-actions',\n  template: '<div fxLayout=\"row\" class=\"lux-flex-layout-gap-10\"><ng-content></ng-content></div>'\n})\nexport class LuxCardActionsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-card-content-expanded',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxCardContentExpandedComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-card-content',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxCardContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-card-info',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxCardInfoComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { animate, style, transition, trigger } from '@angular/animations';\n\n/**\n * Animation für das Aus- und Einklappen des erweiterten Karteninhalts.\n */\nexport const expansionAnim = trigger('expansionAnim', [\n  transition(\n    'void => expand',\n    [\n      style({ height: '0', opacity: 0 }),\n      animate(\n        '{{ duration }}ms',\n        style({\n          height: '*',\n          opacity: 1\n        })\n      )\n    ],\n    { params: { duration: '300ms', startHeight: '0' } }\n  ),\n\n  transition(\n    'expand => void',\n    [\n      style({ height: '*', opacity: 1 }),\n      animate(\n        '{{ duration }}ms',\n        style({\n          height: '0',\n          opacity: 0\n        })\n      )\n    ],\n    { params: { duration: '300ms', startHeight: '0' } }\n  )\n]);\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LuxComponentsConfigParameters } from '../../lux-components-config/lux-components-config-parameters.interface';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { LuxIconComponent } from '../../lux-icon/lux-icon/lux-icon.component';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { expansionAnim } from './lux-card-model/lux-card-animations';\nimport { LuxCardActionsComponent } from './lux-card-subcomponents/lux-card-actions.component';\nimport { LuxCardContentExpandedComponent } from './lux-card-subcomponents/lux-card-content-expanded.component';\nimport { LuxCardContentComponent } from './lux-card-subcomponents/lux-card-content.component';\nimport { LuxCardInfoComponent } from './lux-card-subcomponents/lux-card-info.component';\n\n@Component({\n  selector: 'lux-card',\n  templateUrl: './lux-card.component.html',\n  styleUrls: ['./lux-card.component.scss'],\n  animations: [expansionAnim]\n})\nexport class LuxCardComponent implements OnInit, AfterViewInit, OnDestroy {\n  private configSubscription: Subscription;\n\n  @Input() luxTitle: string;\n  @Input() luxSubTitle: string;\n  @Input() luxDisabled: boolean;\n  @Input() luxTagId: string;\n  @Input() luxTitleLineBreak: boolean = true;\n  @Input() luxExpanded: boolean = false;\n  @Output() luxExpandedChange: EventEmitter<boolean> = new EventEmitter();\n  @Output() luxAfterExpansion: EventEmitter<void> = new EventEmitter();\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(LuxIconComponent, { descendants: false }) iconComponents: QueryList<LuxIconComponent>;\n  @ContentChild(LuxCardActionsComponent, { static: false }) actionsComponent: LuxCardActionsComponent;\n  @ContentChild(LuxCardInfoComponent, { static: false }) infoComponent: LuxCardInfoComponent;\n  @ContentChild(LuxCardContentExpandedComponent, { static: false })\n  contentExpandedComponent: LuxCardContentExpandedComponent;\n  @ContentChild(LuxCardContentComponent, { static: false }) contentComponent: LuxCardContentComponent;\n\n  hasCardAction: boolean;\n  animationDisabled: boolean = true;\n\n  constructor(private componentsConfigService: LuxComponentsConfigService, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    if (!this.luxTagId) {\n      this.luxTagId = this.luxTitle;\n    }\n\n    if (this.luxClicked.observers && this.luxClicked.observers.length > 0) {\n      this.hasCardAction = true;\n    }\n  }\n\n  ngAfterViewInit() {\n    // Über die Konfiguration abfragen, ob die Animationen für Cards deaktiviert sind.\n    this.configSubscription = this.componentsConfigService.config.subscribe((config: LuxComponentsConfigParameters) => {\n      this.animationDisabled = !config.cardExpansionAnimationActive;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnDestroy() {\n    this.configSubscription.unsubscribe();\n  }\n\n  get showButtons() {\n    return !!this.actionsComponent;\n  }\n\n  get showIcon() {\n    return this.iconComponents && this.iconComponents.length === 1;\n  }\n\n  get showExpandedToggle() {\n    return !!this.contentExpandedComponent;\n  }\n\n  changeContentExpansion(event: any) {\n    LuxUtil.stopEventPropagation(event);\n\n    this.luxExpanded = !this.luxExpanded;\n    this.luxExpandedChange.emit(this.luxExpanded);\n  }\n\n  clicked() {\n    if (!this.luxDisabled && !this.showButtons) {\n      this.luxClicked.emit(null);\n    }\n  }\n\n  /**\n   * setzt das korrekte Alignment der Titelzeile. Ist der Titel im Zweifel mehrzeilig, so wird das Icon\n   * im Titel nach oben ausgerichtet, damit es nicht mittig nebem dem Titel schwebt. Ist der Titel aber\n   * einzeilig, so wird das Icon vertikal zum Titel alignt.\n   */\n  getTitleAlignment(): string {\n    if (this.luxTitleLineBreak && this.showIcon) {\n      return 'left top';\n    }\n\n    return 'left center';\n  }\n\n  /**\n   * Gibt den Status der Animation zurück.\n   */\n  getAnimState(): string {\n    return this.luxExpanded ? 'expand' : 'void';\n  }\n\n  /**\n   * Gibt die Dauer der Animation abhängig davon ob sie via Config deaktiviert wurden oder nicht zurück.\n   */\n  getAnimDuration() {\n    return this.animationDisabled ? 0 : 300;\n  }\n\n  /**\n   * Wird am Ende der Ausklappanimation aufgerufen und setzt das animationActive-Flag auf false und gibt ein Event\n   * über den luxAfterExpansion-EventEmitter ab.\n   */\n  expansionDone() {\n    this.luxAfterExpansion.emit();\n  }\n}\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-divider',\n  templateUrl: './lux-divider.component.html',\n  styleUrls: ['./lux-divider.component.scss']\n})\nexport class LuxDividerComponent implements OnInit {\n  private _luxVertical: boolean = false;\n\n  @Input() luxInset: boolean = false;\n\n  @HostBinding('class') classes = '';\n\n  get luxVertical(): boolean {\n    return this._luxVertical;\n  }\n\n  @Input() set luxVertical(vertical: boolean) {\n    this._luxVertical = vertical;\n    this.updateHostClasses();\n  }\n\n  constructor() {}\n\n  ngOnInit() {\n    this.updateHostClasses();\n  }\n\n  private updateHostClasses() {\n    this.classes = this.luxVertical ? 'lux-vertical-divider' : 'lux-horizontal-divider';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-list-item-content',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxListItemContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-list-item-icon',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxListItemIconComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, ElementRef, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { FocusableOption } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'lux-list-item',\n  templateUrl: './lux-list-item.component.html',\n  styleUrls: ['./lux-list-item.component.scss']\n})\nexport class LuxListItemComponent implements FocusableOption {\n  private _luxTitle: string;\n  private _luxSubTitle: string;\n  private _luxSelected: boolean;\n\n  @HostBinding('attr.aria-label') ariaLabel;\n  @HostBinding('attr.aria-selected') ariaSelected;\n  @HostBinding('attr.role') role = 'option';\n  @HostBinding('attr.tabindex') tabindex = '-1';\n\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter();\n\n  @Input() luxTitleLineBreak: boolean = true;\n\n  get luxTitle(): string {\n    return this._luxTitle;\n  }\n\n  @Input() set luxTitle(title: string) {\n    this._luxTitle = title;\n    this.ariaLabel = this.getLabel();\n  }\n\n  get luxSubTitle(): string {\n    return this._luxSubTitle;\n  }\n\n  @Input() set luxSubTitle(subTitle: string) {\n    this._luxSubTitle = subTitle;\n    this.ariaLabel = this.getLabel();\n  }\n\n  get luxSelected(): boolean {\n    return this._luxSelected;\n  }\n\n  @Input() set luxSelected(selected: boolean) {\n    this._luxSelected = selected;\n    this.ariaSelected = selected;\n  }\n\n  constructor(public elementRef: ElementRef) {}\n\n  clicked() {\n    this.luxClicked.emit(null);\n  }\n\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getLabel() {\n    return `${this.luxTitle ? this.luxTitle : ''} ${this.luxSubTitle ? this.luxSubTitle : ''}`;\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList\n} from '@angular/core';\nimport { LuxListItemComponent } from './lux-list-subcomponents/lux-list-item.component';\nimport { Subscription } from 'rxjs';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { DOWN_ARROW, END, ENTER, HOME, SPACE, UP_ARROW } from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'lux-list',\n  templateUrl: './lux-list.component.html',\n  styleUrls: ['./lux-list.component.scss']\n})\nexport class LuxListComponent implements OnInit, AfterViewInit, OnDestroy {\n  private _luxSelectedPosition: number = 0;\n\n  private previousFocusedPosition: number;\n  private clickSubscriptions: Subscription[] = [];\n  private listItemsSubscription: Subscription;\n  private keyManager: FocusKeyManager<LuxListItemComponent> = new FocusKeyManager<LuxListItemComponent>([]);\n\n  @ContentChildren(LuxListItemComponent) luxItems: QueryList<LuxListItemComponent>;\n\n  @Output() luxFocusedItemChange: EventEmitter<LuxListItemComponent> = new EventEmitter();\n  @Output() luxFocusedPositionChange: EventEmitter<number> = new EventEmitter();\n  @Output() luxSelectedPositionChange: EventEmitter<number> = new EventEmitter();\n\n  @Input() luxEmptyIconName = 'fas fa-info-circle';\n  @Input() luxEmptyIconSize = '5x';\n  @Input() luxEmptyLabel = 'Keine Einträge vorhanden';\n\n  @HostBinding('attr.role') role = 'listbox';\n  @HostBinding('attr.tabindex') tabindex = '0';\n  @HostBinding('attr.aria-multiselectable') ariaMulti = 'true';\n\n  @HostListener('keydown', ['$event']) onKeydown($event) {\n    this.keydown($event);\n  }\n\n  get luxSelectedPosition(): number {\n    return this._luxSelectedPosition;\n  }\n\n  @Input() set luxSelectedPosition(position: number) {\n    if (position === this.luxSelectedPosition) {\n      return;\n    }\n\n    this.focus(position);\n    this.select(position);\n    this.scroll(position);\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  isEmpty() {\n    return !this.luxItems || this.luxItems.length === 0;\n  }\n\n  ngAfterViewInit() {\n    // Click-Events der LuxListItems erhalten\n    this.listItemsSubscription = this.luxItems.changes.subscribe(() => {\n      this.listenForClicks();\n      this.keyManager = new FocusKeyManager<LuxListItemComponent>(this.luxItems);\n      if (this.previousFocusedPosition) {\n        this.keyManager.setActiveItem(this.previousFocusedPosition);\n      }\n    });\n    this.listenForClicks();\n    this.keyManager = new FocusKeyManager<LuxListItemComponent>(this.luxItems);\n    if (this.luxSelectedPosition) {\n      this.keyManager.setActiveItem(this.luxSelectedPosition);\n    }\n  }\n\n  ngOnDestroy() {\n    // Sämtliche Subscriptions auflösen\n    if (this.listItemsSubscription) {\n      this.listItemsSubscription.unsubscribe();\n    }\n    for (const subscription of this.clickSubscriptions) {\n      subscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Wird beim Drücken einer Taste ausgeführt und handelt die Aktionen bei speziellen Tasten\n   * (UP_ARROW || DOWN_ARROW werden vom KeyManager selbstständig gepflegt)\n   * @param $event\n   */\n  keydown($event: KeyboardEvent) {\n    const keyCode = $event.keyCode;\n    switch (keyCode) {\n      case SPACE:\n      case ENTER:\n        this.select(this.keyManager.activeItemIndex);\n        $event.preventDefault();\n        break;\n      case HOME:\n      case END:\n        keyCode === HOME ? this.keyManager.setFirstItemActive() : this.keyManager.setLastItemActive();\n        this.focus(this.keyManager.activeItemIndex);\n        $event.preventDefault();\n        break;\n      case UP_ARROW:\n        this.keyManager.setPreviousItemActive();\n        this.focus(this.keyManager.activeItemIndex);\n        $event.preventDefault();\n        break;\n      case DOWN_ARROW:\n        this.keyManager.setNextItemActive();\n        this.focus(this.keyManager.activeItemIndex);\n        $event.preventDefault();\n        break;\n      default:\n        this.keyManager.onKeydown($event);\n    }\n  }\n\n  /**\n   * Auf Click-Events der hier bekannten LuxListItems hören und entsprechend das selektierte ListItem aktualisieren.\n   */\n  private listenForClicks() {\n    for (const subscription of this.clickSubscriptions) {\n      subscription.unsubscribe();\n    }\n\n    this.clickSubscriptions = [];\n\n    this.luxItems.forEach((listItem: LuxListItemComponent, index: number) => {\n      this.clickSubscriptions.push(\n        listItem.luxClicked.subscribe(() => {\n          this.focus(index);\n          this.select(index);\n        })\n      );\n    });\n  }\n\n  /**\n   * Merkt sich die position als Selektions-Position und aktualisiert den luxSelected-Wert\n   * aller luxItems, die hier bekannt sind.\n   * @param position\n   */\n  private select(position: number) {\n    this._luxSelectedPosition = position;\n    this.previousFocusedPosition = position;\n    this.luxSelectedPositionChange.emit(position);\n\n    if (this.luxItems) {\n      this.luxItems.forEach((listItem: LuxListItemComponent) => {\n        listItem.luxSelected = false;\n      });\n\n      const selectedListItem = this.findListItem(position);\n      if (selectedListItem) {\n        selectedListItem.luxSelected = true;\n      }\n    }\n  }\n\n  /**\n   * Merkt sich die position als Fokus-Position und aktualisiert die CSS-Klassen der ListItems.\n   * @param position\n   */\n  private focus(position: number) {\n    this.keyManager.setActiveItem(position);\n\n    this.luxFocusedPositionChange.emit(position);\n    this.luxFocusedItemChange.emit(this.keyManager.activeItem);\n\n    this.previousFocusedPosition = position;\n  }\n\n  /**\n   * Scrollt zu dem Element an der position.\n   * @param position\n   */\n  private scroll(position: number) {\n    if (this.luxItems) {\n      const listItem = this.keyManager.activeItem;\n\n      if (listItem) {\n        listItem.elementRef.nativeElement.scrollIntoView(true);\n      }\n    }\n  }\n\n  /**\n   * Gibt das ListItem an der position zurück bzw. null wenn die luxItems undefined/null sind.\n   * @param position\n   */\n  private findListItem(position: number): LuxListItemComponent {\n    return this.luxItems\n      ? this.luxItems.find((listItem: LuxListItemComponent, index: number) => index === position)\n      : null;\n  }\n}\n","import { Component, ContentChild, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-detail-view',\n  template: '',\n  styles: ['']\n})\nexport class LuxDetailViewComponent implements OnInit {\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-master-footer',\n  template: '<ng-content></ng-content>',\n  styleUrls: ['./lux-master-footer.component.scss']\n})\nexport class LuxMasterFooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-master-header-content',\n  template: `\n    <ng-content></ng-content>\n  `\n})\nexport class LuxMasterHeaderContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\nimport { LuxMasterDetailMobileHelperService } from '../../lux-master-detail-mobile-helper.service';\nimport { LuxButtonComponent } from '../../../../lux-action/lux-button/lux-button.component';\n\n@Component({\n  selector: 'lux-master-header',\n  templateUrl: './lux-master-header.component.html',\n  styleUrls: ['./lux-master-header.component.scss']\n})\nexport class LuxMasterHeaderComponent implements OnInit {\n  iconName: string;\n  open: boolean;\n\n  @Input() luxToggleHidden: boolean;\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter();\n\n  @HostBinding('class.lux-no-toggle') isMobile = this.luxToggleHidden;\n\n  constructor(private masterDetailMobileHelperService: LuxMasterDetailMobileHelperService) {\n    this.masterDetailMobileHelperService.masterCollapsedObservable.subscribe((isOpen: boolean) => {\n      if (this.masterDetailMobileHelperService.isMobile()) {\n        this.iconName = 'keyboard_arrow_right';\n      } else {\n        if (isOpen) {\n          this.iconName = 'keyboard_arrow_left';\n        } else {\n          this.iconName = 'keyboard_arrow_right';\n        }\n      }\n      this.open = isOpen;\n      this.isMobile = this.luxToggleHidden;\n    });\n  }\n\n  ngOnInit() {}\n\n  clicked(that: LuxButtonComponent) {\n    if (this.open) {\n      this.masterDetailMobileHelperService.closeMaster();\n    } else {\n      this.masterDetailMobileHelperService.openMaster();\n    }\n    this.luxClicked.emit(this.open);\n    that.elementRef.nativeElement.focus();\n  }\n}\n","import { Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-master-simple',\n  template: ''\n})\nexport class LuxMasterSimpleComponent implements OnInit {\n  @Input() luxTitleProp: string;\n  @Input() luxSubTitleProp: string;\n\n  @ContentChild('luxSimpleContent', { static: false }) contentTempRef: TemplateRef<any>;\n  @ContentChild('luxSimpleIcon', { static: false }) iconTempRef: TemplateRef<any>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, HostBinding, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-master-view',\n  template:\n    '<ng-content select=\"lux-master-header\"></ng-content>' +\n    '<ng-content></ng-content>' +\n    '<ng-content select=\"[lux-master-footer]\"></ng-content>'\n})\nexport class LuxMasterViewComponent implements OnInit {\n  @HostBinding('class.lux-overflow-y-auto') overflowY: boolean = true;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-tab',\n  template: ''\n})\nexport class LuxTabComponent implements OnInit {\n  @Input() luxTitle: string;\n  @Input() luxIconName: string;\n  @Input() luxCounter: number;\n  @Input() luxCounterCap: number = 10;\n  @Input() luxShowNotification;\n  @Input() luxDisabled: boolean = false;\n  @Input() luxTagIdHeader: string;\n  @Input() luxTagIdContent: string;\n\n  @ContentChild(TemplateRef, { static: false }) contentTemplate: TemplateRef<any>;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { LuxTabComponent } from './lux-tabs-subcomponents/lux-tab.component';\nimport { MatTabChangeEvent } from '@angular/material';\nimport { ReplaySubject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\n\n@Component({\n  selector: 'lux-tabs',\n  templateUrl: './lux-tabs.component.html',\n  styleUrls: ['./lux-tabs.component.scss']\n})\nexport class LuxTabsComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  private static readonly _DEBOUNCE_TIME: number = 50;\n\n  private static _notificationNewClass = 'lux-notification-new';\n  private static _notificationReadClass = 'lux-notification-read';\n\n  private configSubscription: Subscription;\n\n  tabChange$: ReplaySubject<MatTabChangeEvent> = new ReplaySubject<MatTabChangeEvent>(1);\n  labelUppercase: boolean;\n\n  @Input() luxTabAnimationActive: boolean = true;\n  @Input() luxActiveTab: number = 0;\n  @Input() luxIconSize: string = '2x';\n  @Input() luxDisplayDivider: boolean = true;\n  @Input() luxTagId: string;\n  @Input() luxLazyLoading: boolean = false;\n\n  @Output() readonly luxActiveTabChanged: EventEmitter<any> = new EventEmitter<any>();\n\n  @ContentChildren(LuxTabComponent) luxTabs: QueryList<LuxTabComponent>;\n  @ViewChild('matTabs', { read: ElementRef, static: true }) tabHeader;\n\n  constructor(\n    public componentsConfigService: LuxComponentsConfigService,\n    public queryService: LuxMediaQueryObserverService\n  ) {}\n\n  ngOnInit() {\n    this.tabChange$\n      .asObservable()\n      .pipe(debounceTime(LuxTabsComponent._DEBOUNCE_TIME))\n      .subscribe((tabChange: MatTabChangeEvent) => {\n        this.luxActiveTab = tabChange.index;\n        this.luxActiveTabChanged.emit(tabChange);\n      });\n\n    this.configSubscription = this.componentsConfigService.config.subscribe(() => {\n      this.labelUppercase = this.componentsConfigService.isLabelUppercaseForSelector('lux-tab');\n    });\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    const activeTabChange = simpleChanges.activeTab;\n    if (activeTabChange) {\n      if (!activeTabChange.currentValue) {\n        this.luxActiveTab = 0;\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.rerenderTabs();\n  }\n\n  ngOnDestroy() {\n    this.configSubscription.unsubscribe();\n  }\n\n  getNotificationIconColorClassForTab(luxTab: LuxTabComponent): string {\n    return luxTab.luxShowNotification === true || luxTab.luxShowNotification === 'true'\n      ? LuxTabsComponent._notificationNewClass\n      : LuxTabsComponent._notificationReadClass;\n  }\n\n  /**\n   * Forciert Angular die Tab-Header neu zu pruefen, in dem\n   * der erste Tab ein Leerzeichen bekommt, welches im naechsten\n   * Pruefzyklus entfernt wird.\n   */\n  rerenderTabs() {\n    if (this.luxTabs.length > 0) {\n      setTimeout(() => {\n        this.luxTabs.first.luxTitle += ' ';\n        setTimeout(() => {\n          this.luxTabs.first.luxTitle = this.luxTabs.first.luxTitle.trim();\n        });\n      });\n    }\n  }\n\n  trackTab(index: number, luxTab: LuxTabComponent) {\n    return index;\n  }\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-detail-wrapper',\n  template: '<ng-container *ngTemplateOutlet=\"luxDetailTemplate; context: luxDetailContext\"></ng-container>'\n})\nexport class LuxDetailWrapperComponent implements OnInit, AfterViewInit {\n  private _luxDetailTemplate: TemplateRef<any>;\n\n  @Output() luxDetailRendered: EventEmitter<void> = new EventEmitter();\n\n  @Input() luxDetailContext;\n\n  @Input() set luxDetailTemplate(ref: TemplateRef<any>) {\n    this._luxDetailTemplate = ref;\n  }\n\n  get luxDetailTemplate(): TemplateRef<any> {\n    return this._luxDetailTemplate;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.luxDetailRendered.emit();\n  }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ContentChild,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewContainerRef\n} from '@angular/core';\nimport { LuxListItemComponent } from '../lux-list/lux-list-subcomponents/lux-list-item.component';\nimport { LuxListComponent } from '../lux-list/lux-list.component';\nimport { LuxTabsComponent } from '../lux-tabs/lux-tabs.component';\nimport { LuxMasterDetailMobileHelperService } from './lux-master-detail-mobile-helper.service';\nimport { LuxDetailViewComponent } from './lux-master-detail-subcomponents/lux-detail-view/lux-detail-view.component';\nimport { LuxMasterFooterComponent } from './lux-master-detail-subcomponents/lux-master-footer/lux-master-footer.component';\nimport { LuxMasterHeaderComponent } from './lux-master-detail-subcomponents/lux-master-header/lux-master-header.component';\nimport { LuxMasterSimpleComponent } from './lux-master-detail-subcomponents/lux-master-simple/lux-master-simple.component';\nimport { BehaviorSubject, ReplaySubject, Subscription } from 'rxjs';\nimport { delay, tap } from 'rxjs/operators';\nimport { LuxDetailWrapperComponent } from './lux-master-detail-subcomponents/lux-detail-view/lux-detail-wrapper.component';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'lux-master-detail',\n  templateUrl: './lux-master-detail.component.html',\n  styleUrls: ['./lux-master-detail.component.scss'],\n  animations: [\n    trigger('masterIsLoadingChanged', [\n      state('true', style({ opacity: 1 })),\n      state('false', style({ opacity: 0 })),\n      transition('1 => 0', animate('0.5s')),\n      transition('0 => 1', animate('1s'))\n    ])\n  ]\n})\nexport class LuxMasterDetailComponent implements OnInit, AfterViewInit, DoCheck, OnDestroy {\n  @Output() luxSelectedDetailChange: EventEmitter<any> = new EventEmitter();\n  @Output() luxScrolled: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild(LuxMasterSimpleComponent, { static: false }) masterSimple;\n  @ContentChild(LuxDetailViewComponent, { static: false }) detailView;\n  @ContentChild(LuxMasterFooterComponent, { static: false, read: ElementRef }) masterFooter: ElementRef;\n\n  @ViewChildren(LuxListComponent, { read: ElementRef }) luxMasterQueryList: QueryList<ElementRef>;\n  @ViewChildren(LuxListItemComponent) luxMasterListItemQueryList: QueryList<LuxListItemComponent>;\n  @ViewChild(LuxMasterHeaderComponent, { read: ElementRef, static: true }) masterHeader: ElementRef;\n  @ViewChild(LuxListItemComponent, { read: ElementRef, static: false }) luxMasterEntryElementRef: ElementRef;\n  @ContentChild(LuxTabsComponent, { static: false }) tabsComponent: LuxTabsComponent;\n  @ViewChild('masterSpinnerCard', { read: ElementRef, static: true }) masterSpinnerCard: ElementRef;\n  @ViewChild('detailContainer', { read: ElementRef, static: false }) detailFrame: ElementRef;\n  @ViewChild('detailEmpty', { read: ElementRef, static: true }) detailEmpty: ElementRef;\n  @ViewChild('detailViewContainerRef', { read: ViewContainerRef, static: true })\n  detailViewContainerRef: ViewContainerRef;\n  @ViewChild('masterContainer', { read: ElementRef, static: true }) masterContainer: ElementRef;\n\n  @HostBinding('class.lux-overflow-y-auto') overflowY: boolean = true;\n\n  private _luxMasterList = new BehaviorSubject<Array<any>>([]);\n  private _luxOpen: boolean = true;\n  private _luxSelectedDetail: any;\n\n  private masterListLength;\n  private maxItemsVisible;\n  private updateDetail$: ReplaySubject<any> = new ReplaySubject(1);\n  private updateDetailSubscription: Subscription;\n\n  detailContext = { $implicit: {} };\n  flexMaster: string;\n  flexDetail: string;\n\n  // Enthält die Position des aktuell selektierten Elements\n  selectedPosition: number;\n\n  // Flag welches bestimmt ob die Empty-Anzeigen der Masterliste anhand der Detail-Ansicht ausgerichtet werden\n  alignEmptyIndicators: boolean = true;\n\n  @Input() luxEmptyIconMaster: string = 'fas fa-info-circle';\n  @Input() luxEmptyLabelMaster: string = 'Keine Einträge vorhanden';\n  @Input() luxEmptyIconDetail: string = 'fas fa-info-circle';\n  @Input() luxEmptyLabelDetail: string = 'Kein Element ausgewählt';\n  @Input() luxEmptyIconMasterSize = '5x';\n  @Input() luxEmptyIconDetailSize = '5x';\n  @Input() luxMasterSpinnerDelay: number = 1000;\n  @Input() luxTagIdMaster: string;\n  @Input() luxTagIdDetail: string;\n  @Input() luxTitleLineBreak: boolean = false;\n  @Input() luxMasterIsLoading: boolean = false;\n  @Input() luxCompareWith = (o1, o2) => o1 === o2;\n\n  get luxOpen(): boolean {\n    return this._luxOpen;\n  }\n\n  @Input() set luxOpen(open: boolean) {\n    if (open) {\n      this.mobileHelperService.openMaster();\n    } else {\n      this.mobileHelperService.closeMaster();\n    }\n  }\n\n  /* Selected Detail Get/Set */\n  get luxSelectedDetail() {\n    return this._luxSelectedDetail;\n  }\n\n  @Input()\n  set luxSelectedDetail(value) {\n    this.updateDetail$.next(value);\n  }\n\n  /* Master List Get/Set */\n  get luxMasterList() {\n    return this._luxMasterList.getValue();\n  }\n\n  @Input()\n  set luxMasterList(value: any[]) {\n    if (this.masterListLength && value && this.masterListLength < value.length) {\n      this.announcePossibleInfiniteScrolling();\n    }\n    this._luxMasterList.next(value);\n    this.masterListLength = value ? value.length : 0;\n  }\n\n  constructor(\n    public mobileHelperService: LuxMasterDetailMobileHelperService,\n    private cdr: ChangeDetectorRef,\n    private cfr: ComponentFactoryResolver,\n    private liveAnnouncer: LiveAnnouncer\n  ) {\n    this.mobileHelperService.register();\n  }\n\n  ngOnInit() {\n    this.handleMasterListUpdate();\n    this.handleViewCollapse();\n    this.mobileHelperService.openMaster();\n  }\n\n  ngAfterViewInit() {\n    this.handleDetailUpdate();\n    this.handleMasterQueryList();\n  }\n\n  ngOnDestroy() {\n    this.mobileHelperService.unregister();\n    this.updateDetailSubscription.unsubscribe();\n  }\n\n  ngDoCheck() {\n    // Wurde ein Element in die Masterliste gepusht oder entfernt?\n    if (this.luxMasterList && this.luxMasterList.length !== this.masterListLength) {\n      if (this.luxMasterList.length > this.masterListLength) {\n        this.announcePossibleInfiniteScrolling();\n      }\n\n      // Wenn ja, das selektierte Detail neurendern\n      this.masterListLength = this.luxMasterList.length;\n      this.luxSelectedDetail = this.luxMasterList[this.selectedPosition];\n\n      this.announcePossibleInfiniteScrolling();\n    }\n\n    // Ausrichtung der Empty-Indikatoren der Masterliste prüfen\n    if (!this.mobileHelperService.isMobile() && (!this.luxMasterList || this.luxMasterList.length === 0)) {\n      this.checkEmptyIndicatorAlignment();\n    }\n  }\n\n  /**\n   * Wenn in der LuxList ein neuer Selected-Wert gepusht wird, diesen abfangen und\n   * ein neues Detail auswählen.\n   * @param $event\n   */\n  onSelectedChange($event: number) {\n    if ($event > -1) {\n      this.selectedPosition = $event;\n\n      this.updateDetail$.next(this.luxMasterList[$event]);\n\n      if (this.mobileHelperService.isMobile()) {\n        this.mobileHelperService.closeMaster();\n      }\n    }\n  }\n\n  /**\n   * Bestimmt ob die Masterliste auf- oder eingeklappt ist.\n   * @param open\n   */\n  toggleList(open: boolean) {\n    if (open) {\n      this.mobileHelperService.openMaster();\n    } else {\n      this.mobileHelperService.closeMaster();\n    }\n\n    if (this.tabsComponent) {\n      this.tabsComponent.rerenderTabs();\n    }\n  }\n\n  /**\n   * Prueft ob die Detailansicht gerade fuer den User sichtbar ist.\n   * @returns boolean\n   */\n  isDetailInvisible(): boolean {\n    return this.mobileHelperService.isMobile() && this.luxOpen;\n  }\n\n  onInfiniteScrollingLoad($event) {\n    this.luxScrolled.emit($event);\n  }\n\n  onSwipeLeft() {\n    if (this.mobileHelperService.isMobile()) {\n      this.mobileHelperService.closeMaster();\n    }\n  }\n\n  onSwipeRight() {\n    if (this.mobileHelperService.isMobile()) {\n      this.mobileHelperService.openMaster();\n    }\n  }\n\n  /**\n   * Kapselung von der übergebenen luxCompareWith-Funktion.\n   * Fängt undefinierte Objekte ab und returned stattdessen false.\n   * @param o1\n   * @param o2\n   */\n  compareObjects(o1, o2) {\n    if (!o1 || !o2) {\n      return false;\n    }\n    return this.luxCompareWith(o1, o2);\n  }\n\n  /**\n   * Steuert das Breitenverhaeltnis von Master und Detail je nachdem\n   * ob der Master auf- oder eingeklappt ist und ob eine Mobilansicht aktiv ist.\n   */\n  private updateOpen() {\n    if (this.luxOpen) {\n      if (this.mobileHelperService.isMobile()) {\n        this.flexMaster = '100';\n        this.flexDetail = '0';\n      } else {\n        this.flexMaster = '30';\n        this.flexDetail = '70';\n      }\n    } else {\n      if (this.mobileHelperService.isMobile()) {\n        this.flexMaster = '0';\n        this.flexDetail = '100';\n      } else {\n        this.flexMaster = '5';\n        this.flexDetail = '95';\n      }\n    }\n  }\n\n  /**\n   * Kümmert sich um Änderungen an der HTML-Node der Master-Liste.\n   * Rückt dabei das selektierte Element in den Fokus und berechnet wie viele Elemente\n   * gerade in der Liste sichtbar sein können (für das Durchschalten mit Pfeiltasten benötigt).\n   */\n  private handleMasterQueryList() {\n    this.luxMasterQueryList.changes.subscribe((masterListElements: QueryList<ElementRef>) => {\n      if (masterListElements.first) {\n        const { nativeElement } = masterListElements.first;\n        this.maxItemsVisible = Math.floor(nativeElement.offsetHeight / nativeElement.offsetHeight);\n      }\n      // Der Abschnitt hier fängt den Fall ab, dass z.B. das LuxMasterList-Array selbst angepasst wird (z.B. durch Array.reverse)\n      // Das sorgt dafür, dass das visuell selektierte Element auch das passende zur Detail-View ist.\n      const newSelectedPosition: number = this.luxMasterList.indexOf(this.luxSelectedDetail);\n      if (newSelectedPosition !== this.selectedPosition) {\n        setTimeout(() => {\n          this.selectedPosition = newSelectedPosition;\n        });\n      }\n    });\n  }\n\n  /**\n   * Kümmert sich um die Kollabierung der Master-Liste, wenn zwischen Mobil- und Desktopansicht gewechselt wird.\n   */\n  private handleViewCollapse() {\n    this.mobileHelperService.masterCollapsedObservable.subscribe((open: boolean) => {\n      // Falls nichts selektiert ist, sollte die Darstellung beim Wechsel in kleine Media Queries die Masterliste zeigen\n      if (this.mobileHelperService.isMobile() && !this.luxSelectedDetail && !open) {\n        open = true;\n      }\n      this._luxOpen = open;\n      this.updateOpen();\n    });\n  }\n\n  /**\n   * Kümmert sich um Änderungen an dem selektierten Detail.\n   * Dabei werden mehrere Zuweisungen an das Detail über throttleTime gebündelt und nur das Aktuellste genommen.\n   * Anschließend wird die Komponente angewiesen das neue Detail-Objekt zu rendern.\n   */\n  private handleDetailUpdate() {\n    this.updateDetailSubscription = this.updateDetail$.asObservable().subscribe((detail: any) => {\n      if (!detail) {\n        this.detailViewContainerRef.clear();\n        this.setNewDetail(detail);\n      } else {\n        if (!this.compareObjects(this.luxSelectedDetail, detail)) {\n          this.detailViewContainerRef.clear();\n\n          if (detail) {\n            this.detailContext = { $implicit: detail };\n\n            // Den Detail-Wrapper erzeugen und abfangen, wann die Nodes geladen worden sind\n            const child = this.cfr.resolveComponentFactory(LuxDetailWrapperComponent);\n            const childRef = this.detailViewContainerRef.createComponent(child);\n            const instance = childRef.instance;\n            instance.luxDetailContext = this.detailContext;\n            instance.luxDetailTemplate = this.detailView.tempRef;\n            instance.luxDetailRendered.subscribe(() => {\n              this.setNewDetail(detail);\n            });\n            // Die Detailansicht nach dem Wechsel wieder nach oben scrollen lassen\n            this.detailViewContainerRef.element.nativeElement.parentNode.scrollTop = 0;\n\n            this.cdr.detectChanges();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Wird aufgerufen nachdem ein neues Detail-Template gerendert wurde und aktualisiert\n   * luxSelectedDetail dementsprechend.\n   */\n  private setNewDetail(detail: any) {\n    if (!this.compareObjects(this.luxSelectedDetail, detail)) {\n      this._luxSelectedDetail = detail;\n      this.selectedPosition = this.luxMasterList.indexOf(detail);\n      this.luxSelectedDetailChange.emit(this.luxSelectedDetail);\n      // Die Master-Liste fokussieren (die Liste gibt es nur einmal, weil wir auf Changes hören, ist sie aber in einer QueryList)\n      this.luxMasterQueryList.first.nativeElement.focus();\n\n      if (this.mobileHelperService.isMobile()) {\n        this.luxOpen = false;\n      }\n      this.mobileHelperService.hasValue = !!this._luxSelectedDetail;\n      this.cdr.detectChanges();\n    }\n  }\n\n  /**\n   * Kümmert sich um den Fall, dass die Master-Liste selbst sich ändert.\n   */\n  private handleMasterListUpdate() {\n    this._luxMasterList\n      .asObservable()\n      .pipe(\n        // Workaround um ExpressionChanged-Fehler zu vermeiden\n        delay(0),\n        tap(() => {\n          if (!this.luxMasterList || this.luxMasterList.length === 0) {\n            this.luxSelectedDetail = undefined;\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * Prüft ob das Header- oder -Footer-Element der Masterliste ca. 50% der Master-Höhe einnehmen.\n   *\n   * Wenn ja, wird die Ausrichtung des Master-Empty-Labels und Master-Empty-Icons nicht mehr anhand des Detail bestimmt.\n   */\n  private checkEmptyIndicatorAlignment() {\n    const headerHeight = this.masterHeader ? this.masterHeader.nativeElement.offsetHeight : 0;\n    const footerHeight = this.masterFooter ? this.masterFooter.nativeElement.offsetHeight : 0;\n\n    if (this.masterContainer) {\n      // Max-Height ist die Hälfte der Master-Container Höhe minus eine kleine Pauschale von 100px damit\n      // die Ansicht nicht zu knapp ist\n      const maxHeight = this.masterContainer.nativeElement.offsetHeight / 2 - 100;\n      this.alignEmptyIndicators = !(headerHeight > maxHeight || footerHeight > maxHeight);\n    }\n  }\n\n  /**\n   * Meldet über den LiveAnnouncer, dass evtl. weitere Daten via InfiniteScrolling nachgeladen werden könnten.\n   *\n   * \"assertive\", damit die Meldung auf jeden Fall vom ScreenReader vorgelesen wird und nicht von etwaigen anderen\n   * Aussagen verdeckt wird.\n   */\n  private announcePossibleInfiniteScrolling() {\n    this.liveAnnouncer.announce(\n      'Die Masterliste hat weitere Einträge erhalten. ' +\n        'Aufgrund des Infinite-Scrollings könnten vielleicht noch mehr Einträge nachgeladen werden.',\n      'assertive'\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-panel-action',\n  template: '<mat-action-row><ng-content></ng-content></mat-action-row>'\n})\nexport class LuxPanelActionComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-panel-content',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxPanelContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-panel-header-description',\n  template: '<mat-panel-description><ng-content></ng-content></mat-panel-description>'\n})\nexport class LuxPanelHeaderDescriptionComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-panel-header-title',\n  template: '<mat-panel-title><ng-content></ng-content></mat-panel-title>'\n})\nexport class LuxPanelHeaderTitleComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { MatExpansionPanel } from '@angular/material';\nimport { LuxAccordionComponent } from '../lux-accordion/lux-accordion.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'lux-panel',\n  templateUrl: './lux-panel.component.html',\n  styleUrls: ['./lux-panel.component.scss']\n})\nexport class LuxPanelComponent implements OnInit, OnDestroy {\n  @Input() luxDisabled: boolean;\n  @Input() luxExpanded: boolean = false;\n  @Input() luxHideToggle: boolean;\n\n  @Input() luxCollapsedHeaderHeight: string;\n  @Input() luxExpandedHeaderHeight: string;\n\n  @Output() luxOpened = new EventEmitter<any>();\n  @Output() luxClosed = new EventEmitter<any>();\n  @Output() luxExpandedChange: EventEmitter<boolean> = new EventEmitter();\n\n  @ViewChild(MatExpansionPanel, { static: true }) matExpansionPanel: MatExpansionPanel;\n\n  @HostBinding('class.lux-pr-1') pr1: boolean = true;\n  @HostBinding('class.lux-pl-1') pl1: boolean = true;\n\n  subscription: Subscription;\n\n  constructor(@Optional() @Inject(forwardRef(() => LuxAccordionComponent)) private parent: LuxAccordionComponent) {}\n\n  ngOnInit() {\n    if (this.parent) {\n      if (this.luxHideToggle === undefined) {\n        this.luxHideToggle = this.parent.luxHideToggle;\n      }\n      if (this.luxDisabled === undefined) {\n        this.luxDisabled = this.parent.luxDisabled;\n      }\n      if (this.luxExpandedHeaderHeight === undefined) {\n        this.luxExpandedHeaderHeight = this.parent.luxExpandedHeaderHeight;\n      }\n      if (this.luxCollapsedHeaderHeight === undefined) {\n        this.luxCollapsedHeaderHeight = this.parent.luxCollapsedHeaderHeight;\n      }\n\n      // Diese Zeile wird benötigt, damit der Multi-Mode\n      // (nur ein Abschnitt darf geöffnet sein) des Accordions funktioniert.\n      this.matExpansionPanel.accordion = this.parent.matAccordion;\n\n      // Um eine zyklische Abhängigkeit mit dem lux-accordion zu vermeiden,\n      // wurde hier ein Event verwendet.\n      this.subscription = this.parent.changed$.subscribe(propertyName => {\n        if (propertyName === 'luxHideToggle') {\n          this.luxHideToggle = this.parent.luxHideToggle;\n        } else if (propertyName === 'luxDisabled') {\n          this.luxDisabled = this.parent.luxDisabled;\n        } else if (propertyName === 'luxExpandedHeaderHeight') {\n          this.luxExpandedHeaderHeight = this.parent.luxExpandedHeaderHeight;\n        } else if (propertyName === 'luxCollapsedHeaderHeight') {\n          this.luxCollapsedHeaderHeight = this.parent.luxCollapsedHeaderHeight;\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.parent) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  onOpened(eventValue) {\n    this.luxOpened.emit(eventValue);\n    this.luxExpanded = true;\n    this.luxExpandedChange.emit(this.luxExpanded);\n  }\n\n  onClosed(eventValue) {\n    this.luxClosed.emit(eventValue);\n    this.luxExpanded = false;\n    this.luxExpandedChange.emit(this.luxExpanded);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-step-content',\n  template: '<ng-content></ng-content>',\n  styles: ['']\n})\nexport class LuxStepContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { LuxComponentsConfigService } from '../../../lux-components-config/lux-components-config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'lux-step-header',\n  template: `\n    <div [ngClass]=\"{ 'lux-uppercase': labelUppercase }\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styles: ['']\n})\nexport class LuxStepHeaderComponent implements OnInit, OnDestroy {\n  private configSubscription: Subscription;\n\n  labelUppercase: boolean;\n\n  constructor(public componentsConfigService: LuxComponentsConfigService) {}\n\n  ngOnInit() {\n    this.configSubscription = this.componentsConfigService.config.subscribe(() => {\n      this.labelUppercase = this.componentsConfigService.isLabelUppercaseForSelector('lux-step');\n    });\n  }\n\n  ngOnDestroy() {\n    this.configSubscription.unsubscribe();\n  }\n}\n","import { Component, Input, TemplateRef, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'lux-step',\n  template: `\n    <ng-template #header>\n      <ng-content select=\"lux-step-header\"></ng-content>\n    </ng-template>\n    <ng-template #content>\n      <ng-content select=\"lux-step-content\"></ng-content>\n    </ng-template>\n  `\n})\nexport class LuxStepComponent {\n  private _iconChange: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private _luxIconName: string = undefined;\n\n  @ViewChild('header', { static: true }) headerTemplate: TemplateRef<any>;\n  @ViewChild('content', { static: true }) contentTemplate: TemplateRef<any>;\n\n  @Input() luxIconSize: string = '1x';\n  @Input() luxOptional: boolean = false;\n  @Input() luxEditable: boolean = true;\n  @Input() luxCompleted: boolean = true;\n  @Input() luxStepControl: FormGroup;\n\n  get luxIconName(): string {\n    return this._luxIconName;\n  }\n\n  @Input()\n  set luxIconName(iconName: string) {\n    this._luxIconName = iconName;\n    this._iconChange.next(true);\n  }\n\n  getIconChangeObsv(): Observable<boolean> {\n    return this._iconChange.asObservable();\n  }\n\n  constructor() {}\n\n  /**\n   * Gibt an, ob der Step als abgeschlossen gilt.\n   *\n   * Möglichkeiten:\n   *  1. Hat ein luxStepControl, welches valid ist\n   *  2. Der Wert luxCompleted ist true\n   *  3. Der Wert luxOptional ist true\n   */\n  isCompleted() {\n    if (this.luxStepControl) {\n      return this.luxStepControl.valid;\n    }\n    return this.luxCompleted || this.luxOptional;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { LuxStepperComponent } from './lux-stepper.component';\n\n@Injectable()\nexport class LuxStepperHelperService {\n  private switchStep: Map<LuxStepperComponent, BehaviorSubject<boolean>> = new Map();\n\n  constructor() {}\n\n  /**\n   * Springt im Stepper zum naechsten Step.\n   * Alternativ (ohne Stepper als Parameter) laesst die Funktion alle\n   * bekannten Stepper einen Schritt nach vorne springen.\n   *\n   * Voraussetzung: luxLinear = false oder aktuell Form ist valide.\n   */\n  public nextStep(stepper?: LuxStepperComponent) {\n    if (stepper) {\n      const subject = this.switchStep.get(stepper);\n      if (subject) {\n        subject.next(true);\n      }\n    } else {\n      this.switchStep.forEach((switchStep: BehaviorSubject<boolean>) => switchStep.next(true));\n    }\n  }\n\n  /**\n   * Springt im Stepper zum vorherigen Step.\n   * Alternativ (ohne Stepper als Parameter) laesst die Funktion alle\n   * Bekannten Stepper einen Schritt zurueckspringen.\n   */\n  public previousStep(stepper?: LuxStepperComponent) {\n    if (stepper) {\n      const subject = this.switchStep.get(stepper);\n      if (subject) {\n        subject.next(false);\n      }\n    } else {\n      this.switchStep.forEach((switchStep: BehaviorSubject<boolean>) => switchStep.next(false));\n    }\n  }\n\n  /**\n   * Gibt das Observable der internen Map fuer den Stepper zurueck.\n   * @param stepper\n   * @returns Observable<boolean> | Observable<any>\n   */\n  public getObservable(stepper: LuxStepperComponent) {\n    const subject = this.switchStep.get(stepper);\n    return subject ? subject.asObservable() : of(null);\n  }\n\n  /**\n   * Traegt den Stepper in die Map der dem Service bekannten Stepper ein.\n   * @param stepper\n   */\n  public registerStepper(stepper: LuxStepperComponent) {\n    if (!this.switchStep.get(stepper)) {\n      this.switchStep.set(stepper, new BehaviorSubject(false));\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  ViewContainerRef\n} from '@angular/core';\nimport { ILuxStepperButtonConfig } from './lux-stepper-model/lux-stepper-button-config.interface';\nimport { LuxStepperHelperService } from './lux-stepper-helper.service';\nimport { LuxStepComponent } from './lux-stepper-subcomponents/lux-step.component';\nimport { ILuxStepperConfiguration } from './lux-stepper-model/lux-stepper-configuration.interface';\nimport { MatHorizontalStepper, MatVerticalStepper } from '@angular/material';\nimport { LuxIconComponent } from '../../lux-icon/lux-icon/lux-icon.component';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\n\n@Component({\n  selector: 'lux-stepper',\n  templateUrl: './lux-stepper.component.html',\n  styleUrls: ['./lux-stepper.component.scss']\n})\nexport class LuxStepperComponent implements AfterViewInit {\n  private readonly _DEFAULT_PREV_BTN_CONF: ILuxStepperButtonConfig = {\n    label: 'Zurück'\n  };\n  private readonly _DEFAULT_NEXT_BTN_CONF: ILuxStepperButtonConfig = {\n    label: 'Weiter'\n  };\n  private readonly _DEFAULT_FIN_BTN_CONF: ILuxStepperButtonConfig = {\n    label: 'Abschließen',\n    color: 'primary'\n  };\n\n  @ContentChildren(LuxStepComponent) luxSteps: QueryList<LuxStepComponent>;\n\n  @Output() luxFinishButtonClicked: EventEmitter<any> = new EventEmitter();\n  @Output() luxStepChanged: EventEmitter<StepperSelectionEvent> = new EventEmitter<StepperSelectionEvent>();\n  @Output() luxCurrentStepNumberChange: EventEmitter<number> = new EventEmitter<number>();\n\n  matStepper: MatHorizontalStepper | MatVerticalStepper;\n  matStepLabels: ViewContainerRef[];\n\n  stepperConfiguration: ILuxStepperConfiguration = {\n    luxCurrentStepNumber: 0,\n    luxShowNavigationButtons: true,\n    luxHorizontalStepAnimationActive: true,\n    luxEditedIconName: 'fa-pencil'\n  };\n\n  constructor(\n    public stepperService: LuxStepperHelperService,\n    private cdr: ChangeDetectorRef,\n    private cfr: ComponentFactoryResolver,\n    private elementRef: ElementRef\n  ) {\n    // Die Default-Konfiguration präventiv als Startwert setzen\n    this.luxPreviousButtonConfig = this._DEFAULT_PREV_BTN_CONF;\n    this.luxNextButtonConfig = this._DEFAULT_NEXT_BTN_CONF;\n    this.luxFinishButtonConfig = this._DEFAULT_FIN_BTN_CONF;\n    // Den Stepper im Helper-Service bekannt machen\n    this.stepperService.registerStepper(this);\n  }\n\n  ngAfterViewInit() {\n    // Änderungen an den luxSteps sollten auch dem Konfigurationsobjekt bekannt gemacht werden\n    this.luxSteps.changes.subscribe(() => {\n      this.stepperConfiguration.luxSteps = this.luxSteps.toArray();\n      this.cdr.detectChanges();\n    });\n    // Initial die aktuellen luxSteps in die Konfiguration schreiben\n    this.stepperConfiguration.luxSteps = this.luxSteps.toArray();\n    this.cdr.detectChanges();\n\n    // Falls initial bereits bestimmt wurde, dass individuelle Icons genutzt werden, diese generieren\n    if (this.stepperConfiguration.luxUseCustomIcons) {\n      this.generateCustomIcons();\n    }\n\n    // Auf next/previous Aufrufe aus dem Service horchen und entsprechend reagieren\n    this.stepperService.getObservable(this).subscribe((next: boolean) => {\n      // Voraussetzung: Stepper nicht deaktiviert\n      if (!this.stepperConfiguration.luxDisabled) {\n        if (next === true) {\n          this.checkValidation();\n          this.matStepper.next();\n          this.matStepper._stepHeader.toArray()[this.matStepper.selectedIndex].focus();\n        } else if (next === false) {\n          this.matStepper.previous();\n          this.matStepper._stepHeader.toArray()[this.matStepper.selectedIndex].focus();\n        }\n      }\n    });\n\n    // Änderungen an den Icons jedes einzelnen Steps führt zu Neugenerierung aller individuellen Icons\n    // ==> Material erlaubt leider nur alle Icons identisch zu ändern, nicht für jeden Step einzeln, deshalb\n    // generieren wir selbst die Icons.\n    this.luxSteps.toArray().forEach((luxStep: LuxStepComponent) => {\n      luxStep.getIconChangeObsv().subscribe((iconChange: boolean) => {\n        if (this.stepperConfiguration.luxUseCustomIcons && iconChange) {\n          this.clearCustomIcons();\n          this.generateCustomIcons();\n        }\n      });\n    });\n\n    this.setFocusedCSS(this.luxCurrentStepNumber);\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Wird beim Wechsel des aktuellen Steps (Klick auf Tab oder .next()/.previous() Aufruf) aufgerufen.\n   * @param $event\n   */\n  onStepChanged($event: StepperSelectionEvent) {\n    this.luxCurrentStepNumber = $event.selectedIndex;\n    this.luxStepChanged.emit($event);\n\n    const matStepHeaders: NodeListOf<any> = this.elementRef.nativeElement.querySelectorAll('mat-step-header');\n    if (matStepHeaders.item($event.selectedIndex).className.indexOf('lux-step-header-touched') === -1) {\n      matStepHeaders.item($event.selectedIndex).className += ' lux-step-header-touched';\n    }\n\n    this.setFocusedCSS($event.selectedIndex);\n  }\n\n  /**\n   * Generiert die individuellen Icons fuer die Steps.\n   */\n  generateCustomIcons() {\n    const factory = this.cfr.resolveComponentFactory(LuxIconComponent);\n    let index = 0;\n    this.matStepLabels.forEach((stepLabel: ViewContainerRef) => {\n      this.generateCustomIconForStep(stepLabel, this.luxSteps.toArray()[index], factory);\n      index++;\n    });\n  }\n\n  /**\n   * Entfernt die eigenen Icons fuer die Steps.\n   */\n  clearCustomIcons() {\n    this.matStepLabels.forEach((stepLabel: ViewContainerRef) => {\n      stepLabel.clear();\n    });\n  }\n\n  /**\n   * Stößt die Validierungsprüfung für den aktuell sichtbaren Step und dessen StepControl (wenn vorhanden) an.\n   */\n  checkValidation() {\n    const stepControl = this.luxSteps.toArray()[this.stepperConfiguration.luxCurrentStepNumber].luxStepControl;\n    if (stepControl) {\n      LuxUtil.showValidationErrors(stepControl);\n    }\n  }\n\n  /**\n   * Generiert die Icons fuer einen einzelnen Step\n   * @param stepLabel\n   * @param luxStep\n   * @param factory\n   */\n  private generateCustomIconForStep(\n    stepLabel: ViewContainerRef,\n    luxStep: LuxStepComponent,\n    factory: ComponentFactory<LuxIconComponent>\n  ) {\n    if (luxStep && luxStep.luxIconName) {\n      // Das edited und normal Icon generieren\n      const componentIconEdited: ComponentRef<LuxIconComponent> = stepLabel.createComponent(factory);\n      const instanceIconEdited: LuxIconComponent = componentIconEdited.instance;\n\n      instanceIconEdited.luxIconName = this.luxEditedIconName;\n      instanceIconEdited.luxIconSize = '2x';\n      instanceIconEdited.luxRounded = true;\n      instanceIconEdited.luxMargin = '0 8px 0 0';\n      componentIconEdited.location.nativeElement.className += ' lux-stepper-edited-icon';\n\n      const componentIconNormal: ComponentRef<LuxIconComponent> = stepLabel.createComponent(factory);\n      const instanceIconNormal: LuxIconComponent = componentIconNormal.instance;\n      instanceIconNormal.luxIconName = luxStep.luxIconName;\n      instanceIconNormal.luxIconSize = '2x';\n      instanceIconNormal.luxRounded = true;\n      instanceIconNormal.luxMargin = '0 8px 0 0';\n      componentIconNormal.location.nativeElement.className += ' lux-stepper-normal-icon';\n    }\n  }\n\n  /**\n   * Aktualisiert die aktuellen Icons, entfernt zunächst die individuellen Icons und\n   * versucht anschließend diese neu zu generieren (nötig bei Änderungen).\n   */\n  private updateIcons() {\n    if (this.matStepLabels) {\n      this.clearCustomIcons();\n      if (this.stepperConfiguration.luxUseCustomIcons) {\n        this.generateCustomIcons();\n      }\n    }\n  }\n\n  private setFocusedCSS(index: number) {\n    const matStepHeaders: NodeListOf<any> = this.elementRef.nativeElement.querySelectorAll('mat-step-header');\n    if (matStepHeaders.item(index).className.indexOf('lux-step-header-touched') === -1) {\n      matStepHeaders.item(index).className += ' lux-step-header-touched';\n    }\n  }\n\n  // region ###### Accessoren, die auf die stepperConfiguration verweisen ######\n\n  /**** Getter/Setter luxCurrentStepNumber ****/\n  get luxCurrentStepNumber() {\n    return this.stepperConfiguration.luxCurrentStepNumber;\n  }\n\n  @Input() set luxCurrentStepNumber(step: number) {\n    if (step !== this.luxCurrentStepNumber) {\n      setTimeout(() => {\n        // OutOfBound-Steps abfangen\n        step = step < 0 ? 0 : step;\n        step = step >= this.luxSteps.length ? this.luxSteps.length - 1 : step;\n\n        this.stepperConfiguration.luxCurrentStepNumber = step;\n        this.luxCurrentStepNumberChange.emit(this.stepperConfiguration.luxCurrentStepNumber);\n      });\n    }\n  }\n\n  /**** Getter/Setter luxUseCustomIcons ****/\n  get luxUseCustomIcons() {\n    return this.stepperConfiguration.luxUseCustomIcons;\n  }\n\n  @Input() set luxUseCustomIcons(use: boolean) {\n    this.stepperConfiguration.luxUseCustomIcons = use;\n    setTimeout(() => {\n      this.updateIcons();\n    });\n  }\n\n  /**** Getter/Setter luxEditedIconName ****/\n  get luxEditedIconName() {\n    return this.stepperConfiguration.luxEditedIconName;\n  }\n\n  @Input() set luxEditedIconName(iconName: string) {\n    this.stepperConfiguration.luxEditedIconName = iconName;\n    this.updateIcons();\n  }\n\n  /**** Getter/Setter luxVerticalStepper ****/\n  get luxVerticalStepper() {\n    return this.stepperConfiguration.luxVerticalStepper;\n  }\n\n  @Input() set luxVerticalStepper(vertical: boolean) {\n    this.stepperConfiguration.luxVerticalStepper = vertical;\n  }\n\n  /**** Getter/Setter luxLinear ****/\n  get luxLinear() {\n    return this.stepperConfiguration.luxLinear;\n  }\n\n  @Input() set luxLinear(linear: boolean) {\n    this.stepperConfiguration.luxLinear = linear;\n  }\n\n  /**** Getter/Setter luxDisabled ****/\n  get luxDisabled() {\n    return this.stepperConfiguration.luxDisabled;\n  }\n\n  @Input() set luxDisabled(disabled: boolean) {\n    this.stepperConfiguration.luxDisabled = disabled;\n  }\n\n  /**** Getter/Setter luxShowNavigationButtons ****/\n  get luxShowNavigationButtons() {\n    return this.stepperConfiguration.luxShowNavigationButtons;\n  }\n\n  @Input() set luxShowNavigationButtons(showNavButtons: boolean) {\n    this.stepperConfiguration.luxShowNavigationButtons = showNavButtons;\n  }\n\n  /**** Getter/Setter luxHorizontalStepAnimationActive ****/\n  get luxHorizontalStepAnimationActive() {\n    return this.stepperConfiguration.luxHorizontalStepAnimationActive;\n  }\n\n  @Input() set luxHorizontalStepAnimationActive(animationActive: boolean) {\n    this.stepperConfiguration.luxHorizontalStepAnimationActive = animationActive;\n  }\n\n  /**** Getter/Setter luxPreviousButtonConfig ****/\n  get luxPreviousButtonConfig() {\n    return this.stepperConfiguration.luxPreviousButtonConfig;\n  }\n\n  @Input() set luxPreviousButtonConfig(config: ILuxStepperButtonConfig) {\n    this.stepperConfiguration.luxPreviousButtonConfig = config ? config : this._DEFAULT_PREV_BTN_CONF;\n  }\n\n  /**** Getter/Setter luxNextButtonConfig ****/\n  get luxNextButtonConfig() {\n    return this.stepperConfiguration.luxNextButtonConfig;\n  }\n\n  @Input() set luxNextButtonConfig(config: ILuxStepperButtonConfig) {\n    this.stepperConfiguration.luxNextButtonConfig = config ? config : this._DEFAULT_NEXT_BTN_CONF;\n  }\n\n  /**** Getter/Setter luxFinishButtonConfig ****/\n  get luxFinishButtonConfig() {\n    return this.stepperConfiguration.luxFinishButtonConfig;\n  }\n\n  @Input() set luxFinishButtonConfig(config: ILuxStepperButtonConfig) {\n    this.stepperConfiguration.luxFinishButtonConfig = config ? config : this._DEFAULT_FIN_BTN_CONF;\n  }\n\n  // endregion\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\n\n@Component({\n  selector: 'lux-tile',\n  templateUrl: './lux-tile.component.html',\n  styleUrls: ['./lux-tile.component.scss']\n})\nexport class LuxTileComponent {\n  private static _notificationNewClass = 'lux-notification-new';\n  private static _notificationReadClass = 'lux-notification-read';\n\n  @Input() luxLabel: string = undefined;\n  @Input() luxTagId: string = undefined;\n  @Input() luxShowNotification;\n  @Input() luxCounter: number;\n  @Input() luxCounterCap: number = 10;\n\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(public queryService: LuxMediaQueryObserverService) {}\n\n  clicked() {\n    this.luxClicked.emit();\n  }\n\n  getNotificationIconColorClass(): string {\n    return this.luxShowNotification === true || this.luxShowNotification === 'true'\n      ? LuxTileComponent._notificationNewClass\n      : LuxTileComponent._notificationReadClass;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-side-nav-footer',\n  template: '<lux-divider></lux-divider><div class=\"lux-side-nav-footer-content\"><ng-content></ng-content></div>'\n})\nexport class LuxSideNavFooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-side-nav-header',\n  template: '<div class=\"lux-side-nav-header-content\"><ng-content></ng-content></div>'\n})\nexport class LuxSideNavHeaderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-app-content',\n  templateUrl: './lux-app-content.component.html',\n  styleUrls: ['./lux-app-content.component.scss']\n})\nexport class LuxAppContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import {\n  AfterViewInit,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewContainerRef\n} from '@angular/core';\nimport { MatHorizontalStepper, MatVerticalStepper } from '@angular/material';\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\nimport { ILuxStepperConfiguration } from './lux-stepper-configuration.interface';\n\n/**\n * Parent-Klasse für den LuxStepperVertical und LuxStepperHorizontal, beide Komponenten werden ausschließlich von\n * dem LuxStepper zur Darstellung genutzt.\n */\nexport class LuxStepperParent implements AfterViewInit {\n  // Diese Outputs werden bei den Klicks auf die Stepper-eigenen Navigations-Buttons augelöst und informieren die\n  // LuxStepperComponent\n  @Output() luxFinButtonClicked: EventEmitter<any> = new EventEmitter();\n  @Output() luxNextButtonClicked: EventEmitter<any> = new EventEmitter();\n  @Output() luxPrevButtonClicked: EventEmitter<any> = new EventEmitter();\n  // Wird beim Wechsel des Steps (über Header oder Button) aufgerufen\n  @Output() luxStepChanged: EventEmitter<StepperSelectionEvent> = new EventEmitter<StepperSelectionEvent>();\n  @Output() luxCheckValidation: EventEmitter<void> = new EventEmitter<void>();\n  // Wird beim AfterViewInit und bei jeder Aktualisierung der MatStepLabels aufgerufen um die LuxStepperComponent\n  // über die aktuellen Elemente informiert zu halten\n  @Output() luxMatStepperLoaded: EventEmitter<MatHorizontalStepper | MatVerticalStepper> = new EventEmitter();\n  @Output() luxMatStepLabelsLoaded: EventEmitter<ViewContainerRef[]> = new EventEmitter();\n\n  @ViewChild('stepper', { static: true }) matStepper: MatHorizontalStepper | MatVerticalStepper;\n  @ViewChildren('matStepLabel', { read: ViewContainerRef }) matStepLabels: QueryList<ViewContainerRef>;\n\n  @Input() luxStepperConfig: ILuxStepperConfiguration;\n\n  constructor() {}\n\n  ngAfterViewInit() {\n    // Sobald die Component initialisiert ist, dem Parent (luxStepper) den\n    // MatStepper und die MatStepLabels mitteilen\n    this.luxMatStepperLoaded.emit(this.matStepper);\n    this.luxMatStepLabelsLoaded.emit(this.matStepLabels.toArray());\n    this.matStepLabels.changes.subscribe(() => {\n      this.luxMatStepLabelsLoaded.emit(this.matStepLabels.toArray());\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { LuxStepperParent } from '../../lux-stepper-model/lux-stepper-parent.class';\n\n@Component({\n  selector: 'lux-stepper-horizontal',\n  templateUrl: './lux-stepper-horizontal.component.html',\n  styleUrls: ['./lux-stepper-horizontal.component.scss']\n})\nexport class LuxStepperHorizontalComponent extends LuxStepperParent {\n  constructor() {\n    super();\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { LuxStepComponent } from '../lux-step.component';\nimport { ILuxStepperConfiguration } from '../../lux-stepper-model/lux-stepper-configuration.interface';\n\n@Component({\n  selector: 'lux-stepper-nav-buttons',\n  templateUrl: './lux-stepper-nav-buttons.component.html',\n  styleUrls: ['./lux-stepper-nav-buttons.component.scss']\n})\nexport class LuxStepperNavButtonsComponent implements OnInit {\n  @Output() luxPrevClick: EventEmitter<void> = new EventEmitter();\n  @Output() luxNextClick: EventEmitter<void> = new EventEmitter();\n  @Output() luxFinClick: EventEmitter<void> = new EventEmitter();\n\n  @Input() luxIndex: number;\n  @Input() luxStep: LuxStepComponent;\n  @Input() luxStepperConfig: ILuxStepperConfiguration;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component } from '@angular/core';\nimport { LuxStepperParent } from '../../lux-stepper-model/lux-stepper-parent.class';\n\n@Component({\n  selector: 'lux-stepper-vertical',\n  templateUrl: './lux-stepper-vertical.component.html',\n  styleUrls: ['./lux-stepper-vertical.component.scss']\n})\nexport class LuxStepperVerticalComponent extends LuxStepperParent {\n  constructor() {\n    super();\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'lux-app-header-action-nav-item',\n  templateUrl: './lux-app-header-action-nav-item.component.html',\n  styleUrls: ['./lux-app-header-action-nav-item.component.scss']\n})\nexport class LuxAppHeaderActionNavItemComponent implements OnInit {\n  @Input() luxLabel: string;\n  @Input() luxIconName: string;\n  @Input() luxColor: string;\n  @Input() luxDisabled: boolean;\n  @Input() luxTagId: string;\n\n  @Output() luxClicked: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","// tslint:disable:max-line-length\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatProgressSpinnerModule,\n  MatStepperModule,\n  MatTabsModule\n} from '@angular/material';\nimport { LuxActionModule } from '../lux-action/lux-action.module';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxIconComponent } from '../lux-icon/lux-icon/lux-icon.component';\nimport { LuxPipesModule } from '../lux-pipes/lux-pipes.module';\nimport { LuxMediaQueryObserverService } from '../lux-util/lux-media-query-observer.service';\nimport { LuxAccordionComponent } from './lux-accordion/lux-accordion.component';\nimport { LuxAppFooterComponent } from './lux-app-footer/lux-app-footer.component';\nimport { LuxAppHeaderRightNavComponent } from './lux-app-header/lux-app-header-subcomponents/lux-app-header-right-nav/lux-app-header-right-nav.component';\nimport { LuxAppHeaderComponent } from './lux-app-header/lux-app-header.component';\nimport { LuxCardActionsComponent } from './lux-card/lux-card-subcomponents/lux-card-actions.component';\nimport { LuxCardContentExpandedComponent } from './lux-card/lux-card-subcomponents/lux-card-content-expanded.component';\nimport { LuxCardContentComponent } from './lux-card/lux-card-subcomponents/lux-card-content.component';\nimport { LuxCardInfoComponent } from './lux-card/lux-card-subcomponents/lux-card-info.component';\nimport { LuxCardComponent } from './lux-card/lux-card.component';\nimport { LuxDividerComponent } from './lux-divider/lux-divider.component';\nimport { LuxListItemContentComponent } from './lux-list/lux-list-subcomponents/lux-list-item-content.component';\nimport { LuxListItemIconComponent } from './lux-list/lux-list-subcomponents/lux-list-item-icon.component';\nimport { LuxListItemComponent } from './lux-list/lux-list-subcomponents/lux-list-item.component';\nimport { LuxListComponent } from './lux-list/lux-list.component';\nimport { LuxDetailViewComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-detail-view/lux-detail-view.component';\nimport { LuxMasterFooterComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-master-footer/lux-master-footer.component';\nimport { LuxMasterHeaderContentComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-master-header/lux-master-header-content.component';\nimport { LuxMasterHeaderComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-master-header/lux-master-header.component';\nimport { LuxMasterSimpleComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-master-simple/lux-master-simple.component';\nimport { LuxMasterViewComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-master-view/lux-master-view.component';\nimport { LuxMasterDetailComponent } from './lux-master-detail/lux-master-detail.component';\nimport { LuxPanelActionComponent } from './lux-panel/lux-panel-subcomponents/lux-panel-action.component';\nimport { LuxPanelContentComponent } from './lux-panel/lux-panel-subcomponents/lux-panel-content.component';\nimport { LuxPanelHeaderDescriptionComponent } from './lux-panel/lux-panel-subcomponents/lux-panel-header-description.component';\nimport { LuxPanelHeaderTitleComponent } from './lux-panel/lux-panel-subcomponents/lux-panel-header-title.component';\nimport { LuxPanelComponent } from './lux-panel/lux-panel.component';\nimport { LuxStepContentComponent } from './lux-stepper/lux-stepper-subcomponents/lux-step-content.component';\nimport { LuxStepHeaderComponent } from './lux-stepper/lux-stepper-subcomponents/lux-step-header.component';\nimport { LuxStepComponent } from './lux-stepper/lux-stepper-subcomponents/lux-step.component';\nimport { LuxStepperComponent } from './lux-stepper/lux-stepper.component';\nimport { LuxTabComponent } from './lux-tabs/lux-tabs-subcomponents/lux-tab.component';\nimport { LuxTabsComponent } from './lux-tabs/lux-tabs.component';\nimport { LuxTileComponent } from './lux-tile/lux-tile.component';\nimport { LuxDetailWrapperComponent } from './lux-master-detail/lux-master-detail-subcomponents/lux-detail-view/lux-detail-wrapper.component';\nimport { LuxSideNavComponent } from './lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav.component';\nimport { LuxSideNavFooterComponent } from './lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-footer.component';\nimport { LuxSideNavHeaderComponent } from './lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-header.component';\nimport { LuxSideNavItemComponent } from './lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-item.component';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxAppContentComponent } from './lux-app-content/lux-app-content.component';\nimport { LuxStepperHorizontalComponent } from './lux-stepper/lux-stepper-subcomponents/lux-stepper-horizontal/lux-stepper-horizontal.component';\nimport { LuxStepperNavButtonsComponent } from './lux-stepper/lux-stepper-subcomponents/lux-stepper-nav-buttons/lux-stepper-nav-buttons.component';\nimport { LuxStepperVerticalComponent } from './lux-stepper/lux-stepper-subcomponents/lux-stepper-vertical/lux-stepper-vertical.component';\nimport { LuxAppHeaderActionNavComponent } from './lux-app-header/lux-app-header-subcomponents/lux-app-header-action-nav/lux-app-header-action-nav.component';\nimport { LuxAppHeaderActionNavItemComponent } from './lux-app-header/lux-app-header-subcomponents/lux-app-header-action-nav/lux-app-header-action-nav-item/lux-app-header-action-nav-item.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatDividerModule,\n    LuxIconModule,\n    LuxActionModule,\n    LuxDirectivesModule,\n    LuxPipesModule,\n    LuxComponentsConfigModule,\n    MatProgressSpinnerModule\n  ],\n  declarations: [\n    LuxAppHeaderComponent,\n    LuxAppFooterComponent,\n    LuxListItemComponent,\n    LuxListItemIconComponent,\n    LuxListItemContentComponent,\n    LuxListComponent,\n    LuxMasterDetailComponent,\n    LuxMasterViewComponent,\n    LuxDetailViewComponent,\n    LuxMasterSimpleComponent,\n    LuxMasterFooterComponent,\n    LuxMasterHeaderComponent,\n    LuxMasterHeaderContentComponent,\n    LuxTabComponent,\n    LuxTabsComponent,\n    LuxCardComponent,\n    LuxCardInfoComponent,\n    LuxCardContentComponent,\n    LuxCardContentExpandedComponent,\n    LuxCardActionsComponent,\n    LuxAccordionComponent,\n    LuxPanelComponent,\n    LuxPanelContentComponent,\n    LuxPanelActionComponent,\n    LuxPanelHeaderTitleComponent,\n    LuxPanelHeaderDescriptionComponent,\n    LuxStepperComponent,\n    LuxStepComponent,\n    LuxStepHeaderComponent,\n    LuxStepContentComponent,\n    LuxDividerComponent,\n    LuxAppHeaderRightNavComponent,\n    LuxTileComponent,\n    LuxDetailWrapperComponent,\n    LuxSideNavComponent,\n    LuxSideNavFooterComponent,\n    LuxSideNavHeaderComponent,\n    LuxSideNavItemComponent,\n    LuxAppContentComponent,\n    LuxStepperHorizontalComponent,\n    LuxStepperNavButtonsComponent,\n    LuxStepperVerticalComponent,\n    LuxAppHeaderActionNavComponent,\n    LuxAppHeaderActionNavItemComponent\n  ],\n  exports: [\n    LuxAppHeaderComponent,\n    LuxAppFooterComponent,\n    LuxListItemComponent,\n    LuxListItemIconComponent,\n    LuxListItemContentComponent,\n    LuxListComponent,\n    LuxMasterDetailComponent,\n    LuxMasterViewComponent,\n    LuxDetailViewComponent,\n    LuxMasterSimpleComponent,\n    LuxMasterFooterComponent,\n    LuxMasterHeaderComponent,\n    LuxMasterHeaderContentComponent,\n    LuxTabComponent,\n    LuxTabsComponent,\n    LuxCardComponent,\n    LuxCardInfoComponent,\n    LuxCardContentComponent,\n    LuxCardContentExpandedComponent,\n    LuxCardActionsComponent,\n    LuxAccordionComponent,\n    LuxPanelComponent,\n    LuxPanelContentComponent,\n    LuxPanelActionComponent,\n    LuxPanelHeaderTitleComponent,\n    LuxPanelHeaderDescriptionComponent,\n    LuxStepperComponent,\n    LuxStepComponent,\n    LuxStepHeaderComponent,\n    LuxStepContentComponent,\n    LuxDividerComponent,\n    LuxAppHeaderRightNavComponent,\n    LuxTileComponent,\n    LuxDetailWrapperComponent,\n    LuxSideNavComponent,\n    LuxSideNavFooterComponent,\n    LuxSideNavHeaderComponent,\n    LuxSideNavItemComponent,\n    LuxAppContentComponent,\n    LuxStepperHorizontalComponent,\n    LuxStepperNavButtonsComponent,\n    LuxStepperVerticalComponent,\n    LuxAppHeaderActionNavComponent,\n    LuxAppHeaderActionNavItemComponent\n  ],\n  providers: [LuxMediaQueryObserverService],\n  entryComponents: [LuxIconComponent, LuxDetailWrapperComponent]\n})\nexport class LuxLayoutModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent, MatAutocompleteTrigger, MatOptionSelectionChange } from '@angular/material';\nimport { LuxFormComponentBase } from '../lux-form-model/lux-form-component-base.class';\nimport { debounceTime, distinctUntilChanged, map, startWith } from 'rxjs/operators';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-autocomplete',\n  templateUrl: './lux-autocomplete.component.html',\n  styleUrls: ['./lux-autocomplete.component.scss']\n})\nexport class LuxAutocompleteComponent extends LuxFormComponentBase implements OnInit, AfterViewInit {\n  private selected$: ReplaySubject<any> = new ReplaySubject<any>(1);\n\n  filteredOptions: Observable<any>;\n\n  @Input() luxPlaceholder: string = '';\n  @Input() luxReadonly: boolean;\n  @Input() luxOptions: any[] = [];\n  @Input() luxOptionLabelProp: string = 'label';\n  @Input() luxLookupDelay: number = 500;\n  @Input() luxErrorMessageNotAnOption: string = 'Der eingegebene Wert ist nicht Teil der Auswahl.';\n  @Input() luxTagId: string;\n  @Input() luxSelectAllOnClick: boolean = true;\n  @Input() luxStrict: boolean = true;\n\n  @Output() luxValueChange: EventEmitter<any> = new EventEmitter();\n  @Output() luxOptionSelected: EventEmitter<any> = new EventEmitter();\n  @Output() luxBlur: EventEmitter<any> = new EventEmitter<any>();\n  @Output() luxFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChild('autoCompleteInput', { read: MatAutocompleteTrigger, static: false })\n  matAutoComplete: MatAutocompleteTrigger;\n  @ViewChild('autoCompleteInput', { read: ElementRef, static: false }) matInput: ElementRef;\n\n  get luxValue(): any {\n    return this.getValue();\n  }\n\n  @Input() set luxValue(value: any) {\n    this.setValue(value);\n  }\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    protected config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.selected$.pipe(distinctUntilChanged()).subscribe(value => {\n      if (this.luxStrict) {\n        if (value === '') {\n          this.luxOptionSelected.emit(null);\n          this.luxValueChange.emit(null);\n        } else {\n          const selectedOption = this.luxOptions.find(option => value === option);\n          if (selectedOption) {\n            this.luxOptionSelected.emit(selectedOption);\n            this.luxValueChange.emit(selectedOption);\n          }\n        }\n      } else {\n        this.luxOptionSelected.emit(value);\n        this.luxValueChange.emit(value);\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.matAutoComplete.panelClosingActions\n      .pipe(debounceTime(this.luxLookupDelay))\n      .subscribe((value: MatOptionSelectionChange) => {\n        if (this.luxStrict) {\n          const filterResult = this.filter(this.getOptionLabel(this.luxValue));\n\n          if (filterResult.length === 1) {\n            this.formControl.setValue(filterResult[0]);\n          }\n\n          this.handleErrors();\n        }\n      });\n\n    this.filteredOptions = this.formControl.valueChanges.pipe(\n      startWith(''),\n      debounceTime(this.luxLookupDelay),\n      map(value => this.getOptionLabel(value)),\n      map(() => {\n        const filterLabel = this.getOptionLabel(this.luxValue);\n        return filterLabel ? this.filter(filterLabel) : this.luxOptions;\n      })\n    );\n  }\n\n  /**\n   * @override errorMessageModifier - Modifikation der Fehlermeldung\n   * @param value\n   * @param errors\n   */\n  errorMessageModifier(value, errors) {\n    if (errors['incorrect']) {\n      return this.luxErrorMessageNotAnOption;\n    }\n    return undefined;\n  }\n\n  /**\n   * Regelt die Darstellung der gewaehlten Option im Normalfall.\n   * (Ausnahme: Focus-Verlust)\n   * @param option\n   * @returns string\n   */\n  displayFn(option: any): string {\n    return this.getOptionLabel(this.luxValue);\n  }\n\n  /**\n   * Filtert das Options-Array nach dem filterTerm und\n   * gibt das Ergebnis als Array zurueck.\n   * @param filterTerm\n   * @returns any[]\n   */\n  filter(filterTerm: any) {\n    return this.luxOptions.filter(option => {\n      const compareValue = this.getOptionLabel(option);\n      return (\n        compareValue\n          .trim()\n          .toLowerCase()\n          .indexOf(filterTerm.trim().toLowerCase()) > -1\n      );\n    });\n  }\n\n  /**\n   * Click-Event Handling\n   * Selektiert den gesamten Text im Input, wenn selectAllOnClick = true ist.\n   * @param clickEvent\n   */\n  onClick(clickEvent: any) {\n    if (this.luxSelectAllOnClick) {\n      clickEvent.target.setSelectionRange(0, clickEvent.target.value.length);\n    }\n  }\n\n  /**\n   * Gibt den darzustellenden Wert einer Option bzw.\n   * die Option selbst (wenn string) wider.\n   * @param option\n   * @returns any\n   */\n  getOptionLabel(option: any) {\n    if (typeof option === 'string') {\n      return option;\n    } else if (!option) {\n      return '';\n    } else {\n      return option[this.luxOptionLabelProp];\n    }\n  }\n\n  selected($event: MatAutocompleteSelectedEvent) {\n    this.luxValue = $event.option.value;\n  }\n\n  private handleErrors() {\n    const errors = this.formControl ? this.formControl.errors : null;\n    if (\n      this.luxOptions.indexOf(this.luxValue) > -1 ||\n      (!!errors && Object.keys(errors).length > 0 && errors['required'])\n    ) {\n      this.handleOtherErrors(errors);\n    } else {\n      this.handleIncorrectError(errors);\n    }\n  }\n\n  private handleOtherErrors(errors: any) {\n    if (errors && errors['incorrect']) {\n      delete errors['incorrect'];\n    }\n\n    this.formControl.setErrors(errors && Object.keys(errors).length !== 0 ? errors : null);\n  }\n\n  private handleIncorrectError(errors: any) {\n    if (this.luxStrict && this.luxValue) {\n      errors = errors ? errors : {};\n      if (!errors['incorrect']) {\n        errors['incorrect'] = true;\n      }\n      this.formControl.setErrors(errors);\n    }\n  }\n\n  // region overridden methods\n  notifyFormValueChanged(formValue: any) {\n    this.selected$.next(formValue);\n    this.luxValueChange.emit(formValue);\n\n    if (formValue && formValue[this.luxOptionLabelProp]) {\n      this.matInput.nativeElement.value = formValue[this.luxOptionLabelProp];\n    }\n  }\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxValueChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxValue);\n  }\n\n  // endregion\n}\n","import { ControlContainer, ValidatorFn, Validators } from '@angular/forms';\nimport { ChangeDetectorRef, EventEmitter, Input, Output, SimpleChanges } from '@angular/core';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormComponentBase } from './lux-form-component-base.class';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n/**\n * Basis-Klasse für FormComponents, die einen ähnlichen Grundaufbau für das Aktivieren eines Boolean-Wertes besitzen\n * (LuxToggle und LuxCheckbox z.B.).\n */\nexport abstract class LuxFormCheckableBaseClass extends LuxFormComponentBase {\n  @Output() luxCheckedChange: EventEmitter<boolean> = new EventEmitter();\n\n  @Input() luxTagId: string;\n  @Input() luxReadonly: boolean;\n\n  get luxChecked() {\n    return this.getValue();\n  }\n\n  @Input() set luxChecked(checked: boolean) {\n    this.setValue(checked);\n  }\n\n  protected constructor(\n    controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  // region Overridden methods\n  notifyFormValueChanged(formValue: boolean) {\n    // Aktualisierungen an dem FormControl-Value sollen auch via EventEmitter bekannt gemacht werden\n    this.luxCheckedChange.emit(formValue);\n\n    // Bei luxRequired = true && einem false-Wert entsprechend einen Fehler setzen\n    if (formValue === false && this.luxRequired && this.formControl.errors === null) {\n      this.formControl.setErrors({ required: true });\n    }\n  }\n\n  errorMessageModifier(value, errors) {\n    if (errors.required) {\n      return 'Das ist ein Pflichtfeld';\n    }\n    return undefined;\n  }\n\n  protected checkValidatorsContainRequired(validators: ValidatorFn | ValidatorFn[]) {\n    // Fall: required = true, aber neue Validatoren werden gesetzt\n    if (this.luxRequired === true) {\n      // Sind es mehrere Validatoren, aber kein .requiredTrue? Dann wird er ergänzt\n      if (Array.isArray(validators) && validators.indexOf(Validators.requiredTrue) === -1) {\n        validators.push(Validators.requiredTrue);\n      } else if (!Array.isArray(validators) && validators !== Validators.requiredTrue) {\n        // Ist es nur ein einzelner Validator und nicht .requiredTrue? Dann Array erstellen und beide kombinieren\n        validators = [validators, Validators.requiredTrue];\n      }\n    } else if (this.luxRequired === false) {\n      if (Array.isArray(validators)) {\n        validators = validators.filter((validator: ValidatorFn) => validator !== Validators.requiredTrue);\n      } else if (validators === Validators.requiredTrue) {\n        validators = undefined;\n      }\n    }\n\n    return validators;\n  }\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxCheckedChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxChecked);\n  }\n\n  // endregion\n}\n","import { ChangeDetectorRef, Component, OnInit, Optional } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormCheckableBaseClass } from '../lux-form-model/lux-form-checkable-base.class';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-checkbox',\n  templateUrl: './lux-checkbox.component.html',\n  styleUrls: ['./lux-checkbox.component.scss']\n})\nexport class LuxCheckboxComponent extends LuxFormCheckableBaseClass implements OnInit {\n  constructor(\n    @Optional() public controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n}\n","import { Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { ThemePalette } from '@angular/material';\nimport { ILuxChipSelected } from '../lux-chips-model/lux-chip-selected.interface';\n\n@Component({\n  selector: 'lux-chip-group',\n  template: ''\n})\nexport class LuxChipGroupComponent implements OnInit {\n  private _luxColor: ThemePalette = 'primary';\n\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n\n  @Output() luxChipClicked = new EventEmitter<number>();\n  @Output() luxChipAdded = new EventEmitter<string>();\n  @Output() luxChipRemoved = new EventEmitter<number>();\n  @Output() luxChipSelected = new EventEmitter<ILuxChipSelected>();\n\n  @Input() luxLabels: string[] = [];\n  @Input() luxDisabled: boolean = false;\n  @Input() luxRemovable: boolean = true;\n  @Input() luxSelected: boolean = true;\n\n  get luxColor(): ThemePalette {\n    return this._luxColor;\n  }\n\n  @Input() set luxColor(color: ThemePalette) {\n    if (color !== 'primary' && color !== 'accent' && color !== 'warn') {\n      color = undefined;\n    }\n    this._luxColor = color;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  add(label: string) {\n    this.luxLabels.push(label);\n    this.luxChipAdded.emit(label);\n  }\n\n  remove(index: number) {\n    this.luxChipRemoved.emit(index);\n    this.luxLabels.splice(index, 1);\n  }\n\n  click(index: number) {\n    this.luxChipClicked.emit(index);\n  }\n\n  select(selected: boolean, index: number) {\n    this.luxChipSelected.emit({ index, selected });\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { ThemePalette } from '@angular/material';\nimport { ILuxChipSelected } from '../lux-chips-model/lux-chip-selected.interface';\n\n@Component({\n  selector: 'lux-chip',\n  template: `\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  `\n})\nexport class LuxChipComponent implements OnInit {\n  private removeClicked: boolean = false;\n\n  private _luxColor: ThemePalette = 'primary';\n\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\n\n  @Output() luxChipRemoved = new EventEmitter<number>();\n  @Output() luxChipClicked = new EventEmitter<number>();\n  @Output() luxChipSelected = new EventEmitter<ILuxChipSelected>();\n\n  @Input() luxDisabled: boolean = false;\n  @Input() luxRemovable: boolean = true;\n  @Input() luxSelected: boolean = true;\n\n  get luxColor(): ThemePalette {\n    return this._luxColor;\n  }\n\n  @Input() set luxColor(color: ThemePalette) {\n    if (color !== 'primary' && color !== 'accent' && color !== 'warn') {\n      color = undefined;\n    }\n    this._luxColor = color;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  remove(index: number) {\n    this.luxChipRemoved.emit(index);\n    this.removeClicked = true;\n  }\n\n  click(index: number) {\n    if (!this.removeClicked) {\n      this.luxChipClicked.emit(index);\n    }\n  }\n\n  select(selected: boolean, index: number) {\n    this.luxSelected = selected;\n    this.luxChipSelected.emit({ index, selected });\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { MatAutocomplete, MatAutocompleteTrigger, MatChip } from '@angular/material';\nimport { LuxChipGroupComponent } from './lux-chips-subcomponents/lux-chip-group.component';\nimport { LuxChipComponent } from './lux-chips-subcomponents/lux-chip.component';\nimport { Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'lux-chips',\n  templateUrl: './lux-chips.component.html',\n  styleUrls: ['./lux-chips.component.scss']\n})\nexport class LuxChipsComponent implements OnDestroy {\n  private readonly inputValueSubscription: Subscription = new Subscription();\n  private readonly newChipSubscription: Subscription = new Subscription();\n\n  private _luxDisabled: boolean = false;\n  private _luxAutocompleteOptions: string[] = [];\n  private _luxLabel: string = 'Neu';\n\n  filteredOptions: string[] = [];\n  inputValue$: Subject<string> = new Subject<string>();\n  newChip$: Subject<any> = new Subject<any>();\n\n  @Input() luxOrientation: 'horizontal' | 'vertical' = 'horizontal';\n  @Input() luxInputAllowed: boolean = false;\n  @Input() luxNewChipGroup: LuxChipGroupComponent;\n  @Input() luxMultiple: boolean = true;\n\n  @Output() luxChipAdded = new EventEmitter<string>();\n\n  @ContentChildren(LuxChipComponent) luxChipComponents: QueryList<LuxChipComponent>;\n  @ContentChildren(LuxChipGroupComponent) luxChipGroupComponents: QueryList<LuxChipGroupComponent>;\n  @ViewChildren(MatChip) matChips: QueryList<MatChip>;\n\n  @ViewChild('input', { read: MatAutocompleteTrigger, static: false }) matAutocompleteTrigger: MatAutocompleteTrigger;\n  @ViewChild('auto', { read: MatAutocomplete, static: false }) matAutocomplete: MatAutocomplete;\n\n  get luxDisabled(): boolean {\n    return this._luxDisabled;\n  }\n\n  @Input() set luxDisabled(disabled: boolean) {\n    this._luxDisabled = disabled;\n    setTimeout(() => {\n      this.luxChipGroupComponents.forEach(chipGroup => (chipGroup.luxDisabled = disabled));\n      this.luxChipComponents.forEach(chip => (chip.luxDisabled = disabled));\n    });\n  }\n\n  get luxAutocompleteOptions(): string[] {\n    return this._luxAutocompleteOptions;\n  }\n\n  @Input() set luxAutocompleteOptions(options: string[]) {\n    this._luxAutocompleteOptions = options ? options : [];\n    this.filteredOptions = this.luxAutocompleteOptions;\n  }\n\n  get luxInputLabel(): string {\n    return this._luxLabel;\n  }\n\n  @Input() set luxInputLabel(label: string) {\n    this._luxLabel = label;\n  }\n\n  // Für lux-form-control, diese ruft luxLabel auf\n  get luxLabel(): string {\n    return this._luxLabel;\n  }\n\n  get chipComponents(): LuxChipComponent[] {\n    return <any>this.luxChipComponents;\n  }\n\n  get chipGroupComponents(): LuxChipGroupComponent[] {\n    return <any>this.luxChipGroupComponents;\n  }\n\n  constructor(@Optional() private controlContainer: ControlContainer) {\n    this.newChipSubscription = this.newChip$.subscribe((value: string) => {\n      this.add(value);\n      this.filteredOptions = this.luxAutocompleteOptions ? this.luxAutocompleteOptions : [];\n    });\n\n    this.inputValueSubscription = this.inputValue$\n      .asObservable()\n      .pipe(\n        startWith(''),\n        distinctUntilChanged(),\n        map((value: string) => {\n          if (!value) {\n            this.filteredOptions = [...this.luxAutocompleteOptions];\n          } else {\n            this.filteredOptions = this.luxAutocompleteOptions.filter(\n              (compareValue: string) =>\n                compareValue\n                  .trim()\n                  .toLowerCase()\n                  .indexOf(value.trim().toLowerCase()) > -1\n            );\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    if (this.newChipSubscription) {\n      this.newChipSubscription.unsubscribe();\n    }\n    if (this.inputValueSubscription) {\n      this.inputValueSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Fuegt einen Chip hinzu.\n   * Fuegt ihn entweder der explizit mitgeteilten newChipList hinzu oder einfach\n   * der letzten mitgegebenen Liste.\n   * @param value\n   */\n  add(value: string) {\n    if (value && value.trim().length > 0) {\n      if (this.luxNewChipGroup) {\n        this.luxNewChipGroup.add(value);\n      } else {\n        this.luxChipAdded.emit(value);\n      }\n\n      // Autocomplete-Feld in jedem Fall schließen (Delay über Timeout, damit kein visuelles Flackern entsteht)\n      setTimeout(() => this.matAutocompleteTrigger.closePanel());\n    }\n  }\n\n  /**\n   * Wird bei Eingabe von Werten in das Input-Feld aufgerufen und schreibt einen neuen Wert\n   * in das inputValue-Subject.\n   * @param value\n   */\n  inputChanged(value: string) {\n    this.inputValue$.next(value);\n  }\n\n  /**\n   * Wird beim Selektieren einer Option im Autocomplete ausgeführt.\n   * @param input\n   * @param value\n   */\n  autoCompleteAdd(input, value) {\n    this.newChip$.next(value);\n    input.value = '';\n  }\n\n  /**\n   * Wird beim Input-Event des Eingabefelds ausgeführt, fragt aber vorher ab, ob das Autocomplete offen ist.\n   * Wenn ja, wird kein neuer Chip erzeugt, da das Autocomplete dies übernimmt.\n   * @param input\n   */\n  inputAdd(input) {\n    if (!this.matAutocomplete.isOpen) {\n      // falls nur eine Option übrig ist, diese als value nehmen anstelle des input textes\n      if (\n        this.luxAutocompleteOptions &&\n        this.luxAutocompleteOptions.length > 1 &&\n        this.filteredOptions &&\n        this.filteredOptions.length === 1\n      ) {\n        this.newChip$.next(this.filteredOptions[0]);\n        input.value = '';\n      } else {\n        this.newChip$.next(input.value);\n        input.value = '';\n      }\n    }\n  }\n}\n","import { LuxFormComponentBase } from './lux-form-component-base.class';\nimport { ChangeDetectorRef, EventEmitter, Input, Output, SimpleChanges } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n/**\n * Basis-Klasse für FormComponents, die einen ähnlichen Grundaufbau für das Eintippen von String-Daten haben\n * (Input und Textarea z.B.).\n */\nexport abstract class LuxFormInputBaseClass extends LuxFormComponentBase {\n  @Output() luxValueChange: EventEmitter<string> = new EventEmitter();\n  @Output() luxBlur: EventEmitter<any> = new EventEmitter<any>();\n  @Output() luxFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input() luxPlaceholder: string = '';\n  @Input() luxReadonly: boolean;\n  @Input() luxTagId: string;\n  @Input() luxAutocomplete: string = 'on';\n\n  get luxValue(): string {\n    return this.getValue();\n  }\n\n  @Input() set luxValue(value: string) {\n    this.setValue(value);\n  }\n\n  protected constructor(\n    controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  // region Overridden methods\n\n  notifyFormValueChanged(formValue: any) {\n    // Aktualisierungen an dem FormControl-Value sollen auch via EventEmitter bekannt gemacht werden\n    this.luxValueChange.emit(formValue);\n  }\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxValueChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxValue);\n  }\n\n  // endregion\n}\n","import { NativeDateAdapter } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport DateTimeFormatOptions = Intl.DateTimeFormatOptions;\n\n@Injectable()\nexport class LuxDatepickerAdapter extends NativeDateAdapter {\n  // dd.MM.yyyy\n  private readonly dotRegExp = new RegExp(/\\d{1,2}\\.\\d{1,2}\\.\\d{4}/);\n\n  // MM/dd/yyyy\n  private readonly backslashRegExp = new RegExp(/\\d{1,2}\\/\\d{1,2}\\/\\d{4}/);\n\n  // dd-MM-yyyy\n  private readonly hyphenRegExp = new RegExp(/\\d{1,2}-\\d{1,2}-\\d{4}/);\n\n  // yyyy-MM-dd\n  private readonly hyphenRegExp_1 = new RegExp(/\\d{4}-\\d{1,2}-\\d{1,2}/);\n\n  format(date: Date | string, displayFormat: DateTimeFormatOptions): string {\n    if (date) {\n      if (displayFormat) {\n        if (typeof date === 'string') {\n          date = new Date(date);\n        }\n        return date.toLocaleDateString(this.locale, displayFormat);\n      } else {\n        return (date as Date).toLocaleDateString(this.locale);\n      }\n    } else {\n      return '';\n    }\n  }\n\n  parse(value: string): Date | null {\n    if (value) {\n      // Prüfen, ob der Wert ein ISO-String ist\n      if (LuxUtil.ISO_8601_FULL.test(value)) {\n        return new Date(value);\n      }\n      // Hat der String das Format dd.MM.YYYY ?\n      if (this.dotRegExp.test(value)) {\n        return this.getUTCNulled_ddMMYYYY(value, '.');\n      } else if (this.backslashRegExp.test(value)) {\n        return this.getUTCNulled_MMddYYY(value, '/');\n      } else if (this.hyphenRegExp.test(value)) {\n        return this.getUTCNulled_ddMMYYYY(value, '-');\n      } else if (this.hyphenRegExp_1.test(value)) {\n        return this.getUTCNulled_YYYYMMdd(value, '-');\n      }\n      return <any>value;\n    }\n    return null;\n  }\n\n  /**\n   * UTC Date mit 0-Werten für Time aus einem ddMMYYYY-String erhalten.\n   * @param dateString\n   * @param separator\n   */\n  private getUTCNulled_ddMMYYYY(dateString: string, separator: string) {\n    const splitDate = dateString.split(separator);\n    const tempDate = new Date(0);\n    tempDate.setUTCFullYear(+splitDate[2], +splitDate[1] - 1, +splitDate[0]);\n    return tempDate;\n  }\n\n  /**\n   * UTC Date mit 0-Werten für Time aus einem YYYYMMdd-String erhalten.\n   * @param dateString\n   * @param separator\n   */\n  private getUTCNulled_YYYYMMdd(dateString: string, separator: string) {\n    const splitDate = dateString.split(separator);\n    const tempDate = new Date(0);\n    tempDate.setUTCFullYear(+splitDate[0], +splitDate[1] - 1, +splitDate[2]);\n    return tempDate;\n  }\n\n  /**\n   * UTC Date mit 0-Werten für Time aus einem MMddYYYY-String erhalten.\n   * @param dateString\n   * @param separator\n   */\n  private getUTCNulled_MMddYYY(dateString: string, separator: string) {\n    const splitDate = dateString.split(separator);\n    const tempDate = new Date(0);\n    tempDate.setUTCFullYear(+splitDate[2], +splitDate[0] - 1, +splitDate[1]);\n    return tempDate;\n  }\n\n  isValid(date: any) {\n    return LuxUtil.isDate(date);\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS, MatDatepicker } from '@angular/material';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { Subscription } from 'rxjs';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LuxFormInputBaseClass } from '../lux-form-model/lux-form-input-base.class';\nimport { LuxDatepickerAdapter } from './lux-datepicker-adapter';\n\nexport const APP_DATE_FORMATS = {\n  parse: {\n    dateInput: { month: '2-digit', year: 'numeric', day: '2-digit' }\n  },\n  display: {\n    dateInput: { month: '2-digit', year: 'numeric', day: '2-digit' },\n    monthYearLabel: { year: 'numeric', month: 'long' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' }\n  }\n};\n\n@Component({\n  selector: 'lux-datepicker',\n  templateUrl: './lux-datepicker.component.html',\n  providers: [\n    { provide: DateAdapter, useClass: LuxDatepickerAdapter, deps: [MAT_DATE_LOCALE, Platform] },\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\n  ]\n})\nexport class LuxDatepickerComponent extends LuxFormInputBaseClass implements OnInit, OnChanges, OnDestroy, DoCheck {\n  private originalTouchUi;\n  private mediaSubscription: Subscription;\n  private previousISO: string;\n\n  min: Date;\n  max: Date;\n  start: Date;\n\n  @Input() luxStartView: 'month' | 'year' = 'month';\n  @Input() luxTouchUi: boolean = false;\n  @Input() luxOpened: boolean = false;\n  @Input() luxStartDate: string = null;\n  @Input() luxShowToggle: boolean = true;\n  @Input() luxLocale: string = 'de-DE';\n  @Input() luxCustomFilter: any = undefined;\n  @Input() luxMaxDate: string = undefined;\n  @Input() luxMinDate: string = undefined;\n\n  @ViewChild(MatDatepicker, { static: false }) matDatepicker: MatDatepicker<any>;\n  @ViewChild('datepickerInput', { read: ElementRef, static: false }) datepickerInput: ElementRef;\n\n  get luxValue(): string {\n    return this.getValue();\n  }\n\n  @Input() set luxValue(value: string) {\n    this.setValue(value);\n  }\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    private dateAdapter: DateAdapter<Date>,\n    private mediaObserver: LuxMediaQueryObserverService,\n    private elementRef: ElementRef,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n    // den Standard-Wert für Autocomplete für Datepicker ausschalten\n    this.luxAutocomplete = 'off';\n    this.dateAdapter.setLocale(this.luxLocale);\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    super.ngOnChanges(simpleChanges);\n    if (simpleChanges.luxOpened) {\n      // Evtl. gibt es ohne das Timeout sonst Fehler, weil der matDatepicker noch nicht gesetzt ist\n      setTimeout(() => {\n        this.triggerOpenClose();\n      });\n    }\n    if (simpleChanges.luxLocale && simpleChanges.luxLocale.currentValue) {\n      this.dateAdapter.setLocale(simpleChanges.luxLocale.currentValue);\n    }\n    if (simpleChanges.luxMaxDate && typeof simpleChanges.luxMaxDate.currentValue === 'string') {\n      this.max = this.dateAdapter.parse(simpleChanges.luxMaxDate.currentValue, {});\n    }\n    if (simpleChanges.luxMinDate && typeof simpleChanges.luxMinDate.currentValue === 'string') {\n      this.min = this.dateAdapter.parse(simpleChanges.luxMinDate.currentValue, {});\n    }\n    if (simpleChanges.luxStartDate && typeof simpleChanges.luxStartDate.currentValue === 'string') {\n      this.start = this.dateAdapter.parse(simpleChanges.luxStartDate.currentValue, {});\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.originalTouchUi = this.luxTouchUi;\n    this.mediaSubscription = this.mediaObserver.getMediaQueryChangedAsObservable().subscribe(() => {\n      this.checkMediaObserver();\n    });\n  }\n\n  ngOnDestroy() {\n    this.mediaSubscription.unsubscribe();\n  }\n\n  /**\n   * Erzeugt für die Unter- bzw. Überschreitung\n   * @param value\n   * @param errors\n   */\n  errorMessageModifier(value, errors) {\n    if (errors.matDatepickerMin) {\n      return 'Das Datum unterschreitet den Minimalwert';\n    } else if (errors.matDatepickerMax) {\n      return 'Das Datum überschreitet den Maximalwert';\n    } else if (errors.required) {\n      if (this.datepickerInput && this.datepickerInput.nativeElement.value) {\n        return 'Das Datum ist ungültig';\n      } else {\n        return 'Das Datum darf nicht leer sein';\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Checkt ob eine mobile Media-Query vorliegt.\n   * Wenn ja, wird automagisch die TouchUI aktiviert.\n   * Wenn nein, wird der vom Aufrufer/originale luxTouchUI-Wert genutzt.\n   */\n  private checkMediaObserver() {\n    if (this.mediaObserver.isXS() || this.mediaObserver.isSM()) {\n      this.luxTouchUi = true;\n    } else {\n      this.luxTouchUi = this.originalTouchUi;\n    }\n  }\n\n  /**\n   * Führt .open() bzw. .close() vom MatDatepicker aus, abhängig vom Wert für luxOpened.\n   */\n  private triggerOpenClose() {\n    if (this.luxOpened) {\n      this.matDatepicker.open();\n    } else {\n      this.matDatepicker.close();\n    }\n  }\n\n  /**\n   * Aktualisiert den FormControl-Value und den Wert im Parent über valueChange mithilfe des übergebenen ISO-Strings.\n   * @param isoValue\n   */\n  private setISOValue(isoValue: string) {\n    setTimeout(() => {\n      this.previousISO = isoValue;\n\n      // valueChange-Emitter anstoßen\n      this.notifyFormValueChanged(isoValue);\n\n      // \"silently\" den FormControl auf den (potentiell) geänderten Wert aktualisieren\n      this.formControl.setValue(isoValue, {\n        emitEvent: false,\n        emitModelToViewChange: false,\n        emitViewToModelChange: false\n      });\n\n      // Per Hand dem Input-Element einen formatierten String übergeben\n      if (!this.datepickerInput.nativeElement.value && isoValue) {\n        this.datepickerInput.nativeElement.value = this.dateAdapter.format(\n          <any>isoValue,\n          APP_DATE_FORMATS.display.dateInput\n        );\n      }\n    });\n  }\n\n  // region overridden methods\n\n  protected setValue(value: any) {\n    if (value !== this.luxValue) {\n      if (!this.formControl) {\n        this._initialValue = value;\n        return;\n      }\n      this.formControl.setValue(value);\n    }\n  }\n\n  protected initFormValueSubscription() {\n    // Aktualisierungen an dem FormControl-Value sollen auch via EventEmitter bekannt gemacht werden\n    this._formValueChangeSubscr = this.formControl.valueChanges.subscribe((value: any) => {\n      this.updateDateValue(value);\n    });\n\n    if (this.formControl.value) {\n      // Es kann vorkommen, dass der initiale Wert nicht im ISO-Format angegeben ist.\n      // Dann muss der Wert noch umgewandelt werden.\n      this.updateDateValue(this.formControl.value);\n    } else if (this._initialValue !== null && this._initialValue !== undefined) {\n      // Vorhandenen Initialwert setzen\n      this.formControl.setValue(this._initialValue);\n    }\n  }\n\n  private updateDateValue(value: any) {\n    if (!value) {\n      this.setISOValue(value);\n      return;\n    }\n\n    // Nachfolgend erstellen\n    if (typeof value === 'string') {\n      value = this.dateAdapter.parse(value, {});\n    }\n\n    const eventDate: Date = value;\n    const tempDate = new Date(0);\n    tempDate.setUTCFullYear(eventDate.getFullYear(), eventDate.getMonth(), eventDate.getDate());\n    tempDate.setUTCHours(0, 0, 0, 0);\n\n    // Sicherheitshalber noch einmal prüfen, kann vorkommen das ein unsinniger Wert eingetragen wird\n    // z.B. 'asdf', das führt zu InvalidDate's\n    if (LuxUtil.isDate(tempDate) && this.previousISO !== tempDate.toISOString()) {\n      this.setISOValue(tempDate.toISOString());\n    }\n  }\n\n  // endregion\n}\n","export enum LuxFileErrorCause {\n  MaxSizeError = 'luxMaximumSize',\n  ReadingFileError = 'luxReadingFile',\n  UploadFileError = 'luxUploadFile',\n  FileNotAccepted = 'luxUnacceptedFile',\n  MultipleForbidden = 'luxMultipleForbidden'\n}\n\nexport interface ILuxFileError {\n  cause: LuxFileErrorCause;\n  exception: any;\n  file?: File;\n}\n","import {\n  ChangeDetectorRef,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ControlContainer, ValidatorFn, Validators } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LuxFormComponentBase } from './lux-form-component-base.class';\nimport { ILuxFileError, LuxFileErrorCause } from '../lux-file/lux-file-model/lux-file-error.interface';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { ILuxFileActionConfig } from '../lux-file/lux-file-model/lux-file-action-config.interface';\nimport { isObservable, Observable, throwError } from 'rxjs';\nimport { ILuxFileObject } from '../lux-file/lux-file-model/lux-file-object.interface';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\n\nexport abstract class LuxFormFileBase extends LuxFormComponentBase {\n  defaultReadFileDelay: number = 1000;\n\n  private _luxAccept: string = '';\n  private _luxSelectedFiles: ILuxFileObject[];\n\n  protected _luxUploadActionConfig: ILuxFileActionConfig = {\n    disabled: false,\n    hidden: false,\n    iconName: 'fas fa-cloud-upload-alt',\n    label: 'Hochladen'\n  };\n  protected _luxDeleteActionConfig: ILuxFileActionConfig = {\n    disabled: false,\n    hidden: false,\n    iconName: 'fas fa-trash',\n    label: 'Löschen'\n  };\n  protected _luxViewActionConfig: ILuxFileActionConfig = {\n    disabled: false,\n    hidden: true,\n    iconName: 'fas fa-eye',\n    label: 'Ansehen'\n  };\n  protected _luxDownloadActionConfig: ILuxFileActionConfig = {\n    disabled: false,\n    hidden: true,\n    iconName: 'fas fa-download',\n    label: 'Download'\n  };\n\n  progress: number = -1;\n  forceProgressIndeterminate: boolean = false;\n\n  @ViewChild('downloadLink', { read: ElementRef, static: true }) downloadLink: ElementRef;\n  @ViewChild('fileupload', { read: ElementRef, static: true }) fileuploadInput: ElementRef;\n\n  @Output() luxSelectedFilesChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input() luxUploadReportProgress: boolean = false;\n  @Input() luxContentsAsBlob: boolean = false;\n  @Input() luxTagId: string;\n  @Input() luxMaxSizeMB: number = 10;\n  @Input() luxCapture: string = '';\n  @Input() luxUploadUrl: string = '';\n  @Input() luxDnDActive: boolean = true;\n\n  @HostBinding('class.lux-file-highlight') isDragActive: boolean = false;\n\n  @HostListener('dragover', ['$event']) onDragOver($event) {\n    if (this.isDnDAllowed()) {\n      this.handleDragOver($event);\n    }\n  }\n\n  @HostListener('dragleave', ['$event']) onDragLeave($event) {\n    if (this.isDnDAllowed()) {\n      this.handleDragLeave($event);\n    }\n  }\n\n  @HostListener('drop', ['$event']) onDrop($event) {\n    if (this.isDnDAllowed()) {\n      this.handleDrop($event);\n    }\n  }\n\n  get luxUploadActionConfig(): ILuxFileActionConfig {\n    return this._luxUploadActionConfig;\n  }\n\n  @Input() set luxUploadActionConfig(config: ILuxFileActionConfig) {\n    if (config) {\n      this._luxUploadActionConfig = config;\n    }\n  }\n\n  get luxDeleteActionConfig(): ILuxFileActionConfig {\n    return this._luxDeleteActionConfig;\n  }\n\n  @Input() set luxDeleteActionConfig(config: ILuxFileActionConfig) {\n    if (config) {\n      this._luxDeleteActionConfig = config;\n    }\n  }\n\n  get luxViewActionConfig(): ILuxFileActionConfig {\n    return this._luxViewActionConfig;\n  }\n\n  @Input() set luxViewActionConfig(config: ILuxFileActionConfig) {\n    if (config) {\n      this._luxViewActionConfig = config;\n    }\n  }\n\n  get luxDownloadActionConfig(): ILuxFileActionConfig {\n    return this._luxDownloadActionConfig;\n  }\n\n  @Input() set luxDownloadActionConfig(config: ILuxFileActionConfig) {\n    if (config) {\n      this._luxDownloadActionConfig = config;\n    }\n  }\n\n  get luxSelectedFiles(): any {\n    return this.getValue();\n  }\n\n  @Input() set luxSelectedFiles(selectedFiles: any) {\n    this.setValue(selectedFiles);\n  }\n\n  get luxAccept(): any {\n    return this._luxAccept;\n  }\n\n  @Input() set luxAccept(accepts: any) {\n    if (!accepts) {\n      accepts = '';\n    }\n    this._luxAccept = Array.isArray(accepts) ? accepts.join(',') : accepts;\n  }\n\n  get progressMode(): string {\n    return (this.progress === 0 && !this.luxUploadReportProgress) || this.forceProgressIndeterminate\n      ? 'indeterminate'\n      : 'determinate';\n  }\n\n  get isProgressVisible(): boolean {\n    return this.progress >= 0 || this.forceProgressIndeterminate;\n  }\n\n  protected constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService,\n    protected http: HttpClient,\n    private liveAnnouncer: LiveAnnouncer\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  /**\n   * Wird beim Fokussieren des Elements aufgerufen und markiert das FormControl als \"touched\".\n   * @param $event\n   */\n  onFocusIn($event) {\n    this.formControl.markAsTouched();\n    this.luxFocusIn.emit($event);\n  }\n\n  /**\n   * Entfernt die aktuell selektierten Dateien und entfernt etwaige (spezifische) Fehler aus dem FormControl.\n   * @param $event\n   */\n  clearFiles($event?) {\n    this.formControl.markAsTouched();\n    this.formControl.markAsDirty();\n\n    this.luxSelectedFiles = undefined;\n    this.notifyFormValueChanged();\n    this.clearFormControlErrors();\n    if (this.luxDeleteActionConfig.onClick) {\n      this.luxDeleteActionConfig.onClick();\n    }\n\n    this.announceAllFilesRemove();\n  }\n\n  /**\n   * Löst den Download der übergebenen Datei aus.\n   * @param file\n   */\n  downloadFile(file: ILuxFileObject | ILuxFileObject[]) {\n    this.formControl.markAsTouched();\n    file = Array.isArray(file) ? file[0] : file;\n    const downloadLink = <HTMLAnchorElement>this.downloadLink.nativeElement;\n    downloadLink.download = file.name;\n\n    if (file.content instanceof Blob) {\n      if (window.navigator.msSaveBlob) {\n        // IE\n        window.navigator.msSaveOrOpenBlob(file.content, file.name);\n      } else {\n        const url = window.URL.createObjectURL(file.content);\n        downloadLink.href = url;\n        downloadLink.click();\n        window.URL.revokeObjectURL(url);\n      }\n    } else {\n      if (window.navigator.msSaveBlob) {\n        // IE\n        try {\n          const arrBuffer = LuxUtil.base64ToArrayBuffer(file.content.split(',')[1]);\n          window.navigator.msSaveOrOpenBlob(new Blob([arrBuffer], { type: file.type }), file.name);\n        } catch (e) {\n          console.log(e);\n        }\n      } else {\n        downloadLink.href = file.content;\n        downloadLink.click();\n      }\n    }\n\n    if (this.luxDownloadActionConfig.onClick) {\n      this.luxDownloadActionConfig.onClick(file);\n    }\n  }\n\n  /**\n   * Löst den base64Callback der übergebenen Datei aus.\n   * Schreibt dann anschließend den Base64-String in die Datei.\n   * @param file\n   */\n  viewFile(file: ILuxFileObject) {\n    this.formControl.markAsTouched();\n    // Wenn die Datei bereits einen Base64-Wert besitzt, den onClick-Callback ausführen\n    if (file.content) {\n      this.triggerViewFileClick(file);\n      return;\n    }\n    const callbackResult = file.contentCallback();\n    // Wenn der Callback ein Observable ist, dieses auflösen und dem File-Base64 zuweisen\n    if (isObservable(callbackResult)) {\n      (<Observable<string>>callbackResult).subscribe((content: any) => {\n        file.content = content;\n        this.triggerViewFileClick(file);\n      });\n    } else {\n      // Wenn der Callback ein normaler String oder Promise ist, diesen auflösen und den File-Base64 aktualisieren\n      Promise.resolve(<any>callbackResult).then((content: any) => {\n        file.content = content;\n        this.triggerViewFileClick(file);\n      });\n    }\n  }\n\n  /**\n   * Wandelt File-Objekt zu LuxFileObjects um und versucht diese Hochzuladen.\n   * Gibt ein Promise mit den neuen FileObjects zurück bzw. einen Fehler aus den internen Promises.\n   * @param files\n   */\n  async updateSelectedFiles(files: FileList | File[]) {\n    try {\n      let newFiles = [];\n      await this.mapFilesToFileObjects(files).then((fileObjects: ILuxFileObject[]) => (newFiles = fileObjects));\n      await this.uploadFiles(newFiles);\n      if (this.luxUploadActionConfig.onClick) {\n        this.luxUploadActionConfig.onClick(newFiles && newFiles.length === 1 ? newFiles[0] : newFiles);\n      }\n      this.formControl.markAsTouched();\n      this.formControl.markAsDirty();\n      return Promise.resolve(newFiles);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  /**\n   * Stößt das Hochladen der Dateien zu einer bestimmten URL an.\n   */\n  async uploadFiles(files: ILuxFileObject[] | ILuxFileObject) {\n    if (!this.luxUploadUrl) {\n      this.forceProgressIndeterminate = false;\n      return Promise.resolve();\n    }\n\n    if (this.luxUploadReportProgress) {\n      this.forceProgressIndeterminate = false;\n    }\n\n    this.progress = 0;\n    // Ansonsten die Dateien in einem FormData-Objekt sammeln und über den httpClient hochladen\n    const formData = new FormData();\n    let selectedFiles = [];\n    if (!files) {\n      selectedFiles = [];\n    } else if (!Array.isArray(files)) {\n      selectedFiles.push(files);\n    } else {\n      selectedFiles.push(...files);\n    }\n    selectedFiles.forEach((fileObject: ILuxFileObject) => {\n      formData.append(fileObject.name, fileObject.content);\n    });\n\n    await new Promise((resolve, reject) => {\n      const options = {};\n      if (this.luxUploadReportProgress) {\n        options['reportProgress'] = true;\n        options['observe'] = 'events';\n      }\n      options['responseType'] = 'blob';\n\n      this.http.post(this.luxUploadUrl, formData, options).subscribe(\n        (event: any) => {\n          // wenn wir eine determinierte Fortschrittsanzeige haben, dann muss der Fortschritt auch korrekt abgefangen werden\n          if (this.luxUploadReportProgress) {\n            if (event.type === HttpEventType.UploadProgress) {\n              this.progress = Math.round((event.loaded / event.total) * 100);\n            } else if (event.type === HttpEventType.Response) {\n              resolve();\n            }\n          } else {\n            resolve();\n          }\n        },\n        error => {\n          // Hier geben wir den speziellen Fehler noch mal in die console\n          console.error(error);\n          // Für den Fall das der Upload fehlschlägt, melden wir einen Fehler am Component\n          reject(error);\n          return throwError(error);\n        }\n      );\n    }).then(\n      () => {\n        this.progress = -1;\n        this.forceProgressIndeterminate = false;\n        return Promise.resolve();\n      },\n      error => {\n        this.progress = -1;\n        this.forceProgressIndeterminate = false;\n        return Promise.reject({\n          cause: LuxFileErrorCause.UploadFileError,\n          exception: error,\n          file: files\n        });\n      }\n    );\n  }\n\n  /**\n   * Liest die übergebenen Dateien aus und erzeugt daraus ein Promise, welches abgefragt werden kann.\n   * Fängt potentielle Fehler ab und gibt diese als abgelehnte Promises zurück.\n   * @param files\n   */\n  async mapFilesToFileObjects(files: FileList | File[]) {\n    this._luxSelectedFiles = [];\n    const filesArray: File[] = Array.from(files);\n    const newFiles: ILuxFileObject[] = [];\n    for (const file of filesArray) {\n      if (!file) {\n        continue;\n      }\n\n      // Prüfen ob Dateigröße überschritten worden ist\n      if (this.getFileSizeInMB(file) > this.luxMaxSizeMB) {\n        return Promise.reject({\n          cause: LuxFileErrorCause.MaxSizeError,\n          exception: this.getMaxSizeErrorMessage(file),\n          file: file\n        });\n      }\n\n      // Prüfen ob der Dateityp \"accepted\" ist\n      const splitAccepted = this.luxAccept ? this.luxAccept.split(',') : [];\n      const splitFileEnding = file.name.split('.');\n      const fileEnding = `.${splitFileEnding[splitFileEnding.length - 1]}`;\n      let isAccepted: boolean = splitAccepted.length === 0 ? true : false;\n      splitAccepted.forEach((accepted: string) => {\n        if (accepted) {\n          accepted = accepted.toLocaleLowerCase();\n\n          if (accepted === '.txt') {\n            accepted = 'text/plain';\n          }\n        }\n\n        if (!isAccepted) {\n          // Für spezielle Wildcards nutzen wir diese Umwandlung\n          switch (accepted) {\n            case 'image/*':\n              accepted = 'image';\n              break;\n            case 'video/*':\n              accepted = 'video';\n              break;\n            case 'audio/*':\n              accepted = 'audio';\n              break;\n          }\n\n          if (accepted === fileEnding.toLocaleLowerCase() || file.type.toLocaleLowerCase().indexOf(accepted) > -1) {\n            isAccepted = true;\n          }\n        }\n      });\n\n      if (!isAccepted) {\n        return Promise.reject({\n          cause: LuxFileErrorCause.FileNotAccepted,\n          exception: this.getFileNotAcceptedMessage(file),\n          file: file\n        });\n      }\n\n      if (this.luxContentsAsBlob) {\n        // Wenn direkt die Blobs genutzt werden sollen, einfach die Datei als content merken\n        newFiles.push({ name: file.name, content: <Blob>file, type: file.type });\n      } else {\n        // Das Auslesen der Datei anstoßen, wenn erfolgreich, wird die Datei zu selectedFiles hinzugefügt.\n        // Bei einem Fehler wird das Promise rejected und gibt einen Fehler zurück.\n        await this.readFile(file)\n          .then((content: any) => {\n            newFiles.push({ name: file.name, content: content, type: file.type });\n          })\n          .catch(error => {\n            return Promise.reject({\n              cause: LuxFileErrorCause.ReadingFileError,\n              exception: error,\n              file: file\n            });\n          });\n      }\n    }\n\n    // Das Array mit den neuen Dateien zurückgeben\n    return Promise.resolve(newFiles);\n  }\n\n  /**\n   * Liest (asynchron) den Base64-String aus der übergebenen Datei heraus bzw. gibt den Fehler zurück, wenn einer\n   * aufgetreten ist.\n   * @param file\n   */\n  readFile(file: File) {\n    return new Promise((resolve, reject) => {\n      const reader = new window['FileReader']();\n\n      reader.onload = fileData => resolve(fileData.target.result);\n      reader.onerror = error => reject(error);\n      reader.readAsDataURL(file);\n    });\n  }\n\n  /**\n   * Wird beim Drag-Over über dem LuxFormControl aufgerufen.\n   * @param $event\n   */\n  handleDragOver($event) {\n    this.isDragActive = true;\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    // Der Drop Effect wird nur gesetzt, wenn die Property auch\n    // vorhanden ist. In den Tests gibt es keinen Drop Effect.\n    if ($event.dataTransfer && $event.dataTransfer.dropEffect) {\n      $event.dataTransfer.dropEffect = 'copy';\n    }\n  }\n\n  /**\n   * Wird beim Drag-Leave über dem LuxFormControl aufgerufen.\n   * @param $event\n   */\n  handleDragLeave($event) {\n    if ($event.target.nodeName.toLocaleLowerCase() === 'lux-file-input') {\n      this.isDragActive = false;\n    }\n\n    $event.stopPropagation();\n    $event.preventDefault();\n  }\n\n  /**\n   * Wird beim Drop eines/mehrerer gezogener Elemente über dem LuxFormControl aufgerufen und löst\n   * die Auswähl-Methoden für die entsprechenden Dateien aus.\n   */\n  handleDrop($event) {\n    this.forceProgressIndeterminate = true;\n    this.isDragActive = false;\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    if ($event.dataTransfer) {\n      this.selectFiles($event.dataTransfer.files);\n    }\n  }\n\n  /**\n   * Funktion, die das Auswählen von Dateien handeln soll.\n   * Die erbenden Klassen implementieren diese Funktion aus.\n   */\n  abstract selectFiles(files: FileList | File[]);\n\n  /**\n   * Prüft ob der Base64-String für die Datei gesetzt ist und ob ein onClick-Aufruf für die View-Action vorhanden ist.\n   * Wenn ja, wird dieser ausgeführt.\n   * @param file\n   */\n  protected triggerViewFileClick(file: ILuxFileObject) {\n    if (file.content && this.luxViewActionConfig.onClick) {\n      this.luxViewActionConfig.onClick(file);\n    }\n  }\n\n  /**\n   * Entfernt die in dieser Component gesetzten Fehlermeldungen.\n   */\n  protected clearFormControlErrors() {\n    // Das aktuelle Fehlerobjekt auslesen\n    let errors = this.formControl.errors;\n    if (errors) {\n      // Die componentspezifischen Fehler aus dem Objekt entfernen\n      for (const cause of Object.keys(LuxFileErrorCause)) {\n        delete errors[LuxFileErrorCause[cause]];\n      }\n      // Falls errors ein leeres Objekt ist, nehmen wir stattdessen null\n      errors = Object.keys(errors).length === 0 ? null : errors;\n      // Das neue Fehlerobjekt in das FormControl schreiben\n      this.formControl.setErrors(errors);\n    }\n  }\n\n  /**\n   * Aktualisiert das Fehlerobjekt am FormControl, damit eine entsprechende Fehlermeldung angezeigt werden kann.\n   * Leert die Anzeige und gibt Events mit leerem Array aus.\n   * @param error\n   */\n  protected setFormControlErrors(error: ILuxFileError) {\n    this.forceProgressIndeterminate = false;\n    // Vorherige definierte Fehler entfernen\n    this.clearFormControlErrors();\n    // Hier aktualisieren wir das Fehlerobjekt an dem zugrunde liegenden FormControl dieser Component\n    const errors = this.formControl.errors ? this.formControl.errors : {};\n    errors[error.cause] = { file: error.file };\n    this.formControl.setErrors(errors);\n  }\n\n  /**\n   * Berechnet die Größe der übergebenen Datei in MB.\n   * @param file\n   */\n  protected getFileSizeInMB(file: File) {\n    return file.size / 1000000;\n  }\n\n  /**\n   * Gibt die Message für Überschreitung der maximalen Dateigröße zurück.\n   * @param file\n   */\n  protected getMaxSizeErrorMessage(file: File): string {\n    return (\n      `Die Datei \"${file.name}\" überschreitet mit ${+this.getFileSizeInMB(file).toFixed(2)}MB ` +\n      `die erlaubte Dateigröße von ${+this.luxMaxSizeMB.toFixed(2)}MB`\n    );\n  }\n\n  /**\n   * Gibt die Message für Fehler beim Auslesen einer Datei zurück.\n   * @param file\n   */\n  protected getReadingFileErrorMessage(file: File): string {\n    return `Beim Lesen der Datei \"${file.name}\" ist ein Fehler aufgetreten`;\n  }\n\n  /**\n   * Gibt die Message für Fehler beim Upload einer Datei zurück.\n   * @param files\n   */\n  protected getUploadFileErrorMessage(files: File[]): string {\n    if (!files) {\n      return 'Das Hochladen ist fehlgeschlagen';\n    }\n    return `Das Hochladen der ${files.length > 1 ? 'ausgewählten Dateien' : 'ausgewählten Datei'} ist fehlgeschlagen`;\n  }\n\n  /**\n   * Gibt die Message für falsche Dateitypen zurück.\n   * @param file\n   */\n  protected getFileNotAcceptedMessage(file: File): string {\n    return `Die Datei \"${file.name}\" hat einen nicht akzeptierten Dateityp`;\n  }\n\n  /**\n   * Gibt die Message für falsche Dateitypen zurück.\n   * @param file\n   */\n  protected getMultipleForbiddenMessage(): string {\n    return `Es darf nur eine Datei ausgewählt werden`;\n  }\n\n  /**\n   * Meldet dem ScreenReader, dass gerade eine/mehrere Dateien bearbeitet werden (Ladeanzeige).\n   * @param multiple\n   */\n  protected announceFileProcess(multiple: boolean) {\n    this.liveAnnouncer.announce(\n      `Bitte warten. Die ${multiple ? 'Dateien werden' : 'Datei wird'} verarbeitet.`,\n      'assertive'\n    );\n  }\n\n  /**\n   * Meldet dem ScreenReader, dass alle Dateien entfernt werden sollen.\n   */\n  protected announceAllFilesRemove() {\n    this.liveAnnouncer.announce(`Alle Dateien werden entfernt.`, 'assertive');\n  }\n\n  /**\n   * Meldet dem ScreenReader, dass eine bestimmte Datei entfernt werden soll.\n   * @param fileName\n   */\n  protected announceFileRemove(fileName: string) {\n    this.liveAnnouncer.announce(`Die Datei ${fileName} wird entfernt.`, 'assertive');\n  }\n\n  /**\n   * Gibt wieder, ob Drag-and-Drop gerade aktiv und möglich ist.\n   */\n  private isDnDAllowed(): boolean {\n    return this.luxDnDActive && !this.luxDisabled && !this.luxReadonly;\n  }\n\n  // region Overridden methods\n\n  protected errorMessageModifier(value: any, errors: any) {\n    if (errors[LuxFileErrorCause.MaxSizeError]) {\n      return this.getMaxSizeErrorMessage(errors[LuxFileErrorCause.MaxSizeError].file);\n    } else if (errors[LuxFileErrorCause.ReadingFileError]) {\n      return this.getReadingFileErrorMessage(errors[LuxFileErrorCause.ReadingFileError].file);\n    } else if (errors[LuxFileErrorCause.UploadFileError]) {\n      return this.getUploadFileErrorMessage(errors[LuxFileErrorCause.UploadFileError].file);\n    } else if (errors[LuxFileErrorCause.FileNotAccepted]) {\n      return this.getFileNotAcceptedMessage(errors[LuxFileErrorCause.FileNotAccepted].file);\n    } else if (errors[LuxFileErrorCause.MultipleForbidden]) {\n      return this.getMultipleForbiddenMessage();\n    }\n\n    return undefined;\n  }\n\n  protected notifyFormValueChanged() {\n    this.luxSelectedFilesChange.emit(this.luxSelectedFiles);\n\n    // Wir leeren nach jedem Value-Change das Input, da wir das FormControl bereits als SSoT besitzen\n    // und das Input durch den Browser gelegentlich sonst geblockt werden (wenn eine Datei ausgewählt worden ist)\n    this.fileuploadInput.nativeElement.value = null;\n  }\n\n  protected updateValidators(validators: ValidatorFn | ValidatorFn[]) {\n    if (!validators && this.luxRequired) {\n      validators = Validators.required;\n    }\n\n    super.updateValidators(validators);\n  }\n\n  protected initFormValueSubscription() {\n    this._formValueChangeSubscr = this.formControl.valueChanges.subscribe(() => {\n      // Wenn die Dateien erfolgreich gelesen werden konnten, die (spezifischen) Fehler entfernen\n      this.clearFormControlErrors();\n    });\n\n    if (this._initialValue !== null && this._initialValue !== undefined) {\n      this.setValue(this._initialValue);\n    }\n  }\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxSelectedFilesChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxSelectedFiles);\n  }\n\n  // endregion\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../../lux-util/lux-console.service';\nimport { LuxFormFileBase } from '../../lux-form-model/lux-form-file-base.class';\nimport { ILuxFileError } from '../lux-file-model/lux-file-error.interface';\nimport { ILuxFileObject } from '../lux-file-model/lux-file-object.interface';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { HttpClient } from '@angular/common/http';\nimport { LuxComponentsConfigService } from '../../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-file-input',\n  templateUrl: './lux-file-input.component.html',\n  styleUrls: ['./lux-file-input.component.scss']\n})\nexport class LuxFileInputComponent extends LuxFormFileBase {\n  @ViewChild('visibleInput', { read: ElementRef, static: false }) visibleInput: ElementRef;\n\n  @Output() luxBlur: EventEmitter<any> = new EventEmitter<any>();\n  @Output() luxFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input() luxPlaceholder: string = '';\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    http: HttpClient,\n    liveAnnouncer: LiveAnnouncer,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config, http, liveAnnouncer);\n  }\n\n  /**\n   * Wird bei der Auswahl von Dateien (Dialog oder DnD) aufgerufen.\n   * Aktualisiert die aktuell selektierten Dateien, stößt einen Upload an, handelt Fehlermeldungen und\n   * emittet die entspechenden Events.\n   * @param files\n   */\n  selectFiles(files: File[]) {\n    this.formControl.markAsTouched();\n    this.formControl.markAsDirty();\n    this.forceProgressIndeterminate = true;\n    this.announceFileProcess(files && files.length > 1);\n\n    if (!files || files.length === 0) {\n      this.forceProgressIndeterminate = false;\n      return;\n    }\n\n    // Timeout, um Flackern durch Progress zu vermeiden\n    setTimeout(() => {\n      this.updateSelectedFiles(files).then(\n        (newFiles: ILuxFileObject[]) => {\n          this.luxSelectedFiles = newFiles[0];\n          this.notifyFormValueChanged();\n        },\n        error => this.setFormControlErrors(error)\n      );\n    }, this.defaultReadFileDelay);\n  }\n\n  // region Overridden methods\n\n  protected errorMessageModifier(value: any, errors: any): string | undefined {\n    if (errors.required) {\n      return 'Es muss eine Datei ausgewählt werden';\n    }\n    return super.errorMessageModifier(value, errors);\n  }\n\n  protected setFormControlErrors(error: ILuxFileError) {\n    this.luxSelectedFiles = undefined;\n\n    super.setFormControlErrors(error);\n  }\n\n  // endregion\n}\n","import {\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../../lux-util/lux-console.service';\nimport { LuxFormFileBase } from '../../lux-form-model/lux-form-file-base.class';\nimport { HttpClient } from '@angular/common/http';\nimport { LuxFileErrorCause } from '../lux-file-model/lux-file-error.interface';\nimport { Subscription } from 'rxjs';\nimport { ILuxFileListActionConfig } from '../lux-file-model/lux-file-list-action-config.interface';\nimport { ILuxFileObject } from '../lux-file-model/lux-file-object.interface';\nimport { LuxComponentsConfigService } from '../../../lux-components-config/lux-components-config.service';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { LuxCardComponent } from '../../../lux-layout/lux-card/lux-card.component';\n\n@Component({\n  selector: 'lux-file-list',\n  templateUrl: './lux-file-list.component.html',\n  styleUrls: ['./lux-file-list.component.scss']\n})\nexport class LuxFileListComponent extends LuxFormFileBase implements AfterViewInit, AfterViewChecked, OnDestroy {\n  private _fileEntryNodesChangeSubscr: Subscription;\n\n  protected _luxUploadActionConfig: ILuxFileListActionConfig = {\n    disabled: false,\n    disabledHeader: false,\n    hidden: false,\n    hiddenHeader: false,\n    iconName: 'fas fa-cloud-upload-alt',\n    iconNameHeader: 'fas fa-cloud-upload-alt',\n    label: 'Hochladen',\n    labelHeader: 'Neue Dateien hochladen'\n  };\n  protected _luxDeleteActionConfig: ILuxFileListActionConfig = {\n    disabled: false,\n    disabledHeader: false,\n    hidden: false,\n    hiddenHeader: false,\n    iconName: 'fas fa-trash',\n    iconNameHeader: 'fas fa-trash',\n    label: 'Löschen',\n    labelHeader: 'Alle Dateien entfernen'\n  };\n\n  fileIcons: string[] = [];\n\n  rowWidth = 0;\n  iconActionBarWidth = 50;\n  alwaysVisibleView = false;\n  alwaysVisibleUpload = false;\n  alwaysVisibleDownload = false;\n  alwaysVisibleDelete = false;\n\n  @ViewChildren('fileEntry', { read: ElementRef }) fileEntries: QueryList<ElementRef>;\n  @ViewChild('fileuploadSingle', { read: ElementRef, static: true }) fileuploadSingleInput: ElementRef;\n  @ViewChild(LuxCardComponent, { read: ElementRef, static: true }) fileCard: ElementRef;\n\n  @Input() luxShowPreview: boolean = true;\n  @Input() luxMultiple: boolean = true;\n  @Input() luxBackgroundIconName: string = 'fas fa-cloud-upload-alt';\n\n  get luxUploadActionConfig(): ILuxFileListActionConfig {\n    return this._luxUploadActionConfig;\n  }\n\n  @Input() set luxUploadActionConfig(config: ILuxFileListActionConfig) {\n    if (config) {\n      this._luxUploadActionConfig = config;\n    }\n  }\n\n  get luxDeleteActionConfig(): ILuxFileListActionConfig {\n    return this._luxDeleteActionConfig;\n  }\n\n  @Input() set luxDeleteActionConfig(config: ILuxFileListActionConfig) {\n    if (config) {\n      this._luxDeleteActionConfig = config;\n    }\n  }\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    http: HttpClient,\n    liveAnnouncer: LiveAnnouncer,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config, http, liveAnnouncer);\n  }\n\n  ngAfterViewInit() {\n    this._fileEntryNodesChangeSubscr = this.fileEntries.changes.subscribe(() => {\n      this.updateIconAndImage();\n    });\n\n    this.updateIconAndImage();\n  }\n\n  private updateIconAndImage() {\n    this.setFileIcons();\n\n    if (this.luxShowPreview) {\n      this.setImgSrcs();\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    if (this._fileEntryNodesChangeSubscr) {\n      this._fileEntryNodesChangeSubscr.unsubscribe();\n    }\n  }\n\n  shouldDisplayPreviewImg(index: number): boolean {\n    return (\n      this.luxShowPreview && this.fileIcons && this.fileIcons[index] && this.fileIcons[index] === 'fas fa-file-image'\n    );\n  }\n\n  /**\n   * Entfernt eine Datei aus den selektierten Dateien.\n   * @param index\n   */\n  removeFile(index: number) {\n    this.formControl.markAsTouched();\n    this.formControl.markAsDirty();\n\n    // Wenn mehrere Dateien selektiert sind, diese nach der entfernten Datei filtern ansonsten \"undefined\" nutzen\n    const newFiles = Array.isArray(this.luxSelectedFiles)\n      ? this.luxSelectedFiles.filter((file, searchIndex) => searchIndex !== index)\n      : undefined;\n\n    // Via LiveAnnouncer mitteilen welche Datei entfernt wird\n    this.announceFileRemove(\n      Array.isArray(this.luxSelectedFiles) ? this.luxSelectedFiles[index].name : this.luxSelectedFiles.name\n    );\n\n    // Wir entfernen hier nur eine Datei, deshalb ist das neue Auslesen der Base64-Strings nicht nötig\n    this.uploadFiles(newFiles).then(\n      () => {\n        this.luxSelectedFiles = newFiles && newFiles.length === 1 ? newFiles[0] : newFiles;\n        this.notifyFormValueChanged();\n      },\n      error => this.setFormControlErrors(error)\n    );\n    if (this.luxDeleteActionConfig.onClick) {\n      this.luxDeleteActionConfig.onClick();\n    }\n  }\n\n  /**\n   * Fügt weitere Dateien zu den bereits vorhandenen hinzu bzw. ersetzt diese.\n   * @param files\n   */\n  selectFiles(files: FileList | File[]) {\n    this.formControl.markAsTouched();\n    this.formControl.markAsDirty();\n    this.forceProgressIndeterminate = true;\n    this.announceFileProcess(files && files.length > 1);\n\n    if (!files || files.length === 0) {\n      this.forceProgressIndeterminate = false;\n      return;\n    }\n\n    // Timeout, um Flackern durch Progress zu vermeiden\n    setTimeout(() => {\n      // Prüfen ob die Dateien bereits vorhanden sind\n      let selectedFilesArray = [];\n      const replaceableFilesMap = new Map<number, File>();\n      if (this.luxSelectedFiles) {\n        files = Array.from(files);\n        selectedFilesArray = Array.isArray(this.luxSelectedFiles) ? this.luxSelectedFiles : [this.luxSelectedFiles];\n        // zu ersetzende Indizes herausfinden\n        files.forEach((file: File) => {\n          const index = selectedFilesArray.findIndex((compareFile: ILuxFileObject) => compareFile.name === file.name);\n          if (index > -1) {\n            replaceableFilesMap.set(index, file);\n          }\n        });\n      }\n\n      // Wenn mehrere Dateien selektiert sind und luxMultiple dies unterbindet, Fehler werfen und Fn beenden\n      // Ausnahme ist, wenn die Dateien nur ersetzt werden sollen\n      if (\n        !this.luxMultiple &&\n        ((!this.luxSelectedFiles && files.length > 1) ||\n          (this.luxSelectedFiles && this.luxSelectedFiles.length > 1) ||\n          (this.luxSelectedFiles && replaceableFilesMap.size !== files.length))\n      ) {\n        this.setFormControlErrors({\n          cause: LuxFileErrorCause.MultipleForbidden,\n          exception: this.getMultipleForbiddenMessage(),\n          file: null\n        });\n        return;\n      }\n\n      this.updateSelectedFiles(files).then(\n        (newFiles: ILuxFileObject[]) => {\n          const tempSelectedFiles = selectedFilesArray;\n\n          // die zu ersetzenden Dateien durchgehen und aktualisieren\n          replaceableFilesMap.forEach((file: File, index: number) => {\n            const replaceableFileObject = newFiles.find((newFile: ILuxFileObject) => newFile.name === file.name);\n            // das gefundene Objekt aus den newFiles entfernen\n            newFiles = newFiles.filter(newFile => newFile !== replaceableFileObject);\n            // die selectedFiles aktualisieren\n            tempSelectedFiles[index] = replaceableFileObject;\n          });\n          // die übrigen neuen Dateien anfügen\n          tempSelectedFiles.push(...newFiles);\n\n          this.luxSelectedFiles =\n            tempSelectedFiles && tempSelectedFiles.length === 1 ? tempSelectedFiles[0] : tempSelectedFiles;\n          this.notifyFormValueChanged();\n        },\n        error => this.setFormControlErrors(error)\n      );\n    }, this.defaultReadFileDelay);\n  }\n\n  /**\n   * Aktualisiert die Preview-Bilder für die (Image-)Dateien.\n   *\n   * Aktualisierung absichtlich via Funktion und nicht Property-Binding, da potentiell Stack-Size Fehler auftreten,\n   * wenn (große) Base64-Strings gegen die src gebunden werden.\n   */\n  private setImgSrcs() {\n    this.fileEntries.forEach((item: ElementRef, index: number) => {\n      const imgElement: HTMLImageElement = (<HTMLElement>item.nativeElement).querySelector('img');\n      if (imgElement && this.luxSelectedFiles) {\n        const targetFileContent = Array.isArray(this.luxSelectedFiles)\n          ? this.luxSelectedFiles[index].content\n          : this.luxSelectedFiles.content;\n        if (targetFileContent instanceof Blob) {\n          this.readFile(<File>targetFileContent).then((content: string) => {\n            imgElement.src = content;\n          });\n        } else {\n          imgElement.src = targetFileContent;\n        }\n      }\n    });\n  }\n\n  /**\n   * Setzt die Icons für die Elemente in der Auflistung\n   */\n  private setFileIcons() {\n    if (!this.luxSelectedFiles) {\n      return;\n    }\n\n    this.fileIcons = [];\n    const selectedFiles = [];\n\n    if (!Array.isArray(this.luxSelectedFiles)) {\n      selectedFiles.push(this.luxSelectedFiles);\n    } else {\n      selectedFiles.push(...this.luxSelectedFiles);\n    }\n    selectedFiles.forEach((selectedFile: ILuxFileObject) => {\n      let newFileIcon = 'fas fa-file';\n      if (selectedFile.type) {\n        if (selectedFile.type.indexOf('image') > -1) {\n          newFileIcon = 'fas fa-file-image';\n        } else if (selectedFile.type.indexOf('pdf') > -1) {\n          newFileIcon = 'fas fa-file-pdf';\n        } else if (selectedFile.type.indexOf('spreadsheet') > -1) {\n          newFileIcon = 'fas fa-file-excel';\n        } else if (selectedFile.type.indexOf('officedocument') > -1) {\n          newFileIcon = 'fas fa-file-signature';\n        } else if (selectedFile.type.indexOf('json') > -1) {\n          newFileIcon = 'fas fa-file-code';\n        }\n      }\n      this.fileIcons.push(newFileIcon);\n    });\n    this.cdr.detectChanges();\n  }\n\n  ngAfterViewChecked(): void {\n    this.resizeIconActionBar();\n  }\n\n  isArray(object: any): boolean {\n    return object && Array.isArray(object);\n  }\n\n  private resizeIconActionBar() {\n    if (this.fileEntries && this.fileEntries.first && this.cdr) {\n      const newRowWidth = this.fileEntries.first.nativeElement.offsetWidth;\n      if (this.rowWidth !== newRowWidth) {\n        this.rowWidth = newRowWidth;\n\n        if (this.rowWidth >= 500) {\n          this.iconActionBarWidth = 200;\n          this.alwaysVisibleView = true;\n          this.alwaysVisibleUpload = true;\n          this.alwaysVisibleDownload = true;\n          this.alwaysVisibleDelete = true;\n        } else if (this.rowWidth >= 400) {\n          this.iconActionBarWidth = 150;\n          this.alwaysVisibleView = false;\n          this.alwaysVisibleUpload = false;\n          this.alwaysVisibleDownload = true;\n          this.alwaysVisibleDelete = true;\n        } else {\n          this.iconActionBarWidth = 50;\n          this.alwaysVisibleView = false;\n          this.alwaysVisibleUpload = false;\n          this.alwaysVisibleDownload = false;\n          this.alwaysVisibleDelete = false;\n        }\n\n        this.cdr.detectChanges();\n      }\n    }\n  }\n\n  // region Overridden methods\n\n  protected errorMessageModifier(value: any, errors: any): string | undefined {\n    if (errors.required) {\n      return 'Es muss mindestens eine Datei ausgewählt werden';\n    }\n    return super.errorMessageModifier(value, errors);\n  }\n\n  protected triggerViewFileClick(file: ILuxFileObject) {\n    super.triggerViewFileClick(file);\n\n    this.updateIconAndImage();\n  }\n\n  protected notifyFormValueChanged() {\n    super.notifyFormValueChanged();\n    this.formControl.updateValueAndValidity();\n\n    this.fileuploadSingleInput.nativeElement.value = null;\n  }\n\n  // endregion\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n/**\n * Diese Component ist nur eine leichte Ergänzung zu LuxProgress und wird nicht vom Modul exportiert.\n *\n * Leider musste das CSS kopiert werden, da wir hier nicht direkt LuxProgress nutzen können.\n * (Stand: 12.06.2019, LuxProgress ist Teil des LuxCommonModule und sorgt für Cycle-Dependencies) - DRon\n */\n@Component({\n  selector: 'lux-file-progress',\n  templateUrl: './lux-file-progress.component.html',\n  styleUrls: ['./lux-file-progress.component.scss']\n})\nexport class LuxFileProgressComponent implements OnInit {\n  @Input() luxProgress: number = 0;\n  @Input() luxMode: 'determinate' | 'indeterminate' = 'indeterminate';\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-input-prefix',\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: []\n})\nexport class LuxInputPrefixComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-input-suffix',\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: []\n})\nexport class LuxInputSuffixComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { ChangeDetectorRef, Component, ContentChild, ElementRef, Input, Optional, ViewChild } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxInputPrefixComponent } from './lux-input-subcomponents/lux-input-prefix.component';\nimport { LuxInputSuffixComponent } from './lux-input-subcomponents/lux-input-suffix.component';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormInputBaseClass } from '../lux-form-model/lux-form-input-base.class';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-input',\n  templateUrl: './lux-input.component.html',\n  styleUrls: ['./lux-input.component.scss']\n})\nexport class LuxInputComponent extends LuxFormInputBaseClass {\n  private readonly symbolRegExp = /[,.]/;\n\n  @Input() luxType: string = 'text';\n  @Input() luxNumberAlignLeft: boolean = false;\n  @Input() luxMaxLength: number;\n  @ContentChild(LuxInputPrefixComponent, { static: false }) inputPrefix: LuxInputPrefixComponent;\n  @ContentChild(LuxInputSuffixComponent, { static: false }) inputSuffix: LuxInputSuffixComponent;\n  @ViewChild('input', { read: ElementRef, static: false }) inputElement: ElementRef;\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  /**\n   * Wird bei jedem Tastendruck auf dem Inputfeld aufgerufen.\n   * @param $event\n   */\n  onKeyDown($event: KeyboardEvent) {\n    // Soll nur für number-Inputs greifen\n    if (this.inputElement) {\n      const value = this.inputElement.nativeElement.value;\n      // Doppelte Punkt-/Komma-Setzung und E's vermeiden\n      if (\n        value &&\n        this.symbolRegExp.test($event.key) &&\n        (this.inputElement.nativeElement.value.match(this.symbolRegExp) || []).length > 0\n      ) {\n        $event.preventDefault();\n      }\n    }\n  }\n}\n","import { LuxFormComponentBase } from './lux-form-component-base.class';\nimport { ChangeDetectorRef, EventEmitter, Input, Output, SimpleChanges } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n/**\n * Basis-Klasse für FormComponents, die einen ähnlichen Grundaufbau für die Auswahl von\n * Optionen aus einem Array anbieten (Radio-Buttons und Selects z.B.).\n */\nexport abstract class LuxFormSelectableBase extends LuxFormComponentBase {\n  private _luxOptions: any[] = [];\n\n  @Output() luxSelectedChange: EventEmitter<any> = new EventEmitter();\n\n  @Input() luxOptionLabelProp: string = '';\n  @Input() luxTagId: string;\n  @Input() luxPickValue: (selected) => {};\n  @Input() luxReadonly: boolean;\n  @Input() luxCompareWith = (o1, o2) => o1 === o2;\n\n  get luxSelected(): any {\n    return this.getValue();\n  }\n\n  @Input() set luxSelected(selected: any) {\n    this.setValue(selected);\n  }\n\n  get luxOptions(): any[] {\n    return this._luxOptions;\n  }\n\n  @Input() set luxOptions(options: any[]) {\n    this._luxOptions = options;\n    this.checkSelectedAndUpdate(this.luxSelected);\n  }\n\n  protected constructor(\n    controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  // region Overridden methods\n\n  notifyFormValueChanged(formValue: any) {\n    this.checkSelectedAndUpdate(formValue);\n  }\n\n  // endregion\n\n  /**\n   * Versucht, wenn Options und FormControl vorhanden sind, den selected-Wert mit den Options\n   * zu vergleichen und dann auch wenn möglich als luxSelected-Wert zu sichern.\n   * @param selected\n   */\n  private checkSelectedAndUpdate(selected: any) {\n    if (this.luxOptions && this.luxOptions.length > 0 && this.formControl) {\n      if (this.luxPickValue && selected instanceof Object && !Array.isArray(selected)) {\n        // Wenn der Wert zufälligerweise noch ein Objekt sein sollte, versuchen den Key auszulesen\n        selected = this.luxPickValue(selected);\n\n        // Da der Wert neu gesetzt wurde, diesen im nächsten Zyklus erst in die Werte schreiben\n        setTimeout(() => {\n          this.checkSelectedAndUpdate(selected);\n        });\n      } else {\n        // Für den Fall, das der eingesetzte Wert sich doch noch vom FormControl-Value unterscheidet,\n        // diesen ergänzen\n        if (this.luxSelected !== selected) {\n          this.luxSelected = selected;\n        }\n        this.checkSelectedInOptions(selected);\n        setTimeout(() => {\n          this.luxSelectedChange.emit(selected);\n        });\n      }\n    }\n  }\n\n  /**\n   * Prüft ob der übergebene Wert in den luxOptions ist.\n   * Kann auch ein Array als \"selected\" enthalten.\n   * Wenn der Wert nicht gefunden werden konnte wird eine Fehlermeldung in der console ausgegeben.\n   * @param selected\n   */\n  private checkSelectedInOptions(selected: any) {\n    const selectedAsArray = Array.isArray(selected) ? selected : [selected];\n    if (selected && this.luxOptions && !this.allSelectedInOptions(selectedAsArray)) {\n      // Selected nicht in Options = einen Fehler in die Console loggen\n      this.logSelectedNotFound(selected);\n    }\n  }\n\n  /**\n   * Prüft ob die übergebenen Select-Objekte in den luxOptions enthalten sind.\n   * @param selectedAsArray\n   */\n  private allSelectedInOptions(selectedAsArray: any[]): boolean {\n    // Prüfen ob ein Unterarray von Elementen existiert.\n    const optionsHasSubarray =\n      this.luxOptions.length === 0\n        ? false\n        : // Dieses kann direkt in den Options stehen oder als value-Property\n          Array.isArray(this.luxOptions[0]) ||\n          (!!this.luxPickValue && Array.isArray(this.luxPickValue(this.luxOptions[0])));\n\n    const targetLength = optionsHasSubarray ? 1 : selectedAsArray.length;\n    const length = this.luxOptions.filter((optionEntry: any) => {\n      if (optionsHasSubarray) {\n        return this.luxPickValue\n          ? this.luxPickValue(optionEntry) === selectedAsArray\n          : this.compareObjects(optionEntry, selectedAsArray);\n      } else {\n        return selectedAsArray.find((selectedEntry: any | any[]) => {\n          return this.luxPickValue\n            ? this.luxPickValue(optionEntry) === selectedEntry\n            : this.compareObjects(optionEntry, selectedEntry);\n        });\n      }\n    }).length;\n\n    return length === targetLength;\n  }\n\n  /**\n   * Loggt die Fehlermeldung in die Console, wenn das neue Value-Objekt nicht in den Options gefunden\n   * werden konnte.\n   * @param selected\n   */\n  private logSelectedNotFound(selected: any) {\n    this.logger.error(\n      `\\n### Das Objekt ${JSON.stringify(selected)} ist nicht Teil der möglichen Optionen.\\n` +\n        `\\n### Komponente: \"${this}\"\\n` +\n        `Prüfen Sie evtl. die luxCompareWith-Funktion, um Properties anstelle ganzer Objekte zu vergleichen.`\n    );\n  }\n\n  /**\n   * Kapselung von der übergebenen luxCompareWith-Funktion.\n   * Fängt undefinierte Objekte ab und returned stattdessen false.\n   * @param o1\n   * @param o2\n   */\n  compareObjects = (o1, o2) => {\n    if ((!o1 && o2) || (o1 && !o2)) {\n      return false;\n    } else if (this.luxCompareWith && !!o1 && !!o2) {\n      return this.luxCompareWith(o1, o2);\n    } else {\n      return o1 === o2;\n    }\n  };\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxSelectedChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxSelected);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Optional,\n  TemplateRef\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormSelectableBase } from '../lux-form-model/lux-form-selectable-base.class';\nimport { Subscription } from 'rxjs';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-radio',\n  templateUrl: './lux-radio.component.html',\n  styleUrls: ['./lux-radio.component.scss']\n})\nexport class LuxRadioComponent extends LuxFormSelectableBase implements OnDestroy {\n  forceVertical: boolean = false;\n\n  // Potentiell eingebettetes Template für Darstellung der Labels\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n\n  @HostBinding('class.lux-pb-3') pb3: boolean = true;\n  @Input() luxGroupName: string = '';\n  @Input() luxOrientationVertical: boolean = true;\n\n  private mediaSubscription$: Subscription;\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService,\n    private mediaObserver: LuxMediaQueryObserverService\n  ) {\n    super(controlContainer, cdr, logger, config);\n\n    this.mediaSubscription$ = this.mediaObserver.getMediaQueryChangedAsObservable().subscribe(() => {\n      this.forceVertical = this.mediaObserver.isXS();\n    });\n    this.forceVertical = this.mediaObserver.isXS();\n  }\n\n  get isVertical(): boolean {\n    return this.luxOrientationVertical || this.forceVertical;\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.mediaSubscription$.unsubscribe();\n    this.mediaSubscription$ = null;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Input,\n  Optional,\n  QueryList,\n  TemplateRef,\n  ViewChildren\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormSelectableBase } from '../lux-form-model/lux-form-selectable-base.class';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { MatOption } from '@angular/material';\n\n@Component({\n  selector: 'lux-select',\n  templateUrl: './lux-select.component.html',\n  styleUrls: ['./lux-select.component.scss']\n})\nexport class LuxSelectComponent extends LuxFormSelectableBase {\n  // Potentiell eingebettetes Template für Darstellung der Labels\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n  @ViewChildren(MatOption) matOptions: QueryList<MatOption>;\n\n  @Input() luxPlaceholder: string;\n  @Input() luxMultiple: boolean = false;\n  @Input() luxTagId: string;\n\n  displayedViewValue: string;\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService,\n    private liveAnnouncer: LiveAnnouncer\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  notifyFormValueChanged(formValue: any) {\n    super.notifyFormValueChanged(formValue);\n    const matOption = this.matOptions.find((option: MatOption) => option.value === formValue);\n    if (matOption) {\n      this.displayedViewValue = matOption.viewValue;\n      this.liveAnnouncer.announce(matOption.viewValue, 'assertive');\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { MatSlider, MatSliderChange } from '@angular/material';\nimport { LuxFormComponentBase } from '../lux-form-model/lux-form-component-base.class';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\nexport declare type SLIDER_TICK_INTERVAL = 'auto' | number;\nexport declare type SLIDER_COLORS = 'primary' | 'accent' | 'warn';\n\n// @dynamic Erklärung steht in der Datei \"lux-decorators.ts\".\n@Component({\n  selector: 'lux-slider',\n  templateUrl: './lux-slider.component.html',\n  styleUrls: ['./lux-slider.component.scss']\n})\nexport class LuxSliderComponent extends LuxFormComponentBase implements OnInit, OnChanges {\n  @ViewChild(MatSlider, { static: false }) matSlider: MatSlider;\n\n  @Output() luxChange: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n  @Output() luxInput: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n  @Output() luxValueChange: EventEmitter<number> = new EventEmitter<number>();\n  @Output() luxValuePercent: EventEmitter<number> = new EventEmitter<number>();\n\n  @Input() luxColor: SLIDER_COLORS = 'primary';\n  @Input() luxVertical: boolean = false;\n  @Input() luxInvert: boolean = false;\n  @Input() luxShowThumbLabel: boolean = true;\n  @Input() luxShowThumbLabelAlways: boolean = true;\n  @Input() luxTickInterval: SLIDER_TICK_INTERVAL = 0;\n  @Input() luxTagId: string = undefined;\n  @Input() luxDisplayWith: (value: number | null) => string | number;\n\n  get luxValue(): number {\n    return this.getValue();\n  }\n\n  @Input() set luxValue(value: number) {\n    if (!this.luxReadonly && !this.luxDisabled) {\n      this.setValue(value);\n    }\n  }\n\n  _luxMax: number = 100;\n  _luxRequired: boolean = false;\n  _luxMin: number = 0;\n  _luxStep: number = 1;\n\n  get luxMax() {\n    return this._luxMax;\n  }\n\n  @Input() set luxMax(value: number) {\n    this._luxMax = value;\n\n    if (value > 0 && value > this.luxMin) {\n      this._luxMax = value;\n    }\n  }\n\n  get luxMin() {\n    return this._luxMin;\n  }\n\n  @Input() set luxMin(value: number) {\n    this._luxMin = value;\n\n    if (value >= 0 && value < this.luxMax) {\n      this._luxMin = value;\n    }\n  }\n\n  get luxStep() {\n    return this._luxStep;\n  }\n\n  @Input() set luxStep(value: number) {\n    this._luxStep = value;\n\n    if (value <= this.luxMax - this.luxMin) {\n      this._luxStep = value;\n    }\n  }\n\n  get luxRequired() {\n    return this._luxRequired;\n  }\n\n  @Input() set luxRequired(value: boolean) {\n    this._luxRequired = value;\n\n    if (value === true) {\n      this.logger.error('Der LuxSlider kann nicht als Required-Feld deklariert werden.');\n    }\n  }\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.formControl.statusChanges.subscribe((status: string) => {\n      if (status === 'DISABLED') {\n        this.redrawSliderWorkaround();\n      }\n    });\n  }\n\n  ngOnChanges(simpleChanges) {\n    super.ngOnChanges(simpleChanges);\n    if (simpleChanges.luxDisabled) {\n      this.redrawSliderWorkaround();\n    }\n  }\n\n  /**\n   * Wird beim Aendern des Slider-Wertes aufgerufen.\n   * @param changeEvent\n   */\n  onChange(changeEvent: MatSliderChange) {\n    this.luxValue = changeEvent.value;\n    this.luxChange.emit(changeEvent);\n  }\n\n  /**\n   * Wird beim Bewegen des Sliders aufgerufen.\n   * @param inputEvent\n   */\n  onInput(inputEvent: MatSliderChange) {\n    this.luxValue = inputEvent.value;\n    this.luxInput.emit(inputEvent);\n    if (!this.formControl.touched) {\n      this.formControl.markAsTouched();\n    }\n  }\n\n  // region Overridden methods\n  notifyFormValueChanged(formValue: any) {\n    if (this.luxValue < this.luxMin) {\n      setTimeout(() => {\n        this.luxValue = this.luxMin;\n      });\n    } else if (this.luxValue > this.luxMax) {\n      setTimeout(() => {\n        this.luxValue = this.luxMax;\n      });\n    } else {\n      this.luxValueChange.emit(formValue);\n      this.luxValuePercent.emit(((formValue - this.luxMin) * 100) / (this.luxMax - this.luxMin));\n    }\n  }\n  // endregion\n\n  /**\n   * Workaround, ohne den der Slider leider nicht beim Wechsel zum disabled-State den Gab\n   * um den Thumb herum zeichnet. - dron\n   */\n  private redrawSliderWorkaround() {\n    if (!this.matSlider) {\n      return;\n    }\n\n    this.matSlider.step = this.luxStep - 1;\n    setTimeout(() => {\n      this.matSlider.step = this.luxStep;\n    });\n  }\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxValueChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxValue);\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnInit, Optional } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormInputBaseClass } from '../lux-form-model/lux-form-input-base.class';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-textarea',\n  templateUrl: './lux-textarea.component.html',\n  styleUrls: ['./lux-textarea.component.scss']\n})\nexport class LuxTextareaComponent extends LuxFormInputBaseClass implements OnInit {\n  @Input() luxMaxRows: number = -1;\n  @Input() luxMinRows: number = 0;\n  @Input() luxMaxLength: number;\n\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n}\n","import { ChangeDetectorRef, Component, OnInit, Optional } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxFormCheckableBaseClass } from '../lux-form-model/lux-form-checkable-base.class';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-toggle',\n  templateUrl: './lux-toggle.component.html',\n  styleUrls: ['./lux-toggle.component.scss']\n})\nexport class LuxToggleComponent extends LuxFormCheckableBaseClass implements OnInit {\n  constructor(\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    config: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, config);\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[luxFileCapture]'\n})\nexport class LuxFileCaptureDirective {\n  _luxFileCapture: string;\n\n  @Input()\n  get luxFileCapture() {\n    return this._luxFileCapture;\n  }\n\n  set luxFileCapture(label: string) {\n    this._luxFileCapture = label;\n\n    if (this._luxFileCapture) {\n      this.renderer.setAttribute(this.elementRef.nativeElement, 'capture', this._luxFileCapture);\n    } else {\n      this.renderer.removeAttribute(this.elementRef.nativeElement, 'capture');\n    }\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {}\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[luxMaxLengthAttr]'\n})\nexport class LuxMaxLengthDirective {\n  _luxMaxLengthAttr: string;\n\n  @Input()\n  get luxMaxLengthAttr() {\n    return this._luxMaxLengthAttr;\n  }\n\n  set luxMaxLengthAttr(maxLength: string) {\n    this._luxMaxLengthAttr = maxLength;\n\n    if (this._luxMaxLengthAttr) {\n      this.renderer.setAttribute(this.elementRef.nativeElement, 'maxlength', this._luxMaxLengthAttr);\n    } else {\n      this.renderer.removeAttribute(this.elementRef.nativeElement, 'maxlength');\n    }\n  }\n\n  constructor(protected elementRef: ElementRef, protected renderer: Renderer2) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatNativeDateModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule\n} from '@angular/material';\nimport { LuxActionModule } from '../lux-action/lux-action.module';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxLayoutModule } from '../lux-layout/lux-layout.module';\nimport { LuxPipesModule } from '../lux-pipes/lux-pipes.module';\nimport { LuxMediaQueryObserverService } from '../lux-util/lux-media-query-observer.service';\nimport { LuxAutocompleteComponent } from './lux-autocomplete/lux-autocomplete.component';\nimport { LuxCheckboxComponent } from './lux-checkbox/lux-checkbox.component';\nimport { LuxChipGroupComponent } from './lux-chips/lux-chips-subcomponents/lux-chip-group.component';\nimport { LuxChipComponent } from './lux-chips/lux-chips-subcomponents/lux-chip.component';\nimport { LuxChipsComponent } from './lux-chips/lux-chips.component';\nimport { LuxDatepickerComponent } from './lux-datepicker/lux-datepicker.component';\nimport { LuxFileInputComponent } from './lux-file/lux-file-input/lux-file-input.component';\nimport { LuxFileListComponent } from './lux-file/lux-file-list/lux-file-list.component';\nimport { LuxFileProgressComponent } from './lux-file/lux-file-subcomponents/lux-file-progress/lux-file-progress.component';\nimport { LuxFormHintComponent } from './lux-form-control/lux-form-control-subcomponents/lux-form-hint.component';\nimport { LuxFormLabelComponent } from './lux-form-control/lux-form-control-subcomponents/lux-form-label.component';\nimport { LuxFormControlComponent } from './lux-form-control/lux-form-control.component';\nimport { LuxInputPrefixComponent } from './lux-input/lux-input-subcomponents/lux-input-prefix.component';\nimport { LuxInputSuffixComponent } from './lux-input/lux-input-subcomponents/lux-input-suffix.component';\nimport { LuxInputComponent } from './lux-input/lux-input.component';\nimport { LuxRadioComponent } from './lux-radio/lux-radio.component';\nimport { LuxSelectComponent } from './lux-select/lux-select.component';\nimport { LuxSliderComponent } from './lux-slider/lux-slider.component';\nimport { LuxTextareaComponent } from './lux-textarea/lux-textarea.component';\nimport { LuxToggleComponent } from './lux-toggle/lux-toggle.component';\nimport { LuxFileCaptureDirective } from './lux-file/lux-file-model/lux-file-capture.directive';\nimport { LuxMaxLengthDirective } from './lux-form-control/lux-form-directives/lux-maxlength/lux-max-length.directive';\n\n@NgModule({\n  declarations: [\n    LuxToggleComponent,\n    LuxSelectComponent,\n    LuxInputComponent,\n    LuxInputPrefixComponent,\n    LuxInputSuffixComponent,\n    LuxCheckboxComponent,\n    LuxChipsComponent,\n    LuxChipComponent,\n    LuxChipGroupComponent,\n    LuxRadioComponent,\n    LuxDatepickerComponent,\n    LuxAutocompleteComponent,\n    LuxSliderComponent,\n    LuxTextareaComponent,\n    LuxFormControlComponent,\n    LuxFormHintComponent,\n    LuxFormLabelComponent,\n    LuxFileListComponent,\n    LuxFileInputComponent,\n    LuxFileProgressComponent,\n    LuxFileCaptureDirective,\n    LuxMaxLengthDirective\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatAutocompleteModule,\n    MatSliderModule,\n    LuxIconModule,\n    LuxDirectivesModule,\n    LuxPipesModule,\n    LuxComponentsConfigModule,\n    LuxActionModule,\n    LuxLayoutModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    LuxToggleComponent,\n    LuxSelectComponent,\n    LuxInputComponent,\n    LuxInputPrefixComponent,\n    LuxInputSuffixComponent,\n    LuxCheckboxComponent,\n    LuxChipsComponent,\n    LuxChipComponent,\n    LuxChipGroupComponent,\n    LuxRadioComponent,\n    LuxDatepickerComponent,\n    LuxAutocompleteComponent,\n    LuxSliderComponent,\n    LuxTextareaComponent,\n    LuxFormControlComponent,\n    LuxFormHintComponent,\n    LuxFormLabelComponent,\n    LuxFileListComponent,\n    LuxFileInputComponent,\n    LuxFileCaptureDirective,\n    LuxMaxLengthDirective\n  ],\n  providers: [LuxMediaQueryObserverService]\n})\nexport class LuxFormModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { LuxUtil } from '../../lux-util/lux-util';\n\n@Component({\n  selector: 'lux-spinner',\n  templateUrl: './lux-spinner.component.html',\n  styleUrls: ['./lux-spinner.component.scss']\n})\nexport class LuxSpinnerComponent implements OnInit {\n  @Input() luxIndeterminate: boolean = true;\n  @Input() luxValue: number = 0;\n\n  constructor() {}\n\n  get mode() {\n    return this.luxIndeterminate ? 'indeterminate' : 'determinate';\n  }\n\n  ngOnInit() {}\n\n  isIE(): boolean {\n    return LuxUtil.isIE();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-label',\n  template: '<span [id]=\"luxId\"><ng-content></ng-content></span>'\n})\nexport class LuxLabelComponent implements OnInit {\n  @Input() luxId;\n\n  constructor() {}\n\n  ngOnInit() {\n    if (!this.luxId) {\n      console.error('lux-label -> Das Attribut \"luxId\" muss gesetzt werden.');\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { LuxBackgroundColorsEnum } from '../../lux-util/lux-colors.enum';\nimport { LuxUtil } from '../../lux-util/lux-util';\n\n@Component({\n  selector: 'lux-badge',\n  templateUrl: './lux-badge.component.html',\n  styleUrls: ['./lux-badge.component.scss']\n})\nexport class LuxBadgeComponent implements OnInit {\n  readonly ICON_SIZE: string = '1x';\n  readonly DEFAULT_BADGE_COLOR = LuxBackgroundColorsEnum.gray;\n\n  @Input() luxUppercase: boolean = true;\n  @Input() luxIconName: string = '';\n\n  constructor() {\n    this.luxColor = this.DEFAULT_BADGE_COLOR;\n  }\n\n  private _backgroundCSSClass: string = '';\n\n  get backgroundCSSClass() {\n    return this._backgroundCSSClass;\n  }\n\n  private _fontCSSClass: string = '';\n\n  public get fontCSSClass() {\n    return this._fontCSSClass;\n  }\n\n  @Input()\n  set luxColor(color: LuxBackgroundColorsEnum) {\n    const result = LuxUtil.getColorsByBgColorsEnum(color);\n    this._backgroundCSSClass = result.backgroundCSSClass;\n    this._fontCSSClass = result.fontCSSClass;\n\n    if (!LuxBackgroundColorsEnum[color]) {\n      this.luxColor = this.DEFAULT_BADGE_COLOR;\n    }\n  }\n\n  ngOnInit() {}\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LuxBackgroundColorsEnum } from '../../lux-util/lux-colors.enum';\n\nexport declare type PROGRESS_MODES = 'determinate' | 'indeterminate';\nexport declare type PROGRESS_TYPES = 'Progressbar' | 'Spinner';\n\n@Component({\n  selector: 'lux-progress',\n  templateUrl: './lux-progress.component.html',\n  styleUrls: ['./lux-progress.component.scss']\n})\nexport class LuxProgressComponent implements OnInit {\n  readonly DEFAULT_PROGRESS_COLOR = LuxBackgroundColorsEnum.blue;\n\n  private _luxMode: PROGRESS_MODES;\n  private _luxType: PROGRESS_TYPES;\n  private _luxColor: LuxBackgroundColorsEnum;\n\n  isIE: boolean = false;\n  animDurationCSS: string = '';\n  typeCSS: string = '';\n\n  @Input() luxValue: number = 0;\n  // Nur für ProgressBar\n  @Input() luxSize: 'small' | 'medium' | 'large' = 'medium';\n  @Input() luxTagId: string;\n\n  @Input()\n  set luxColor(value: LuxBackgroundColorsEnum) {\n    this._luxColor = LuxBackgroundColorsEnum[value] ? LuxBackgroundColorsEnum[value] : this.DEFAULT_PROGRESS_COLOR;\n  }\n\n  get luxColor() {\n    return this._luxColor;\n  }\n\n  @Input() set luxMode(mode: PROGRESS_MODES) {\n    this._luxMode = mode;\n  }\n\n  get luxMode() {\n    if (this._luxMode !== 'determinate' && this._luxMode !== 'indeterminate') {\n      return 'indeterminate';\n    }\n    return this._luxMode;\n  }\n\n  @Input() set luxType(type: PROGRESS_TYPES) {\n    this._luxType = type;\n    if (this._luxType === 'Progressbar') {\n      this.typeCSS = 'lux-progress-bar';\n    } else if (this._luxType === 'Spinner') {\n      this.typeCSS = 'lux-progress-spinner';\n    } else {\n      this.luxType = 'Progressbar';\n    }\n  }\n\n  get luxType() {\n    return this._luxType;\n  }\n\n  constructor() {\n    this.luxMode = 'indeterminate';\n    this.luxType = 'Progressbar';\n  }\n\n  ngOnInit() {\n    this.isIE = LuxUtil.isIE();\n  }\n}\n","import { MatTableDataSource } from '@angular/material';\n\n/**\n * Diese Ableitung berücksichtigt bei der Sortierung Sonderzeichen (z.B. öäüßé,...)\n * und ignoriert die Groß- und Kleinschreibung.\n */\nexport class LuxTableDataSource<T> extends MatTableDataSource<T> {\n  totalElements: number;\n  selectedEntries: Set<any> = new Set<any>();\n\n  /**\n   * Diese Methode liefert eine sortierte Kopie des Datenarrays zurück.\n   * Die Sortierung berücksichtig ist nicht Case-Sensitive und berücksichtig\n   * Sonderzeichen (z.B. öäüßé,...)\n   */\n  _orderData(data: T[]): T[] {\n    const _this = this;\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    const active = this.sort.active;\n    const direction = this.sort.direction;\n\n    if (active === 'multiSelect') {\n      // muss checken welche in dem sorted array sind und alle anderen darunter\n      const selected = data.filter(value => this.selectedEntries.has(value));\n      const notSelected = data.filter(value => !selected.some(selectedValue => selectedValue === value));\n\n      if (direction === 'asc') {\n        return [...selected, ...notSelected];\n      } else if (direction === 'desc') {\n        return [...notSelected, ...selected];\n      } else {\n        return data.slice();\n      }\n    }\n\n    return data.slice().sort((a, b) => {\n      let valueA = _this.sortingDataAccessor(a, active);\n      let valueB = _this.sortingDataAccessor(b, active);\n\n      if (!valueA) {\n        valueA = '';\n      }\n\n      if (!valueB) {\n        valueB = '';\n      }\n\n      if (typeof valueA === 'number' && typeof valueB === 'string') {\n        valueA = '' + valueA;\n      }\n\n      if (typeof valueA === 'string' && typeof valueB === 'number') {\n        valueB = '' + valueB;\n      }\n\n      if (typeof valueA === 'string' && typeof valueB === 'string') {\n        const stringA = (valueA as string).toLocaleLowerCase();\n        const stringB = (valueB as string).toLocaleLowerCase();\n        return stringA.localeCompare(stringB) * (direction === 'asc' ? 1 : -1);\n      }\n\n      return (valueA < valueB ? -1 : 1) * (direction === 'asc' ? 1 : -1);\n    });\n  }\n\n  /**\n   * Override update paginator method\n   * to ensure total unfiltered element count is consistent with the http result\n   */\n  public _updatePaginator(filteredDataLength: number): void {\n    if (this.filter === '') {\n      super._updatePaginator(this.totalElements);\n    } else {\n      super._updatePaginator(filteredDataLength);\n    }\n  }\n}\n","import { MatPaginatorIntl } from '@angular/material';\n\nexport class LuxPaginatorIntl extends MatPaginatorIntl {\n  constructor() {\n    super();\n\n    // Original Properties überschreiben\n    this.itemsPerPageLabel = 'Elemente pro Seite';\n    this.nextPageLabel = 'Nächste Seite';\n    this.previousPageLabel = 'Vorherige Seite';\n    this.lastPageLabel = 'Letzte Seite';\n    this.firstPageLabel = 'Erste Seite';\n    this.getRangeLabel = this.customRangeLabel;\n  }\n\n  /**\n   * Deutsche Fassunng des Material-Paginators\n   * @param page\n   * @param pageSize\n   * @param length\n   */\n  private customRangeLabel(page: number, pageSize: number, length: number) {\n    if (length === 0 || pageSize === 0) {\n      return '0 von ' + length;\n    }\n    length = Math.max(length, 0);\n    const startIndex = page * pageSize;\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\n    const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n    return startIndex + 1 + ' - ' + endIndex + ' von ' + length;\n  }\n}\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-table-column-header',\n  template: ''\n})\nexport class LuxTableColumnHeaderComponent {\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n}\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-table-column-content',\n  template: ''\n})\nexport class LuxTableColumnContentComponent {\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'lux-table-column-footer',\n  template: ''\n})\nexport class LuxTableColumnFooterComponent {\n  @ContentChild(TemplateRef, { static: false }) tempRef: TemplateRef<any>;\n}\n","import { Component, ContentChild, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { LuxTableColumnHeaderComponent } from './lux-table-column-header.component';\nimport { LuxTableColumnContentComponent } from './lux-table-column-content.component';\nimport { LuxTableColumnFooterComponent } from './lux-table-column-footer.component';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'lux-table-column',\n  template:\n    '<ng-content select=\"lux-table-column-header\"></ng-content>' +\n    '<ng-content select=\"lux-table-column-content\"></ng-content>' +\n    '<ng-content select=\"lux-table-column-footer\"></ng-content>'\n})\nexport class LuxTableColumnComponent implements OnInit, OnChanges {\n  change$: Subject<void> = new Subject<void>();\n\n  @Input() luxColumnDef: string = undefined;\n  @Input() luxSortable: boolean = false;\n  @Input() luxSticky: boolean = false;\n  @Input() luxResponsiveBehaviour: string;\n  @Input() luxResponsiveAt: string | string[];\n\n  @ContentChild(LuxTableColumnHeaderComponent, { static: false }) header: LuxTableColumnHeaderComponent;\n  @ContentChild(LuxTableColumnContentComponent, { static: false }) content: LuxTableColumnContentComponent;\n  @ContentChild(LuxTableColumnFooterComponent, { static: false }) footer: LuxTableColumnFooterComponent;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    this.change$.next();\n  }\n}\n","// tslint:disable:member-ordering\nimport {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport { MatPaginator, MatPaginatorIntl, MatSort, Sort } from '@angular/material';\nimport { ICustomCSSConfig } from './lux-table-custom-css-config.interface';\nimport { LuxTableDataSource } from './lux-table-data-source';\nimport { ILuxTableHttpDaoStructure } from './lux-table-http/lux-table-http-dao-structure.interface';\nimport { ILuxTableHttpDao } from './lux-table-http/lux-table-http-dao.interface';\nimport { of, Subject, Subscription } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LuxPaginatorIntl } from '../../lux-util/lux-paginator-intl';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\nimport { LuxTableColumnComponent } from './lux-table-subcomponents/lux-table-column.component';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'lux-table',\n  templateUrl: './lux-table.component.html',\n  styleUrls: ['./lux-table.component.scss'],\n  providers: [{ provide: MatPaginatorIntl, useClass: LuxPaginatorIntl }]\n})\nexport class LuxTableComponent implements OnInit, AfterViewInit, DoCheck, OnDestroy {\n  static AUTO_PAGINATION_START: number = 100; // 100 Elemente bis automatisch die Pagination aktiviert wird\n\n  private _luxClasses: ICustomCSSConfig | ICustomCSSConfig[] = [];\n  private _luxShowPagination: boolean = false;\n  private _dataColumnDefs: string[] = [];\n  private _luxMultiSelect: boolean;\n  private _luxShowFilter: boolean = false;\n  private _dataSource: LuxTableDataSource<any> = new LuxTableDataSource<any>([]);\n  private _luxPickValue = o => o;\n  private _luxCompareWith = (o1, o2) => o1 === o2;\n\n  private previousWidth: number;\n  private previousHeight: number;\n  private httpRequestConf: { page?; pageSize?; filter?; sort?; order? } = {};\n\n  private mediaQuerySubscription: Subscription;\n  private httpDaoSubscription: Subscription;\n  private filterChangedSubscription: Subscription;\n  private columnSubscriptions: Subscription[] = [];\n  private tableColumnsChangedSubscription: Subscription;\n  private sortChangedSubscription: Subscription;\n  private paginatorPageSubscription: Subscription;\n  private selectedSubscription: Subscription;\n\n  filtered$: Subject<string> = new Subject<string>();\n  currentCustomClasses: { entry: any; classes: string }[] = [];\n  isLoadingResults: boolean;\n  isIE: boolean = false;\n  allSelected: boolean;\n  mediaQuery: string;\n  movedTableColumns: LuxTableColumnComponent[] = [];\n  tableMinWidth: string;\n  tableHeightCSSCalc: string;\n\n  @Input() luxColWidthsPercent: number[] = [];\n  @Input() luxFilterText: string = 'Filter';\n  @Input() luxNoDataText: string = 'Keine Daten gefunden.';\n  @Input() luxPageSize: number = 10;\n  @Input() luxPageSizeOptions = [5, 10, 25, 50];\n  @Input() luxHttpDAO: ILuxTableHttpDao;\n  @Input() luxMinWidthPx: number = -1;\n  @Input() luxAutoPaginate: boolean = true;\n  @Input() luxHideBorders: boolean = false;\n\n  @Output() luxSelectedChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('paginator', { read: ElementRef, static: true }) paginatorElement: ElementRef;\n  @ViewChild('filter', { read: ElementRef, static: true }) filterElement: ElementRef;\n  @ViewChild('tableContainer', { read: ElementRef, static: true }) tableContainerElement: ElementRef;\n  @ContentChildren(LuxTableColumnComponent) tableColumns: QueryList<LuxTableColumnComponent>;\n\n  // region Setter/Getters\n  get luxClasses(): ICustomCSSConfig | ICustomCSSConfig[] {\n    return this._luxClasses;\n  }\n\n  @Input() set luxClasses(classes: ICustomCSSConfig | ICustomCSSConfig[]) {\n    if (classes && !Array.isArray(classes)) {\n      classes = [classes];\n    }\n\n    this._luxClasses = classes;\n    this.insertCustomCSSClasses();\n  }\n\n  get luxShowPagination(): boolean {\n    return this._luxShowPagination;\n  }\n\n  @Input() set luxShowPagination(show: boolean) {\n    this._luxShowPagination = show;\n    setTimeout(() => {\n      this.handlePagination();\n    });\n  }\n\n  get luxShowFilter(): boolean {\n    return this._luxShowFilter;\n  }\n\n  @Input() set luxShowFilter(show: boolean) {\n    this._luxShowFilter = show;\n    this.handleFilter();\n  }\n\n  get dataColumnDefs(): string[] {\n    return this._dataColumnDefs;\n  }\n\n  get dataSource(): LuxTableDataSource<any> {\n    return this._dataSource;\n  }\n\n  get luxData(): any[] {\n    return this.dataSource.data;\n  }\n\n  @Input()\n  set luxData(data: any[]) {\n    data = data ? data : [];\n    this.dataSource.data = data;\n    if (this.dataSource) {\n      setTimeout(() => {\n        this.updateDataSourceAttributes(data);\n        this.handleSort();\n        this.insertCustomCSSClasses();\n        this.updateColumnsByMediaQuery();\n        this.calculateProportions();\n        this.updateSelection();\n      });\n    }\n  }\n\n  get luxMultiSelect(): boolean {\n    return this._luxMultiSelect;\n  }\n\n  @Input() set luxMultiSelect(multiSelect: boolean) {\n    this._luxMultiSelect = multiSelect;\n    if (this.luxMultiSelect) {\n      this.luxSelected.clear();\n      this._dataColumnDefs.unshift('multiSelect');\n    } else {\n      this._dataColumnDefs = this._dataColumnDefs.filter((col: string) => col !== 'multiSelect');\n    }\n\n    setTimeout(() => {\n      this.calculateProportions();\n    });\n  }\n\n  private _luxSelected: Set<any> = new Set();\n\n  get luxSelected(): Set<any> {\n    return this._luxSelected;\n  }\n\n  /**\n   * Die Auswahl der Selektierten Elemente ist eigentlich ein Set,\n   * nimmt aber Arrays von Außen entgegen (zur Vereinfachung).\n   * @param selected\n   */\n  @Input() set luxSelected(selected: Set<any>) {\n    this.luxSelected.clear();\n    if (selected) {\n      selected.forEach(entry => {\n        this.luxSelected.add(entry);\n      });\n    }\n    if (this.luxData && this.luxData.length > 0) {\n      this.updateSelection();\n    }\n  }\n\n  get luxPickValue() {\n    return this._luxPickValue;\n  }\n\n  // Funktion, um den zu vergleichenden Wert aus den einzelnen Objekten zu ziehen.\n  // Standardmäßig einfach das Objekt zurückgeben.\n  @Input() set luxPickValue(pickFn) {\n    this._luxPickValue = pickFn ? pickFn : o => o;\n  }\n\n  get luxCompareWith() {\n    return this._luxCompareWith;\n  }\n\n  // Vergleichsfunktion; vergleicht standardmäßig einfach die Referenzen der beiden Objekte.\n  @Input() set luxCompareWith(compareFn) {\n    this._luxCompareWith = compareFn ? compareFn : (o1, o2) => o1 === o2;\n  }\n\n  /**\n   * Eigene Implementierung der Filterung für diese Tabelle.\n   * Iteriert über die Values des einzelnen Objektes und prüft dann ob der Filter-Wert irgendwo vorkommt.\n   * @param data\n   * @param filter\n   */\n  private customFilterPredicate = (data: any, filter: string = '') => {\n    for (const property in data) {\n      if (data.hasOwnProperty(property)) {\n        const dataEntry = data[property];\n        if (LuxUtil.isDate(dataEntry)) {\n          if (\n            dataEntry\n              .toLocaleString()\n              .toLowerCase()\n              .indexOf(filter) > -1\n          ) {\n            return true;\n          }\n        } else {\n          if ((dataEntry + '').toLowerCase().indexOf(filter) > -1) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  // endregion\n\n  constructor(\n    private queryObserver: LuxMediaQueryObserverService,\n    private luxConsole: LuxConsoleService,\n    private liveAnnouncer: LiveAnnouncer\n  ) {\n    // Datasource um eigene Filter-Funktionalitaet ergaenzen\n    this.dataSource.filterPredicate = this.customFilterPredicate;\n\n    this.isIE = LuxUtil.isIEorEdge();\n\n    this.mediaQuerySubscription = this.queryObserver.getMediaQueryChangedAsObservable().subscribe((query: string) => {\n      this.mediaQuery = query;\n      this.updateColumnsByMediaQuery();\n    });\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      if (this.luxHttpDAO) {\n        this.loadHttpDAOData();\n      } else {\n        this.updateDataSourceAttributes(this.luxData);\n        this.handleSort();\n        this.insertCustomCSSClasses();\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    if (this.tableColumns) {\n      // Für den Fall das Spalten wegfallen/dazu kommen\n      this.tableColumnsChangedSubscription = this.tableColumns.changes.subscribe(() => {\n        this.updateColumnsByMediaQuery();\n        this.updateColumnSubscriptions();\n      });\n\n      // Für den Fall das sich Änderungen innerhalb der Spalten ergeben\n      this.updateColumnSubscriptions();\n\n      // Nach dem Init sollten einmal die Spalten aktualisiert werden\n      setTimeout(() => {\n        this.updateColumnsByMediaQuery();\n      });\n    }\n\n    if (this.luxShowPagination) {\n      this.handlePagination();\n    }\n  }\n\n  ngDoCheck() {\n    if (\n      this.tableContainerElement.nativeElement.offsetWidth !== this.previousWidth ||\n      this.tableContainerElement.nativeElement.offsetHeight !== this.previousHeight\n    ) {\n      this.previousWidth = this.tableContainerElement.nativeElement.offsetWidth;\n      this.previousHeight = this.tableContainerElement.nativeElement.offsetHeight;\n\n      this.calculateProportions();\n    }\n  }\n\n  ngOnDestroy() {\n    // Subscriptions auflösen\n    this.columnSubscriptions.forEach((subscription: Subscription) => {\n      subscription.unsubscribe();\n    });\n    if (this.httpDaoSubscription) {\n      this.httpDaoSubscription.unsubscribe();\n    }\n    if (this.filterChangedSubscription) {\n      this.filterChangedSubscription.unsubscribe();\n    }\n    if (this.tableColumnsChangedSubscription) {\n      this.tableColumnsChangedSubscription.unsubscribe();\n    }\n    if (this.sortChangedSubscription) {\n      this.sortChangedSubscription.unsubscribe();\n    }\n    if (this.paginatorPageSubscription) {\n      this.paginatorPageSubscription.unsubscribe();\n    }\n    if (this.selectedSubscription) {\n      this.selectedSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Zieht sich die aktuellen CSS-Klassen aus den zugewiesenen\n   * CSS-Klassen.\n   * @param row\n   * @returns string\n   */\n  getCustomClassesForIndex(row: any): string {\n    const customClasses = this.currentCustomClasses.find(value => value.entry === row);\n    return customClasses ? customClasses.classes : '';\n  }\n\n  /**\n   * TrackBy-Funktion um die Tabelle etwas schneller zu machen.\n   * @param index\n   * @param item\n   */\n  trackFn(index, item) {\n    return index;\n  }\n\n  /**\n   * Wird beim Klick auf eine Row aufgerufen und handelt das Sichern und Entfernen von\n   * selektierten Einträgen.\n   * @param entry\n   */\n  changeSelectedEntry(entry: any) {\n    if (this.luxMultiSelect) {\n      if (this.luxSelected.has(entry)) {\n        this.luxSelected.delete(entry);\n      } else {\n        this.luxSelected.add(entry);\n      }\n    } else {\n      if (this.luxSelected.has(entry)) {\n        // Wenn der selektierte Eintrag erneut angeklickt wird,\n        // wird die Selektion entfernt.\n        this.luxSelected.clear();\n      } else {\n        this.luxSelected.clear();\n        this.luxSelected.add(entry);\n      }\n    }\n\n    this.luxSelectedChange.next(Array.from(this.luxSelected));\n    this.dataSource.selectedEntries = this.luxSelected;\n    this.allSelected = this.checkFilteredAllSelected();\n  }\n\n  /**\n   * Selektiert/Deselektiert alle Einträge in dieser Tabelle.\n   *\n   * Voraussetzung dafür ist, das Multiselect aktiv ist und keine Http-Table vorliegt.\n   */\n  changeSelectedEntries() {\n    if (this.luxMultiSelect && !this.luxHttpDAO) {\n      if (this.checkFilteredAllSelected()) {\n        this.dataSource.filteredData.forEach((dataEntry: any) => this.luxSelected.delete(dataEntry));\n      } else {\n        this.dataSource.filteredData.forEach((dataEntry: any) => this.luxSelected.add(dataEntry));\n      }\n      this.luxSelectedChange.next(Array.from(this.luxSelected));\n      this.dataSource.selectedEntries = this.luxSelected;\n      this.allSelected = this.checkFilteredAllSelected();\n    }\n  }\n\n  /**\n   * Prüft ob die aktuell angezeigten Einträge alle selektiert sind oder nicht.\n   */\n  checkFilteredAllSelected(): boolean {\n    let result = true;\n    if (this.luxSelected.size === 0) {\n      result = false;\n    } else {\n      // Prüfen ob die gefilterten Daten selected sind\n      this.dataSource.filteredData.forEach((dataEntry: any) => {\n        if (!this.luxSelected.has(dataEntry)) {\n          result = false;\n        }\n      });\n    }\n\n    return result;\n  }\n\n  /**\n   * Gibt zurück, ob irgendein Footer-Element für diese Tabelle aktuell sichtbar ist.\n   */\n  anyFootersAvailable() {\n    return this.luxMultiSelect || !!this.tableColumns.find((column: LuxTableColumnComponent) => !!column.footer);\n  }\n\n  /**\n   * Aktualisiert die DataSource und evtl. Subscriptions sowie die CustomCSS-Classes\n   * nach einer Änderung.\n   */\n  private updateDataSourceAttributes(data: any[]) {\n    if (!this.luxHttpDAO && this.luxAutoPaginate && data && data.length > LuxTableComponent.AUTO_PAGINATION_START) {\n      this.luxShowPagination = true;\n    }\n    if (!this.luxHttpDAO) {\n      if (this.luxShowPagination) {\n        this.handlePagination();\n      }\n    }\n    if (!this.luxHttpDAO) {\n      this.dataSource.sort = this.sort;\n    }\n    if (!this.luxHttpDAO) {\n      this.dataSource.totalElements = this.dataSource.data ? this.dataSource.data.length : 0;\n    }\n  }\n\n  /**\n   * Prueft anhand der mitgegebenen Callbacks die CSS-Klassen\n   * fuer die einzelnen Rows.\n   */\n  private insertCustomCSSClasses() {\n    if (this.luxClasses && this.dataSource.data) {\n      this.currentCustomClasses = [];\n      this.dataSource.data.forEach((entry: any, i: number) => {\n        let classes = '';\n        (<ICustomCSSConfig[]>this.luxClasses).forEach((cssClass: ICustomCSSConfig) => {\n          if (cssClass.check(entry)) {\n            classes += cssClass.class + ' ';\n          }\n        });\n        this.currentCustomClasses.push({ entry: entry, classes: classes });\n      });\n    }\n  }\n\n  /**\n   * Gibt das Aria-Label für die Sortierung der Spalten-Überschrift zurück.\n   * @param tableColumnDef\n   */\n  getAriaSortingLabel(tableColumnDef: string) {\n    if (this.sort.active === tableColumnDef) {\n      if (this.sort.direction === 'asc') {\n        return 'aufsteigend sortiert';\n      }\n      if (this.sort.direction === 'desc') {\n        return 'absteigend sortiert';\n      }\n    }\n    return 'nicht sortiert';\n  }\n\n  /**\n   * Gibt über den liveAnnouncer eine Nachricht aus, dass sich die Sortierung einer Spalte geändert hat.\n   * @param $event\n   */\n  announceSortChange($event: Sort) {\n    const index = this.tableColumns\n      .toArray()\n      .findIndex((tableColumn: LuxTableColumnComponent) => $event.active === tableColumn.luxColumnDef);\n    let columnDef = index > -1 ? this.tableColumns.toArray()[index].luxColumnDef : null;\n    if (columnDef === null) {\n      columnDef = $event.active === 'multiSelect' ? 'multiSelect' : null;\n    }\n    if (columnDef !== null) {\n      let directionDescription;\n      switch ($event.direction) {\n        case 'desc':\n          directionDescription = 'absteigend';\n          break;\n        case 'asc':\n          directionDescription = 'aufsteigend';\n          break;\n        case '':\n          directionDescription = 'nicht mehr';\n          break;\n      }\n      this.liveAnnouncer.announce(`Spalte ${columnDef} sortiert nun ${directionDescription}`, 'assertive');\n    }\n  }\n\n  /**\n   * Aktualisiert die momentan angezeigten Spalten anhand der für sie definierten\n   * Responsive-Queries und Verhaltensweisen.\n   */\n  private updateColumnsByMediaQuery() {\n    if (!this.tableColumns) {\n      return;\n    }\n\n    this._dataColumnDefs = [];\n\n    // wenn Multiselect, dann benötigen wir hier noch eine Spalte mehr\n    if (this.luxMultiSelect) {\n      this._dataColumnDefs.push('multiSelect');\n    }\n\n    this.tableColumns.forEach((column: LuxTableColumnComponent) => this._dataColumnDefs.push(column.luxColumnDef));\n    this.movedTableColumns = [];\n    // Zuerst die auszublendenden Spalten durchgehen\n    this.tableColumns.forEach((tableColumn: LuxTableColumnComponent) => {\n      if (\n        (tableColumn.luxResponsiveAt && !tableColumn.luxResponsiveBehaviour) ||\n        (!tableColumn.luxResponsiveAt && tableColumn.luxResponsiveBehaviour)\n      ) {\n        this.luxConsole.error(\n          `Achtung! Die Column '${tableColumn.luxColumnDef}' hat entweder keine Media-Queries ` +\n            `oder kein Responsive-Verhalten zugewiesen bekommen.`\n        );\n      } else if (this.doesResponsiveAtApply(tableColumn.luxResponsiveAt)) {\n        // Schauen, ob eine Spalte angegeben wurde, in welche sich diese hier verschieben kann\n        if (this._dataColumnDefs.find((column: string) => column === tableColumn.luxResponsiveBehaviour)) {\n          // Wenn ja, die Spalte merken und vorerst ausblenden\n          this.movedTableColumns.push(tableColumn);\n        }\n\n        this._dataColumnDefs = this.dataColumnDefs.filter(\n          (dataColumn: string) => dataColumn !== tableColumn.luxColumnDef\n        );\n      }\n    });\n  }\n\n  /**\n   * Prüft ob die aktuelle MediaQuery mit der übergebenen MediaQuery/den übergebenen MediaQueries übereinstimmt.\n   * @param responsiveAt\n   */\n  private doesResponsiveAtApply(responsiveAt: string | string[]) {\n    const mediaQueries: string[] = [];\n    if (!Array.isArray(responsiveAt)) {\n      mediaQueries.push(responsiveAt);\n    } else {\n      mediaQueries.push(...responsiveAt);\n    }\n\n    for (const mediaQuery of mediaQueries) {\n      if (mediaQuery === this.mediaQuery) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Durchläuft die aktuellen TableColumns und hört auf Changes in den Properties\n   * der Columns und merkt sich die Subscriptions.\n   */\n  private updateColumnSubscriptions() {\n    this.columnSubscriptions.forEach((subscription: Subscription) => {\n      subscription.unsubscribe();\n    });\n    this.columnSubscriptions = [];\n    this.tableColumns.forEach((column: LuxTableColumnComponent) => {\n      this.columnSubscriptions.push(\n        column.change$.subscribe(() => {\n          this.updateColumnsByMediaQuery();\n        })\n      );\n    });\n  }\n\n  /**\n   * Triggert über das DAO die Abfrage nach neuen Daten.\n   * Sendet dabei das Request-Conf Objekt, welches Informationen bzgl.\n   * page, pageSize, filter, sort, order mitgibt.\n   * @param filteredBy?\n   */\n  private loadHttpDAOData(filteredBy?: string) {\n    this.isLoadingResults = true;\n    this.luxHttpDAO\n      .loadData(this.httpRequestConf)\n      .pipe(\n        tap((data: ILuxTableHttpDaoStructure) => {\n          this.isLoadingResults = false;\n          // Wenn ein Filter-Text gegeben ist, sich dieser aber vom Aktuellen unterscheiden, brechen wir die Datenaktualisierung ab\n          if (filteredBy && this.httpRequestConf.filter !== filteredBy) {\n            return;\n          }\n\n          if (data) {\n            this.dataSource.totalElements = data.totalCount;\n            this.luxData = data.items;\n\n            if (this.luxAutoPaginate && data.totalCount > LuxTableComponent.AUTO_PAGINATION_START) {\n              this.luxShowPagination = true;\n            }\n          } else {\n            this.dataSource.totalElements = 0;\n            this.luxData = [];\n          }\n        }),\n        catchError(error => {\n          this.isLoadingResults = false;\n          return of(error);\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * Wird aufgerufen wenn der Sort neu zur DataSource hinzugefügt werden soll (Data wurde neu gesetzt).\n   * Resettet die Pagination und aktualisiert wenn es sich um eine asynchrone Tabelle handelt die\n   * requestConf.\n   */\n  private handleSort() {\n    if (this.sort) {\n      if (this.sortChangedSubscription) {\n        this.sortChangedSubscription.unsubscribe();\n      }\n      this.sortChangedSubscription = this.sort.sortChange.subscribe((sort: any) => {\n        this.paginator.pageIndex = 0;\n\n        if (this.luxHttpDAO) {\n          this.httpRequestConf.page = this.paginator.pageIndex;\n          this.httpRequestConf.sort = sort.active;\n          this.httpRequestConf.order = sort.direction;\n          this.loadHttpDAOData();\n        }\n      });\n    }\n\n    this.calculateProportions();\n  }\n\n  /**\n   * Wird nach dem set von luxShowFilter aufgerufen und fängt neue Filter-Operationen ab und\n   * aktualisiert dementsprechend die Daten.\n   */\n  private handleFilter() {\n    if (this.filterChangedSubscription) {\n      this.filterChangedSubscription.unsubscribe();\n    }\n    if (this.luxShowFilter) {\n      this.filterChangedSubscription = this.filtered$\n        .asObservable()\n        .pipe(\n          tap(() => (this.isLoadingResults = true)),\n          debounceTime(500),\n          distinctUntilChanged((x: string, y: string) => {\n            if (x === y) {\n              this.isLoadingResults = false;\n            }\n\n            return x === y;\n          })\n        )\n        .subscribe((filterValue: string) => {\n          filterValue = filterValue.trim();\n          filterValue = filterValue.toLocaleLowerCase();\n          this.paginator.pageIndex = 0;\n          this.isLoadingResults = false;\n          if (!this.luxHttpDAO) {\n            this.dataSource.filter = filterValue;\n          }\n          if (this.luxHttpDAO) {\n            this.httpRequestConf.filter = filterValue;\n            this.loadHttpDAOData(filterValue);\n          }\n        });\n    }\n    this.calculateProportions();\n  }\n\n  /**\n   * Wird nach dem set von luxShowPagination aufgerufen und setzt wenn es sich hier um\n   * eine asynchrone Tabelle handelt eine Subscription um Pagination-Änderungen zu erhalten.\n   */\n  private handlePagination() {\n    if (this.luxShowPagination) {\n      if (this.luxHttpDAO) {\n        if (this.paginatorPageSubscription) {\n          this.paginatorPageSubscription.unsubscribe();\n        }\n        this.paginatorPageSubscription = this.paginator.page.subscribe(() => {\n          this.httpRequestConf.page = this.paginator.pageIndex;\n          this.httpRequestConf.pageSize = this.paginator.pageSize;\n          this.loadHttpDAOData();\n        });\n        this.httpRequestConf.page = this.paginator.pageIndex;\n        this.httpRequestConf.pageSize = this.paginator.pageSize;\n      }\n      if (!this.luxHttpDAO) {\n        this.dataSource.paginator = this.paginator;\n      }\n    } else {\n      this.dataSource.paginator = null;\n    }\n    this.calculateProportions();\n  }\n\n  /**\n   * Erzeugt einen neuen String für die Höhenberechnung der Tabelle und setzt die Minimalbreite für die Tabelle\n   * (wenn möglich).\n   */\n  private calculateProportions() {\n    setTimeout(() => {\n      const filter = this.filterElement ? this.filterElement.nativeElement.offsetHeight : 0;\n      const pagination = this.paginatorElement ? this.paginatorElement.nativeElement.scrollHeight : 0;\n      const temp = 'calc(100% - ' + pagination + 'px' + ' - ' + filter + 'px)';\n\n      if (temp !== this.tableHeightCSSCalc) {\n        this.tableHeightCSSCalc = temp;\n      }\n\n      this.tableMinWidth = this.luxMinWidthPx > -1 ? this.luxMinWidthPx + 'px' : 'unset';\n    });\n  }\n\n  /**\n   * Aktualisiert die selectedEntries dieser Component anhand der aktuell gesetzten luxSelected-Elemente.\n   *\n   * Dabei werden die einzelnen Elemente zuerst mithilfe der luxCompareWith- und luxPickValue-Functions miteinander\n   * verglichen.\n   */\n  private updateSelection() {\n    // Prüfen ob selected gesetzt ist\n    if (this.luxSelected.size > 0) {\n      // Die selected-Einträge durchgehen und schauen ob diese im data-Block enthalten sind\n      const foundEntries = [];\n      this.luxSelected.forEach((entry: any) => {\n        const newEntry = this.dataSource.data.find((dataEntry: any) => {\n          return this.luxCompareWith(this.luxPickValue(entry), this.luxPickValue(dataEntry));\n        });\n\n        // Merkt sich die Entry wenn sie noch nicht in der Selected-Liste ist (wenn es sich um eine HTTP-Tabelle handelt)\n        if (newEntry && (!this.luxHttpDAO || (this.luxHttpDAO && !this.luxSelected.has(newEntry)))) {\n          foundEntries.push(newEntry);\n          this.luxSelected.delete(entry);\n        }\n      });\n      // Nur bei nicht-HTTP-Tabellen die Selektion einmal leeren\n      if (!this.luxHttpDAO) {\n        this.luxSelected.clear();\n      }\n      foundEntries.forEach((entry: boolean) => this.luxSelected.add(entry));\n    }\n\n    this.dataSource.selectedEntries = this.luxSelected;\n    this.luxSelectedChange.next(Array.from(this.luxSelected));\n    this.allSelected = this.checkFilteredAllSelected();\n  }\n}\n","import { animate, style, transition, trigger } from '@angular/animations';\n\n/**\n * Animation für das Aus- und Einklappen der LuxMessageBox.\n */\nexport const visibilityTrigger = trigger('messageBoxVisibility', [\n  transition(':enter', [\n    style({ transform: 'translateY(-100%)', height: 0 }),\n    animate('.5s', style({ transform: 'translateY(0)', height: '*' }))\n  ]),\n  transition(':leave', [\n    style({ transform: 'translateY(0)', height: '*' }),\n    animate('.5s', style({ transform: 'translateY(-100%)', height: 0 }))\n  ])\n]);\n","import { Component, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\nimport { visibilityTrigger } from './lux-message-box-model/lux-message-box.animations';\nimport { ILuxMessageChangeEvent, ILuxMessageCloseEvent } from './lux-message-box-model/lux-message-events.interface';\nimport { ILuxMessage } from './lux-message-box-model/lux-message.interface';\nimport { MatPaginatorIntl, PageEvent } from '@angular/material';\nimport { LuxPaginatorIntl } from '../../lux-util/lux-paginator-intl';\n\n@Component({\n  selector: 'lux-message-box',\n  templateUrl: './lux-message-box.component.html',\n  styleUrls: ['./lux-message-box.component.scss'],\n  animations: [visibilityTrigger],\n  providers: [{ provide: MatPaginatorIntl, useClass: LuxPaginatorIntl }]\n})\nexport class LuxMessageBoxComponent implements OnInit {\n  private _luxMessages: ILuxMessage[] = [];\n  private _luxMaximumDisplayed: number = 1;\n  private _luxIndex: number = 0;\n\n  displayedMessages: ILuxMessage[] = [];\n\n  @HostBinding('class.mat-elevation-z4') boxShadow: boolean = true;\n\n  @Output() luxMessageChanged: EventEmitter<ILuxMessageChangeEvent> = new EventEmitter<ILuxMessageChangeEvent>();\n  @Output() luxMessageClosed: EventEmitter<ILuxMessageCloseEvent> = new EventEmitter<ILuxMessageCloseEvent>();\n  @Output() luxMessageBoxClosed: EventEmitter<void> = new EventEmitter<void>();\n\n  @Input() set luxIndex(index: number) {\n    if (index < 0) {\n      index = 0;\n    }\n    if (index > this.luxMessages.length) {\n      index = this.luxMessages.length;\n    }\n\n    this._luxIndex = index;\n    this.updateDisplayedMessages(index);\n  }\n\n  get luxIndex(): number {\n    return this._luxIndex;\n  }\n\n  @Input() set luxMaximumDisplayed(max: number) {\n    if (max < 0) {\n      max = 0;\n    }\n    this._luxMaximumDisplayed = max;\n\n    this.updateDisplayedMessages(this.luxIndex);\n  }\n\n  get luxMaximumDisplayed(): number {\n    return this._luxMaximumDisplayed;\n  }\n\n  @Input() set luxMessages(messages: ILuxMessage[]) {\n    if (messages && messages.length > 0) {\n      this._luxMessages = messages;\n      this.updateDisplayedMessages(this.luxIndex);\n    } else {\n      // Wenn es vorher Werte gab, ein Closed-Event ausgeben\n      if (this.luxMessages.length > 0) {\n        this.luxMessageBoxClosed.emit();\n      }\n      this._luxMessages = [];\n    }\n  }\n\n  get luxMessages(): ILuxMessage[] {\n    return this._luxMessages;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Wird aufgerufen, wenn der Close-Button für eine MessageBox aufgerufen wurde.\n   *\n   * Gibt eine Event-Payload mit der betroffenen Nachricht mit Index weiter.\n   * @param $event\n   */\n  messageClosed($event: ILuxMessage) {\n    const eventPayload: ILuxMessageCloseEvent = {\n      index: this.luxMessages.findIndex((compareMessage: ILuxMessage) => compareMessage === $event),\n      message: $event\n    };\n    this.luxMessageClosed.emit(eventPayload);\n\n    this.luxMessages = this.luxMessages.filter((message: ILuxMessage) => message !== $event);\n  }\n\n  /**\n   * Aktualisiert die angezeigten Nachrichten und den Paginator,\n   * gibt außerdem das Change-Event mit den angezeigten/vorherigen Nachrichten.\n   * @param $event\n   */\n  pageChanged($event: PageEvent) {\n    const previousDisplayedMessages = [...this.displayedMessages];\n    const previousIndex = this.luxIndex;\n\n    this.updateDisplayedMessages($event.pageIndex);\n\n    const messageChangePayload: ILuxMessageChangeEvent = {\n      currentPage: {\n        index: this.luxIndex,\n        messages: [...this.displayedMessages]\n      },\n      previousPage: {\n        index: previousIndex,\n        messages: previousDisplayedMessages\n      }\n    };\n\n    this.luxMessageChanged.emit(messageChangePayload);\n  }\n\n  /**\n   * Aktualisiert die aktuell angezeigten Nachrichten anhand des Index.\n   * @param pageIndex\n   * @param pageSize\n   */\n  updateDisplayedMessages(pageIndex: number) {\n    const start = pageIndex * this.luxMaximumDisplayed;\n    const end = start + this.luxMaximumDisplayed;\n\n    // Wenn der luxIndex und der PageIndex ungleich sind, den luxIndex aktualisieren\n    if (this.luxIndex !== pageIndex) {\n      this._luxIndex = pageIndex;\n    }\n\n    // Checken, ob der Index nicht die Array-Größe sprengt\n    if (this.luxIndex > this.luxMessages.length) {\n      this._luxIndex = this.luxMessages.length;\n    }\n\n    if (this.luxIndex < 0) {\n      this._luxIndex = 0;\n    }\n\n    // Nachrichten aktualisieren\n    this.displayedMessages = this.luxMessages.slice(start, end);\n\n    // Wenn die angezeigten Nachrichten leer sind, aber noch weitere vorhanden sind, die vorherige Seite anzeigen\n    if (this.displayedMessages.length === 0 && this.luxMessages.length > 0 && this.luxIndex > 0) {\n      this.updateDisplayedMessages(this.luxIndex - 1);\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ILuxMessage } from '../lux-message-box-model/lux-message.interface';\nimport { LuxUtil } from '../../../lux-util/lux-util';\n\n@Component({\n  selector: 'lux-message',\n  templateUrl: './lux-message.component.html'\n})\nexport class LuxMessageComponent implements OnInit {\n  private _luxMessage: ILuxMessage;\n\n  backgroundCSSClass: string = 'lux-bg-color-blue';\n  fontCSSClass: string = 'lux-font-color-white';\n\n  @Output() luxMessageClosed: EventEmitter<ILuxMessage> = new EventEmitter<ILuxMessage>();\n\n  @Input() set luxMessage(message: ILuxMessage) {\n    this._luxMessage = message;\n    if (this.luxMessage) {\n      this.updateColor();\n    }\n  }\n\n  get luxMessage(): ILuxMessage {\n    return this._luxMessage;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Setzt die Messages auf ein leeres Array um so die MessageBox auszublenden.\n   */\n  close() {\n    this.luxMessageClosed.emit(this.luxMessage);\n  }\n\n  /**\n   * Aktualisiert die Farbe dieser Box passend zur Farbe der Nachricht.\n   */\n  private updateColor() {\n    const color = this.luxMessage.color;\n    const result = LuxUtil.getColorsByBgColorsEnum(color);\n\n    this.fontCSSClass = result.fontCSSClass;\n    this.backgroundCSSClass = result.backgroundCSSClass;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LuxFormModule } from '../lux-form/lux-form.module';\nimport {\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSortModule,\n  MatTableModule\n} from '@angular/material';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxSpinnerComponent } from './lux-spinner/lux-spinner.component';\nimport { LuxLabelComponent } from './lux-label/lux-label.component';\nimport { LuxBadgeComponent } from './lux-badge/lux-badge.component';\nimport { LuxProgressComponent } from './lux-progress/lux-progress.component';\nimport { LuxTableComponent } from './lux-table/lux-table.component';\nimport { LuxTableColumnFooterComponent } from './lux-table/lux-table-subcomponents/lux-table-column-footer.component';\nimport { LuxTableColumnComponent } from './lux-table/lux-table-subcomponents/lux-table-column.component';\nimport { LuxMessageBoxComponent } from './lux-message-box/lux-message-box.component';\nimport { LuxMessageComponent } from './lux-message-box/lux-message-box-subcomponents/lux-message.component';\nimport { LuxTableColumnHeaderComponent } from './lux-table/lux-table-subcomponents/lux-table-column-header.component';\nimport { LuxTableColumnContentComponent } from './lux-table/lux-table-subcomponents/lux-table-column-content.component';\nimport { LuxMediaQueryObserverService } from '../lux-util/lux-media-query-observer.service';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LuxActionModule } from '../lux-action/lux-action.module';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    LuxFormModule,\n    LuxActionModule,\n    LuxIconModule,\n    LuxDirectivesModule,\n    LuxComponentsConfigModule\n  ],\n  declarations: [\n    LuxSpinnerComponent,\n    LuxLabelComponent,\n    LuxBadgeComponent,\n    LuxProgressComponent,\n    LuxTableComponent,\n    LuxTableColumnFooterComponent,\n    LuxTableColumnComponent,\n    LuxTableColumnHeaderComponent,\n    LuxTableColumnContentComponent,\n    LuxMessageBoxComponent,\n    LuxMessageComponent\n  ],\n  providers: [LuxMediaQueryObserverService],\n  exports: [\n    LuxSpinnerComponent,\n    LuxLabelComponent,\n    LuxBadgeComponent,\n    LuxProgressComponent,\n    LuxTableComponent,\n    LuxTableColumnFooterComponent,\n    LuxTableColumnComponent,\n    LuxTableColumnHeaderComponent,\n    LuxTableColumnContentComponent,\n    LuxMessageBoxComponent,\n    LuxMessageComponent\n  ]\n})\nexport class LuxCommonModule {}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class LuxHttpErrorInterceptor implements HttpInterceptor {\n  static dataStream: ReplaySubject<any> = new ReplaySubject(1);\n\n  constructor() {}\n\n  static dataStream$(): Observable<any> {\n    return LuxHttpErrorInterceptor.dataStream.asObservable();\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap(\n        () => {\n          LuxHttpErrorInterceptor.dataStream.next([]);\n        },\n        error => {\n          if (error instanceof HttpErrorResponse && error.status === 400) {\n            LuxHttpErrorInterceptor.dataStream.next(error.error.errors);\n          }\n        }\n      )\n    );\n  }\n}\n","import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { LuxHttpErrorInterceptor } from './lux-http-error-interceptor';\nimport { Subscription } from 'rxjs';\nimport { ILuxMessage } from '../../lux-common/lux-message-box/lux-message-box-model/lux-message.interface';\nimport { LuxBackgroundColorsEnum } from '../../lux-util/lux-colors.enum';\n\n@Component({\n  selector: 'lux-http-error',\n  templateUrl: 'lux-http-error.component.html',\n  styleUrls: ['lux-http-error.component.scss']\n})\nexport class LuxHttpErrorComponent implements OnInit, OnDestroy, AfterViewInit {\n  private subs: Subscription[] = [];\n\n  errors: any[];\n\n  constructor(router: Router) {\n    // Beim Ansteuern einer neuen Route, die aktuellen Fehler resetten.\n    router.events.forEach(event => {\n      if (event instanceof NavigationStart) {\n        LuxHttpErrorInterceptor.dataStream.next([]);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.errors = [];\n  }\n\n  ngAfterViewInit() {\n    // Wenn neue Fehler-Objekte kommen, diese umformatieren und in der LuxMessageBoxComponent anzeigen.\n    this.subs.push(\n      LuxHttpErrorInterceptor.dataStream$().subscribe((errors: any[]) => {\n        this.updateErrors(errors);\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    // Alle bekannten Subscriptions auflösen.\n    this.subs.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n\n  /**\n   * Updated das aktuelle Errors-Array mit dem übergebenen Wert.\n   * Liest dabei die Message aus dem Fehler und erzeugt LuxMessage-Objekte für die LuxMessageBoxComponent.\n   * @param errors\n   */\n  private updateErrors(errors: any[]) {\n    const errorMessages: ILuxMessage[] = [];\n    if (errors && errors.length > 0) {\n      errors.forEach((error: any) => {\n        errorMessages.push({\n          text: this.readErrorMessage(error),\n          color: LuxBackgroundColorsEnum.red,\n          iconName: 'fa-bug'\n        });\n      });\n    }\n    setTimeout(() => {\n      this.errors = errorMessages;\n    });\n  }\n\n  /**\n   * Versucht eine Fehlermeldung aus dem Fehler zu lesen.\n   * Zuerst wird geschaut, ob der Fehler selbst nur ein String ist ==> Wenn ja, diesen zurückgeben.\n   * Dann wird geprüft, ob der Fehler eine \"message\"-Property besitzt ==> Wenn ja, diese zurückgeben\n   * Als letzter Ausweg wird das \"error\"-Objekt selbst über die toString-Methode zurückgegeben.\n   * @param error\n   */\n  private readErrorMessage(error: any): string {\n    if (typeof error === 'string') {\n      return error;\n    } else if (error.hasOwnProperty('message')) {\n      return error['message'];\n    } else {\n      return error.toString();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ILuxErrorPageConfig } from '../lux-error-interfaces/lux-error-page-config.interface';\nimport { ILuxError } from '../lux-error-interfaces/lux-error.interface';\n\n/**\n * Dieser Service dient dazu, die aktuellen Fehlermeldungen und die Error-Page Konfiguration zu speichern.\n *\n * Er wird von LuxErrorService und LuxErrorPageComponent benutzt, ohne ihn gäbe es Cycle-Dependency Fehler.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LuxErrorStoreService {\n  private _config: ILuxErrorPageConfig;\n  private _error: ILuxError;\n  private _lastErrors: ILuxError[];\n\n  /**\n   * Enthaelt die normale Konfiguration der Fehlerseite, kann bei Bedarf mit setConfig ueberschrieben werden.\n   */\n  private readonly _defaultConfig: ILuxErrorPageConfig = {\n    iconName: 'far fa-times-circle',\n    iconSize: '5x',\n    errorText: 'Uups... da ist etwas schief gelaufen. Wir kennen die Fehlerdetails bereits und kümmern uns darum.',\n    homeRedirectText: 'Zurück zur Startseite',\n    homeRedirectUrl: '',\n    errorPageUrl: 'errorpage',\n    skipLocationChange: true\n  };\n\n  /**\n   * Gibt die aktuelle Konfiguration zurueck.\n   * @returns ILuxErrorPageConfig\n   */\n  get config() {\n    return this._config;\n  }\n\n  /**\n   * Gibt ein Array der letzten Fehler zurueck.\n   * @returns Array<ILuxError[]>\n   */\n  get lastErrors() {\n    return Array.of(this._lastErrors);\n  }\n\n  /**\n   * Gibt den aktuellen Fehler zurueck.\n   * @returns ILuxError\n   */\n  get error(): ILuxError {\n    return this._error;\n  }\n\n  /**\n   * Sichert den Fehler in der Property und fügt ihn der \"lastErrors\"-Liste hinzu.\n   * @param newError\n   */\n  set error(newError: ILuxError) {\n    this._error = newError;\n    this._lastErrors.push(newError);\n  }\n\n  constructor() {}\n\n  /**\n   * Initialisiert den Service.\n   */\n  init() {\n    this._lastErrors = [];\n    this._error = null;\n    this._config = {};\n    this.safeNewConfig(this._defaultConfig);\n  }\n\n  /**\n   *\n   * @param luxErrorPageConfig\n   */\n  safeNewConfig(luxErrorPageConfig: ILuxErrorPageConfig) {\n    // wenn keine Config übergeben wird, ein leeres Objekt erzeugen\n    // das sorgt dafür, dass wenigstens die default-Werte genommen werden\n    luxErrorPageConfig = luxErrorPageConfig ? luxErrorPageConfig : {};\n    // alle Werte der übergebenen Config prüfen und ggf. default-Werte nutzen\n    Object.keys(luxErrorPageConfig).forEach(e => {\n      if (luxErrorPageConfig[e] !== undefined && luxErrorPageConfig[e] !== null) {\n        this._config[e] = luxErrorPageConfig[e];\n      } else {\n        this._config[e] = this._defaultConfig[e];\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ILuxErrorPageConfig } from './lux-error-interfaces/lux-error-page-config.interface';\nimport { ILuxError } from './lux-error-interfaces/lux-error.interface';\nimport { LuxErrorStoreService } from './lux-error-services/lux-error-store.service';\n\n@Component({\n  selector: 'lux-error-page',\n  templateUrl: './lux-error-page.component.html',\n  styleUrls: ['./lux-error-page.component.scss']\n})\nexport class LuxErrorPageComponent implements OnInit {\n  get error(): ILuxError {\n    return this.errorStore.error;\n  }\n\n  get errorConfig(): ILuxErrorPageConfig {\n    return this.errorStore.config;\n  }\n\n  constructor(private router: Router, private errorStore: LuxErrorStoreService) {}\n\n  ngOnInit() {}\n\n  /**\n   * Navigiert ueber den Router zum eingetragenen Home-Pfad\n   */\n  clickHomeRedirect() {\n    this.router.navigate([this.errorConfig.homeRedirectUrl]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxHttpErrorComponent } from './lux-http-error/lux-http-error.component';\nimport { LuxHttpErrorInterceptor } from './lux-http-error/lux-http-error-interceptor';\nimport { LuxLayoutModule } from '../lux-layout/lux-layout.module';\nimport { LuxErrorPageComponent } from './lux-error-page/lux-error-page.component';\nimport { RouterModule } from '@angular/router';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxCommonModule } from '../lux-common/lux-common.module';\nimport { LuxActionModule } from '../lux-action/lux-action.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    RouterModule,\n    LuxIconModule,\n    LuxLayoutModule,\n    LuxCommonModule,\n    LuxActionModule,\n    LuxComponentsConfigModule\n  ],\n  entryComponents: [LuxErrorPageComponent],\n  declarations: [LuxHttpErrorComponent, LuxErrorPageComponent],\n  exports: [LuxHttpErrorComponent, LuxErrorPageComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LuxHttpErrorInterceptor,\n      multi: true\n    }\n  ]\n})\nexport class LuxErrorModule {}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { ILuxErrorPageConfig } from '../lux-error-interfaces/lux-error-page-config.interface';\nimport { ILuxError } from '../lux-error-interfaces/lux-error.interface';\nimport { LuxErrorPageComponent } from '../lux-error-page.component';\nimport { LuxErrorStoreService } from './lux-error-store.service';\n\n@Injectable()\nexport class LuxErrorService {\n  constructor(private router: Router, private errorStore: LuxErrorStoreService) {\n    this.errorStore.init();\n    this.setConfig(null);\n  }\n\n  /**\n   * Ueberschreibt die aktuelle Konfiguration fuer die Fehlerseite.\n   * Uebernimmt so viele Werte wie moeglich aus der uebergebenen Konfiguration,\n   * sonst werden die Default-Werte genutzt.\n   * @param luxErrorPageConfig\n   */\n  setConfig(luxErrorPageConfig: ILuxErrorPageConfig) {\n    this.errorStore.safeNewConfig(luxErrorPageConfig);\n    // potentielle alte Route zu LuxErrorPageComponent entfernen\n    this.router.config = this.router.config.filter(entry => entry.component !== LuxErrorPageComponent);\n    // neue Route eintragen\n    this.router.config.unshift({ path: this.errorStore.config.errorPageUrl, component: LuxErrorPageComponent });\n  }\n\n  /**\n   * Navigiert zur Fehlerkomponente und versucht einen Fehler\n   * (wenn mitgegeben) zu sichern.\n   * @param error\n   * @returns Observable<any>\n   */\n  navigateToErrorPage(error?: ILuxError): Observable<any> {\n    if (error) {\n      this.errorStore.error = error;\n    }\n    const { errorPageUrl, skipLocationChange } = this.errorStore.config;\n    return of(this.router.navigateByUrl(errorPageUrl, { skipLocationChange }));\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { LuxFilePreviewData } from './lux-file-preview-data';\n\nexport const LUX_FILE_PREVIEW_DATA = new InjectionToken<LuxFilePreviewData>('LUX_FILE_PREVIEW_DATA');\n\nexport interface LuxFilePreviewConfig {\n  panelClass?: string;\n  hasBackdrop?: boolean;\n  backdropClass?: string;\n  previewData: LuxFilePreviewData;\n}\n","import { OverlayRef } from '@angular/cdk/overlay';\n\nexport class LuxFilePreviewRef {\n  constructor(private overlayRef: OverlayRef) {}\n\n  close(): void {\n    this.overlayRef.dispose();\n  }\n}\n","import { ESCAPE } from '@angular/cdk/keycodes';\nimport { HostListener, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LuxUtil } from '../../lux-util/lux-util';\nimport { LUX_FILE_PREVIEW_DATA } from '../lux-file-preview-config';\nimport { LuxFilePreviewData } from '../lux-file-preview-data';\nimport { LuxFilePreviewRef } from '../lux-file-preview-ref';\n\nexport class LuxFilePreviewBase implements OnInit, OnDestroy {\n  url: string;\n  urls: string[] = [];\n\n  paddingWith = 100;\n  paddingHeight = 150;\n\n  height: number;\n  width: number;\n\n  startPhase = true;\n  startDurationMs = 250;\n  loading = true;\n  loadingTimer: any;\n\n  downloadIconName = 'fas fa-download';\n  downloadTagId = 'file-preview-download-btn';\n  downloadAriaLabel = 'Datei herunterladen';\n\n  closeIconName = 'fas fa-window-close';\n  closeTagId = 'file-preview-close-btn';\n  closeAriaLabel = 'Dateivorschau schließen';\n\n  @HostListener('document:keydown', ['$event'])\n  handleKeydown(event: KeyboardEvent) {\n    if (event.keyCode === ESCAPE) {\n      this.onClose();\n    }\n  }\n\n  @HostListener('window:resize')\n  windowResize() {\n    this.updateWidthAndHeight();\n  }\n\n  constructor(\n    protected previewRef: LuxFilePreviewRef,\n    @Inject(LUX_FILE_PREVIEW_DATA) protected previewData: LuxFilePreviewData,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  ngOnInit() {\n    this.loadingTimer = setTimeout(() => {\n      this.startPhase = false;\n    }, this.startDurationMs);\n\n    this.updateWidthAndHeight();\n\n    setTimeout(() => {\n      let myBlob: Blob;\n      if ('string' === typeof this.previewData.fileObject.content) {\n        myBlob = new Blob([LuxUtil.base64ToArrayBuffer(this.previewData.fileObject.content.split(',')[1])], {\n          type: this.previewData.fileObject.type\n        });\n      } else {\n        myBlob = this.previewData.fileObject.content;\n      }\n\n      this.url = window.URL.createObjectURL(myBlob);\n      this.urls.push(this.url);\n    });\n  }\n\n  ngOnDestroy() {\n    this.urls.forEach(url => {\n      window.URL.revokeObjectURL(url);\n    });\n  }\n\n  onDownload() {\n    this.previewData.fileComponent.downloadFile(this.previewData.fileObject);\n    this.previewRef.close();\n  }\n\n  onClose() {\n    this.previewRef.close();\n  }\n\n  loadingFinished() {\n    this.loading = false;\n  }\n\n  clearFocus() {\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  updateWidthAndHeight() {\n    this.width = window.innerWidth - this.paddingWith;\n    this.height = window.innerHeight - this.paddingHeight;\n  }\n}\n","import { AfterViewInit, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LuxFilePreviewBase } from '../lux-file-preview-base/lux-file-preview-base';\nimport { LUX_FILE_PREVIEW_DATA } from '../lux-file-preview-config';\nimport { LuxFilePreviewData } from '../lux-file-preview-data';\nimport { LuxFilePreviewRef } from '../lux-file-preview-ref';\n\n@Component({\n  selector: 'lux-file-preview-imgviewer',\n  templateUrl: './lux-file-preview-imgviewer.component.html',\n  styleUrls: ['./lux-file-preview-imgviewer.component.scss']\n})\nexport class LuxFilePreviewImgViewerComponent extends LuxFilePreviewBase implements OnInit, AfterViewInit {\n  @ViewChild('previewImg', { static: false }) previewImg: ElementRef;\n\n  zoomActive = false;\n  zoomWidth = 0;\n  zoomStep = 250;\n\n  constructor(\n    protected previewRef: LuxFilePreviewRef,\n    @Inject(LUX_FILE_PREVIEW_DATA) protected previewData: LuxFilePreviewData,\n    public sanitizer: DomSanitizer\n  ) {\n    super(previewRef, previewData, sanitizer);\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.zoomActive =\n        this.previewImg && this.previewImg.nativeElement.naturalWidth - this.paddingWith > window.innerWidth;\n    });\n  }\n\n  onLoad(event: Event) {\n    this.zoomActive =\n      this.previewImg && this.previewImg.nativeElement.naturalWidth - this.paddingWith > window.innerWidth;\n    this.loadingFinished();\n  }\n\n  onZoomIn() {\n    this.zoomWidth += this.zoomStep;\n    this.clearFocus();\n  }\n\n  onZoomOut() {\n    this.zoomWidth -= this.zoomStep;\n    this.clearFocus();\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LuxFilePreviewBase } from '../lux-file-preview-base/lux-file-preview-base';\nimport { LUX_FILE_PREVIEW_DATA } from '../lux-file-preview-config';\nimport { LuxFilePreviewData } from '../lux-file-preview-data';\nimport { LuxFilePreviewRef } from '../lux-file-preview-ref';\n\n@Component({\n  selector: 'lux-file-preview-notsupportedviewer',\n  templateUrl: './lux-file-preview-notsupportedviewer.component.html',\n  styleUrls: ['./lux-file-preview-notsupportedviewer.component.scss']\n})\nexport class LuxFilePreviewNotSupportedViewerComponent extends LuxFilePreviewBase implements OnInit {\n  counter = 5;\n  timer: any;\n\n  downloadLabelDefault = 'Download... ';\n  downloadLabel = this.downloadLabelDefault + this.counter;\n\n  constructor(\n    protected previewRef: LuxFilePreviewRef,\n    @Inject(LUX_FILE_PREVIEW_DATA) protected previewData: LuxFilePreviewData,\n    protected sanitizer: DomSanitizer\n  ) {\n    super(previewRef, previewData, sanitizer);\n  }\n\n  ngOnInit() {\n    this.updateDownloadLabel();\n  }\n\n  onDownload() {\n    clearTimeout(this.timer);\n\n    super.onDownload();\n  }\n\n  onClose() {\n    clearTimeout(this.timer);\n\n    super.onClose();\n  }\n\n  updateDownloadLabel() {\n    this.timer = setTimeout(() => {\n      if (this.counter > 0) {\n        this.counter--;\n        this.downloadLabel = this.downloadLabelDefault + this.counter;\n        this.updateDownloadLabel();\n      } else {\n        this.onDownload();\n      }\n    }, 1000);\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { PdfViewerComponent } from 'ng2-pdf-viewer';\nimport { LuxFilePreviewBase } from '../lux-file-preview-base/lux-file-preview-base';\nimport { LUX_FILE_PREVIEW_DATA } from '../lux-file-preview-config';\nimport { LuxFilePreviewData } from '../lux-file-preview-data';\nimport { LuxFilePreviewRef } from '../lux-file-preview-ref';\n\n@Component({\n  selector: 'lux-file-preview-pdfviewer',\n  templateUrl: './lux-file-preview-pdfviewer.component.html',\n  styleUrls: ['./lux-file-preview-pdfviewer.component.scss']\n})\nexport class LuxFilePreviewPdfViewerComponent extends LuxFilePreviewBase implements OnInit {\n  showAll = true;\n\n  page = 1;\n  numPages = 0;\n\n  loadingDivLeft: number;\n  loadingDivTop: number;\n  loadingDivWidth = 100;\n  loadingDivHeight = 50;\n\n  options: any[] = [\n    { label: ' 15%', value: 0.15 },\n    { label: ' 25%', value: 0.25 },\n    { label: ' 50%', value: 0.5 },\n    { label: ' 75%', value: 0.75 },\n    { label: '100%', value: 1.0 },\n    { label: '150%', value: 1.5 },\n    { label: '200%', value: 2.0 }\n  ];\n  zoom: any = this.options[4];\n\n  constructor(\n    protected previewRef: LuxFilePreviewRef,\n    @Inject(LUX_FILE_PREVIEW_DATA) protected previewData: LuxFilePreviewData,\n    protected sanitizer: DomSanitizer\n  ) {\n    super(previewRef, previewData, sanitizer);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.loadingDivLeft = window.innerWidth / 2 - this.loadingDivWidth / 2;\n    this.loadingDivTop = window.innerHeight / 2 - this.loadingDivHeight / 2;\n  }\n\n  onPrevPage() {\n    this.page--;\n    this.clearFocus();\n  }\n\n  onNextPage() {\n    this.page++;\n    this.clearFocus();\n  }\n\n  pageRendered(e: any) {\n    if (e && e.pageNumber === 1) {\n      this.loadingFinished();\n    }\n  }\n\n  callBackFn(pdf: any) {\n    this.numPages = pdf.numPages;\n\n    pdf.getPage(1).then((page: any) => {\n      let viewportWidth = 0;\n      let currentIndex = 0;\n\n      while (viewportWidth === 0 || viewportWidth > this.width) {\n        viewportWidth =\n          (page as any).getViewport({\n            scale: this.zoom.value\n          }).width * PdfViewerComponent.CSS_UNITS;\n\n        currentIndex = this.options.findIndex(currentZoom => currentZoom === this.zoom);\n\n        if (currentIndex === 0) {\n          break;\n        }\n\n        if (viewportWidth > this.width) {\n          this.zoom = this.options[Math.max(currentIndex - 1, 0)];\n        }\n      }\n    });\n  }\n\n  onError(event: any) {\n    console.log(event);\n  }\n\n  onProgress(progressData: any) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { LuxMediaQueryObserverService } from '../../lux-util/lux-media-query-observer.service';\nimport { LUX_FILE_PREVIEW_DATA } from '../lux-file-preview-config';\nimport { LuxFilePreviewData } from '../lux-file-preview-data';\n\n@Component({\n  selector: 'lux-file-preview-toolbar',\n  templateUrl: './lux-file-preview-toolbar.component.html',\n  styleUrls: ['./lux-file-preview-toolbar.component.scss']\n})\nexport class LuxFilePreviewToolbarComponent {\n  constructor(\n    public mediaQueryService: LuxMediaQueryObserverService,\n    @Inject(LUX_FILE_PREVIEW_DATA) public data: LuxFilePreviewData\n  ) {}\n}\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { LUX_FILE_PREVIEW_DATA } from './lux-file-preview-config';\nimport { LuxFilePreviewData } from './lux-file-preview-data';\nimport { LuxFilePreviewImgViewerComponent } from './lux-file-preview-imgviewer/lux-file-preview-imgviewer.component';\nimport { LuxFilePreviewNotSupportedViewerComponent } from './lux-file-preview-notsupportedviewer/lux-file-preview-notsupportedviewer.component';\nimport { LuxFilePreviewPdfViewerComponent } from './lux-file-preview-pdfviewer/lux-file-preview-pdfviewer.component';\n\n@Component({\n  selector: 'lux-file-preview',\n  templateUrl: './lux-file-preview.component.html',\n  styleUrls: ['./lux-file-preview.component.scss']\n})\nexport class LuxFilePreviewComponent implements OnInit {\n  @ViewChild(LuxFilePreviewPdfViewerComponent, { static: false }) pdfViewer: LuxFilePreviewPdfViewerComponent;\n  @ViewChild(LuxFilePreviewImgViewerComponent, { static: false }) imgViewer: LuxFilePreviewImgViewerComponent;\n  @ViewChild(LuxFilePreviewNotSupportedViewerComponent, { static: false })\n  notSupportedViewer: LuxFilePreviewNotSupportedViewerComponent;\n\n  fileType: 'img' | 'pdf' | 'notsupported' = 'notsupported';\n\n  constructor(@Inject(LUX_FILE_PREVIEW_DATA) public data: LuxFilePreviewData) {}\n\n  ngOnInit(): void {\n    if (this.data.fileObject.type.indexOf('image/') > -1) {\n      this.fileType = 'img';\n    } else if (this.data.fileObject.type.indexOf('application/pdf') > -1) {\n      this.fileType = 'pdf';\n    } else {\n      this.fileType = 'notsupported';\n    }\n  }\n\n  onClose() {\n    if (this.pdfViewer) {\n      this.pdfViewer.onClose();\n    } else if (this.imgViewer) {\n      this.imgViewer.onClose();\n    } else {\n      this.notSupportedViewer.onClose();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\nimport { LuxActionModule } from '../lux-action/lux-action.module';\nimport { LuxCommonModule } from '../lux-common/lux-common.module';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\nimport { LuxFormModule } from '../lux-form/lux-form.module';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxLayoutModule } from '../lux-layout/lux-layout.module';\nimport { LuxFilePreviewImgViewerComponent } from './lux-file-preview-imgviewer/lux-file-preview-imgviewer.component';\nimport { LuxFilePreviewNotSupportedViewerComponent } from './lux-file-preview-notsupportedviewer/lux-file-preview-notsupportedviewer.component';\nimport { LuxFilePreviewPdfViewerComponent } from './lux-file-preview-pdfviewer/lux-file-preview-pdfviewer.component';\nimport { LuxFilePreviewToolbarComponent } from './lux-file-preview-toolbar/lux-file-preview-toolbar.component';\nimport { LuxFilePreviewComponent } from './lux-file-preview.component';\n\n@NgModule({\n  declarations: [\n    LuxFilePreviewComponent,\n    LuxFilePreviewToolbarComponent,\n    LuxFilePreviewPdfViewerComponent,\n    LuxFilePreviewImgViewerComponent,\n    LuxFilePreviewNotSupportedViewerComponent\n  ],\n  imports: [\n    CommonModule,\n    PdfViewerModule,\n    FlexLayoutModule,\n    LuxCommonModule,\n    LuxLayoutModule,\n    LuxActionModule,\n    LuxIconModule,\n    LuxFormModule,\n    LuxDirectivesModule\n  ],\n  exports: [\n    LuxFilePreviewComponent,\n    LuxFilePreviewToolbarComponent,\n    LuxFilePreviewPdfViewerComponent,\n    LuxFilePreviewImgViewerComponent,\n    LuxFilePreviewNotSupportedViewerComponent\n  ]\n})\nexport class LuxFilePreviewModule {}\n","import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable, Injector } from '@angular/core';\nimport { LUX_FILE_PREVIEW_DATA, LuxFilePreviewConfig } from './lux-file-preview-config';\nimport { LuxFilePreviewRef } from './lux-file-preview-ref';\nimport { LuxFilePreviewComponent } from './lux-file-preview.component';\n\nexport const DEFAULT_FILE_PREVIEW_CONFIG: LuxFilePreviewConfig = {\n  hasBackdrop: true,\n  backdropClass: 'lux-file-preview-backdrop',\n  panelClass: 'lux-file-preview-panel',\n  previewData: {\n    fileComponent: null,\n    fileObject: null\n  }\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LuxFilePreviewService {\n  constructor(private injector: Injector, private overlay: Overlay) {}\n\n  open(config: LuxFilePreviewConfig): LuxFilePreviewRef {\n    const previewConfig = { ...DEFAULT_FILE_PREVIEW_CONFIG, ...config };\n    const overlayRef = this.createOverlay(previewConfig);\n    const previewRef = new LuxFilePreviewRef(overlayRef);\n    const previewComponent = this.attachDialogContainer(overlayRef, previewRef, previewConfig);\n\n    overlayRef.backdropClick().subscribe(() => previewComponent.onClose());\n\n    return previewRef;\n  }\n\n  private attachDialogContainer(overlayRef: OverlayRef, dialogRef: LuxFilePreviewRef, config: LuxFilePreviewConfig) {\n    const injector = this.createInjector(config, dialogRef);\n    const containerPortal = new ComponentPortal(LuxFilePreviewComponent, null, injector);\n    const containerRef: ComponentRef<LuxFilePreviewComponent> = overlayRef.attach(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  private createOverlay(config: LuxFilePreviewConfig) {\n    return this.overlay.create(this.getOverlayConfig(config));\n  }\n\n  private createInjector(config: LuxFilePreviewConfig, dialogRef: LuxFilePreviewRef): PortalInjector {\n    const injectionTokens = new WeakMap();\n\n    injectionTokens.set(LuxFilePreviewRef, dialogRef);\n    injectionTokens.set(LUX_FILE_PREVIEW_DATA, config.previewData);\n\n    return new PortalInjector(this.injector, injectionTokens);\n  }\n\n  private getOverlayConfig(config: LuxFilePreviewConfig): OverlayConfig {\n    const positionStrategy = this.overlay\n      .position()\n      .global()\n      .centerHorizontally()\n      .centerVertically();\n\n    const overlayConfig = new OverlayConfig({\n      hasBackdrop: config.hasBackdrop,\n      backdropClass: config.backdropClass,\n      panelClass: config.panelClass,\n      scrollStrategy: this.overlay.scrollStrategies.block(),\n      positionStrategy\n    });\n\n    return overlayConfig;\n  }\n}\n","export interface ILuxAppFooterButtonInfo {\n  label: string;\n  cmd: string;\n  color?: string;\n  disabled?: boolean;\n  hidden?: boolean;\n  raised?: boolean;\n  iconName?: string;\n  alwaysVisible?: boolean;\n  onClick?: (that: ILuxAppFooterButtonInfo) => void;\n}\n\nexport class LuxAppFooterButtonInfo implements ILuxAppFooterButtonInfo {\n  label: string;\n  color: string;\n  disabled: boolean;\n  cmd: string;\n  hidden: boolean;\n  raised: boolean;\n  iconName: string;\n  alwaysVisible: boolean;\n  onClick: (that: ILuxAppFooterButtonInfo) => void;\n\n  constructor(\n    label: string,\n    cmd: string,\n    color?: string,\n    disabled?: boolean,\n    hidden?: boolean,\n    raised?: boolean,\n    iconName?: string,\n    alwaysVisible?: boolean,\n    onClick?: (that: ILuxAppFooterButtonInfo) => void\n  ) {\n    this.label = label;\n    this.color = color;\n    this.disabled = disabled;\n    this.cmd = cmd;\n    this.hidden = hidden === true ? true : false;\n    this.raised = raised === undefined || raised === null || raised === true ? true : false;\n    this.iconName = iconName;\n    this.alwaysVisible =\n      alwaysVisible === undefined || alwaysVisible === null || alwaysVisible === false ? false : true;\n    this.onClick = onClick ? onClick : (that: ILuxAppFooterButtonInfo) => {};\n  }\n\n  /**\n   * Statische Methode um ein Info-Objekt zu generieren.\n   * Nimmt ein Objekt vom Typ ILuxAppFooterButtonInfo entgegen.\n   * @param data\n   * @returns eine Button Info\n   */\n  static generateInfo(data: ILuxAppFooterButtonInfo): LuxAppFooterButtonInfo {\n    const info: LuxAppFooterButtonInfo = new LuxAppFooterButtonInfo(\n      data.label,\n      data.cmd,\n      data.color,\n      data.disabled,\n      data.hidden,\n      data.raised,\n      data.iconName,\n      data.alwaysVisible,\n      data.onClick\n    );\n\n    return info;\n  }\n}\n","export interface ILuxAppFooterLinkInfo {\n  label: string;\n  path: string;\n  alwaysVisible?: boolean;\n  blank?: boolean;\n}\n\nexport class LuxAppFooterLinkInfo implements ILuxAppFooterLinkInfo {\n  label: string;\n  path: string;\n  alwaysVisible: boolean;\n  blank: boolean;\n\n  constructor(label: string, path: string, alwaysVisible?: boolean, blank?: boolean) {\n    this.label = label;\n    this.path = path;\n    this.alwaysVisible = alwaysVisible;\n    this.blank = blank;\n  }\n\n  /**\n   * Statische Methode um ein Info-Objekt zu generieren.\n   * Nimmt ein Objekt vom Typ ILuxAppFooterLinkInfo entgegen.\n   * @param data\n   * @returns eine Link Info\n   */\n  static generateInfo(data: ILuxAppFooterLinkInfo): LuxAppFooterLinkInfo {\n    const info: LuxAppFooterLinkInfo = new LuxAppFooterLinkInfo(data.label, data.path, data.alwaysVisible);\n\n    return info;\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LuxLookupParameters } from '../lux-lookup-model/lux-lookup-parameters';\nimport { LuxLookupTableEntry } from '../lux-lookup-model/lux-lookup-table-entry';\n\n@Injectable()\nexport class LuxLookupService {\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Liefert die Eintraege einer Schluesseltabelle.\n   *\n   * @param tableNo\n   * @param parameters\n   * @param url\n   * @returns Observable<LuxLookupTableEntry[]>\n   */\n  getLookupTable(tableNo: string, parameters: LuxLookupParameters, url: string): Observable<LuxLookupTableEntry[]> {\n    const httpParameters = this.generateParameters(parameters);\n    return this.http.get<LuxLookupTableEntry[]>(url + 'getLookupTable/' + tableNo, { params: httpParameters });\n  }\n\n  /**\n   * Generiert die Standard-Parameter fuer einen Lookup-Request.\n   *\n   * @param parameters\n   * @returns HttpParams\n   */\n  private generateParameters(parameters: LuxLookupParameters): HttpParams {\n    let httpParameters = new HttpParams();\n    httpParameters = httpParameters.append('knr', '' + parameters.knr);\n    httpParameters = httpParameters.append('raw', '' + parameters.raw);\n\n    if (parameters.keys && parameters.keys.length > 0) {\n      parameters.keys.forEach((key: string) => {\n        httpParameters = httpParameters.append('keys', key);\n      });\n    }\n\n    if (parameters.fields && parameters.fields.length > 0) {\n      parameters.fields.forEach((field: string) => {\n        httpParameters = httpParameters.append('fields', field);\n      });\n    }\n\n    return httpParameters;\n  }\n}\n","/**\n * Enums, welche die auswaehlbaren Felder fuer den Response einer Lookup-Service-Abfrage beinhaltet.\n */\nexport enum LuxFieldValues {\n  kurz = 'kurz',\n  lang1 = 'lang1',\n  lang2 = 'lang2',\n  gueltig_von = 'gueltig_von',\n  gueltig_bis = 'gueltig_bis'\n}\n\nexport enum LuxBehandlungsOptionenUngueltige {\n  anzeigen = 'anzeigen',\n  ausgrauen = 'ausgrauen',\n  ausblenden = 'ausblenden'\n}\n\n/**\n * Class, welche benutzt wird um die Abfrage an den Lookup-Service zu modifizeren.\n */\nexport class LuxLookupParameters {\n  knr: number;\n  keys: any[];\n  fields: LuxFieldValues[];\n  raw: boolean;\n\n  constructor(data: { knr: number; keys?: string[]; fields?: LuxFieldValues[]; raw?: boolean }) {\n    this.knr = data.knr;\n    this.keys = !!data.keys ? data.keys : [];\n    this.fields = !!data.fields\n      ? data.fields\n      : [\n          LuxFieldValues.kurz,\n          LuxFieldValues.lang1,\n          LuxFieldValues.lang2,\n          LuxFieldValues.gueltig_bis,\n          LuxFieldValues.gueltig_von\n        ];\n    this.raw = !!data.raw ? data.raw : false;\n  }\n}\n","// tslint:disable:max-line-length\n\nimport {\n  ChangeDetectorRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { LuxBehandlungsOptionenUngueltige, LuxLookupParameters } from './lux-lookup-parameters';\nimport { LuxLookupTableEntry } from './lux-lookup-table-entry';\nimport { LuxLookupService } from '../lux-lookup-service/lux-lookup.service';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxFormComponentBase } from '../../lux-form/lux-form-model/lux-form-component-base.class';\nimport { LuxLookupHandlerService } from '../lux-lookup-service/lux-lookup-handler.service';\nimport { LuxLookupErrorStateMatcher } from './lux-lookup-error-state-matcher';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\nimport { Subscription } from 'rxjs';\nimport { LuxComponentsConfigParameters } from '../../lux-components-config/lux-components-config-parameters.interface';\n\nexport abstract class LuxLookupComponent extends LuxFormComponentBase implements OnInit, OnChanges, OnDestroy {\n  LuxBehandlungsOptionenUngueltige = LuxBehandlungsOptionenUngueltige;\n\n  lookupService: LuxLookupService;\n  lookupHandler: LuxLookupHandlerService;\n  componentsConfigService: LuxComponentsConfigService;\n\n  stateMatcher: LuxLookupErrorStateMatcher;\n  apiPath: string;\n\n  @Input() luxPlaceholder: string;\n  @Input() luxReadonly: boolean;\n  @Input() luxLookupId: string;\n  @Input() luxTableNo: string;\n  @Input() luxRenderProp: any;\n  @Input() luxBehandlungUngueltige: LuxBehandlungsOptionenUngueltige = LuxBehandlungsOptionenUngueltige.ausgrauen;\n  @Input() luxParameters: LuxLookupParameters;\n  @Input() luxCustomStyles;\n  @Input() luxCustomInvalidStyles;\n  @Input() luxTagId: string;\n  @Output() luxDataLoaded: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() luxValueChange: EventEmitter<LuxLookupTableEntry | LuxLookupTableEntry[]> = new EventEmitter<\n    LuxLookupTableEntry\n  >();\n  entries: LuxLookupTableEntry[] = [];\n\n  private configSubscription: Subscription;\n\n  protected constructor(\n    lookupService: LuxLookupService,\n    lookupHandler: LuxLookupHandlerService,\n    controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    componentsConfigService: LuxComponentsConfigService\n  ) {\n    super(controlContainer, cdr, logger, componentsConfigService);\n\n    this.lookupService = lookupService;\n    this.lookupHandler = lookupHandler;\n    this.componentsConfigService = componentsConfigService;\n  }\n\n  get luxValue(): any {\n    return this.getValue();\n  }\n\n  @Input() set luxValue(value: any) {\n    this.setValue(value);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (!this.luxLookupId) {\n      console.error(\n        `Die Lookup-Komponente mit der Tabellen-Nr. ${this.luxTableNo} besitzt keine LookupId. Bitte tragen Sie diese nach.`\n      );\n    }\n\n    this.lookupHandler.addLookupElement(this.luxLookupId);\n    this.lookupHandler.getLookupElementObsv(this.luxLookupId).subscribe(() => {\n      this.fetchLookupData();\n    });\n\n    this.configSubscription = this.componentsConfigService.config.subscribe(\n      (newConfig: LuxComponentsConfigParameters) => {\n        this.apiPath = newConfig.lookupServiceUrl;\n\n        this.lookupHandler.reloadData(this.luxLookupId);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this.configSubscription.unsubscribe();\n  }\n\n  /**\n   * Gibt zurueck, ob die RenderProperty eine Funktion ist oder nicht.\n   *\n   * @returns boolean\n   */\n  isRenderPropAFunction(): boolean {\n    return typeof this.luxRenderProp === 'function';\n  }\n\n  /**\n   * Gibt zurück ob sich das entsprechende Element in der Liste ungültiger Elemente befindet.\n   * @param LuxLookupTableEntry entry\n   * @returns boolean\n   */\n  isUngueltig(entry: LuxLookupTableEntry | LuxLookupTableEntry[]) {\n    let isUngueltig = false;\n    if (entry) {\n      if (!Array.isArray(entry)) {\n        if (entry.gueltigkeitBis) {\n          isUngueltig = Date.now() > +entry.gueltigkeitBis;\n        }\n      } else {\n        entry.forEach(element => {\n          if (element.gueltigkeitBis && !isUngueltig) {\n            isUngueltig = Date.now() > +element.gueltigkeitBis;\n          }\n        });\n      }\n    }\n\n    return isUngueltig;\n  }\n\n  /**\n   * Gibt zurück ob ungültige Einträge angezeigt werden sollen.\n   * @returns boolean\n   */\n  showUngueltige() {\n    return (\n      this.luxBehandlungUngueltige === this.LuxBehandlungsOptionenUngueltige.ausgrauen ||\n      this.luxBehandlungUngueltige === this.LuxBehandlungsOptionenUngueltige.anzeigen\n    );\n  }\n\n  /**\n   * Gibt zurück ob ungültige Einträge deaktiviert werden sollen.\n   * @returns boolean\n   */\n  disableUngueltige() {\n    return this.luxBehandlungUngueltige === this.LuxBehandlungsOptionenUngueltige.ausgrauen;\n  }\n\n  /**\n   * Gibt die mitgegebenen Styles abhaengig ob das Element invalid ist zurueck.\n   * @param boolean invalid\n   * @returns LuxLookupOptionStyle\n   */\n  getStyles(invalid: boolean) {\n    if (invalid) {\n      return this.luxCustomInvalidStyles ? this.luxCustomInvalidStyles : {};\n    }\n    return this.luxCustomStyles ? this.luxCustomStyles : {};\n  }\n\n  /**\n   * @override errorMessageModifier - Modifikation der Fehlermeldung\n   * @param value\n   * @param errors\n   */\n  errorMessageModifier(value, errors) {\n    if (errors['ungueltig']) {\n      return 'Der ausgewählte Wert ist ungültig.';\n    }\n    return undefined;\n  }\n\n  getLabel(entry: any): string {\n    if (this.isRenderPropAFunction()) {\n      return this.luxRenderProp(entry);\n    }\n    if (entry[this.luxRenderProp as string]) {\n      return entry[<string>this.luxRenderProp];\n    }\n    return 'Fehler beim Auslesen (Property unbekannt)';\n  }\n\n  /**\n   * Holt die Lookup-Table Daten vom Backend\n   */\n  protected fetchLookupData() {\n    const backendRequest = this.lookupService.getLookupTable(this.luxTableNo, this.luxParameters, this.apiPath);\n    backendRequest.subscribe(\n      (entries: LuxLookupTableEntry[]) => {\n        this.setLookupData(entries);\n        this.luxDataLoaded.emit(true);\n      },\n      () => {\n        this.luxDataLoaded.emit(false);\n      }\n    );\n  }\n\n  /**\n   * Setzt die aktuellen Werte auf die mitgegebenen Entries.\n   * @param entries\n   */\n  protected setLookupData(entries: LuxLookupTableEntry[]) {\n    this.entries = entries;\n    if (this.entries) {\n      // Merken welche Eintraege ungueltig sind, um bei vielen Informationen\n      // nicht die ganzen Funktionsaufrufe zu haben\n      this.entries.forEach((entry: LuxLookupTableEntry) => {\n        entry.isUngueltig = this.isUngueltig(entry);\n      });\n    }\n  }\n\n  // region Overridden methods\n  notifyFormValueChanged(formValue: any) {\n    this.luxValueChange.emit(formValue);\n  }\n\n  protected triggerOutputPatternCheck() {\n    this.checkOutputPatternViolation(this.luxValueChange.observers);\n  }\n\n  protected triggerInputPatternCheck(simpleChanges: SimpleChanges) {\n    this.checkInputPatternViolation(simpleChanges.luxValue);\n  }\n\n  // endregion\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class LuxLookupHandlerService {\n  private lookupElements: Map<string, Subject<any>> = new Map();\n\n  constructor() {}\n\n  /**\n   * Fügt ein LookupComponent zu der Map hinzu.\n   * @param string name\n   */\n  addLookupElement(name: string) {\n    this.lookupElements.set(name, new Subject<boolean>());\n  }\n\n  /**\n   * Gibt das Subject einer LookupComponent als Observable zurück (oder null).\n   * @param string name\n   * @returns Observable<any> | null\n   */\n  getLookupElementObsv(name: string): Observable<any> | null {\n    const lookupEl = this.getLookupElementSubject(name);\n    if (lookupEl) {\n      return lookupEl.asObservable();\n    }\n    return null;\n  }\n\n  /**\n   * Gibt das Subject einer LookupComponent zurück (oder null).\n   * @param string name\n   * @returns Observable<any> | null\n   */\n  getLookupElementSubject(name: string) {\n    const lookupEl = this.lookupElements.get(name);\n    if (lookupEl) {\n      return lookupEl;\n    }\n    return null;\n  }\n\n  /**\n   * Stößt das Neuladen von Schlüsseltabellendaten einer LookupComponent an.\n   * @param string name\n   */\n  reloadData(lookupId: string) {\n    const lookupEl = this.getLookupElementSubject(lookupId);\n    if (lookupEl) {\n      lookupEl.next();\n    } else {\n      console.error('Die Lookup-Komponente ' + lookupId + ' konnte nicht gefunden werden.');\n    }\n  }\n}\n","import { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material';\nimport { LuxLookupComponent } from '../lux-lookup-model/lux-lookup-component';\n\nexport class LuxLookupErrorStateMatcher implements ErrorStateMatcher {\n  lookupComponent: LuxLookupComponent;\n\n  constructor(lookupComponent: LuxLookupComponent) {\n    this.lookupComponent = lookupComponent;\n  }\n\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const lookupValue = this.lookupComponent.luxValue;\n    if (lookupValue) {\n      // Wenn ein selektierter Wert ungültig ist, Fehler anzeigen\n      if (\n        (!Array.isArray(lookupValue) && lookupValue.isUngueltig) ||\n        (Array.isArray(lookupValue) && lookupValue.filter(value => value.isUngueltig).length > 0)\n      ) {\n        if (!control.errors || !control.errors.ungueltig) {\n          setTimeout(() => {\n            control.setErrors({ ungueltig: 'true' });\n          });\n        }\n        return true;\n      }\n    }\n    return !!control.errors && control.touched;\n  }\n}\n","import { AfterViewInit, ChangeDetectorRef, Component, Input, Optional, ViewChild } from '@angular/core';\nimport { LuxLookupTableEntry } from '../lux-lookup-model/lux-lookup-table-entry';\nimport { LuxLookupService } from '../lux-lookup-service/lux-lookup.service';\nimport { ControlContainer } from '@angular/forms';\nimport { LuxLookupComponent } from '../lux-lookup-model/lux-lookup-component';\nimport { MatSelect, MatSelectChange } from '@angular/material';\nimport { LuxLookupHandlerService } from '../lux-lookup-service/lux-lookup-handler.service';\nimport { LuxLookupErrorStateMatcher } from '../lux-lookup-model/lux-lookup-error-state-matcher';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-lookup-combobox',\n  templateUrl: './lux-lookup-combobox.component.html',\n  styleUrls: ['./lux-lookup-combobox.component.scss']\n})\nexport class LuxLookupComboboxComponent extends LuxLookupComponent implements AfterViewInit {\n  @Input() luxMultiple: boolean = false;\n  @Input() luxEntryBlockSize: number = 25;\n\n  displayedEntries: LuxLookupTableEntry[];\n  @ViewChild(MatSelect, { static: false }) matSelect: MatSelect;\n\n  constructor(\n    lookupService: LuxLookupService,\n    lookupHandler: LuxLookupHandlerService,\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    componentsConfigService: LuxComponentsConfigService\n  ) {\n    super(lookupService, lookupHandler, controlContainer, cdr, logger, componentsConfigService);\n\n    this.stateMatcher = new LuxLookupErrorStateMatcher(this);\n  }\n\n  ngAfterViewInit() {\n    this.matSelect.openedChange.subscribe((open: boolean) => {\n      if (open) {\n        this.registerPanelScrollEvent(this.matSelect.panel.nativeElement);\n      }\n    });\n  }\n\n  /**\n   * Vergleicht die Optionen anhand der Key-Werte\n   * @param value1\n   * @param value2\n   * @returns boolean\n   */\n  compareByKey(value1, value2) {\n    const key1 = value1 ? value1.key : -1;\n    const key2 = value2 ? value2.key : -2;\n\n    return key1 === key2;\n  }\n\n  setLookupData(entries: LuxLookupTableEntry[]) {\n    super.setLookupData(entries);\n    if (this.entries.length > this.luxEntryBlockSize) {\n      this.displayedEntries = this.entries.splice(0, this.luxEntryBlockSize);\n    } else {\n      this.displayedEntries = [...this.entries];\n    }\n  }\n\n  /**\n   * Setzt den aktuellen Value-Wert auf den ausgewählten Wert.\n   * @param $event\n   */\n  selected($event: MatSelectChange) {\n    this.luxValue = $event.value;\n  }\n\n  /**\n   * Fuegt beim Oeffnen des Selects einen Scrolllistener hinzu.\n   */\n  private registerPanelScrollEvent(panelElement) {\n    panelElement.addEventListener('scroll', event => this.loadOnScroll(event));\n  }\n\n  /**\n   * Stoesst das Nachladen von Elementen an, wenn ein bestimmter Scrollwert erreicht wurde.\n   * @param event - ScrollEvent\n   */\n  private loadOnScroll(event) {\n    const position = event.target;\n    if ((position.scrollTop + position.clientHeight) / position.scrollHeight > 85 / 100) {\n      this.reloadNextDataBlock();\n    }\n  }\n\n  /**\n   * Laed den naechsten Block Daten aus den Entries nach.\n   */\n  private reloadNextDataBlock() {\n    const start = this.displayedEntries.length - 1;\n    const end =\n      start + this.luxEntryBlockSize > this.entries.length\n        ? this.entries.length - start\n        : start + this.luxEntryBlockSize;\n    this.displayedEntries.push(...this.entries.splice(start, end));\n  }\n}\n","import { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { LuxLookupComponent } from '../lux-lookup-model/lux-lookup-component';\nimport { LuxLookupTableEntry } from '../lux-lookup-model/lux-lookup-table-entry';\nimport { LuxLookupErrorStateMatcher } from '../lux-lookup-model/lux-lookup-error-state-matcher';\n\nexport class LuxAutocompleteErrorStateMatcher extends LuxLookupErrorStateMatcher {\n  entries: LuxLookupTableEntry[] = [];\n\n  constructor(lookupComponent: LuxLookupComponent, entries: LuxLookupTableEntry[]) {\n    super(lookupComponent);\n\n    this.entries = entries;\n  }\n\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    if (control && typeof control.value === 'string' && control.value.length > 0) {\n      if (!control.errors || !control.errors.noResult) {\n        setTimeout(() => {\n          control.setErrors({ noResult: true });\n        });\n      }\n      return true;\n    }\n\n    return super.isErrorState(control, form);\n  }\n}\n","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { LuxLookupComponent } from '../lux-lookup-model/lux-lookup-component';\nimport { LuxLookupService } from '../lux-lookup-service/lux-lookup.service';\nimport { ControlContainer } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map, startWith } from 'rxjs/operators';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent, MatAutocompleteTrigger } from '@angular/material';\nimport { LuxAutocompleteErrorStateMatcher } from './lux-autocomplete-error-state-matcher';\nimport { LuxLookupHandlerService } from '../lux-lookup-service/lux-lookup-handler.service';\nimport { LuxLookupTableEntry } from '../lux-lookup-model/lux-lookup-table-entry';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';\n\n@Component({\n  selector: 'lux-lookup-autocomplete',\n  templateUrl: './lux-lookup-autocomplete.component.html',\n  styleUrls: ['./lux-lookup-autocomplete.component.scss']\n})\nexport class LuxLookupAutocompleteComponent extends LuxLookupComponent implements OnInit {\n  filteredEntries: Observable<LuxLookupTableEntry[]>;\n  entriesCount: number;\n  latestSearchValue: string;\n\n  @Input() luxDebounceTime: number = 250;\n  @Input() luxMaximumDisplayed: number = 50;\n\n  @Output() luxBlur: EventEmitter<any> = new EventEmitter<any>();\n  @Output() luxFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChild(MatAutocomplete, { static: false }) matAutocomplete: MatAutocomplete;\n  @ViewChild(MatAutocompleteTrigger, { static: false }) matAutocompleteTrigger: MatAutocompleteTrigger;\n\n  constructor(\n    lookupService: LuxLookupService,\n    lookupHandler: LuxLookupHandlerService,\n    @Optional() controlContainer: ControlContainer,\n    cdr: ChangeDetectorRef,\n    logger: LuxConsoleService,\n    componentsConfigService: LuxComponentsConfigService\n  ) {\n    super(lookupService, lookupHandler, controlContainer, cdr, logger, componentsConfigService);\n\n    this.stateMatcher = new LuxAutocompleteErrorStateMatcher(this, this.entries);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.filteredEntries = this.formControl.valueChanges.pipe(\n      debounceTime(this.luxDebounceTime),\n      distinctUntilChanged(),\n      startWith<string | LuxLookupTableEntry>(''),\n      map((value: any) => {\n        const searchValue = typeof value === 'string' ? value : this.displayFn(value);\n        this.latestSearchValue = searchValue;\n        let filteredValues = searchValue ? this.filter(searchValue) : this.entries ? this.entries.slice() : [];\n        this.entriesCount = filteredValues.length;\n        if (this.entriesCount > this.luxMaximumDisplayed) {\n          filteredValues = filteredValues.splice(0, this.luxMaximumDisplayed);\n        }\n        return filteredValues;\n      })\n    );\n  }\n\n  /**\n   * Vergleicht den eingegebenen Wert mit den Display-Werten der Einträge.\n   * @param filterTerm\n   * @returns LuxLookupTableEntry[]\n   */\n  filter(filterTerm: any): LuxLookupTableEntry[] {\n    return this.entries.filter(option => {\n      const compareValue = this.displayFn(option);\n      return (\n        compareValue\n          .trim()\n          .toLowerCase()\n          .indexOf(filterTerm.trim().toLowerCase()) > -1\n      );\n    });\n  }\n\n  /**\n   * Bestimmt wie eingegebene Optionen dargestellt werden.\n   * @param option\n   * @returns string\n   */\n  displayFn(option: LuxLookupTableEntry): string {\n    if (typeof option === 'string') {\n      return option;\n    } else if (this.isRenderPropAFunction()) {\n      return (<Function>this.luxRenderProp)(option);\n    } else if (option) {\n      return option[<string>this.luxRenderProp]\n        ? option[<string>this.luxRenderProp]\n        : 'Fehler beim Auslesen (Property unbekannt)';\n    }\n  }\n\n  /**\n   * Wird beim Klick auf das Input Feld aufgerufen.\n   * @param clickEvent\n   */\n  onClick(clickEvent: any) {\n    clickEvent.target.setSelectionRange(0, clickEvent.target.value.length);\n    // Beim Klick wenn kein Wert gesetzt ist, das Panel oeffnen\n    if (!this.luxValue) {\n      this.matAutocompleteTrigger._onChange('');\n      this.matAutocompleteTrigger.openPanel();\n    }\n  }\n\n  /**\n   * Setzt den aktuellen Value-Wert auf den ausgewählten Wert.\n   * @param MatAutocompleteSelectedEvent $event\n   */\n  selected($event: MatAutocompleteSelectedEvent) {\n    this.luxValue = $event.option.value;\n    if (this.isInForm()) {\n      this.formControl.setValue(this.luxValue);\n    }\n  }\n\n  /**\n   * @override errorMessageModifier - Modifikation der Fehlermeldung\n   * @param value\n   * @param errors\n   */\n  errorMessageModifier(value, errors) {\n    const msg = super.errorMessageModifier(value, errors);\n    if (msg) {\n      return msg;\n    }\n\n    if (errors['noResult']) {\n      return 'Der eingegebene Eintrag ist nicht Teil der Schlüsseltabelle.';\n    }\n    return undefined;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxLookupParameters } from '../lux-lookup-model/lux-lookup-parameters';\nimport { LuxLookupTableEntry } from '../lux-lookup-model/lux-lookup-table-entry';\nimport { LuxLookupHandlerService } from '../lux-lookup-service/lux-lookup-handler.service';\nimport { LuxLookupService } from '../lux-lookup-service/lux-lookup.service';\n\n@Component({\n  selector: 'lux-lookup-label',\n  templateUrl: './lux-lookup-label.component.html'\n})\nexport class LuxLookupLabelComponent implements OnInit {\n  lookupService: LuxLookupService;\n  lookupHandler: LuxLookupHandlerService;\n  logger: LuxConsoleService;\n  lookupParameters: LuxLookupParameters;\n\n  entry: LuxLookupTableEntry;\n\n  @Input() luxLookupKnr: number;\n  @Input() luxLookupId: string;\n  @Input() luxLookupUrl: string = '/lookup/';\n  @Input() luxTableNo: string;\n  @Input() luxTableKey: string;\n  @Input() luxBezeichnung: string = 'kurz';\n\n  constructor(\n    lookupService: LuxLookupService,\n    lookupHandler: LuxLookupHandlerService,\n    luxConsoleLogger: LuxConsoleService\n  ) {\n    this.lookupService = lookupService;\n    this.lookupHandler = lookupHandler;\n    this.logger = luxConsoleLogger;\n  }\n\n  ngOnInit() {\n    if (!this.luxLookupId) {\n      console.error(\n        'Das Lookup-Label mit der Tabellen-Nr. ${this.luxTableNo} besitzt keine LookupId.' +\n          'Bitte tragen Sie diese nach.'\n      );\n    }\n\n    if (!this.luxTableNo) {\n      console.error(\n        'Das Lookup-Label mit der LookupId ${this.luxLookupId} besitzt keine Tabellen-Nummer. ' +\n          'Bitte tragen Sie diese nach.'\n      );\n    }\n\n    if (!this.luxTableKey) {\n      console.error(\n        'Das Lookup-Label mit der Tabellen-Nr. ${this.luxTableNo} besitzt keinen Tabellen-Key.' +\n          'Bitte tragen Sie diese nach.'\n      );\n    }\n\n    this.fetchLookupData();\n\n    this.lookupHandler.addLookupElement(this.luxLookupId);\n    this.lookupHandler.getLookupElementObsv(this.luxLookupId).subscribe(() => {\n      this.fetchLookupData();\n    });\n  }\n\n  protected fetchLookupData() {\n    const keys: string[] = [this.luxTableKey];\n\n    this.lookupParameters = new LuxLookupParameters({ knr: this.luxLookupKnr, keys });\n\n    this.lookupService\n      .getLookupTable(this.luxTableNo, this.lookupParameters, this.luxLookupUrl)\n      .subscribe((entries: LuxLookupTableEntry[]) => {\n        if (typeof entries !== 'undefined' && entries.length === 1) {\n          this.entry = entries[0];\n        }\n      });\n  }\n\n  /**\n   * liefert die Bezeichnung (Kurz- oder Langbezeichnung) des Entries für den Key zur Tabelle.\n   *\n   * @returns string\n   */\n  getBezeichnung(): string {\n    let bezeichnung = '';\n\n    if (this.entry) {\n      if ('kurz' === this.luxBezeichnung) {\n        bezeichnung = this.entry.kurzText;\n      } else if ('lang' === this.luxBezeichnung) {\n        bezeichnung = this.entry.langText1;\n\n        if (!bezeichnung) {\n          bezeichnung = this.entry.kurzText;\n        }\n      }\n    }\n\n    return bezeichnung;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule, MatFormFieldModule, MatInputModule, MatSelectModule } from '@angular/material';\nimport { LuxLookupComboboxComponent } from './lux-lookup-combobox/lux-lookup-combobox.component';\nimport { LuxLookupService } from './lux-lookup-service/lux-lookup.service';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\nimport { LuxLookupAutocompleteComponent } from './lux-lookup-autocomplete/lux-lookup-autocomplete.component';\nimport { LuxFormModule } from '../lux-form/lux-form.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LuxLookupLabelComponent } from './lux-lookup-label/lux-lookup-label.component';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    LuxDirectivesModule,\n    LuxFormModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    FlexLayoutModule,\n    LuxComponentsConfigModule\n  ],\n  declarations: [LuxLookupComboboxComponent, LuxLookupAutocompleteComponent, LuxLookupLabelComponent],\n  providers: [HttpClient, LuxLookupService],\n  exports: [LuxLookupComboboxComponent, LuxLookupAutocompleteComponent, LuxLookupLabelComponent]\n})\nexport class LuxLookupModule {}\n","/**\n * Kennzeichnet einen einzelnen Eintrag in einer Schluesseltabelle.\n */\nexport class LuxLookupTableEntry {\n  gueltigkeitBis?: string | number;\n  gueltigkeitVon?: string | number;\n  key: string;\n  kurzText?: string;\n  langText1?: string;\n  langText2?: string;\n\n  /*\n   * Properties, die nur intern genutzt werden\n   */\n  isUngueltig?: boolean;\n\n  constructor(partial: Partial<LuxLookupTableEntry>) {\n    Object.assign(this, partial);\n  }\n}\n","export class LuxSnackbarConfig {\n  iconName?: string = '';\n  iconSize?: string = '3x';\n  iconColor?: string = '';\n  text?: string = '';\n  textColor?: string = '';\n  action?: string = '';\n  actionColor?: string = '';\n\n  constructor(partial: Partial<LuxSnackbarConfig>) {\n    Object.assign(this, partial);\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBarRef } from '@angular/material';\nimport { LuxSnackbarConfig } from '../lux-snackbar-config';\nimport { Observable, Subject } from 'rxjs';\nimport { LuxUtil } from '../../../lux-util/lux-util';\nimport { LuxBackgroundColorsEnum } from '../../../lux-util/lux-colors.enum';\n\n@Component({\n  selector: 'lux-snackbar',\n  templateUrl: './lux-snackbar.component.html',\n  styleUrls: ['./lux-snackbar.component.scss']\n})\nexport class LuxSnackbarComponent implements OnInit {\n  private action$: Subject<void> = new Subject<void>();\n\n  textFontColor: string;\n  actionFontColor: string;\n  iconFontColor: string;\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public config: LuxSnackbarConfig,\n    public snackbarRef: MatSnackBarRef<LuxSnackbarComponent>\n  ) {}\n\n  ngOnInit() {\n    Object.keys(this.config).forEach((key: string) => {\n      if (this.config[key]) {\n        this.config[key] = this.config[key].trim();\n      }\n    });\n    // stupid-cast, um den string weiterzugeben, da die fn daraus den enum-wert herleiten kann\n    this.textFontColor = LuxUtil.getColorsByBgColorsEnum(\n      this.checkColorInEnum(this.config.textColor)\n    ).backgroundCSSClass;\n    this.actionFontColor = LuxUtil.getColorsByBgColorsEnum(\n      this.checkColorInEnum(this.config.actionColor)\n    ).backgroundCSSClass;\n    this.iconFontColor = LuxUtil.getColorsByBgColorsEnum(\n      this.checkColorInEnum(this.config.iconColor)\n    ).backgroundCSSClass;\n  }\n\n  onAction(): Observable<void> {\n    return this.action$.asObservable();\n  }\n\n  actionClick() {\n    this.snackbarRef.dismiss();\n    this.action$.next();\n  }\n\n  /**\n   * Prüft ob die übergebene Farbe Teil des Enums ist.\n   * Wenn nicht, wird standardmäßig \"gray\" zurückgegeben.\n   * @param colorToCheck\n   */\n  private checkColorInEnum(colorToCheck: string): LuxBackgroundColorsEnum {\n    if (LuxBackgroundColorsEnum[colorToCheck]) {\n      return LuxBackgroundColorsEnum[colorToCheck];\n    }\n    return LuxBackgroundColorsEnum.gray;\n  }\n}\n","import { Observable, ReplaySubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LuxDialogRef {\n  private _matDialogRef: MatDialogRef<any>;\n  private _dialogConfirmed: ReplaySubject<void> = new ReplaySubject(1);\n  private _dialogDeclined: ReplaySubject<void> = new ReplaySubject(1);\n  private _dialogClosed: ReplaySubject<any> = new ReplaySubject(1);\n  private _data: any;\n\n  /**\n   * Gibt die Component, die in dem Dialog angezeigt wird wieder.\n   */\n  get componentInstance(): any {\n    return this._matDialogRef.componentInstance;\n  }\n\n  /**\n   * Damit hier ein Wert abgegeben wird, muss \"closeDialog\" ein Result mit dem Wert \"true\" übergeben bekommen.\n   */\n  get dialogConfirmed(): Observable<void> {\n    return this._dialogConfirmed.asObservable();\n  }\n\n  /**\n   * Damit hier ein Wert abgegeben wird, muss \"closeDialog\" ein Result mit dem Wert \"false\" übergeben bekommen.\n   */\n  get dialogDeclined(): Observable<void> {\n    return this._dialogDeclined.asObservable();\n  }\n\n  /**\n   * Wird bei Beenden des Dialogs ausgelöst.\n   */\n  get dialogClosed(): Observable<any> {\n    return this._dialogClosed.asObservable();\n  }\n\n  /**\n   * Enthält die Daten für die Dialog-Component.\n   */\n  get data(): any {\n    return this._data;\n  }\n\n  constructor() {}\n\n  /**\n   * (Re-)Initialisiert diese Dialog-Referenz neu.\n   * @param matDialogRef\n   * @param data\n   */\n  init(matDialogRef: MatDialogRef<any>, data: any) {\n    this._matDialogRef = matDialogRef;\n    this._dialogConfirmed = new ReplaySubject(1);\n    this._dialogDeclined = new ReplaySubject(1);\n    this._dialogClosed = new ReplaySubject(1);\n    this._data = data;\n  }\n\n  /**\n   * Schließt den Dialog und gibt nach Beenden die entsprechenden Events aus.\n   * @param result\n   */\n  closeDialog(result?: any) {\n    this._matDialogRef.close(result);\n    this._matDialogRef.afterClosed().subscribe((dialogResult: any) => {\n      if (dialogResult === true) {\n        this._dialogConfirmed.next();\n      } else if (dialogResult === false) {\n        this._dialogDeclined.next();\n      }\n      this._dialogClosed.next(result);\n    });\n  }\n}\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { LuxDialogRef } from '../lux-dialog-model/lux-dialog-ref.class';\nimport { ILuxDialogPresetConfig } from '../lux-dialog-model/lux-dialog-preset-config.interface';\n\n/**\n * Diese Component wird von dem LuxDialogService zur Darstellung via \"open\" genutzt und nimmt ein Konfig-Objekt\n * vom Typ LuxDialogConfig entgegen.\n */\n@Component({\n  selector: 'lux-dialog-preset',\n  templateUrl: './lux-dialog-preset.component.html',\n  styleUrls: ['./lux-dialog-preset.component.scss']\n})\nexport class LuxDialogPresetComponent implements OnInit {\n  data: ILuxDialogPresetConfig;\n\n  constructor(public dialogRef: LuxDialogRef) {}\n\n  ngOnInit() {\n    this.data = this.dialogRef.data;\n  }\n\n  /**\n   * Schließt den Dialog beim \"positiven\" Beenden des Dialogs mit dem Wert true.\n   */\n  onConfirmClick() {\n    this.dialogRef.closeDialog(true);\n  }\n\n  /**\n   * Schließt den Dialog beim \"negativen\" Beenden des Dialogs mit dem Wert false.\n   */\n  onDeclineClick() {\n    this.dialogRef.closeDialog(false);\n  }\n}\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\n/**\n * Diese Component stellt eine Grundstruktur für Dialoge dar und kann von Aufrufern als Alternative\n * zu LuxDialogPresetComponent genutzt werden (wenn andere Inhalte, etc. gewünscht sind).\n */\n@Component({\n  selector: 'lux-dialog-structure',\n  templateUrl: './lux-dialog-structure.component.html',\n  styleUrls: ['./lux-dialog-structure.component.scss']\n})\nexport class LuxDialogStructureComponent implements OnInit, AfterViewInit {\n  @ViewChild('dialogBase', { read: ElementRef, static: true }) dialogBase: ElementRef;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    // den Fokus auf den Dialog selbst setzen (damit eine Tastatur-Steuerung von oben nach unten stattfinden kann)\n    (<HTMLHeadingElement>this.dialogBase.nativeElement).focus();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-dialog-title',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxDialogTitleComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-dialog-content',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxDialogContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lux-dialog-actions',\n  template: '<ng-content></ng-content>'\n})\nexport class LuxDialogActionsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","// tslint:disable:max-line-length\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule, MatDialogModule, MatSnackBarModule } from '@angular/material';\nimport { LuxIconModule } from '../lux-icon/lux-icon.module';\nimport { LuxSnackbarComponent } from './lux-snackbar/lux-snackbar-component/lux-snackbar.component';\nimport { LuxActionModule } from '../lux-action/lux-action.module';\nimport { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';\nimport { LuxDialogPresetComponent } from './lux-dialog/lux-dialog-preset/lux-dialog-preset.component';\nimport { LuxLayoutModule } from '../lux-layout/lux-layout.module';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { LuxDirectivesModule } from '../lux-directives/lux-directives.module';\nimport { LuxDialogStructureComponent } from './lux-dialog/lux-dialog-structure/lux-dialog-structure.component';\nimport { LuxDialogTitleComponent } from './lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-title.component';\nimport { LuxDialogContentComponent } from './lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-content.component';\nimport { LuxDialogActionsComponent } from './lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-actions.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    LuxIconModule,\n    LuxActionModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    LuxComponentsConfigModule,\n    LuxLayoutModule,\n    MatDialogModule,\n    A11yModule,\n    LuxDirectivesModule\n  ],\n  declarations: [\n    LuxSnackbarComponent,\n    LuxDialogPresetComponent,\n    LuxDialogStructureComponent,\n    LuxDialogTitleComponent,\n    LuxDialogContentComponent,\n    LuxDialogActionsComponent\n  ],\n  exports: [\n    LuxSnackbarComponent,\n    LuxDialogPresetComponent,\n    LuxDialogStructureComponent,\n    LuxDialogTitleComponent,\n    LuxDialogContentComponent,\n    LuxDialogActionsComponent\n  ],\n  providers: [],\n  entryComponents: [LuxDialogPresetComponent]\n})\nexport class LuxPopupsModule {}\n","import { ComponentType } from '@angular/cdk/portal';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarDismiss } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { LuxSnackbarComponent } from './lux-snackbar-component/lux-snackbar.component';\nimport { LuxSnackbarConfig } from './lux-snackbar-config';\n\n/**\n * Über den LuxSnackbarService können einfach Snackbarinfos angezeigt werden.\n */\n@Injectable()\nexport class LuxSnackbarService {\n  private static readonly VERTICAL_POSITION = 'top';\n  private static readonly HORIZONTAL_POSITION = 'end';\n\n  constructor(private snackBar: MatSnackBar) {}\n\n  /**\n   * Diese Methode öffnet eine Snackbar mit einem Text.\n   *\n   * @param message Ein Text.\n   * @param duration Eine Dauer in Msec (z.B. 2000 = 2 Sekunden). Wenn die Snackbar permanent angezeigt werden soll,\n   * muss der Wert 0 angegeben werden.\n   * @param actionName Eine Bezeichnung (z.B. Wiederherstellen) für die Action. Dieser Parameter ist optional und\n   * muss nicht angegeben werden.\n   */\n  public openText(message: string, duration: number, actionName?: string): void {\n    this.snackBar.open(message, actionName, {\n      duration: duration,\n      verticalPosition: LuxSnackbarService.VERTICAL_POSITION,\n      horizontalPosition: LuxSnackbarService.HORIZONTAL_POSITION,\n      panelClass: 'lux-snackbar'\n    });\n  }\n\n  /**\n   * Diese Methode öffnet eine Snackbar, in der die übergebene Komponente angezeigt wird.\n   *\n   * @param component Die Komponente, die angezeigt werden soll.\n   * @param duration Eine Dauer in Msec (z.B. 2000 = 2 Sekunden). Wenn die Snackbar permanent angezeigt werden soll,\n   * muss der Wert 0 angegeben werden.\n   * @param data Ein Datenobjekt, das an die Komponente weitergereicht wird. Mit dem Code folgenden Code, können die\n   * Daten verwendet werden. constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any).\n   */\n  public openComponent(component: ComponentType<any>, duration: number = 0, data?: any) {\n    this.snackBar.openFromComponent(component, {\n      duration: duration,\n      data: data,\n      verticalPosition: LuxSnackbarService.VERTICAL_POSITION,\n      horizontalPosition: LuxSnackbarService.HORIZONTAL_POSITION,\n      panelClass: 'lux-snackbar'\n    });\n  }\n\n  /**\n   * Oeffnet eine Snackbar anhand der uebergebenen Konfiguration.\n   * Ermoeglicht eine genaue Konfiguration der Snackbar.\n   * @param config\n   */\n  public open(duration: number, config?: LuxSnackbarConfig) {\n    this.snackBar.openFromComponent(LuxSnackbarComponent, {\n      duration: duration,\n      data: config,\n      verticalPosition: LuxSnackbarService.VERTICAL_POSITION,\n      horizontalPosition: LuxSnackbarService.HORIZONTAL_POSITION,\n      panelClass: 'lux-snackbar'\n    });\n  }\n\n  /**\n   * Diese Methode liefert ein Observable zurück, das den Aufrufer benachrichtigt, wenn die Action in der Snackbar\n   * geklickt wird.\n   */\n  public onAction(): Observable<void> {\n    if (this.snackBar._openedSnackBarRef.instance instanceof LuxSnackbarComponent) {\n      return this.snackBar._openedSnackBarRef.instance.onAction();\n    }\n\n    return this.snackBar._openedSnackBarRef.onAction();\n  }\n\n  /**\n   * Diese Methode liefert ein Observable zurück, das den Aufrufer benachrichtigt, wenn die Action in der Snackbar\n   * geklickt wird.\n   */\n  public afterDismissed(): Observable<MatSnackBarDismiss> {\n    return this.snackBar._openedSnackBarRef.afterDismissed();\n  }\n\n  /**\n   * Diese Methode blendet die Snackbar aus.\n   */\n  public dismiss() {\n    this.snackBar.dismiss();\n  }\n}\n","/**\n * Config-Interface für die Dialoge.\n */\nexport interface ILuxDialogConfig {\n  width?: string;\n  height?: string;\n  panelClass?: string | string[];\n  disableClose?: boolean;\n}\n\nexport const DEFAULT_DIALOG_CONF: ILuxDialogConfig = {\n  width: 'auto',\n  height: 'auto',\n  panelClass: [],\n  disableClose: true\n};\n","import { ILuxDialogAction } from './lux-dialog-action.interface';\nimport { TemplateRef } from '@angular/core';\nimport { ILuxDialogConfig } from './lux-dialog-config.interface';\n\n/**\n * Config-Interface für die LuxDialogPresetComponent.\n */\nexport interface ILuxDialogPresetConfig extends ILuxDialogConfig {\n  confirmAction?: ILuxDialogAction;\n  declineAction?: ILuxDialogAction;\n  title?: string;\n  content?: string;\n  contentTemplate?: TemplateRef<any>;\n}\n\nexport const DEFAULT_DIALOG_PRESET_CONF: ILuxDialogPresetConfig = {\n  width: 'auto',\n  height: 'auto',\n  title: '',\n  content: '',\n  panelClass: [],\n  disableClose: true,\n  contentTemplate: undefined,\n  confirmAction: {\n    label: 'Bestätigen',\n    raised: true\n  },\n  declineAction: {\n    label: 'Ablehnen',\n    raised: true\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { LuxConsoleService } from '../../lux-util/lux-console.service';\nimport { LuxDialogRef } from './lux-dialog-model/lux-dialog-ref.class';\nimport { DEFAULT_DIALOG_CONF, ILuxDialogConfig } from './lux-dialog-model/lux-dialog-config.interface';\nimport {\n  DEFAULT_DIALOG_PRESET_CONF,\n  ILuxDialogPresetConfig\n} from './lux-dialog-model/lux-dialog-preset-config.interface';\nimport { LuxDialogPresetComponent } from './lux-dialog-preset/lux-dialog-preset.component';\n\n@Injectable()\nexport class LuxDialogService {\n  private static readonly ALREADY_OPENED_ERROR: string = 'Aktuell ist bereits ein Dialog geöffnet';\n\n  private dialogOpened: boolean = false;\n\n  constructor(private matDialog: MatDialog, private logger: LuxConsoleService, private luxDialogRef: LuxDialogRef) {}\n\n  /**\n   * Öffnet einen Dialog basierend auf der übergebenen Component und den entsprechenden Daten.\n   * @param component\n   * @param config\n   * @param data\n   */\n  openComponent(component: ComponentType<any>, config?: ILuxDialogConfig, data?: any): LuxDialogRef {\n    this.handleOpen(component, config, data, DEFAULT_DIALOG_CONF);\n    return this.luxDialogRef;\n  }\n\n  /**\n   * Öffnet einen Dialog basierend auf der LuxDialogComponent und der LuxDialogConfig.\n   * @param config\n   */\n  open(config?: ILuxDialogPresetConfig): LuxDialogRef {\n    // Eine Dialog-Instanz erzeugen, als Data übergeben wir hier noch einmal die Config\n    this.handleOpen(LuxDialogPresetComponent, config, config, DEFAULT_DIALOG_PRESET_CONF);\n    return this.luxDialogRef;\n  }\n\n  /**\n   * Prüft ob bereits ein Dialog geöffnet ist und etwaige CSS-Klassen für den Dialog gegeben sind.\n   * Anschließend wird der Dialog mit den übergebenen Config-Optionen und Data-Informationen geöffnet.\n   * @param component\n   * @param config\n   * @param data\n   * @param defaultConfig\n   */\n  private handleOpen(\n    component: ComponentType<any>,\n    config: ILuxDialogConfig,\n    data: any,\n    defaultConfig: ILuxDialogConfig | ILuxDialogPresetConfig\n  ) {\n    if (this.dialogOpened) {\n      this.logger.error(LuxDialogService.ALREADY_OPENED_ERROR);\n      return null;\n    }\n\n    // Wenn keine Config übergeben ist, die defaultConfig nehmen\n    config = config ? config : defaultConfig;\n\n    // Die CSS-Klassen fürs Panel herausfinden\n    const panelClass = ['lux-dialog'];\n    if (config.panelClass) {\n      if (Array.isArray(config.panelClass)) {\n        panelClass.push(...config.panelClass);\n      } else {\n        panelClass.push(config.panelClass);\n      }\n    }\n\n    // Dialog öffnen und Konfiguration übergeben\n    const matDialogRef = this.matDialog.open(component, {\n      width: config.width,\n      height: config.height,\n      autoFocus: false,\n      restoreFocus: true,\n      disableClose: config.disableClose,\n      panelClass: panelClass\n    });\n\n    this.luxDialogRef.init(matDialogRef, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Der LuxStorageService speichert Daten im lokalen Browserstorage.\n * Wenn man beim Speichern (Methode -> setItem) angibt, dass es sich um sensible Daten handelt,\n * können diese einfach über die Methode 'clearSensitiveItems' gelöscht werden.\n */\n@Injectable()\nexport class LuxStorageService {\n  private readonly postfixSensitive = '.sensitive';\n\n  private itemSources: Map<string, BehaviorSubject<string>> = new Map();\n\n  constructor() {\n    addEventListener('storage', (event: StorageEvent) => {\n      if (event.key) {\n        if (this.itemSources.has(event.key)) {\n          this.itemSources.get(event.key).next(event.newValue);\n        }\n      }\n    });\n  }\n\n  /**\n   * Diese Methode liefert den Wert für den übergebenen Schlüssel zurück.\n   *\n   * @param key - Der eindeutige Schlüssel.\n   * @returns Liefert den Wert für den übergebenen Schlüssel zurück.\n   */\n  getItem(key: string): string {\n    if (!this.itemSources.has(key)) {\n      this.itemSources.set(key, new BehaviorSubject<string>(localStorage.getItem(key)));\n    }\n\n    return this.itemSources.get(key).getValue();\n  }\n\n  /**\n   * Diese Methode liefert ein Observable zurück, das über alle Änderungen an dem Schlüssel informiert wird.\n   *\n   * @param key - Der eindeutige Schlüssel.\n   * @returns Liefert ein Observable zurück, das über alle Änderungen an dem Schlüssel informiert wird.\n   */\n  getItemAsObservable(key: string): Observable<string> {\n    if (!this.itemSources.has(key)) {\n      this.itemSources.set(key, new BehaviorSubject<string>(localStorage.getItem(key)));\n    }\n\n    return this.itemSources.get(key).asObservable();\n  }\n\n  /**\n   * Diese Methode setzt den übergebenen Wert für den Schlüssel. Zusätzlich muss angegeben werden, ob es sich um\n   * sensible oder personenbezogene Daten handelt.\n   *\n   * @param key - Der eindeutige Schlüssel.\n   * @param value - Der neue Wert.\n   * @param sensitive - Gibt an, ob es sich um sensible oder personenbezogene Daten handelt. Diese können leicht über\n   *                    die Methode 'clearSensitiveItems' (z.B. beim Ausloggen) gelöscht werden.\n   */\n  setItem(key: string, value: string, sensitive: boolean): void {\n    try {\n      localStorage.setItem(key, value);\n\n      if (sensitive) {\n        localStorage.setItem(key + this.postfixSensitive, 'true');\n      }\n      if (this.itemSources.has(key)) {\n        this.itemSources.get(key).next(localStorage.getItem(key));\n      }\n    } catch (error) {\n      this.itemSources.get(key).error(error);\n    }\n  }\n\n  /**\n   * Diese Methode entfernt den übergebenen Schlüssel.\n   *\n   * @param key - Der eindeutige Schlüssel.\n   */\n  removeItem(key: string): void {\n    localStorage.removeItem(key);\n    localStorage.removeItem(key + this.postfixSensitive);\n\n    if (this.itemSources.has(key)) {\n      this.itemSources.get(key).next(localStorage.getItem(key));\n    }\n  }\n\n  /**\n   * Diese Methode löscht alle sensiblen und personenbezogenen Einträge (d.h. alle Items bei denen das Flag 'sensitive'\n   * auf true gesetzt wurde).\n   */\n  clearSensitiveItems(): void {\n    // Alle Schlüssel sammeln.\n    const keys: string[] = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      keys.push(localStorage.key(i));\n    }\n\n    // Alle sensiblen Einträge löschen.\n    keys.forEach(key => {\n      if (key && key.endsWith(this.postfixSensitive)) {\n        this.removeItem(key.replace(this.postfixSensitive, ''));\n      }\n    });\n  }\n\n  /**\n   * Diese Methode löscht alle Einträge aus dem Storage.\n   */\n  clearAll(): void {\n    localStorage.clear();\n    this.itemSources.forEach((itemSource: BehaviorSubject<string>) => {\n      itemSource.next(null);\n      itemSource.complete();\n    });\n\n    this.itemSources.clear();\n  }\n}\n","import { SPACE } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\nimport { DebugElement, Provider } from '@angular/core';\nimport { ComponentFixture, getTestBed, TestBed, tick } from '@angular/core/testing';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatCommonModule,\n  MatDatepickerModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatNativeDateModule,\n  MatOptionModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatTooltipModule\n} from '@angular/material';\nimport { BrowserModule, By } from '@angular/platform-browser';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { LuxActionModule } from '../../lux-action/lux-action.module';\nimport { LuxDirectivesModule } from '../../lux-directives/lux-directives.module';\nimport { LuxFormModule } from '../../lux-form/lux-form.module';\nimport { LuxIconModule } from '../../lux-icon/lux-icon.module';\nimport { LuxLayoutModule } from '../../lux-layout/lux-layout.module';\nimport { LuxPipesModule } from '../../lux-pipes/lux-pipes.module';\nimport { LuxLookupModule } from '../../lux-lookup/lux-lookup.module';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { LuxComponentsConfigModule } from '../../lux-components-config/lux-components-config.module';\n// Wichtig, damit die Testhelper-Funktion \"configureTestSuite\" funktioniert (darf nicht wegformatiert werden).\n// import 'jasmine' hat leider nicht den gewünschten Effekt.\n// import {} from 'jasmine';\n// noinspection ES6UnusedImports\nimport {} from 'jasmine';\nimport { LuxErrorModule } from '../../lux-error/lux-error.module';\nimport { LuxCommonModule } from '../../lux-common/lux-common.module';\nimport { LuxPopupsModule } from '../../lux-popups/lux-popups.module';\n\nexport class LuxTestHelper {\n  public static COMMON_ANGULAR_MODULES: any[] = [\n    NoopAnimationsModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    BrowserModule,\n    RouterTestingModule\n  ];\n\n  public static MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatChipsModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatExpansionModule,\n    MatStepperModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatDividerModule,\n    MatSelectModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatAutocompleteModule,\n    MatSliderModule,\n    MatOptionModule,\n    MatCommonModule,\n    MatBadgeModule\n  ];\n\n  public static LUX_MODULES: any[] = [\n    LuxFormModule,\n    LuxLayoutModule,\n    LuxActionModule,\n    LuxDirectivesModule,\n    LuxPipesModule,\n    LuxIconModule,\n    LuxLookupModule,\n    LuxErrorModule,\n    LuxCommonModule,\n    LuxPopupsModule,\n    LuxComponentsConfigModule.forRoot({\n      generateLuxTagIds: false,\n      displayLuxConsoleLogs: true,\n      labelConfiguration: {\n        allUppercase: true,\n        notAppliedTo: []\n      },\n      cardExpansionAnimationActive: true\n    })\n  ];\n\n  /**\n   * Wichtig: aus fakeAsync-Block heraus aufrufen, da hier tick() genutzt wird.\n   */\n  public static setInputValue(input: any, value: any, fixture: any) {\n    if (input) {\n      input.value = value;\n      input.dispatchEvent(LuxTestHelper.createFakeEvent('input'));\n      LuxTestHelper.wait(fixture);\n    } else {\n      console.error('UNIT-TEST FEHLER: input ist nicht definiert.');\n    }\n  }\n\n  /**\n   * Wichtig: aus fakeAsync-Block heraus aufrufen, da hier tick() genutzt wird.\n   * Wartet asynchrone Aufrufe ab und ruft die ChangeDetection auf\n   * @param fixture\n   * @param tickDuration\n   */\n  public static wait(fixture: any, tickDuration?: number) {\n    fixture.detectChanges();\n    tick(tickDuration);\n    fixture.detectChanges();\n  }\n\n  /**\n   * Wichtig: aus fakeAsync-Block heraus aufrufen, da hier tick() genutzt wird.\n   * Sendet ein Klick-Event ab und wartet dann.\n   * @param fixture\n   * @param DebugElement\n   */\n  public static click(fixture: any, debugElement: DebugElement) {\n    debugElement.triggerEventHandler('click', null);\n    LuxTestHelper.wait(fixture);\n  }\n\n  /**\n   * Wichtig: aus fakeAsync-Block heraus aufrufen, da hier tick() genutzt wird.\n   * Sendet ein Change-Event ab und wartet dann.\n   * @param fixture\n   * @param DebugElement\n   */\n  public static radioButtonChange(fixture: any, radioButton: DebugElement) {\n    radioButton.nativeElement.dispatchEvent(LuxTestHelper.createFakeEvent('change'));\n    LuxTestHelper.wait(fixture);\n  }\n\n  /**\n   * Erstellt eine ComponentFixture fuer die mitgegebene Komponente, optional ist es moeglich\n   * weitere Provider und Declarations einzutragen. Diese werden dann im Testmodul eingetragen.\n   * @param component\n   * @param providers\n   * @param declarations\n   * @deprecated Stattdessen configureTestModule in Kombination mit configureTestSuite verwenden --> erheblich performanter\n   */\n  public static createComponent(\n    component: any,\n    providers: Provider[] = [],\n    declarations: any[] = []\n  ): ComponentFixture<any> {\n    TestBed.configureTestingModule({\n      imports: [\n        ...LuxTestHelper.COMMON_ANGULAR_MODULES,\n        ...LuxTestHelper.MATERIAL_MODULES,\n        ...LuxTestHelper.LUX_MODULES\n      ],\n      declarations: [...declarations, component],\n      providers: [...providers]\n    });\n\n    TestBed.compileComponents();\n\n    return TestBed.createComponent(component);\n  }\n\n  /** Utility to dispatch any event on a Node. */\n  public static dispatchEvent(node: Node | Window, event: Event): Event {\n    node.dispatchEvent(event);\n    return event;\n  }\n\n  /** Shorthand to dispatch a fake event on a specified node. */\n  public static dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event {\n    return LuxTestHelper.dispatchEvent(node, LuxTestHelper.createFakeEvent(type, canBubble));\n  }\n\n  /** Shorthand to dispatch a keyboard event with a specified key code. */\n  public static dispatchKeyboardEvent(node: Node, type: string, keyCode: number, target?: Element): KeyboardEvent {\n    return LuxTestHelper.dispatchEvent(node, LuxTestHelper.createKeyboardEvent(type, keyCode, target)) as KeyboardEvent;\n  }\n\n  /** Focuses an input and sets its value. Dispatches an fake input event afterwards. */\n  public static typeInElement(element: HTMLInputElement, value: string, noInputEvent?: boolean) {\n    element.focus();\n    element.value = value;\n    if (!noInputEvent) {\n      LuxTestHelper.dispatchFakeEvent(element, 'input');\n    }\n  }\n\n  /** Steuerung und triggern von Overlays implementieren **/\n\n  /**\n   * Inserts data into an input field, that has to update asynchrounos before calling a callback-function\n   * Allows to use RxJs Interval-Timers within the Target-Components.\n   */\n  public static typeInElementAsynch(text: string, fixture: ComponentFixture<any>, element: HTMLInputElement, callback) {\n    fixture.whenStable().then(() => {\n      LuxTestHelper.typeInElement(element, text);\n      fixture.detectChanges();\n\n      fixture.whenStable().then(() => {\n        LuxTestHelper.dispatchKeyboardEvent(element, 'keydown', SPACE);\n        fixture.detectChanges();\n\n        fixture.whenStable().then(() => {\n          callback();\n        });\n      });\n    });\n  }\n\n  /** Dispatches a keydown event from an element. */\n  public static createKeyboardEvent(type: string, keyCode: number, target?: Element, key?: string) {\n    const event = document.createEvent('KeyboardEvent') as any;\n    // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n    const initEventFn = (event.initKeyEvent || event.initKeyboardEvent).bind(event);\n    const originalPreventDefault = event.preventDefault;\n\n    initEventFn(type, true, true, window, 0, 0, 0, 0, 0, keyCode);\n\n    // Webkit Browsers don't set the keyCode when calling the init function.\n    // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n    Object.defineProperties(event, {\n      keyCode: { get: () => keyCode },\n      key: { get: () => key },\n      target: { get: () => target }\n    });\n\n    // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n    event.preventDefault = function() {\n      Object.defineProperty(event, 'defaultPrevented', { get: () => true });\n      return originalPreventDefault.apply(this, arguments);\n    };\n\n    return event;\n  }\n\n  /** Creates a fake event object with any desired event type. */\n  public static createFakeEvent(type: string, canBubble = false, cancelable = true) {\n    let event;\n    if (typeof Event === 'function') {\n      event = new Event(type);\n    } else {\n      event = document.createEvent('Event');\n      event.initEvent(type, canBubble, cancelable);\n    }\n\n    return event;\n  }\n\n  /**\n   * Selektiert ein Element anhand der Query von dem Fixture\n   */\n  public static selectOneFromFixture(fixture: ComponentFixture<any>, query: string): DebugElement {\n    return fixture.debugElement.query(By.css(query));\n  }\n\n  /**\n   * Selektiert ein Array von Elementen anhand der Query von dem Fixture\n   */\n  public static selectAllFromFixture(fixture: ComponentFixture<any>, query: string): DebugElement[] {\n    return fixture.debugElement.queryAll(By.css(query));\n  }\n\n  /**\n   * Entfernt nicht-ASCII-Chars aus dem String (Beim IE wichtig, dieser fügt gerne versteckte Steuerzeichen\n   * in Input-Feldern an die Strings).\n   * @param dateString\n   */\n  public static stringWithoutASCIIChars(dateString: string): string {\n    const exp = new RegExp('[^A-Za-z 0-9 \\\\.,\\\\?\"\"!@#\\\\$%\\\\^&\\\\*\\\\(\\\\)-_=\\\\+;:<>\\\\/\\\\\\\\\\\\|\\\\}\\\\{\\\\[\\\\]`~]*', 'g');\n    return dateString.replace(exp, '');\n  }\n\n  /**\n   *  Deaktiviert den Reset des Testmoduls am Ende eines Testdurchlaufs.\n   *  Verbessert die Performance der Karma-Tests erheblich.\n   *  Am Ende der Testsuite wird diese Funktion wieder aktiviert.\n   *\n   *  Funktion dafür einfach am Anfang einer Testsuite (erstes describe) aufrufen und in einem beforeAll das Testmodul\n   *  erzeugen. Dieses wird nun nicht mehr nach jedem Test neu erzeugt.\n   */\n  public static configureTestSuite() {\n    const testBedApi: any = getTestBed();\n    const originReset = TestBed.resetTestingModule;\n\n    beforeAll(() => {\n      TestBed.resetTestingModule();\n      TestBed.resetTestingModule = () => TestBed;\n    });\n\n    afterEach(() => {\n      testBedApi._activeFixtures.forEach((fixture: ComponentFixture<any>) => fixture.destroy());\n      testBedApi._instantiated = false;\n    });\n\n    afterAll(() => {\n      TestBed.resetTestingModule = originReset;\n      TestBed.resetTestingModule();\n    });\n  }\n\n  /**\n   * Konfiguriert das TestModul für eine Testsuite, kann dabei Provider und Komponenten (Deklarationen) entgegennehmen.\n   * @param providers\n   * @param declarations\n   * @param imports\n   */\n  public static configureTestModule(providers: Provider[] = [], declarations: any[] = [], imports: any[] = []) {\n    TestBed.configureTestingModule({\n      imports: [\n        ...LuxTestHelper.COMMON_ANGULAR_MODULES,\n        ...LuxTestHelper.MATERIAL_MODULES,\n        ...LuxTestHelper.LUX_MODULES,\n        ...imports\n      ],\n      declarations: [...declarations],\n      providers: [...providers]\n    });\n\n    TestBed.compileComponents();\n  }\n\n  /**\n   * Erstellt ein leeres File-Objekt mit Namen und Typ via Blob-Constructor (um Edge/IE-Fehler zu vermeiden).\n   * @param name\n   * @param type\n   */\n  public static createFileBrowserSafe(name, type) {\n    const file = new Blob([''], { type: type });\n    file['name'] = name;\n\n    return <File>file;\n  }\n}\n","import { OverlayContainer } from '@angular/cdk/overlay';\nimport { inject } from '@angular/core/testing';\n\nexport class LuxOverlayHelper {\n  private overlayContainer: OverlayContainer;\n  private htmlElement: HTMLElement;\n\n  constructor() {\n    inject([OverlayContainer], (oc: OverlayContainer) => {\n      this.overlayContainer = oc;\n      this.htmlElement = oc.getContainerElement();\n    })();\n  }\n\n  public selectAllFromOverlay(query) {\n    return this.htmlElement.querySelectorAll(query) as NodeListOf<HTMLElement>;\n  }\n\n  public selectOneFromOverlay(query) {\n    return this.htmlElement.querySelector(query) as HTMLElement;\n  }\n}\n","// tslint:disable:max-line-length\n/**\n * Diese API beschreibt die öffentliche Schnittstelle der LUX-Components.\n *\n * In dieser Klasse müssen alle Module, Components, Services und Klassen aufgeführt werden, die in den\n * Fachapplikationen zur Verfügung stehen sollen.\n *\n * Warum muss man zusätzlich die Components der Module angeben, wenn man bereits die Module angegeben hat?\n * Die Components werden z.B. benötigt, wenn man \"@ViewChild\" nutzen möchte.\n * Z.B. @ViewChild('xxxName') xxxComponent: LuxXxxComponent;\n *\n *\n * ! Die Modulnamen wurden mit dem folgenden Bannergenerator erzeugt:\n *  - Webseite: patorjk.com/software/taag\n *  - Font: Standard\n */\n\n/**\n *  _    _   ___  __       _    ____ _____ ___ ___  _   _\n * | |  | | | \\ \\/ /      / \\  / ___|_   _|_ _/ _ \\| \\ | |\n * | |  | | | |\\  /_____ / _ \\| |     | |  | | | | |  \\| |\n * | |__| |_| |/  \\_____/ ___ \\ |___  | |  | | |_| | |\\  |\n * |_____\\___//_/\\_\\   /_/   \\_\\____| |_| |___\\___/|_| \\_|\n *\n */\nexport * from './src/app/modules/lux-action/lux-action.module';\n// Components\nexport * from './src/app/modules/lux-action/lux-button/lux-button.component';\nexport * from './src/app/modules/lux-action/lux-link/lux-link.component';\nexport * from './src/app/modules/lux-action/lux-menu/lux-menu.component';\nexport { LuxMenuTriggerComponent } from './src/app/modules/lux-action/lux-menu/lux-menu-subcomponents/lux-menu-trigger.component';\nexport { LuxMenuItemComponent } from './src/app/modules/lux-action/lux-menu/lux-menu-subcomponents/lux-menu-item.component';\n// Classes\nexport * from './src/app/modules/lux-action/lux-action-model/lux-action-component-base.class';\n\n/**\n *  _    _   ___  __     ____ ___ ____  _____ ____ _____ _____     _______ ____\n * | |  | | | \\ \\/ /    |  _ \\_ _|  _ \\| ____/ ___|_   _|_ _\\ \\   / / ____/ ___|\n * | |  | | | |\\  /_____| | | | || |_) |  _|| |     | |  | | \\ \\ / /|  _| \\___ \\\n * | |__| |_| |/  \\_____| |_| | ||  _ <| |__| |___  | |  | |  \\ V / | |___ ___) |\n * |_____\\___//_/\\_\\    |____/___|_| \\_\\_____\\____| |_| |___|  \\_/  |_____|____/\n *\n */\nexport * from './src/app/modules/lux-directives/lux-directives.module';\n// Directives\nexport * from './src/app/modules/lux-directives/lux-infinite-scroll/lux-infinite-scroll.directive';\nexport * from './src/app/modules/lux-directives/lux-tag-id/lux-tag-id.directive';\nexport * from './src/app/modules/lux-directives/lux-tooltip/lux-tooltip.directive';\nexport * from './src/app/modules/lux-directives/lux-tabindex/lux-tab-index.directive';\nexport * from './src/app/modules/lux-directives/lux-badge-notification/lux-badge-notification.directive';\nexport * from './src/app/modules/lux-directives/lux-ripple/lux-ripple.directive';\nexport * from './src/app/modules/lux-directives/lux-aria/lux-aria-labelledby.directive';\nexport * from './src/app/modules/lux-directives/lux-aria/lux-aria-label.directive';\nexport * from './src/app/modules/lux-directives/lux-aria/lux-aria-expanded.directive';\nexport * from './src/app/modules/lux-directives/lux-aria/lux-aria-role.directive';\nexport * from './src/app/modules/lux-directives/lux-aria/lux-aria-haspopup.directive';\nexport * from './src/app/modules/lux-directives/lux-aria/lux-aria-hidden.directive';\nexport * from './src/app/modules/lux-directives/lux-aria/lux-aria-describedby.directive';\nexport * from './src/app/modules/lux-directives/lux-aria/lux-aria-invalid.directive';\nexport * from './src/app/modules/lux-directives/lux-aria/lux-aria-required.directive';\n\n// Interfaces\nexport * from './src/app/modules/lux-directives/lux-infinite-scroll/lux-scroll-position';\n// Classes\nexport * from './src/app/modules/lux-directives/lux-aria/lux-aria-base';\n\n/**\n *  _    _   ___  __      ____ ___  __  __ __  __  ___  _   _\n * | |  | | | \\ \\/ /     / ___/ _ \\|  \\/  |  \\/  |/ _ \\| \\ | |\n * | |  | | | |\\  /_____| |  | | | | |\\/| | |\\/| | | | |  \\| |\n * | |__| |_| |/  \\_____| |__| |_| | |  | | |  | | |_| | |\\  |\n * |_____\\___//_/\\_\\     \\____\\___/|_|  |_|_|  |_|\\___/|_| \\_|\n *\n */\nexport * from './src/app/modules/lux-common/lux-common.module';\n// Component\nexport * from './src/app/modules/lux-common/lux-badge/lux-badge.component';\nexport * from './src/app/modules/lux-common/lux-label/lux-label.component';\nexport * from './src/app/modules/lux-common/lux-message-box/lux-message-box.component';\nexport * from './src/app/modules/lux-common/lux-message-box/lux-message-box-subcomponents/lux-message.component';\nexport * from './src/app/modules/lux-common/lux-progress/lux-progress.component';\nexport * from './src/app/modules/lux-common/lux-spinner/lux-spinner.component';\nexport * from './src/app/modules/lux-common/lux-table/lux-table.component';\nexport * from './src/app/modules/lux-common/lux-table/lux-table-data-source';\nexport * from './src/app/modules/lux-common/lux-table/lux-table-subcomponents/lux-table-column-content.component';\nexport * from './src/app/modules/lux-common/lux-table/lux-table-subcomponents/lux-table-column-header.component';\nexport * from './src/app/modules/lux-common/lux-table/lux-table-subcomponents/lux-table-column-footer.component';\nexport * from './src/app/modules/lux-common/lux-table/lux-table-subcomponents/lux-table-column.component';\n// Services\n// Classes\nexport * from './src/app/modules/lux-common/lux-table/lux-table-http/lux-table-http-dao-structure.interface';\nexport * from './src/app/modules/lux-common/lux-table/lux-table-http/lux-table-http-dao.interface';\nexport * from './src/app/modules/lux-common/lux-table/lux-table-custom-css-config.interface';\nexport { ILuxMessageChangeEvent, ILuxMessageCloseEvent } from './src/app/modules/lux-common/lux-message-box/lux-message-box-model/lux-message-events.interface';\nexport { ILuxMessage } from './src/app/modules/lux-common/lux-message-box/lux-message-box-model/lux-message.interface';\n\n/**\n *  _    _   ___  __      ____ ___  _   _ _____ ___ ____\n * | |  | | | \\ \\/ /     / ___/ _ \\| \\ | |  ___|_ _/ ___|\n * | |  | | | |\\  /_____| |  | | | |  \\| | |_   | | |  _\n * | |__| |_| |/  \\_____| |__| |_| | |\\  |  _|  | | |_| |\n * |_____\\___//_/\\_\\     \\____\\___/|_| \\_|_|   |___\\____|\n *\n */\nexport * from './src/app/modules/lux-components-config/lux-components-config.module';\n// Services\nexport * from './src/app/modules/lux-components-config/lux-components-config.service';\n// Classes\nexport * from './src/app/modules/lux-components-config/lux-components-config-parameters.interface';\nexport * from './src/app/modules/lux-components-config/lux-components-hammer-config.class';\n\n/**\n *  _    _   ___  __     _____ ____  ____   ___  ____\n * | |  | | | \\ \\/ /    | ____|  _ \\|  _ \\ / _ \\|  _ \\\n * | |  | | | |\\  /_____|  _| | |_) | |_) | | | | |_) |\n * | |__| |_| |/  \\_____| |___|  _ <|  _ <| |_| |  _ <\n * |_____\\___//_/\\_\\    |_____|_| \\_\\_| \\_\\\\___/|_| \\_\\\n *\n */\nexport * from './src/app/modules/lux-error/lux-error.module';\n// Components\nexport * from './src/app/modules/lux-error/lux-http-error/lux-http-error.component';\nexport * from './src/app/modules/lux-error/lux-error-page/lux-error-page.component';\n// Services\nexport * from './src/app/modules/lux-error/lux-error-page/lux-error-services/lux-error-service';\nexport * from './src/app/modules/lux-error/lux-error-page/lux-error-services/lux-error-store.service';\n// Classes\nexport * from './src/app/modules/lux-error/lux-http-error/lux-http-error-interceptor';\nexport * from './src/app/modules/lux-error/lux-error-page/lux-error-interfaces/lux-error-page-config.interface';\nexport * from './src/app/modules/lux-error/lux-error-page/lux-error-interfaces/lux-error.interface';\n\n/**\n *  _    _   ___  __     _____ ___  ____  __  __\n * | |  | | | \\ \\/ /    |  ___/ _ \\|  _ \\|  \\/  |\n * | |  | | | |\\  /_____| |_ | | | | |_) | |\\/| |\n * | |__| |_| |/  \\_____|  _|| |_| |  _ <| |  | |\n * |_____\\___//_/\\_\\    |_|   \\___/|_| \\_\\_|  |_|\n *\n */\nexport * from './src/app/modules/lux-form/lux-form.module';\n// Components\nexport * from './src/app/modules/lux-form/lux-autocomplete/lux-autocomplete.component';\nexport * from './src/app/modules/lux-form/lux-checkbox/lux-checkbox.component';\nexport * from './src/app/modules/lux-form/lux-chips/lux-chips.component';\nexport * from './src/app/modules/lux-form/lux-chips/lux-chips-subcomponents/lux-chip.component';\nexport * from './src/app/modules/lux-form/lux-chips/lux-chips-subcomponents/lux-chip-group.component';\nexport * from './src/app/modules/lux-form/lux-datepicker/lux-datepicker.component';\nexport * from './src/app/modules/lux-form/lux-input/lux-input.component';\nexport * from './src/app/modules/lux-form/lux-input/lux-input-subcomponents/lux-input-prefix.component';\nexport * from './src/app/modules/lux-form/lux-input/lux-input-subcomponents/lux-input-suffix.component';\nexport * from './src/app/modules/lux-form/lux-radio/lux-radio.component';\nexport * from './src/app/modules/lux-form/lux-select/lux-select.component';\nexport * from './src/app/modules/lux-form/lux-slider/lux-slider.component';\nexport * from './src/app/modules/lux-form/lux-toggle/lux-toggle.component';\nexport * from './src/app/modules/lux-form/lux-textarea/lux-textarea.component';\nexport * from './src/app/modules/lux-form/lux-file/lux-file-input/lux-file-input.component';\nexport * from './src/app/modules/lux-form/lux-file/lux-file-list/lux-file-list.component';\nexport * from './src/app/modules/lux-form/lux-file/lux-file-subcomponents/lux-file-progress/lux-file-progress.component';\nexport * from './src/app/modules/lux-form/lux-form-control/lux-form-control.component';\nexport * from './src/app/modules/lux-form/lux-form-control/lux-form-control-subcomponents/lux-form-hint.component';\nexport * from './src/app/modules/lux-form/lux-form-control/lux-form-control-subcomponents/lux-form-label.component';\n// Classes\nexport * from './src/app/modules/lux-form/lux-datepicker/lux-datepicker-adapter';\nexport * from './src/app/modules/lux-form/lux-form-model/lux-form-checkable-base.class';\nexport * from './src/app/modules/lux-form/lux-form-model/lux-form-input-base.class';\nexport * from './src/app/modules/lux-form/lux-form-model/lux-form-selectable-base.class';\nexport * from './src/app/modules/lux-form/lux-form-model/lux-form-component-base.class';\nexport * from './src/app/modules/lux-form/lux-form-model/lux-form-file-base.class';\nexport * from './src/app/modules/lux-form/lux-file/lux-file-model/lux-file-action-config.interface';\nexport * from './src/app/modules/lux-form/lux-file/lux-file-model/lux-file-list-action-config.interface';\nexport * from './src/app/modules/lux-form/lux-file/lux-file-model/lux-file-error.interface';\nexport * from './src/app/modules/lux-form/lux-file/lux-file-model/lux-file-object.interface';\n// Directives\nexport * from './src/app/modules/lux-form/lux-file/lux-file-model/lux-file-capture.directive';\nexport * from './src/app/modules/lux-form/lux-form-control/lux-form-directives/lux-maxlength/lux-max-length.directive';\n\n/**\n *   _    _   ___  __     _____ ___ _     _____      ____  ____  _______     _____ _______        __\n *  | |  | | | \\ \\/ /    |  ___|_ _| |   | ____|    |  _ \\|  _ \\| ____\\ \\   / /_ _| ____\\ \\      / /\n *  | |  | | | |\\  /_____| |_   | || |   |  _| _____| |_) | |_) |  _|  \\ \\ / / | ||  _|  \\ \\ /\\ / /\n *  | |__| |_| |/  \\_____|  _|  | || |___| |__|_____|  __/|  _ <| |___  \\ V /  | || |___  \\ V  V /\n *  |_____\\___//_/\\_\\    |_|   |___|_____|_____|    |_|   |_| \\_\\_____|  \\_/  |___|_____|  \\_/\\_/\n */\nexport * from './src/app/modules/lux-file-preview/lux-file-preview.module';\n// Components\nexport * from './src/app/modules/lux-file-preview/lux-file-preview.component';\nexport * from './src/app/modules/lux-file-preview/lux-file-preview-toolbar/lux-file-preview-toolbar.component';\nexport * from './src/app/modules/lux-file-preview/lux-file-preview-pdfviewer/lux-file-preview-pdfviewer.component';\nexport * from './src/app/modules/lux-file-preview/lux-file-preview-imgviewer/lux-file-preview-imgviewer.component';\nexport * from './src/app/modules/lux-file-preview/lux-file-preview-notsupportedviewer/lux-file-preview-notsupportedviewer.component';\n// Services\nexport * from './src/app/modules/lux-file-preview/lux-file-preview.service';\n// Classes\nexport * from './src/app/modules/lux-file-preview/lux-file-preview-base/lux-file-preview-base';\nexport * from './src/app/modules/lux-file-preview/lux-file-preview-config';\nexport * from './src/app/modules/lux-file-preview/lux-file-preview-data';\nexport * from './src/app/modules/lux-file-preview/lux-file-preview-ref';\n\n/**\n *  _    _   ___  __    ___ ____ ___  _   _\n * | |  | | | \\ \\/ /   |_ _/ ___/ _ \\| \\ | |\n * | |  | | | |\\  /_____| | |  | | | |  \\| |\n * | |__| |_| |/  \\_____| | |__| |_| | |\\  |\n * |_____\\___//_/\\_\\   |___\\____\\___/|_| \\_|\n *\n */\nexport * from './src/app/modules/lux-icon/lux-icon.module';\nexport * from './src/app/modules/lux-icon/lux-icon/lux-icon.component';\nexport * from './src/app/modules/lux-icon/lux-image/lux-image.component';\n\n/**\n *  _    _   ___  __     _        _ __   _____  _   _ _____\n * | |  | | | \\ \\/ /    | |      / \\\\ \\ / / _ \\| | | |_   _|\n * | |  | | | |\\  /_____| |     / _ \\\\ V / | | | | | | | |\n * | |__| |_| |/  \\_____| |___ / ___ \\| || |_| | |_| | | |\n * |_____\\___//_/\\_\\    |_____/_/   \\_\\_| \\___/ \\___/  |_|\n *\n */\nexport * from './src/app/modules/lux-layout/lux-layout.module';\n// Components\nexport * from './src/app/modules/lux-layout/lux-accordion/lux-accordion.component';\nexport * from './src/app/modules/lux-layout/lux-app-footer/lux-app-footer.component';\nexport * from './src/app/modules/lux-layout/lux-app-header/lux-app-header.component';\nexport * from './src/app/modules/lux-layout/lux-app-content/lux-app-content.component';\nexport * from './src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav.component';\nexport * from './src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-app-header-action-nav/lux-app-header-action-nav.component';\nexport * from './src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-app-header-action-nav/lux-app-header-action-nav-item/lux-app-header-action-nav-item.component';\nexport * from './src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-app-header-right-nav/lux-app-header-right-nav.component';\nexport * from './src/app/modules/lux-layout/lux-card/lux-card.component';\nexport * from './src/app/modules/lux-layout/lux-card/lux-card-subcomponents/lux-card-info.component';\nexport * from './src/app/modules/lux-layout/lux-card/lux-card-subcomponents/lux-card-content.component';\nexport * from './src/app/modules/lux-layout/lux-card/lux-card-subcomponents/lux-card-actions.component';\nexport * from './src/app/modules/lux-layout/lux-divider/lux-divider.component';\nexport * from './src/app/modules/lux-layout/lux-tile/lux-tile.component';\nexport * from './src/app/modules/lux-layout/lux-list/lux-list.component';\nexport * from './src/app/modules/lux-layout/lux-list/lux-list-subcomponents/lux-list-item.component';\nexport * from './src/app/modules/lux-layout/lux-list/lux-list-subcomponents/lux-list-item-content.component';\nexport * from './src/app/modules/lux-layout/lux-list/lux-list-subcomponents/lux-list-item-icon.component';\nexport * from './src/app/modules/lux-layout/lux-master-detail/lux-master-detail.component';\nexport * from './src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-detail-view/lux-detail-view.component';\nexport * from './src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-footer/lux-master-footer.component';\nexport * from './src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-header/lux-master-header.component';\nexport * from './src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-header/lux-master-header-content.component';\nexport * from './src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-simple/lux-master-simple.component';\nexport * from './src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-master-view/lux-master-view.component';\nexport * from './src/app/modules/lux-layout/lux-panel/lux-panel.component';\nexport * from './src/app/modules/lux-layout/lux-panel/lux-panel-subcomponents/lux-panel-action.component';\nexport * from './src/app/modules/lux-layout/lux-panel/lux-panel-subcomponents/lux-panel-content.component';\nexport * from './src/app/modules/lux-layout/lux-panel/lux-panel-subcomponents/lux-panel-header-description.component';\nexport * from './src/app/modules/lux-layout/lux-panel/lux-panel-subcomponents/lux-panel-header-title.component';\nexport * from './src/app/modules/lux-layout/lux-stepper/lux-stepper.component';\nexport * from './src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-step.component';\nexport * from './src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-step-header.component';\nexport * from './src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-step-content.component';\nexport * from './src/app/modules/lux-layout/lux-stepper/lux-stepper-model/lux-stepper-parent.class';\nexport * from './src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-stepper-horizontal/lux-stepper-horizontal.component';\nexport * from './src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-stepper-nav-buttons/lux-stepper-nav-buttons.component';\nexport * from './src/app/modules/lux-layout/lux-stepper/lux-stepper-subcomponents/lux-stepper-vertical/lux-stepper-vertical.component';\nexport * from './src/app/modules/lux-layout/lux-tabs/lux-tabs.component';\nexport * from './src/app/modules/lux-layout/lux-tabs/lux-tabs-subcomponents/lux-tab.component';\nexport * from './src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-footer.component';\nexport * from './src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-header.component';\nexport * from './src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-subcomponents/lux-side-nav-item.component';\nexport * from './src/app/modules/lux-layout/lux-card/lux-card-subcomponents/lux-card-content-expanded.component';\nexport * from './src/app/modules/lux-layout/lux-master-detail/lux-master-detail-subcomponents/lux-detail-view/lux-detail-wrapper.component';\n// Services\nexport * from './src/app/modules/lux-layout/lux-app-footer/lux-app-footer-button.service';\nexport * from './src/app/modules/lux-layout/lux-app-footer/lux-app-footer-link.service';\nexport * from './src/app/modules/lux-layout/lux-master-detail/lux-master-detail-mobile-helper.service';\nexport * from './src/app/modules/lux-layout/lux-stepper/lux-stepper-helper.service';\n// Classes\nexport * from './src/app/modules/lux-layout/lux-app-footer/lux-app-footer-button-info';\nexport * from './src/app/modules/lux-layout/lux-app-footer/lux-app-footer-link-info';\nexport * from './src/app/modules/lux-layout/lux-stepper/lux-stepper-model/lux-stepper-button-config.interface';\nexport { visibilityTrigger } from './src/app/modules/lux-common/lux-message-box/lux-message-box-model/lux-message-box.animations';\nexport { sideNavAnimation, sideNavOverlayAnimation } from './src/app/modules/lux-layout/lux-app-header/lux-app-header-subcomponents/lux-side-nav/lux-side-nav-model/lux-side-nav-animations';\nexport { expansionAnim } from './src/app/modules/lux-layout/lux-card/lux-card-model/lux-card-animations';\n\n/**\n *  _    _   ___  __     _     ___   ___  _  ___   _ ____\n * | |  | | | \\ \\/ /    | |   / _ \\ / _ \\| |/ / | | |  _ \\\n * | |  | | | |\\  /_____| |  | | | | | | | ' /| | | | |_) |\n * | |__| |_| |/  \\_____| |__| |_| | |_| | . \\| |_| |  __/\n * |_____\\___//_/\\_\\    |_____\\___/ \\___/|_|\\_\\\\___/|_|\n *\n */\nexport * from './src/app/modules/lux-lookup/lux-lookup.module';\nexport * from './src/app/modules/lux-lookup/lux-lookup-combobox/lux-lookup-combobox.component';\nexport * from './src/app/modules/lux-lookup/lux-lookup-autocomplete/lux-lookup-autocomplete.component';\nexport * from './src/app/modules/lux-lookup/lux-lookup-label/lux-lookup-label.component';\nexport * from './src/app/modules/lux-lookup/lux-lookup-model/lux-lookup-component';\nexport * from './src/app/modules/lux-lookup/lux-lookup-model/lux-lookup-parameters';\nexport * from './src/app/modules/lux-lookup/lux-lookup-model/lux-lookup-table-entry';\nexport * from './src/app/modules/lux-lookup/lux-lookup-model/lux-lookup-error-state-matcher';\nexport * from './src/app/modules/lux-lookup/lux-lookup-autocomplete/lux-autocomplete-error-state-matcher';\nexport * from './src/app/modules/lux-lookup/lux-lookup-service/lux-lookup.service';\nexport * from './src/app/modules/lux-lookup/lux-lookup-service/lux-lookup-handler.service';\n\n/**\n *  _    _   ___  __     ____ ___ ____  _____ ____\n * | |  | | | \\ \\/ /    |  _ \\_ _|  _ \\| ____/ ___|\n * | |  | | | |\\  /_____| |_) | || |_) |  _| \\___ \\\n * | |__| |_| |/  \\_____|  __/| ||  __/| |___ ___) |\n * |_____\\___//_/\\_\\    |_|  |___|_|   |_____|____/\n *\n */\nexport * from './src/app/modules/lux-pipes/lux-pipes.module';\n// Pipes\nexport * from './src/app/modules/lux-pipes/lux-relative-timestamp/lux-relative-timestamp.pipe';\nexport * from './src/app/modules/lux-pipes/lux-property-from-object/lux-property-from-object.pipe';\nexport * from './src/app/modules/lux-pipes/lux-render-property/lux-render-property.pipe';\nexport * from './src/app/modules/lux-pipes/lux-alphabetically-sorted/lux-alphabetically-sorted.pipe';\n\n/**\n *  _    _   ___  __     ____   ___  ____  _   _ ____  ____\n * | |  | | | \\ \\/ /    |  _ \\ / _ \\|  _ \\| | | |  _ \\/ ___|\n * | |  | | | |\\  /_____| |_) | | | | |_) | | | | |_) \\___ \\\n * | |__| |_| |/  \\_____|  __/| |_| |  __/| |_| |  __/ ___) |\n * |_____\\___//_/\\_\\    |_|    \\___/|_|    \\___/|_|   |____/\n *\n */\nexport * from './src/app/modules/lux-popups/lux-popups.module';\n// Components\nexport * from './src/app/modules/lux-popups/lux-snackbar/lux-snackbar-component/lux-snackbar.component';\nexport * from './src/app/modules/lux-popups/lux-dialog/lux-dialog-preset/lux-dialog-preset.component';\nexport * from './src/app/modules/lux-popups/lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-actions.component';\nexport * from './src/app/modules/lux-popups/lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-content.component';\nexport * from './src/app/modules/lux-popups/lux-dialog/lux-dialog-structure/lux-dialog-structure-subcomponents/lux-dialog-title.component';\nexport * from './src/app/modules/lux-popups/lux-dialog/lux-dialog-structure/lux-dialog-structure.component';\n// Services\nexport * from './src/app/modules/lux-popups/lux-snackbar/lux-snackbar.service';\nexport * from './src/app/modules/lux-popups/lux-dialog/lux-dialog.service';\n// Classes\nexport * from './src/app/modules/lux-popups/lux-snackbar/lux-snackbar-config';\nexport * from './src/app/modules/lux-popups/lux-dialog/lux-dialog-model/lux-dialog-ref.class';\nexport * from './src/app/modules/lux-popups/lux-dialog/lux-dialog-model/lux-dialog-config.interface';\nexport * from './src/app/modules/lux-popups/lux-dialog/lux-dialog-model/lux-dialog-action.interface';\nexport * from './src/app/modules/lux-popups/lux-dialog/lux-dialog-model/lux-dialog-preset-config.interface';\n\n/**\n *  _    _   ___  __     _   _ _____ ___ _\n * | |  | | | \\ \\/ /    | | | |_   _|_ _| |\n * | |  | | | |\\  /_____| | | | | |  | || |\n * | |__| |_| |/  \\_____| |_| | | |  | || |___\n * |_____\\___//_/\\_\\     \\___/  |_| |___|_____|\n *\n */\nexport * from './src/app/modules/lux-util/lux-util';\nexport * from './src/app/modules/lux-util/lux-colors.enum';\nexport * from './src/app/modules/lux-util/lux-storage.service';\nexport * from './src/app/modules/lux-util/lux-console.service';\nexport * from './src/app/modules/lux-util/lux-media-query-observer.service';\nexport * from './src/app/modules/lux-util/testing/lux-test-helper';\nexport * from './src/app/modules/lux-util/testing/lux-test-overlay-helper';\nexport * from './src/app/modules/lux-util/lux-paginator-intl';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {environment as ɵa} from './src/environments/environment';"],"names":["tslib_1.__extends","tslib_1.__decorate","tslib_1.__values","tslib_1.__param"],"mappings":"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"}