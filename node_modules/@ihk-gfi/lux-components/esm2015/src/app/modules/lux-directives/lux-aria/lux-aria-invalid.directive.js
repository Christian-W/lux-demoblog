import * as tslib_1 from "tslib";
import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';
import { LuxAriaBase } from './lux-aria-base';
let LuxAriaInvalidDirective = class LuxAriaInvalidDirective extends LuxAriaBase {
    constructor(elementRef, renderer) {
        super(elementRef, renderer, 'aria-invalid');
        this.elementRef = elementRef;
        this.renderer = renderer;
    }
    get luxAriaInvalid() {
        return this._luxAriaInvalid;
    }
    set luxAriaInvalid(invalid) {
        this._luxAriaInvalid = invalid;
        this.renderAria();
    }
    getSelector() {
        return this.luxAriaInvalidSelector;
    }
    getValue() {
        return this._luxAriaInvalid;
    }
};
LuxAriaInvalidDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], LuxAriaInvalidDirective.prototype, "luxAriaInvalidSelector", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], LuxAriaInvalidDirective.prototype, "luxAriaInvalid", null);
LuxAriaInvalidDirective = tslib_1.__decorate([
    Directive({
        selector: '[luxAriaInvalid]'
    }),
    tslib_1.__metadata("design:paramtypes", [ElementRef, Renderer2])
], LuxAriaInvalidDirective);
export { LuxAriaInvalidDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWFyaWEtaW52YWxpZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaWhrLWdmaS9sdXgtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sdXgtZGlyZWN0aXZlcy9sdXgtYXJpYS9sdXgtYXJpYS1pbnZhbGlkLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFLOUMsSUFBYSx1QkFBdUIsR0FBcEMsTUFBYSx1QkFBd0IsU0FBUSxXQUFXO0lBZ0J0RCxZQUFzQixVQUFzQixFQUFZLFFBQW1CO1FBQ3pFLEtBQUssQ0FBQyxVQUFVLEVBQUUsUUFBUSxFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBRHhCLGVBQVUsR0FBVixVQUFVLENBQVk7UUFBWSxhQUFRLEdBQVIsUUFBUSxDQUFXO0lBRTNFLENBQUM7SUFaRCxJQUFJLGNBQWM7UUFDaEIsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQzlCLENBQUM7SUFFRCxJQUFJLGNBQWMsQ0FBQyxPQUFlO1FBQ2hDLElBQUksQ0FBQyxlQUFlLEdBQUcsT0FBTyxDQUFDO1FBRS9CLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBTUQsV0FBVztRQUNULE9BQU8sSUFBSSxDQUFDLHNCQUFzQixDQUFDO0lBQ3JDLENBQUM7SUFFRCxRQUFRO1FBQ04sT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQzlCLENBQUM7Q0FDRixDQUFBOztZQVhtQyxVQUFVO1lBQXNCLFNBQVM7O0FBYmxFO0lBQVIsS0FBSyxFQUFFOzt1RUFBZ0M7QUFHeEM7SUFEQyxLQUFLLEVBQUU7Ozs2REFHUDtBQVJVLHVCQUF1QjtJQUhuQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsa0JBQWtCO0tBQzdCLENBQUM7NkNBaUJrQyxVQUFVLEVBQXNCLFNBQVM7R0FoQmhFLHVCQUF1QixDQTJCbkM7U0EzQlksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMdXhBcmlhQmFzZSB9IGZyb20gJy4vbHV4LWFyaWEtYmFzZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tsdXhBcmlhSW52YWxpZF0nXG59KVxuZXhwb3J0IGNsYXNzIEx1eEFyaWFJbnZhbGlkRGlyZWN0aXZlIGV4dGVuZHMgTHV4QXJpYUJhc2Uge1xuICBfbHV4QXJpYUludmFsaWQ6IHN0cmluZztcblxuICBASW5wdXQoKSBsdXhBcmlhSW52YWxpZFNlbGVjdG9yOiBzdHJpbmc7XG5cbiAgQElucHV0KClcbiAgZ2V0IGx1eEFyaWFJbnZhbGlkKCkge1xuICAgIHJldHVybiB0aGlzLl9sdXhBcmlhSW52YWxpZDtcbiAgfVxuXG4gIHNldCBsdXhBcmlhSW52YWxpZChpbnZhbGlkOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9sdXhBcmlhSW52YWxpZCA9IGludmFsaWQ7XG5cbiAgICB0aGlzLnJlbmRlckFyaWEoKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBwcm90ZWN0ZWQgcmVuZGVyZXI6IFJlbmRlcmVyMikge1xuICAgIHN1cGVyKGVsZW1lbnRSZWYsIHJlbmRlcmVyLCAnYXJpYS1pbnZhbGlkJyk7XG4gIH1cblxuICBnZXRTZWxlY3RvcigpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmx1eEFyaWFJbnZhbGlkU2VsZWN0b3I7XG4gIH1cblxuICBnZXRWYWx1ZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9sdXhBcmlhSW52YWxpZDtcbiAgfVxufVxuIl19