import * as tslib_1 from "tslib";
var LuxTagIdDirective_1;
import { AfterViewInit, Directive, ElementRef, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { LuxUtil } from '../../lux-util/lux-util';
import { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';
import { luxFormControlSelektor } from '../../lux-form/lux-form-control/lux-form-control.component';
let LuxTagIdDirective = LuxTagIdDirective_1 = class LuxTagIdDirective {
    constructor(elementRef, renderer, componentsConfigService) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.componentsConfigService = componentsConfigService;
    }
    ngOnInit() {
        this.configSubscription = this.componentsConfigService.config.subscribe((newConfig) => {
            this.generateLuxTagIds = newConfig.generateLuxTagIds;
        });
    }
    ngAfterViewInit() {
        if (this.generateLuxTagIds) {
            const luxComponent = this.findLuxComponent(this.elementRef.nativeElement);
            if (luxComponent) {
                let newTagId = this.luxTagId;
                if (!newTagId) {
                    newTagId = this.getLuxTagId(luxComponent);
                }
                if (newTagId) {
                    newTagId = this.mergeTagIds(this.getLuxTagIdParent(luxComponent.parentElement, ''), luxComponent.nodeName + LuxTagIdDirective_1.sepComponent + newTagId);
                    newTagId = newTagId.toLowerCase();
                    this.renderer.setAttribute(luxComponent, LuxTagIdDirective_1.luxTagIdAttrName, newTagId);
                }
                else {
                    let usedLabel = false;
                    if (luxComponent.getAttribute('luxLabel')) {
                        newTagId = this.mergeTagIds(luxComponent.getAttribute('luxLabel'), newTagId);
                        newTagId = newTagId.toLowerCase();
                        this.renderer.setAttribute(luxComponent, LuxTagIdDirective_1.luxTagIdAttrName, newTagId);
                        usedLabel = true;
                    }
                    else if (luxComponent.getAttribute('ng-reflect-lux-label')) {
                        newTagId = this.mergeTagIds(luxComponent.getAttribute('ng-reflect-lux-label'), newTagId);
                        newTagId = newTagId.toLowerCase();
                        this.renderer.setAttribute(luxComponent, LuxTagIdDirective_1.luxTagIdAttrName, newTagId);
                        usedLabel = true;
                    }
                    else if (luxComponent.getAttribute('ng-reflect-label')) {
                        newTagId = this.mergeTagIds(luxComponent.getAttribute('ng-reflect-label'), newTagId);
                        newTagId = newTagId.toLowerCase();
                        this.renderer.setAttribute(luxComponent, LuxTagIdDirective_1.luxTagIdAttrName, newTagId);
                        usedLabel = true;
                    }
                    else if (luxComponent.getElementsByClassName('lux-form-label')[0]) {
                        newTagId = this.mergeTagIds(luxComponent.getElementsByClassName('lux-form-label')[0].textContent.trim(), newTagId);
                        newTagId = newTagId.toLowerCase();
                        this.renderer.setAttribute(luxComponent, LuxTagIdDirective_1.luxTagIdAttrName, newTagId);
                        usedLabel = true;
                    }
                    if (!usedLabel) {
                        console.warn('Dem Tag "' +
                            this.getNodeName(luxComponent) +
                            '(' +
                            this.getParentPath(luxComponent.parentElement, '') +
                            ')' +
                            '" fehlt das luxTagId-Attribut. Dieses Attribut wird für die automatischen Tests benötigt.');
                    }
                }
            }
        }
    }
    ngOnDestroy() {
        this.configSubscription.unsubscribe();
    }
    getParentPath(element, currentTagId) {
        if (element && element.parentElement) {
            return this.getParentPath(element.parentElement, currentTagId + '.' + this.getNodeName(element.parentElement));
        }
        return currentTagId;
    }
    getLuxTagIdParent(element, currentTagId) {
        if (element) {
            let newTagId = currentTagId;
            if (element.hasAttribute('luxTagId')) {
                newTagId = this.mergeTagIds('luxTagId', newTagId);
            }
            else if (element.hasAttribute(LuxTagIdDirective_1.luxTagIdAttrName)) {
                newTagId = this.mergeTagIds(element.getAttribute(LuxTagIdDirective_1.luxTagIdAttrName), newTagId);
            }
            else if (element.hasAttribute('luxcontrolbinding')) {
                newTagId = this.mergeTagIds(element.getAttribute('luxcontrolbinding'), newTagId);
            }
            else if (element.hasAttribute('formgroupname')) {
                newTagId = this.mergeTagIds('formgroup' + LuxTagIdDirective_1.sepComponent + element.getAttribute('formgroupname'), newTagId);
            }
            return this.getLuxTagIdParent(element.parentElement, newTagId);
        }
        return currentTagId;
    }
    mergeTagIds(tagId1, tagId2) {
        let tagId;
        if (!LuxUtil.isEmpty(tagId1) && !LuxUtil.isEmpty(tagId2)) {
            tagId = tagId1 + LuxTagIdDirective_1.sepParent + tagId2;
        }
        else if (!LuxUtil.isEmpty(tagId1) && LuxUtil.isEmpty(tagId2)) {
            tagId = tagId1;
        }
        else if (LuxUtil.isEmpty(tagId1) && !LuxUtil.isEmpty(tagId2)) {
            tagId = tagId2;
        }
        else {
            tagId = '';
        }
        return tagId;
    }
    getLuxTagId(element) {
        let newId = '';
        if (element) {
            if (element.hasAttribute('luxTagId')) {
                newId = element.getAttribute('luxTagId');
            }
            else if (element.hasAttribute(LuxTagIdDirective_1.luxTagIdAttrName)) {
                newId = element.getAttribute(LuxTagIdDirective_1.luxTagIdAttrName);
            }
            else if (element.hasAttribute('luxcontrolbinding')) {
                newId = element.getAttribute('luxcontrolbinding');
            }
            else if (element.hasAttribute('formgroupname')) {
                newId = element.getAttribute('formgroupname');
            }
        }
        return newId;
    }
    findLuxComponent(element) {
        if (element) {
            const nodeName = this.getNodeName(element);
            if (nodeName && nodeName.startsWith('lux-'.toUpperCase()) && nodeName !== luxFormControlSelektor.toUpperCase()) {
                return element;
            }
            else {
                return this.findLuxComponent(element.parentElement);
            }
        }
        return null;
    }
    getNodeName(element) {
        return element && element.nodeName ? element.nodeName : '';
    }
};
LuxTagIdDirective.luxTagIdAttrName = 'data-luxtagid';
LuxTagIdDirective.sepParent = '.';
LuxTagIdDirective.sepComponent = '#';
LuxTagIdDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: LuxComponentsConfigService }
];
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], LuxTagIdDirective.prototype, "luxTagId", void 0);
LuxTagIdDirective = LuxTagIdDirective_1 = tslib_1.__decorate([
    Directive({
        selector: '[luxTagIdHandler]'
    }),
    tslib_1.__metadata("design:paramtypes", [ElementRef,
        Renderer2,
        LuxComponentsConfigService])
], LuxTagIdDirective);
export { LuxTagIdDirective };
//# sourceMappingURL=data:application/json;base64,