import * as tslib_1 from "tslib";
import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';
import { LuxAriaBase } from './lux-aria-base';
let LuxAriaRequiredDirective = class LuxAriaRequiredDirective extends LuxAriaBase {
    constructor(elementRef, renderer) {
        super(elementRef, renderer, 'aria-required');
        this.elementRef = elementRef;
        this.renderer = renderer;
    }
    get luxAriaRequired() {
        return this._luxAriaRequired;
    }
    set luxAriaRequired(required) {
        this._luxAriaRequired = required;
        this.renderAria();
    }
    getSelector() {
        return this.luxAriaRequiredSelector;
    }
    getValue() {
        return this._luxAriaRequired;
    }
};
LuxAriaRequiredDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], LuxAriaRequiredDirective.prototype, "luxAriaRequiredSelector", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], LuxAriaRequiredDirective.prototype, "luxAriaRequired", null);
LuxAriaRequiredDirective = tslib_1.__decorate([
    Directive({
        selector: '[luxAriaRequired]'
    }),
    tslib_1.__metadata("design:paramtypes", [ElementRef, Renderer2])
], LuxAriaRequiredDirective);
export { LuxAriaRequiredDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWFyaWEtcmVxdWlyZWQuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGloay1nZmkvbHV4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJzcmMvYXBwL21vZHVsZXMvbHV4LWRpcmVjdGl2ZXMvbHV4LWFyaWEvbHV4LWFyaWEtcmVxdWlyZWQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUs5QyxJQUFhLHdCQUF3QixHQUFyQyxNQUFhLHdCQUF5QixTQUFRLFdBQVc7SUFnQnZELFlBQXNCLFVBQXNCLEVBQVksUUFBbUI7UUFDekUsS0FBSyxDQUFDLFVBQVUsRUFBRSxRQUFRLEVBQUUsZUFBZSxDQUFDLENBQUM7UUFEekIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUFZLGFBQVEsR0FBUixRQUFRLENBQVc7SUFFM0UsQ0FBQztJQVpELElBQUksZUFBZTtRQUNqQixPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztJQUMvQixDQUFDO0lBRUQsSUFBSSxlQUFlLENBQUMsUUFBZ0I7UUFDbEMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLFFBQVEsQ0FBQztRQUVqQyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDcEIsQ0FBQztJQU1ELFdBQVc7UUFDVCxPQUFPLElBQUksQ0FBQyx1QkFBdUIsQ0FBQztJQUN0QyxDQUFDO0lBRUQsUUFBUTtRQUNOLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDO0lBQy9CLENBQUM7Q0FDRixDQUFBOztZQVhtQyxVQUFVO1lBQXNCLFNBQVM7O0FBYmxFO0lBQVIsS0FBSyxFQUFFOzt5RUFBaUM7QUFHekM7SUFEQyxLQUFLLEVBQUU7OzsrREFHUDtBQVJVLHdCQUF3QjtJQUhwQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsbUJBQW1CO0tBQzlCLENBQUM7NkNBaUJrQyxVQUFVLEVBQXNCLFNBQVM7R0FoQmhFLHdCQUF3QixDQTJCcEM7U0EzQlksd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMdXhBcmlhQmFzZSB9IGZyb20gJy4vbHV4LWFyaWEtYmFzZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tsdXhBcmlhUmVxdWlyZWRdJ1xufSlcbmV4cG9ydCBjbGFzcyBMdXhBcmlhUmVxdWlyZWREaXJlY3RpdmUgZXh0ZW5kcyBMdXhBcmlhQmFzZSB7XG4gIF9sdXhBcmlhUmVxdWlyZWQ6IHN0cmluZztcblxuICBASW5wdXQoKSBsdXhBcmlhUmVxdWlyZWRTZWxlY3Rvcjogc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIGdldCBsdXhBcmlhUmVxdWlyZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2x1eEFyaWFSZXF1aXJlZDtcbiAgfVxuXG4gIHNldCBsdXhBcmlhUmVxdWlyZWQocmVxdWlyZWQ6IHN0cmluZykge1xuICAgIHRoaXMuX2x1eEFyaWFSZXF1aXJlZCA9IHJlcXVpcmVkO1xuXG4gICAgdGhpcy5yZW5kZXJBcmlhKCk7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgcHJvdGVjdGVkIHJlbmRlcmVyOiBSZW5kZXJlcjIpIHtcbiAgICBzdXBlcihlbGVtZW50UmVmLCByZW5kZXJlciwgJ2FyaWEtcmVxdWlyZWQnKTtcbiAgfVxuXG4gIGdldFNlbGVjdG9yKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMubHV4QXJpYVJlcXVpcmVkU2VsZWN0b3I7XG4gIH1cblxuICBnZXRWYWx1ZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9sdXhBcmlhUmVxdWlyZWQ7XG4gIH1cbn1cbiJdfQ==