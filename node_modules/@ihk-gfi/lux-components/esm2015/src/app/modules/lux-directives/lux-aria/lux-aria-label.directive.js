import * as tslib_1 from "tslib";
import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';
import { LuxAriaBase } from './lux-aria-base';
let LuxAriaLabelDirective = class LuxAriaLabelDirective extends LuxAriaBase {
    constructor(elementRef, renderer) {
        super(elementRef, renderer, 'aria-label');
        this.elementRef = elementRef;
        this.renderer = renderer;
        if (!this.luxAriaLabelSelector) {
            const tagName = elementRef.nativeElement.tagName.toLowerCase();
            if (tagName === 'lux-button') {
                this.luxAriaLabelSelector = 'button';
            }
            else if (tagName === 'lux-app-header-action-nav-item') {
                this.luxAriaLabelSelector = 'button';
            }
        }
    }
    get luxAriaLabel() {
        return this._luxAriaLabel;
    }
    set luxAriaLabel(label) {
        this._luxAriaLabel = label;
        this.renderAria();
    }
    getSelector() {
        return this.luxAriaLabelSelector;
    }
    getValue() {
        return this._luxAriaLabel;
    }
};
LuxAriaLabelDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], LuxAriaLabelDirective.prototype, "luxAriaLabelSelector", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], LuxAriaLabelDirective.prototype, "luxAriaLabel", null);
LuxAriaLabelDirective = tslib_1.__decorate([
    Directive({
        selector: '[luxAriaLabel]'
    }),
    tslib_1.__metadata("design:paramtypes", [ElementRef, Renderer2])
], LuxAriaLabelDirective);
export { LuxAriaLabelDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWFyaWEtbGFiZWwuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGloay1nZmkvbHV4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJzcmMvYXBwL21vZHVsZXMvbHV4LWRpcmVjdGl2ZXMvbHV4LWFyaWEvbHV4LWFyaWEtbGFiZWwuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUs5QyxJQUFhLHFCQUFxQixHQUFsQyxNQUFhLHFCQUFzQixTQUFRLFdBQVc7SUFnQnBELFlBQXNCLFVBQXNCLEVBQVksUUFBbUI7UUFDekUsS0FBSyxDQUFDLFVBQVUsRUFBRSxRQUFRLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFEdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUFZLGFBQVEsR0FBUixRQUFRLENBQVc7UUFHekUsSUFBSSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBRTtZQUM5QixNQUFNLE9BQU8sR0FBRyxVQUFVLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUMvRCxJQUFJLE9BQU8sS0FBSyxZQUFZLEVBQUU7Z0JBQzVCLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxRQUFRLENBQUM7YUFDdEM7aUJBQU0sSUFBSSxPQUFPLEtBQUssZ0NBQWdDLEVBQUU7Z0JBQ3ZELElBQUksQ0FBQyxvQkFBb0IsR0FBRyxRQUFRLENBQUM7YUFDdEM7U0FDRjtJQUNILENBQUM7SUFyQkQsSUFBSSxZQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzVCLENBQUM7SUFFRCxJQUFJLFlBQVksQ0FBQyxLQUFhO1FBQzVCLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1FBRTNCLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBZUQsV0FBVztRQUNULE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDO0lBQ25DLENBQUM7SUFFRCxRQUFRO1FBQ04sT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzVCLENBQUM7Q0FDRixDQUFBOztZQXBCbUMsVUFBVTtZQUFzQixTQUFTOztBQWJsRTtJQUFSLEtBQUssRUFBRTs7bUVBQThCO0FBR3RDO0lBREMsS0FBSyxFQUFFOzs7eURBR1A7QUFSVSxxQkFBcUI7SUFIakMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLGdCQUFnQjtLQUMzQixDQUFDOzZDQWlCa0MsVUFBVSxFQUFzQixTQUFTO0dBaEJoRSxxQkFBcUIsQ0FvQ2pDO1NBcENZLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5wdXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTHV4QXJpYUJhc2UgfSBmcm9tICcuL2x1eC1hcmlhLWJhc2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbHV4QXJpYUxhYmVsXSdcbn0pXG5leHBvcnQgY2xhc3MgTHV4QXJpYUxhYmVsRGlyZWN0aXZlIGV4dGVuZHMgTHV4QXJpYUJhc2Uge1xuICBfbHV4QXJpYUxhYmVsOiBzdHJpbmc7XG5cbiAgQElucHV0KCkgbHV4QXJpYUxhYmVsU2VsZWN0b3I6IHN0cmluZztcblxuICBASW5wdXQoKVxuICBnZXQgbHV4QXJpYUxhYmVsKCkge1xuICAgIHJldHVybiB0aGlzLl9sdXhBcmlhTGFiZWw7XG4gIH1cblxuICBzZXQgbHV4QXJpYUxhYmVsKGxhYmVsOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9sdXhBcmlhTGFiZWwgPSBsYWJlbDtcblxuICAgIHRoaXMucmVuZGVyQXJpYSgpO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHByb3RlY3RlZCByZW5kZXJlcjogUmVuZGVyZXIyKSB7XG4gICAgc3VwZXIoZWxlbWVudFJlZiwgcmVuZGVyZXIsICdhcmlhLWxhYmVsJyk7XG5cbiAgICBpZiAoIXRoaXMubHV4QXJpYUxhYmVsU2VsZWN0b3IpIHtcbiAgICAgIGNvbnN0IHRhZ05hbWUgPSBlbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgaWYgKHRhZ05hbWUgPT09ICdsdXgtYnV0dG9uJykge1xuICAgICAgICB0aGlzLmx1eEFyaWFMYWJlbFNlbGVjdG9yID0gJ2J1dHRvbic7XG4gICAgICB9IGVsc2UgaWYgKHRhZ05hbWUgPT09ICdsdXgtYXBwLWhlYWRlci1hY3Rpb24tbmF2LWl0ZW0nKSB7XG4gICAgICAgIHRoaXMubHV4QXJpYUxhYmVsU2VsZWN0b3IgPSAnYnV0dG9uJztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBnZXRTZWxlY3RvcigpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmx1eEFyaWFMYWJlbFNlbGVjdG9yO1xuICB9XG5cbiAgZ2V0VmFsdWUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fbHV4QXJpYUxhYmVsO1xuICB9XG59XG4iXX0=