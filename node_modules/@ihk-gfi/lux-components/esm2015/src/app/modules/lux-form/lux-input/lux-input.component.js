import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ContentChild, ElementRef, Input, Optional, ViewChild } from '@angular/core';
import { ControlContainer } from '@angular/forms';
import { LuxInputPrefixComponent } from './lux-input-subcomponents/lux-input-prefix.component';
import { LuxInputSuffixComponent } from './lux-input-subcomponents/lux-input-suffix.component';
import { LuxConsoleService } from '../../lux-util/lux-console.service';
import { LuxFormInputBaseClass } from '../lux-form-model/lux-form-input-base.class';
import { LuxComponentsConfigService } from '../../lux-components-config/lux-components-config.service';
let LuxInputComponent = class LuxInputComponent extends LuxFormInputBaseClass {
    constructor(controlContainer, cdr, logger, config) {
        super(controlContainer, cdr, logger, config);
        this.symbolRegExp = /[,.]/;
        this.luxType = 'text';
        this.luxNumberAlignLeft = false;
    }
    /**
     * Wird bei jedem Tastendruck auf dem Inputfeld aufgerufen.
     * @param $event
     */
    onKeyDown($event) {
        // Soll nur fÃ¼r number-Inputs greifen
        if (this.inputElement) {
            const value = this.inputElement.nativeElement.value;
            // Doppelte Punkt-/Komma-Setzung und E's vermeiden
            if (value &&
                this.symbolRegExp.test($event.key) &&
                (this.inputElement.nativeElement.value.match(this.symbolRegExp) || []).length > 0) {
                $event.preventDefault();
            }
        }
    }
};
LuxInputComponent.ctorParameters = () => [
    { type: ControlContainer, decorators: [{ type: Optional }] },
    { type: ChangeDetectorRef },
    { type: LuxConsoleService },
    { type: LuxComponentsConfigService }
];
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], LuxInputComponent.prototype, "luxType", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], LuxInputComponent.prototype, "luxNumberAlignLeft", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number)
], LuxInputComponent.prototype, "luxMaxLength", void 0);
tslib_1.__decorate([
    ContentChild(LuxInputPrefixComponent, { static: false }),
    tslib_1.__metadata("design:type", LuxInputPrefixComponent)
], LuxInputComponent.prototype, "inputPrefix", void 0);
tslib_1.__decorate([
    ContentChild(LuxInputSuffixComponent, { static: false }),
    tslib_1.__metadata("design:type", LuxInputSuffixComponent)
], LuxInputComponent.prototype, "inputSuffix", void 0);
tslib_1.__decorate([
    ViewChild('input', { read: ElementRef, static: false }),
    tslib_1.__metadata("design:type", ElementRef)
], LuxInputComponent.prototype, "inputElement", void 0);
LuxInputComponent = tslib_1.__decorate([
    Component({
        selector: 'lux-input',
        template: "<lux-form-control [luxFormComponent]=\"this\" [formGroup]=\"formGroup\" *ngIf=\"formGroup\">\n  <div class=\"lux-input-row\" fxLayout=\"row\">\n    <span class=\"lux-input-prefix-container\" fxFlex=\"auto\" matPrefix *ngIf=\"inputPrefix\">\n      <ng-content select=\"lux-input-prefix\"></ng-content>\n    </span>\n    <input\n      fxFlex=\"auto\"\n      matInput\n      luxTagIdHandler\n      [luxTagId]=\"luxTagId\"\n      [placeholder]=\"luxPlaceholder\"\n      [type]=\"luxType\"\n      [luxMaxLengthAttr]=\"luxMaxLength\"\n      [formControl]=\"formControl\"\n      [required]=\"luxRequired\"\n      [readonly]=\"luxReadonly\"\n      [autocomplete]=\"luxAutocomplete\"\n      (blur)=\"luxBlur.emit($event)\"\n      (focus)=\"luxFocus.emit($event)\"\n      (focusin)=\"luxFocusIn.emit($event)\"\n      (focusout)=\"luxFocusOut.emit($event)\"\n      [luxAriaDescribedby]=\"uid + '-error ' + uid + '-hint'\"\n      [id]=\"uid\"\n      #input\n      *ngIf=\"luxType !== 'number'\"\n    />\n    <input\n      fxFlex=\"auto\"\n      matInput\n      luxTagIdHandler\n      [luxTagId]=\"luxTagId\"\n      [placeholder]=\"luxPlaceholder\"\n      type=\"number\"\n      [luxMaxLengthAttr]=\"luxMaxLength\"\n      [formControl]=\"formControl\"\n      [required]=\"luxRequired\"\n      [readonly]=\"luxReadonly\"\n      [autocomplete]=\"luxAutocomplete\"\n      [ngClass]=\"{\n        'lux-number ': luxType === 'number',\n        'lux-number-left': luxType !== 'number' || (luxType === 'number' && luxNumberAlignLeft)\n      }\"\n      (blur)=\"luxBlur.emit($event)\"\n      (focus)=\"luxFocus.emit($event)\"\n      (focusin)=\"luxFocusIn.emit($event)\"\n      (focusout)=\"luxFocusOut.emit($event)\"\n      [luxAriaDescribedby]=\"uid + '-error ' + uid + '-hint'\"\n      (keydown)=\"onKeyDown($event)\"\n      [id]=\"uid\"\n      #input\n      *ngIf=\"luxType === 'number'\"\n    />\n    <span class=\"lux-input-suffix-container\" fxFlex=\"auto\" matSuffix *ngIf=\"inputSuffix\">\n      <ng-content select=\"lux-input-suffix\"></ng-content>\n    </span>\n  </div>\n</lux-form-control>\n",
        styles: ["@charset \"UTF-8\";.lux-label{display:block;margin-bottom:2px}input.lux-number{text-align:right!important}input.lux-number-left{text-align:left!important}input.lux-number::-webkit-inner-spin-button,input.lux-number::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}input.lux-number::-ms-clear{display:none}input[type=number]{-moz-appearance:textfield}@-webkit-keyframes autofill{to{color:#666;background:0 0}}input:-webkit-autofill{-webkit-animation-name:autofill;-webkit-animation-fill-mode:both}"]
    }),
    tslib_1.__param(0, Optional()),
    tslib_1.__metadata("design:paramtypes", [ControlContainer,
        ChangeDetectorRef,
        LuxConsoleService,
        LuxComponentsConfigService])
], LuxInputComponent);
export { LuxInputComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWlucHV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BpaGstZ2ZpL2x1eC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsic3JjL2FwcC9tb2R1bGVzL2x1eC1mb3JtL2x1eC1pbnB1dC9sdXgtaW5wdXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkgsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDbEQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFDL0YsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFDL0YsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDdkUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDcEYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sMkRBQTJELENBQUM7QUFPdkcsSUFBYSxpQkFBaUIsR0FBOUIsTUFBYSxpQkFBa0IsU0FBUSxxQkFBcUI7SUFVMUQsWUFDYyxnQkFBa0MsRUFDOUMsR0FBc0IsRUFDdEIsTUFBeUIsRUFDekIsTUFBa0M7UUFFbEMsS0FBSyxDQUFDLGdCQUFnQixFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFmOUIsaUJBQVksR0FBRyxNQUFNLENBQUM7UUFFOUIsWUFBTyxHQUFXLE1BQU0sQ0FBQztRQUN6Qix1QkFBa0IsR0FBWSxLQUFLLENBQUM7SUFhN0MsQ0FBQztJQUVEOzs7T0FHRztJQUNILFNBQVMsQ0FBQyxNQUFxQjtRQUM3QixxQ0FBcUM7UUFDckMsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3JCLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQztZQUNwRCxrREFBa0Q7WUFDbEQsSUFDRSxLQUFLO2dCQUNMLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7Z0JBQ2xDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsRUFDakY7Z0JBQ0EsTUFBTSxDQUFDLGNBQWMsRUFBRSxDQUFDO2FBQ3pCO1NBQ0Y7SUFDSCxDQUFDO0NBQ0YsQ0FBQTs7WUExQmlDLGdCQUFnQix1QkFBN0MsUUFBUTtZQUNKLGlCQUFpQjtZQUNkLGlCQUFpQjtZQUNqQiwwQkFBMEI7O0FBWDNCO0lBQVIsS0FBSyxFQUFFOztrREFBMEI7QUFDekI7SUFBUixLQUFLLEVBQUU7OzZEQUFxQztBQUNwQztJQUFSLEtBQUssRUFBRTs7dURBQXNCO0FBQzRCO0lBQXpELFlBQVksQ0FBQyx1QkFBdUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQztzQ0FBYyx1QkFBdUI7c0RBQUM7QUFDckM7SUFBekQsWUFBWSxDQUFDLHVCQUF1QixFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDO3NDQUFjLHVCQUF1QjtzREFBQztBQUN0QztJQUF4RCxTQUFTLENBQUMsT0FBTyxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUM7c0NBQWUsVUFBVTt1REFBQztBQVJ2RSxpQkFBaUI7SUFMN0IsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLFdBQVc7UUFDckIsOGlFQUF5Qzs7S0FFMUMsQ0FBQztJQVlHLG1CQUFBLFFBQVEsRUFBRSxDQUFBOzZDQUFtQixnQkFBZ0I7UUFDekMsaUJBQWlCO1FBQ2QsaUJBQWlCO1FBQ2pCLDBCQUEwQjtHQWR6QixpQkFBaUIsQ0FxQzdCO1NBckNZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgRWxlbWVudFJlZiwgSW5wdXQsIE9wdGlvbmFsLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xDb250YWluZXIgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBMdXhJbnB1dFByZWZpeENvbXBvbmVudCB9IGZyb20gJy4vbHV4LWlucHV0LXN1YmNvbXBvbmVudHMvbHV4LWlucHV0LXByZWZpeC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTHV4SW5wdXRTdWZmaXhDb21wb25lbnQgfSBmcm9tICcuL2x1eC1pbnB1dC1zdWJjb21wb25lbnRzL2x1eC1pbnB1dC1zdWZmaXguY29tcG9uZW50JztcbmltcG9ydCB7IEx1eENvbnNvbGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vbHV4LXV0aWwvbHV4LWNvbnNvbGUuc2VydmljZSc7XG5pbXBvcnQgeyBMdXhGb3JtSW5wdXRCYXNlQ2xhc3MgfSBmcm9tICcuLi9sdXgtZm9ybS1tb2RlbC9sdXgtZm9ybS1pbnB1dC1iYXNlLmNsYXNzJztcbmltcG9ydCB7IEx1eENvbXBvbmVudHNDb25maWdTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vbHV4LWNvbXBvbmVudHMtY29uZmlnL2x1eC1jb21wb25lbnRzLWNvbmZpZy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbHV4LWlucHV0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2x1eC1pbnB1dC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2x1eC1pbnB1dC5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIEx1eElucHV0Q29tcG9uZW50IGV4dGVuZHMgTHV4Rm9ybUlucHV0QmFzZUNsYXNzIHtcbiAgcHJpdmF0ZSByZWFkb25seSBzeW1ib2xSZWdFeHAgPSAvWywuXS87XG5cbiAgQElucHV0KCkgbHV4VHlwZTogc3RyaW5nID0gJ3RleHQnO1xuICBASW5wdXQoKSBsdXhOdW1iZXJBbGlnbkxlZnQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgbHV4TWF4TGVuZ3RoOiBudW1iZXI7XG4gIEBDb250ZW50Q2hpbGQoTHV4SW5wdXRQcmVmaXhDb21wb25lbnQsIHsgc3RhdGljOiBmYWxzZSB9KSBpbnB1dFByZWZpeDogTHV4SW5wdXRQcmVmaXhDb21wb25lbnQ7XG4gIEBDb250ZW50Q2hpbGQoTHV4SW5wdXRTdWZmaXhDb21wb25lbnQsIHsgc3RhdGljOiBmYWxzZSB9KSBpbnB1dFN1ZmZpeDogTHV4SW5wdXRTdWZmaXhDb21wb25lbnQ7XG4gIEBWaWV3Q2hpbGQoJ2lucHV0JywgeyByZWFkOiBFbGVtZW50UmVmLCBzdGF0aWM6IGZhbHNlIH0pIGlucHV0RWxlbWVudDogRWxlbWVudFJlZjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBAT3B0aW9uYWwoKSBjb250cm9sQ29udGFpbmVyOiBDb250cm9sQ29udGFpbmVyLFxuICAgIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgbG9nZ2VyOiBMdXhDb25zb2xlU2VydmljZSxcbiAgICBjb25maWc6IEx1eENvbXBvbmVudHNDb25maWdTZXJ2aWNlXG4gICkge1xuICAgIHN1cGVyKGNvbnRyb2xDb250YWluZXIsIGNkciwgbG9nZ2VyLCBjb25maWcpO1xuICB9XG5cbiAgLyoqXG4gICAqIFdpcmQgYmVpIGplZGVtIFRhc3RlbmRydWNrIGF1ZiBkZW0gSW5wdXRmZWxkIGF1ZmdlcnVmZW4uXG4gICAqIEBwYXJhbSAkZXZlbnRcbiAgICovXG4gIG9uS2V5RG93bigkZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcbiAgICAvLyBTb2xsIG51ciBmw7xyIG51bWJlci1JbnB1dHMgZ3JlaWZlblxuICAgIGlmICh0aGlzLmlucHV0RWxlbWVudCkge1xuICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LnZhbHVlO1xuICAgICAgLy8gRG9wcGVsdGUgUHVua3QtL0tvbW1hLVNldHp1bmcgdW5kIEUncyB2ZXJtZWlkZW5cbiAgICAgIGlmIChcbiAgICAgICAgdmFsdWUgJiZcbiAgICAgICAgdGhpcy5zeW1ib2xSZWdFeHAudGVzdCgkZXZlbnQua2V5KSAmJlxuICAgICAgICAodGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudC52YWx1ZS5tYXRjaCh0aGlzLnN5bWJvbFJlZ0V4cCkgfHwgW10pLmxlbmd0aCA+IDBcbiAgICAgICkge1xuICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ==