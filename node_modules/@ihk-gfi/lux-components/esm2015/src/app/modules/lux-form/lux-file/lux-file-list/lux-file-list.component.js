import * as tslib_1 from "tslib";
import { AfterViewChecked, AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Optional, QueryList, ViewChild, ViewChildren } from '@angular/core';
import { ControlContainer } from '@angular/forms';
import { LuxConsoleService } from '../../../lux-util/lux-console.service';
import { LuxFormFileBase } from '../../lux-form-model/lux-form-file-base.class';
import { HttpClient } from '@angular/common/http';
import { LuxFileErrorCause } from '../lux-file-model/lux-file-error.interface';
import { LuxComponentsConfigService } from '../../../lux-components-config/lux-components-config.service';
import { LiveAnnouncer } from '@angular/cdk/a11y';
import { LuxCardComponent } from '../../../lux-layout/lux-card/lux-card.component';
let LuxFileListComponent = class LuxFileListComponent extends LuxFormFileBase {
    constructor(controlContainer, cdr, logger, http, liveAnnouncer, config) {
        super(controlContainer, cdr, logger, config, http, liveAnnouncer);
        this._luxUploadActionConfig = {
            disabled: false,
            disabledHeader: false,
            hidden: false,
            hiddenHeader: false,
            iconName: 'fas fa-cloud-upload-alt',
            iconNameHeader: 'fas fa-cloud-upload-alt',
            label: 'Hochladen',
            labelHeader: 'Neue Dateien hochladen'
        };
        this._luxDeleteActionConfig = {
            disabled: false,
            disabledHeader: false,
            hidden: false,
            hiddenHeader: false,
            iconName: 'fas fa-trash',
            iconNameHeader: 'fas fa-trash',
            label: 'Löschen',
            labelHeader: 'Alle Dateien entfernen'
        };
        this.fileIcons = [];
        this.rowWidth = 0;
        this.iconActionBarWidth = 50;
        this.alwaysVisibleView = false;
        this.alwaysVisibleUpload = false;
        this.alwaysVisibleDownload = false;
        this.alwaysVisibleDelete = false;
        this.luxShowPreview = true;
        this.luxMultiple = true;
        this.luxBackgroundIconName = 'fas fa-cloud-upload-alt';
    }
    get luxUploadActionConfig() {
        return this._luxUploadActionConfig;
    }
    set luxUploadActionConfig(config) {
        if (config) {
            this._luxUploadActionConfig = config;
        }
    }
    get luxDeleteActionConfig() {
        return this._luxDeleteActionConfig;
    }
    set luxDeleteActionConfig(config) {
        if (config) {
            this._luxDeleteActionConfig = config;
        }
    }
    ngAfterViewInit() {
        this._fileEntryNodesChangeSubscr = this.fileEntries.changes.subscribe(() => {
            this.updateIconAndImage();
        });
        this.updateIconAndImage();
    }
    updateIconAndImage() {
        this.setFileIcons();
        if (this.luxShowPreview) {
            this.setImgSrcs();
        }
    }
    ngOnDestroy() {
        super.ngOnDestroy();
        if (this._fileEntryNodesChangeSubscr) {
            this._fileEntryNodesChangeSubscr.unsubscribe();
        }
    }
    shouldDisplayPreviewImg(index) {
        return (this.luxShowPreview && this.fileIcons && this.fileIcons[index] && this.fileIcons[index] === 'fas fa-file-image');
    }
    /**
     * Entfernt eine Datei aus den selektierten Dateien.
     * @param index
     */
    removeFile(index) {
        this.formControl.markAsTouched();
        this.formControl.markAsDirty();
        // Wenn mehrere Dateien selektiert sind, diese nach der entfernten Datei filtern ansonsten "undefined" nutzen
        const newFiles = Array.isArray(this.luxSelectedFiles)
            ? this.luxSelectedFiles.filter((file, searchIndex) => searchIndex !== index)
            : undefined;
        // Via LiveAnnouncer mitteilen welche Datei entfernt wird
        this.announceFileRemove(Array.isArray(this.luxSelectedFiles) ? this.luxSelectedFiles[index].name : this.luxSelectedFiles.name);
        // Wir entfernen hier nur eine Datei, deshalb ist das neue Auslesen der Base64-Strings nicht nötig
        this.uploadFiles(newFiles).then(() => {
            this.luxSelectedFiles = newFiles && newFiles.length === 1 ? newFiles[0] : newFiles;
            this.notifyFormValueChanged();
        }, error => this.setFormControlErrors(error));
        if (this.luxDeleteActionConfig.onClick) {
            this.luxDeleteActionConfig.onClick();
        }
    }
    /**
     * Fügt weitere Dateien zu den bereits vorhandenen hinzu bzw. ersetzt diese.
     * @param files
     */
    selectFiles(files) {
        this.formControl.markAsTouched();
        this.formControl.markAsDirty();
        this.forceProgressIndeterminate = true;
        this.announceFileProcess(files && files.length > 1);
        if (!files || files.length === 0) {
            this.forceProgressIndeterminate = false;
            return;
        }
        // Timeout, um Flackern durch Progress zu vermeiden
        setTimeout(() => {
            // Prüfen ob die Dateien bereits vorhanden sind
            let selectedFilesArray = [];
            const replaceableFilesMap = new Map();
            if (this.luxSelectedFiles) {
                files = Array.from(files);
                selectedFilesArray = Array.isArray(this.luxSelectedFiles) ? this.luxSelectedFiles : [this.luxSelectedFiles];
                // zu ersetzende Indizes herausfinden
                files.forEach((file) => {
                    const index = selectedFilesArray.findIndex((compareFile) => compareFile.name === file.name);
                    if (index > -1) {
                        replaceableFilesMap.set(index, file);
                    }
                });
            }
            // Wenn mehrere Dateien selektiert sind und luxMultiple dies unterbindet, Fehler werfen und Fn beenden
            // Ausnahme ist, wenn die Dateien nur ersetzt werden sollen
            if (!this.luxMultiple &&
                ((!this.luxSelectedFiles && files.length > 1) ||
                    (this.luxSelectedFiles && this.luxSelectedFiles.length > 1) ||
                    (this.luxSelectedFiles && replaceableFilesMap.size !== files.length))) {
                this.setFormControlErrors({
                    cause: LuxFileErrorCause.MultipleForbidden,
                    exception: this.getMultipleForbiddenMessage(),
                    file: null
                });
                return;
            }
            this.updateSelectedFiles(files).then((newFiles) => {
                const tempSelectedFiles = selectedFilesArray;
                // die zu ersetzenden Dateien durchgehen und aktualisieren
                replaceableFilesMap.forEach((file, index) => {
                    const replaceableFileObject = newFiles.find((newFile) => newFile.name === file.name);
                    // das gefundene Objekt aus den newFiles entfernen
                    newFiles = newFiles.filter(newFile => newFile !== replaceableFileObject);
                    // die selectedFiles aktualisieren
                    tempSelectedFiles[index] = replaceableFileObject;
                });
                // die übrigen neuen Dateien anfügen
                tempSelectedFiles.push(...newFiles);
                this.luxSelectedFiles =
                    tempSelectedFiles && tempSelectedFiles.length === 1 ? tempSelectedFiles[0] : tempSelectedFiles;
                this.notifyFormValueChanged();
            }, error => this.setFormControlErrors(error));
        }, this.defaultReadFileDelay);
    }
    /**
     * Aktualisiert die Preview-Bilder für die (Image-)Dateien.
     *
     * Aktualisierung absichtlich via Funktion und nicht Property-Binding, da potentiell Stack-Size Fehler auftreten,
     * wenn (große) Base64-Strings gegen die src gebunden werden.
     */
    setImgSrcs() {
        this.fileEntries.forEach((item, index) => {
            const imgElement = item.nativeElement.querySelector('img');
            if (imgElement && this.luxSelectedFiles) {
                const targetFileContent = Array.isArray(this.luxSelectedFiles)
                    ? this.luxSelectedFiles[index].content
                    : this.luxSelectedFiles.content;
                if (targetFileContent instanceof Blob) {
                    this.readFile(targetFileContent).then((content) => {
                        imgElement.src = content;
                    });
                }
                else {
                    imgElement.src = targetFileContent;
                }
            }
        });
    }
    /**
     * Setzt die Icons für die Elemente in der Auflistung
     */
    setFileIcons() {
        if (!this.luxSelectedFiles) {
            return;
        }
        this.fileIcons = [];
        const selectedFiles = [];
        if (!Array.isArray(this.luxSelectedFiles)) {
            selectedFiles.push(this.luxSelectedFiles);
        }
        else {
            selectedFiles.push(...this.luxSelectedFiles);
        }
        selectedFiles.forEach((selectedFile) => {
            let newFileIcon = 'fas fa-file';
            if (selectedFile.type) {
                if (selectedFile.type.indexOf('image') > -1) {
                    newFileIcon = 'fas fa-file-image';
                }
                else if (selectedFile.type.indexOf('pdf') > -1) {
                    newFileIcon = 'fas fa-file-pdf';
                }
                else if (selectedFile.type.indexOf('spreadsheet') > -1) {
                    newFileIcon = 'fas fa-file-excel';
                }
                else if (selectedFile.type.indexOf('officedocument') > -1) {
                    newFileIcon = 'fas fa-file-signature';
                }
                else if (selectedFile.type.indexOf('json') > -1) {
                    newFileIcon = 'fas fa-file-code';
                }
            }
            this.fileIcons.push(newFileIcon);
        });
        this.cdr.detectChanges();
    }
    ngAfterViewChecked() {
        this.resizeIconActionBar();
    }
    isArray(object) {
        return object && Array.isArray(object);
    }
    resizeIconActionBar() {
        if (this.fileEntries && this.fileEntries.first && this.cdr) {
            const newRowWidth = this.fileEntries.first.nativeElement.offsetWidth;
            if (this.rowWidth !== newRowWidth) {
                this.rowWidth = newRowWidth;
                if (this.rowWidth >= 500) {
                    this.iconActionBarWidth = 200;
                    this.alwaysVisibleView = true;
                    this.alwaysVisibleUpload = true;
                    this.alwaysVisibleDownload = true;
                    this.alwaysVisibleDelete = true;
                }
                else if (this.rowWidth >= 400) {
                    this.iconActionBarWidth = 150;
                    this.alwaysVisibleView = false;
                    this.alwaysVisibleUpload = false;
                    this.alwaysVisibleDownload = true;
                    this.alwaysVisibleDelete = true;
                }
                else {
                    this.iconActionBarWidth = 50;
                    this.alwaysVisibleView = false;
                    this.alwaysVisibleUpload = false;
                    this.alwaysVisibleDownload = false;
                    this.alwaysVisibleDelete = false;
                }
                this.cdr.detectChanges();
            }
        }
    }
    // region Overridden methods
    errorMessageModifier(value, errors) {
        if (errors.required) {
            return 'Es muss mindestens eine Datei ausgewählt werden';
        }
        return super.errorMessageModifier(value, errors);
    }
    triggerViewFileClick(file) {
        super.triggerViewFileClick(file);
        this.updateIconAndImage();
    }
    notifyFormValueChanged() {
        super.notifyFormValueChanged();
        this.formControl.updateValueAndValidity();
        this.fileuploadSingleInput.nativeElement.value = null;
    }
};
LuxFileListComponent.ctorParameters = () => [
    { type: ControlContainer, decorators: [{ type: Optional }] },
    { type: ChangeDetectorRef },
    { type: LuxConsoleService },
    { type: HttpClient },
    { type: LiveAnnouncer },
    { type: LuxComponentsConfigService }
];
tslib_1.__decorate([
    ViewChildren('fileEntry', { read: ElementRef }),
    tslib_1.__metadata("design:type", QueryList)
], LuxFileListComponent.prototype, "fileEntries", void 0);
tslib_1.__decorate([
    ViewChild('fileuploadSingle', { read: ElementRef, static: true }),
    tslib_1.__metadata("design:type", ElementRef)
], LuxFileListComponent.prototype, "fileuploadSingleInput", void 0);
tslib_1.__decorate([
    ViewChild(LuxCardComponent, { read: ElementRef, static: true }),
    tslib_1.__metadata("design:type", ElementRef)
], LuxFileListComponent.prototype, "fileCard", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], LuxFileListComponent.prototype, "luxShowPreview", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], LuxFileListComponent.prototype, "luxMultiple", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], LuxFileListComponent.prototype, "luxBackgroundIconName", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], LuxFileListComponent.prototype, "luxUploadActionConfig", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], LuxFileListComponent.prototype, "luxDeleteActionConfig", null);
LuxFileListComponent = tslib_1.__decorate([
    Component({
        selector: 'lux-file-list',
        template: "<lux-card\n  class=\"lux-file-list\"\n  [ngClass]=\"{ 'lux-file-list-disabled': luxDisabled }\"\n  [luxTitle]=\"(luxLabel ? luxLabel : '') + (luxRequired ? ' *' : '')\"\n  [luxAriaInvalid]=\"formControl?.invalid\"\n  tabindex=\"0\"\n>\n  <lux-card-info *ngIf=\"luxMultiple || !luxSelectedFiles\">\n    <lux-button\n      class=\"lux-file-list-header-clear\"\n      [luxIconName]=\"luxDeleteActionConfig.iconNameHeader\"\n      luxTagId=\"lux-file-clear\"\n      luxColor=\"primary\"\n      [luxDisabled]=\"\n        !luxSelectedFiles ||\n        luxSelectedFiles.length === 0 ||\n        luxDeleteActionConfig.disabledHeader ||\n        luxDisabled ||\n        luxReadonly\n      \"\n      (luxClicked)=\"clearFiles($event)\"\n      fxFlex=\"0 0 auto\"\n      [luxAriaLabel]=\"luxDeleteActionConfig.labelHeader\"\n      luxAriaLabelSelector=\"button\"\n      *ngIf=\"!luxDeleteActionConfig.hiddenHeader\"\n    >\n    </lux-button>\n    <lux-button\n      class=\"lux-file-list-header-add\"\n      [luxIconName]=\"luxUploadActionConfig.iconNameHeader\"\n      luxTagId=\"lux-file-add\"\n      (luxClicked)=\"fileupload.click()\"\n      fxFlex=\"0 0 auto\"\n      [luxDisabled]=\"luxUploadActionConfig.disabledHeader || luxDisabled || luxReadonly\"\n      luxColor=\"primary\"\n      [luxAriaLabel]=\"luxUploadActionConfig.labelHeader\"\n      luxAriaLabelSelector=\"button\"\n      *ngIf=\"!luxUploadActionConfig.hiddenHeader\"\n    >\n    </lux-button>\n  </lux-card-info>\n  <lux-card-content>\n    <div\n      class=\"lux-file-list-content\"\n      fxFlex=\"1 0 75px\"\n      fxLayout=\"column\"\n      fxLayoutAlign=\"{{ !luxSelectedFiles || luxSelectedFiles.length === 0 ? 'center center' : 'start start' }}\"\n    >\n      <div\n        class=\"lux-file-icon-hint\"\n        fxFlexFill\n        fxLayout=\"column\"\n        fxLayoutAlign=\"center center\"\n        *ngIf=\"!luxSelectedFiles || luxSelectedFiles.length === 0\"\n      >\n        <lux-divider></lux-divider>\n        <lux-icon\n          class=\"lux-file-icon\"\n          [luxIconSize]=\"'3x'\"\n          [luxIconName]=\"luxUploadActionConfig.iconName\"\n          [luxPadding]=\"'0'\"\n          [luxMargin]=\"'0'\"\n          *ngIf=\"luxUploadActionConfig.iconName\"\n        >\n        </lux-icon>\n        <mat-hint [id]=\"uid + '-misc'\" fxFlexOffset=\"8px\" *ngIf=\"formHintComponent || luxHint\">\n          <ng-container *ngIf=\"luxHint; else formHintTemplate\">\n            {{ luxHint }}\n          </ng-container>\n          <ng-template #formHintTemplate>\n            <ng-container *ngTemplateOutlet=\"formHintComponent.templateRef\"></ng-container>\n          </ng-template>\n        </mat-hint>\n      </div>\n      <div class=\"lux-file-list-entries\" fxFlexFill *ngIf=\"luxSelectedFiles\">\n        <!-- Mehrere Dateien ausgew\u00E4hlt -->\n        <ng-container *ngIf=\"isArray(luxSelectedFiles)\">\n          <lux-divider></lux-divider>\n          <ng-container *ngFor=\"let selectedFile of luxSelectedFiles; let i = index\">\n            <ng-container *ngTemplateOutlet=\"fileListEntryTemplate; context: { selectedFile: selectedFile, index: i }\">\n            </ng-container>\n          </ng-container>\n        </ng-container>\n        <!-- Nur eine Datei ausgew\u00E4hlt -->\n        <ng-container *ngIf=\"!isArray(luxSelectedFiles)\">\n          <lux-divider></lux-divider>\n          <ng-container\n            *ngTemplateOutlet=\"fileListEntryTemplate; context: { selectedFile: luxSelectedFiles, index: 0 }\"\n          >\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </lux-card-content>\n  <lux-card-actions fxLayout=\"column\" fxFlexFill *ngIf=\"errorMessage && formControl?.touched\">\n    <mat-error [id]=\"uid + '-misc'\">\n      {{ errorMessage }}\n    </mat-error>\n  </lux-card-actions>\n</lux-card>\n<!-- Template f\u00FCr eine File-Entry -->\n<ng-template let-selectedFile=\"selectedFile\" let-index=\"index\" #fileListEntryTemplate>\n  <div\n    class=\"lux-file-list-entry lux-mt-2 lux-mb-2\"\n    fxLayout=\"row\"\n    fxLayoutAlign=\"start center\"\n    tabindex=\"0\"\n    [attr.aria-label]=\"'Datei ' + selectedFile.name\"\n    #fileEntry\n  >\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex=\"0 1 100%\">\n      <!-- Icon bzw. Img der Datei -->\n      <ng-container [ngSwitch]=\"shouldDisplayPreviewImg(index)\">\n        <ng-container *ngSwitchCase=\"false\">\n          <lux-icon\n            class=\"lux-file-list-entry-icon\"\n            luxPadding=\"0\"\n            luxMargin=\"0\"\n            [luxIconName]=\"fileIcons[index]\"\n            luxIconSize=\"2x\"\n            fxFlex=\"0 0 30px\"\n            aria-hidden\n          >\n          </lux-icon>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"true\">\n          <img fxFlex=\"0 0 30px\" aria-hidden />\n        </ng-container>\n      </ng-container>\n      <!-- Der Name der Datei -->\n      <span class=\"lux-file-list-entry-label lux-mr-3\" fxFlex=\"0 1 auto\" fxFlexOffset=\"8px\">\n        {{ selectedFile.name }}\n      </span>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" [fxFlex]=\"'1 0 ' + iconActionBarWidth + 'px'\">\n      <!-- Buttons zum erneuten Hochladen bzw. L\u00F6schen der Datei -->\n      <lux-menu\n        luxMenuIconName=\"fas fa-ellipsis-v\"\n        luxTagId=\"{{ 'lux-file-list-entry-' + index + '-actions' }}\"\n        (luxMenuClosed)=\"fileEntry.focus()\"\n        [luxToggleDisabled]=\"luxDisabled || luxReadonly\"\n        [luxDisplayExtended]=\"true\"\n      >\n        <lux-menu-item\n          luxTagId=\"lux-file-list-entry-view\"\n          [luxIconName]=\"luxViewActionConfig.iconName\"\n          [luxDisabled]=\"luxViewActionConfig.disabled || luxDisabled || luxReadonly\"\n          [luxLabel]=\"luxViewActionConfig.label\"\n          [luxHideLabelIfExtended]=\"true\"\n          [luxAlwaysVisible]=\"alwaysVisibleView\"\n          luxColor=\"primary\"\n          (luxClicked)=\"viewFile(selectedFile)\"\n          [luxHidden]=\"!!luxViewActionConfig.hidden\"\n        >\n        </lux-menu-item>\n        <lux-menu-item\n          luxTagId=\"lux-file-list-entry-download\"\n          [luxIconName]=\"luxDownloadActionConfig.iconName\"\n          [luxDisabled]=\"luxDownloadActionConfig.disabled || luxDisabled || luxReadonly\"\n          [luxLabel]=\"luxDownloadActionConfig.label\"\n          [luxHideLabelIfExtended]=\"true\"\n          [luxAlwaysVisible]=\"alwaysVisibleDownload\"\n          luxColor=\"primary\"\n          (luxClicked)=\"downloadFile(selectedFile)\"\n          [luxHidden]=\"!!luxDownloadActionConfig.hidden\"\n        >\n        </lux-menu-item>\n        <lux-menu-item\n          luxTagId=\"lux-file-list-entry-remove\"\n          [luxIconName]=\"luxDeleteActionConfig.iconName\"\n          [luxDisabled]=\"luxDeleteActionConfig.disabled || luxDisabled || luxReadonly\"\n          [luxLabel]=\"luxDeleteActionConfig.label\"\n          [luxHideLabelIfExtended]=\"true\"\n          [luxAlwaysVisible]=\"alwaysVisibleDelete\"\n          luxColor=\"primary\"\n          (luxClicked)=\"removeFile(index)\"\n          [luxHidden]=\"!!luxDeleteActionConfig.hidden\"\n        >\n        </lux-menu-item>\n        <lux-menu-item\n          luxTagId=\"lux-file-list-entry-upload\"\n          [luxIconName]=\"luxUploadActionConfig.iconName\"\n          [luxDisabled]=\"luxUploadActionConfig.disabled || luxDisabled || luxReadonly\"\n          [luxLabel]=\"luxUploadActionConfig.label\"\n          [luxHideLabelIfExtended]=\"true\"\n          [luxAlwaysVisible]=\"alwaysVisibleUpload\"\n          luxColor=\"primary\"\n          (luxClicked)=\"fileuploadSingle.click()\"\n          [luxHidden]=\"!!luxUploadActionConfig.hidden\"\n        >\n        </lux-menu-item>\n      </lux-menu>\n    </div>\n  </div>\n  <ng-container *ngIf=\"luxSelectedFiles.length\">\n    <lux-divider *ngIf=\"index !== this.luxSelectedFiles.length - 1\"></lux-divider>\n  </ng-container>\n</ng-template>\n\n<!-- File-Upload Input -->\n<input\n  class=\"lux-file-input lux-file-input-multiple\"\n  type=\"file\"\n  [multiple]=\"luxMultiple\"\n  [accept]=\"luxAccept\"\n  [luxFileCapture]=\"luxCapture\"\n  (change)=\"selectFiles($event.target.files)\"\n  #fileupload\n/>\n<!-- File-Upload Single Input -->\n<input\n  class=\"lux-file-input lux-file-input-single\"\n  type=\"file\"\n  [multiple]=\"false\"\n  [accept]=\"luxAccept\"\n  [luxFileCapture]=\"luxCapture\"\n  (change)=\"selectFiles($event.target.files)\"\n  #fileuploadSingle\n/>\n\n<!-- Download-Node -->\n<a class=\"lux-file-download\" #downloadLink></a>\n\n<!-- Ladeanzeige f\u00FCr den File-Upload -->\n<lux-file-progress [luxMode]=\"progressMode\" [luxProgress]=\"progress\" *ngIf=\"isProgressVisible\"> </lux-file-progress>\n",
        styles: ["@charset \"UTF-8\";lux-side-nav .lux-side-nav-item,lux-side-nav lux-link{box-sizing:border-box}lux-side-nav .lux-side-nav-item.lux-side-nav-item-selected,lux-side-nav lux-link.lux-side-nav-item-selected{background-color:rgba(112,141,170,.2)!important;position:relative;border-radius:4px}lux-side-nav .lux-side-nav-item.lux-side-nav-item-selected:after,lux-side-nav lux-link.lux-side-nav-item-selected:after{content:'';left:0;width:6px;top:0;bottom:0;position:absolute;border-left:6px solid #0073b3;border-radius:4px 0 0 4px}lux-side-nav .lux-side-nav-item button .mat-button-focus-overlay,lux-side-nav lux-link button .mat-button-focus-overlay{display:none}lux-side-nav .lux-side-nav-item button:focus,lux-side-nav lux-link button:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}lux-side-nav .lux-side-nav-item button:hover,lux-side-nav lux-link button:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-list{border:4px solid transparent}lux-list:focus{outline-width:0;border:4px solid rgba(112,141,170,.2)!important}lux-list lux-list-item:focus{outline-width:0}lux-list lux-list-item:focus mat-card{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}lux-list lux-list-item lux-card.lux-list-item-selected mat-card{background-color:rgba(112,141,170,.2)!important;position:relative;border-radius:4px}lux-list lux-list-item lux-card.lux-list-item-selected mat-card:after{content:'';left:0;width:6px;top:0;bottom:0;position:absolute;border-left:6px solid #0073b3;border-radius:4px 0 0 4px}lux-list lux-list-item lux-card mat-card{box-sizing:border-box}lux-list lux-list-item lux-card mat-card:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .lux-form-control-label>*{color:#335c85}lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .cdk-focused .mat-radio-container,lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .mat-checkbox-inner-container,lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .mat-slide-toggle-thumb{position:relative}lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .cdk-focused .mat-radio-container:after,lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .mat-checkbox-inner-container:after,lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .mat-slide-toggle-thumb:after{content:\"\";border:1px solid rgba(112,141,170,.2);background-color:rgba(112,141,170,.2);display:block;top:-4px;left:-4px;right:-4px;bottom:-4px;border-radius:15px;z-index:1;position:absolute}lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .lux-form-control-container:after{content:'';display:block;box-sizing:border-box;left:0;right:0;position:absolute;height:2px;border-bottom:2px solid #0073b3}lux-datepicker mat-datepicker-toggle button:focus:after{content:\"\";border:1px solid rgba(112,141,170,.2);background-color:rgba(112,141,170,.2);display:block;top:-4px;left:-4px;right:-4px;bottom:-4px;border-radius:15px;z-index:1;position:absolute}.lux-datepicker-panel .mat-calendar-header button .mat-button-focus-overlay,lux-datepicker mat-datepicker-toggle .mat-button-focus-overlay{display:none}.lux-datepicker-panel .mat-calendar-header button:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-datepicker-panel .mat-calendar-header button:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}.lux-datepicker-panel .mat-calendar-content td.mat-calendar-body-cell:hover>div{background-color:rgba(0,0,0,.2)!important;border-radius:999px}.lux-datepicker-panel .mat-calendar-content td.mat-calendar-body-cell.mat-calendar-body-active>div{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:999px}lux-table tr:hover>td,lux-table tr:hover>th{border-radius:0;background-color:#cfcfcf!important}lux-table th button.mat-sort-header-button:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-select-panel mat-option{border-left:0;box-sizing:border-box}.lux-select-panel mat-option.mat-selected{background-color:rgba(112,141,170,.2)!important;position:relative;border-radius:4px}.lux-select-panel mat-option.mat-selected:after{content:'';left:0;width:6px;top:0;bottom:0;position:absolute;border-left:6px solid #0073b3;border-radius:4px 0 0 4px}.lux-select-panel mat-option:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-select-panel mat-option.mat-active,.lux-select-panel mat-option:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-button button:not([disabled]) .mat-button-focus-overlay{display:none}lux-button button:not([disabled]):not(.mat-fab):not(.mat-raised-button):focus{background-color:rgba(112,141,170,.2)!important}lux-button button:not([disabled]):not(.mat-fab):not(.mat-raised-button):hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-button button:not([disabled]).mat-fab:focus,lux-button button:not([disabled]).mat-raised-button:focus{background-color:rgba(112,141,170,.2)!important}lux-button button:not([disabled]).mat-fab:focus.mat-accent,lux-button button:not([disabled]).mat-raised-button:focus.mat-accent{background-color:#b6d184!important}lux-button button:not([disabled]).mat-fab:focus.mat-warn,lux-button button:not([disabled]).mat-raised-button:focus.mat-warn{background-color:#ea2524!important}lux-button button:not([disabled]).mat-fab:focus.mat-primary,lux-button button:not([disabled]).mat-raised-button:focus.mat-primary{background-color:#4b82ba!important}.lux-autocomplete-panel mat-option{border-left:0;box-sizing:border-box}.lux-autocomplete-panel mat-option:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-autocomplete-panel mat-option.mat-active,.lux-autocomplete-panel mat-option:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-tabs mat-ink-bar{background-color:#0073b3!important}lux-tabs .mat-tab-label:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}lux-panel mat-expansion-panel-header:hover,lux-stepper mat-step-header:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-panel mat-expansion-panel-header:focus,lux-stepper mat-step-header:focus,lux-stepper mat-step-header[aria-selected=true],lux-tile mat-card:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}lux-master-detail lux-master-header .lux-master-header-collapse button.lux-button:not(.mat-fab):not(.mat-raised-button):focus{background-color:rgba(0,0,0,.2)!important}lux-file-list .lux-file-list{border:4px solid transparent}lux-file-list .lux-file-list:focus{outline-width:0;border:4px solid rgba(112,141,170,.2)!important}lux-file-list .lux-file-list .lux-file-list-entry{border:4px solid transparent}lux-file-list .lux-file-list .lux-file-list-entry:focus{outline-width:0;border:4px solid rgba(112,141,170,.2)!important}lux-file-list .lux-file-list mat-card{margin:4px}.lux-menu-panel .lux-menu-item:not([disabled=true]):focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-menu-panel .lux-menu-item:not([disabled=true]):hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-dialog-structure lux-dialog-content:focus,lux-dialog-structure lux-dialog-title:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}example-root .example-base-components-list .example-component-list-item,example-root .example-base-components-list mat-expansion-panel-header{box-sizing:border-box}example-root .example-base-components-list .example-component-list-item.example-component-list-item-selected,example-root .example-base-components-list mat-expansion-panel-header.example-component-list-item-selected{background-color:rgba(112,141,170,.2)!important;position:relative;border-radius:4px}example-root .example-base-components-list .example-component-list-item.example-component-list-item-selected:after,example-root .example-base-components-list mat-expansion-panel-header.example-component-list-item-selected:after{content:'';left:0;width:6px;top:0;bottom:0;position:absolute;border-left:6px solid #0073b3;border-radius:4px 0 0 4px}example-root .example-base-components-list .example-component-list-item:focus,example-root .example-base-components-list mat-expansion-panel-header:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}example-root .example-base-components-list .example-component-list-item:hover,example-root .example-base-components-list mat-expansion-panel-header:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}.lux-app-container,body,html{height:100%}.lux-app-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex}body{-webkit-overflow-scrolling:touch}div{font-family:Roboto,Helvetica Neue,sans-serif}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing.lux-file-preview-backdrop{background:#000;opacity:.8!important}lux-card.lux-card-grow{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;width:400px;min-width:0}lux-card.lux-card-grow mat-card,lux-card.lux-card-grow mat-card-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;min-width:0}.lux-crop{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.lux-label{color:rgba(0,0,0,.54);font-size:75%}.lux-hint{color:rgba(0,0,0,.6);font-size:12px}.lux-display-none{display:none}.lux-hidden{visibility:hidden}.lux-nowrap{white-space:nowrap}.lux-cursor{cursor:pointer}.lux-block-pointer-events{pointer-events:none}.lux-vertical-align-baseline{vertical-align:baseline!important}.lux-black-semi-transparent{color:rgba(0,0,0,.87)}.lux-semi-transparent{opacity:.6}.lux-overflow-y-hidden{overflow-y:hidden}.lux-overflow-y-auto{overflow-y:auto}.lux-overflow-wrap-break-word{overflow-wrap:break-word}.lux-bold{font-weight:700!important}.lux-uppercase{text-transform:uppercase!important}.lux-lowercase{text-transform:lowercase!important}.lux-hyphenate{overflow-wrap:break-word;word-wrap:break-word;word-break:normal;-webkit-hyphens:auto;-ms-hyphens:auto;hyphens:auto;overflow-x:auto}.lux-p-footer,.lux-p-header{padding:8px}.lux-snackbar{top:68px;right:8px;position:absolute;margin:0!important;min-width:unset!important;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-snack-bar-handset .lux-snackbar{left:8px;width:auto!important}.lux-mt-0{margin-top:0}.lux-pt-0{padding-top:0}.lux-mt-1{margin-top:2px}.lux-pt-1{padding-top:2px}.lux-mt-2{margin-top:4px}.lux-pt-2{padding-top:4px}.lux-mt-3{margin-top:8px}.lux-pt-3{padding-top:8px}.lux-mt-4{margin-top:16px}.lux-pt-4{padding-top:16px}.lux-mb-0{margin-bottom:0}.lux-pb-0{padding-bottom:0}.lux-mb-1{margin-bottom:2px}.lux-pb-1{padding-bottom:2px}.lux-mb-2{margin-bottom:4px}.lux-pb-2{padding-bottom:4px}.lux-mb-3{margin-bottom:8px}.lux-pb-3{padding-bottom:8px}.lux-mb-4{margin-bottom:16px}.lux-pb-4{padding-bottom:16px}.lux-ml-0{margin-left:0}.lux-pl-0{padding-left:0}.lux-ml-1{margin-left:2px}.lux-pl-1{padding-left:2px}.lux-ml-2{margin-left:4px}.lux-pl-2{padding-left:4px}.lux-ml-3{margin-left:8px}.lux-pl-3{padding-left:8px}.lux-ml-4{margin-left:16px}.lux-pl-4{padding-left:16px}.lux-m-0{margin:0}.lux-mr-0{margin-right:0}.lux-p-0{padding:0}.lux-pr-0{padding-right:0}.lux-m-1{margin:2px}.lux-mr-1{margin-right:2px}.lux-p-1{padding:2px}.lux-pr-1{padding-right:2px}.lux-m-2{margin:4px}.lux-mr-2{margin-right:4px}.lux-p-2{padding:4px}.lux-pr-2{padding-right:4px}.lux-m-3{margin:8px}.lux-mr-3{margin-right:8px}.lux-p-3{padding:8px}.lux-pr-3{padding-right:8px}.lux-m-4{margin:16px}.lux-mr-4{margin-right:16px}.lux-p-4{padding:16px}.lux-pr-4{padding-right:16px}.lux-flex-layout-gap-10[style*=row]>:not(:last-child){margin-right:10px}.lux-flex-layout-gap-10[style*=column]>:not(:last-child){margin-bottom:10px}.lux-flex-layout-gap-20[style*=row]>:not(:last-child){margin-right:20px}.lux-flex-layout-gap-20[style*=column]>:not(:last-child){margin-bottom:20px}.lux-flex-layout-gap-30[style*=row]>:not(:last-child){margin-right:30px}.lux-flex-layout-gap-30[style*=column]>:not(:last-child){margin-bottom:30px}.lux-z-index-100{z-index:100}.lux-z-index-500{z-index:500}.lux-z-index-1000{z-index:1000}.lux-uppercase>lux-button .lux-button-label,lux-button.lux-uppercase .lux-button-label{text-transform:uppercase}.lux-bg-color-red{background:#b01211}.lux-bg-color-green{background:#95bc4c}.lux-bg-color-yellow{background:#ebc000}.lux-bg-color-blue{background:#335c85}.lux-bg-color-gray{background:#c8c8c8}.lux-bg-color-orange{background:#ec9c1b}.lux-bg-color-brown{background:#783f04}.lux-font-color-black{color:#000}.lux-font-color-white{color:#fff}.lux-badge-notification.mat-badge-large .mat-badge-content{font-size:15px}.lux-badge-notification.lux-badge-color-default .mat-badge-content{color:#000;background:#fff;border:1px solid rgba(0,0,0,.87)}:host{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative}:host.lux-file-highlight *,:host.lux-file-highlight ::ng-deep *{pointer-events:none}:host.lux-file-highlight:after{content:'';position:absolute;top:0;left:0;right:0;bottom:0;border:2px dashed rgba(0,0,0,.38);background:rgba(0,0,0,.12);border-radius:4px;pointer-events:none}:host lux-menu ::ng-deep .lux-menu-extended .lux-menu-trigger,:host lux-menu ::ng-deep .lux-menu-extended>lux-button{margin:0!important}:host lux-menu ::ng-deep i,:host lux-menu ::ng-deep mat-icon{width:auto!important}:host lux-menu ::ng-deep lux-button{cursor:pointer!important;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}:host lux-menu ::ng-deep lux-button ::ng-deep button{padding:0;width:45px;min-width:45px;height:30px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}:host lux-menu ::ng-deep lux-button ::ng-deep button:focus{background:rgba(51,92,133,.1)}.lux-file-download-anchor,.lux-file-input{display:none}.lux-file-list{width:100%;border-radius:4px;position:relative}.lux-file-list lux-icon,.lux-file-list span{color:#bfbfbf}.lux-file-list lux-button ::ng-deep button:not([disabled]) .mat-button-focus-overlay{display:none}.lux-file-list .lux-file-icon-hint mat-hint,.lux-file-list lux-card-actions ::ng-deep{font-size:12px}.lux-file-list ::ng-deep mat-card-title lux-button{cursor:pointer!important;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.lux-file-list ::ng-deep mat-card-title lux-button ::ng-deep button{padding:0;width:45px;min-width:45px;height:30px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.lux-file-list ::ng-deep mat-card-title lux-button ::ng-deep button:focus{background:rgba(51,92,133,.1)}.lux-file-list ::ng-deep mat-card-title>div{min-height:45px}.lux-file-list ::ng-deep mat-card-title .lux-card-title-container{color:#335c85}.lux-file-list .lux-file-list-entries .lux-file-list-entry{min-height:60px}.lux-file-list .lux-file-list-entries .lux-file-list-entry .lux-file-list-entry-label{-ms-word-break:break-all;word-break:break-all}.lux-file-list.lux-file-list-disabled{pointer-events:none}.lux-file-list.lux-file-list-disabled ::ng-deep i,.lux-file-list.lux-file-list-disabled ::ng-deep mat-card-content,.lux-file-list.lux-file-list-disabled ::ng-deep mat-card-title *,.lux-file-list.lux-file-list-disabled ::ng-deep span{color:rgba(0,0,0,.26)}.lux-file-list.lux-file-list-disabled .lux-file-icon-hint span{-webkit-text-decoration-color:rgba(0,0,0,.26)!important;text-decoration-color:rgba(0,0,0,.26)!important}"]
    }),
    tslib_1.__param(0, Optional()),
    tslib_1.__metadata("design:paramtypes", [ControlContainer,
        ChangeDetectorRef,
        LuxConsoleService,
        HttpClient,
        LiveAnnouncer,
        LuxComponentsConfigService])
], LuxFileListComponent);
export { LuxFileListComponent };
//# sourceMappingURL=data:application/json;base64,