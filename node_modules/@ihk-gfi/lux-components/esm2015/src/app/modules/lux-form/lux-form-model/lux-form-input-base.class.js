import * as tslib_1 from "tslib";
import { LuxFormComponentBase } from './lux-form-component-base.class';
import { EventEmitter, Input, Output } from '@angular/core';
/**
 * Basis-Klasse für FormComponents, die einen ähnlichen Grundaufbau für das Eintippen von String-Daten haben
 * (Input und Textarea z.B.).
 */
export class LuxFormInputBaseClass extends LuxFormComponentBase {
    constructor(controlContainer, cdr, logger, config) {
        super(controlContainer, cdr, logger, config);
        this.luxValueChange = new EventEmitter();
        this.luxBlur = new EventEmitter();
        this.luxFocus = new EventEmitter();
        this.luxPlaceholder = '';
        this.luxAutocomplete = 'on';
    }
    get luxValue() {
        return this.getValue();
    }
    set luxValue(value) {
        this.setValue(value);
    }
    // region Overridden methods
    notifyFormValueChanged(formValue) {
        // Aktualisierungen an dem FormControl-Value sollen auch via EventEmitter bekannt gemacht werden
        this.luxValueChange.emit(formValue);
    }
    triggerOutputPatternCheck() {
        this.checkOutputPatternViolation(this.luxValueChange.observers);
    }
    triggerInputPatternCheck(simpleChanges) {
        this.checkInputPatternViolation(simpleChanges.luxValue);
    }
}
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], LuxFormInputBaseClass.prototype, "luxValueChange", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], LuxFormInputBaseClass.prototype, "luxBlur", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], LuxFormInputBaseClass.prototype, "luxFocus", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], LuxFormInputBaseClass.prototype, "luxPlaceholder", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], LuxFormInputBaseClass.prototype, "luxReadonly", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], LuxFormInputBaseClass.prototype, "luxTagId", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], LuxFormInputBaseClass.prototype, "luxAutocomplete", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], LuxFormInputBaseClass.prototype, "luxValue", null);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWZvcm0taW5wdXQtYmFzZS5jbGFzcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BpaGstZ2ZpL2x1eC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsic3JjL2FwcC9tb2R1bGVzL2x1eC1mb3JtL2x1eC1mb3JtLW1vZGVsL2x1eC1mb3JtLWlucHV0LWJhc2UuY2xhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBcUIsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBSzlGOzs7R0FHRztBQUNILE1BQU0sT0FBZ0IscUJBQXNCLFNBQVEsb0JBQW9CO0lBa0J0RSxZQUNFLGdCQUFrQyxFQUNsQyxHQUFzQixFQUN0QixNQUF5QixFQUN6QixNQUFrQztRQUVsQyxLQUFLLENBQUMsZ0JBQWdCLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztRQXZCckMsbUJBQWMsR0FBeUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUMxRCxZQUFPLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFDckQsYUFBUSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO1FBRXZELG1CQUFjLEdBQVcsRUFBRSxDQUFDO1FBRzVCLG9CQUFlLEdBQVcsSUFBSSxDQUFDO0lBaUJ4QyxDQUFDO0lBZkQsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVRLElBQUksUUFBUSxDQUFDLEtBQWE7UUFDakMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBV0QsNEJBQTRCO0lBRTVCLHNCQUFzQixDQUFDLFNBQWM7UUFDbkMsZ0dBQWdHO1FBQ2hHLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFUyx5QkFBeUI7UUFDakMsSUFBSSxDQUFDLDJCQUEyQixDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDbEUsQ0FBQztJQUVTLHdCQUF3QixDQUFDLGFBQTRCO1FBQzdELElBQUksQ0FBQywwQkFBMEIsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDMUQsQ0FBQztDQUdGO0FBMUNXO0lBQVQsTUFBTSxFQUFFO3NDQUFpQixZQUFZOzZEQUE4QjtBQUMxRDtJQUFULE1BQU0sRUFBRTtzQ0FBVSxZQUFZO3NEQUFnQztBQUNyRDtJQUFULE1BQU0sRUFBRTtzQ0FBVyxZQUFZO3VEQUFnQztBQUV2RDtJQUFSLEtBQUssRUFBRTs7NkRBQTZCO0FBQzVCO0lBQVIsS0FBSyxFQUFFOzswREFBc0I7QUFDckI7SUFBUixLQUFLLEVBQUU7O3VEQUFrQjtBQUNqQjtJQUFSLEtBQUssRUFBRTs7OERBQWdDO0FBTS9CO0lBQVIsS0FBSyxFQUFFOzs7cURBRVAiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMdXhGb3JtQ29tcG9uZW50QmFzZSB9IGZyb20gJy4vbHV4LWZvcm0tY29tcG9uZW50LWJhc2UuY2xhc3MnO1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbENvbnRhaW5lciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEx1eENvbnNvbGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vbHV4LXV0aWwvbHV4LWNvbnNvbGUuc2VydmljZSc7XG5pbXBvcnQgeyBMdXhDb21wb25lbnRzQ29uZmlnU2VydmljZSB9IGZyb20gJy4uLy4uL2x1eC1jb21wb25lbnRzLWNvbmZpZy9sdXgtY29tcG9uZW50cy1jb25maWcuc2VydmljZSc7XG5cbi8qKlxuICogQmFzaXMtS2xhc3NlIGbDvHIgRm9ybUNvbXBvbmVudHMsIGRpZSBlaW5lbiDDpGhubGljaGVuIEdydW5kYXVmYmF1IGbDvHIgZGFzIEVpbnRpcHBlbiB2b24gU3RyaW5nLURhdGVuIGhhYmVuXG4gKiAoSW5wdXQgdW5kIFRleHRhcmVhIHouQi4pLlxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgTHV4Rm9ybUlucHV0QmFzZUNsYXNzIGV4dGVuZHMgTHV4Rm9ybUNvbXBvbmVudEJhc2Uge1xuICBAT3V0cHV0KCkgbHV4VmFsdWVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxzdHJpbmc+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgbHV4Qmx1cjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgQE91dHB1dCgpIGx1eEZvY3VzOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIEBJbnB1dCgpIGx1eFBsYWNlaG9sZGVyOiBzdHJpbmcgPSAnJztcbiAgQElucHV0KCkgbHV4UmVhZG9ubHk6IGJvb2xlYW47XG4gIEBJbnB1dCgpIGx1eFRhZ0lkOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGx1eEF1dG9jb21wbGV0ZTogc3RyaW5nID0gJ29uJztcblxuICBnZXQgbHV4VmFsdWUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5nZXRWYWx1ZSgpO1xuICB9XG5cbiAgQElucHV0KCkgc2V0IGx1eFZhbHVlKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLnNldFZhbHVlKHZhbHVlKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBjb25zdHJ1Y3RvcihcbiAgICBjb250cm9sQ29udGFpbmVyOiBDb250cm9sQ29udGFpbmVyLFxuICAgIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgbG9nZ2VyOiBMdXhDb25zb2xlU2VydmljZSxcbiAgICBjb25maWc6IEx1eENvbXBvbmVudHNDb25maWdTZXJ2aWNlXG4gICkge1xuICAgIHN1cGVyKGNvbnRyb2xDb250YWluZXIsIGNkciwgbG9nZ2VyLCBjb25maWcpO1xuICB9XG5cbiAgLy8gcmVnaW9uIE92ZXJyaWRkZW4gbWV0aG9kc1xuXG4gIG5vdGlmeUZvcm1WYWx1ZUNoYW5nZWQoZm9ybVZhbHVlOiBhbnkpIHtcbiAgICAvLyBBa3R1YWxpc2llcnVuZ2VuIGFuIGRlbSBGb3JtQ29udHJvbC1WYWx1ZSBzb2xsZW4gYXVjaCB2aWEgRXZlbnRFbWl0dGVyIGJla2FubnQgZ2VtYWNodCB3ZXJkZW5cbiAgICB0aGlzLmx1eFZhbHVlQ2hhbmdlLmVtaXQoZm9ybVZhbHVlKTtcbiAgfVxuXG4gIHByb3RlY3RlZCB0cmlnZ2VyT3V0cHV0UGF0dGVybkNoZWNrKCkge1xuICAgIHRoaXMuY2hlY2tPdXRwdXRQYXR0ZXJuVmlvbGF0aW9uKHRoaXMubHV4VmFsdWVDaGFuZ2Uub2JzZXJ2ZXJzKTtcbiAgfVxuXG4gIHByb3RlY3RlZCB0cmlnZ2VySW5wdXRQYXR0ZXJuQ2hlY2soc2ltcGxlQ2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIHRoaXMuY2hlY2tJbnB1dFBhdHRlcm5WaW9sYXRpb24oc2ltcGxlQ2hhbmdlcy5sdXhWYWx1ZSk7XG4gIH1cblxuICAvLyBlbmRyZWdpb25cbn1cbiJdfQ==