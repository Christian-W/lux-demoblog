import * as tslib_1 from "tslib";
import { Component, ContentChildren, EventEmitter, Input, Optional, Output, QueryList, ViewChild, ViewChildren } from '@angular/core';
import { ControlContainer } from '@angular/forms';
import { MatAutocomplete, MatAutocompleteTrigger, MatChip } from '@angular/material';
import { LuxChipGroupComponent } from './lux-chips-subcomponents/lux-chip-group.component';
import { LuxChipComponent } from './lux-chips-subcomponents/lux-chip.component';
import { Subject, Subscription } from 'rxjs';
import { distinctUntilChanged, map, startWith } from 'rxjs/operators';
let LuxChipsComponent = class LuxChipsComponent {
    constructor(controlContainer) {
        this.controlContainer = controlContainer;
        this.inputValueSubscription = new Subscription();
        this.newChipSubscription = new Subscription();
        this._luxDisabled = false;
        this._luxAutocompleteOptions = [];
        this._luxLabel = 'Neu';
        this.filteredOptions = [];
        this.inputValue$ = new Subject();
        this.newChip$ = new Subject();
        this.luxOrientation = 'horizontal';
        this.luxInputAllowed = false;
        this.luxMultiple = true;
        this.luxChipAdded = new EventEmitter();
        this.newChipSubscription = this.newChip$.subscribe((value) => {
            this.add(value);
            this.filteredOptions = this.luxAutocompleteOptions ? this.luxAutocompleteOptions : [];
        });
        this.inputValueSubscription = this.inputValue$
            .asObservable()
            .pipe(startWith(''), distinctUntilChanged(), map((value) => {
            if (!value) {
                this.filteredOptions = [...this.luxAutocompleteOptions];
            }
            else {
                this.filteredOptions = this.luxAutocompleteOptions.filter((compareValue) => compareValue
                    .trim()
                    .toLowerCase()
                    .indexOf(value.trim().toLowerCase()) > -1);
            }
        }))
            .subscribe();
    }
    get luxDisabled() {
        return this._luxDisabled;
    }
    set luxDisabled(disabled) {
        this._luxDisabled = disabled;
        setTimeout(() => {
            this.luxChipGroupComponents.forEach(chipGroup => (chipGroup.luxDisabled = disabled));
            this.luxChipComponents.forEach(chip => (chip.luxDisabled = disabled));
        });
    }
    get luxAutocompleteOptions() {
        return this._luxAutocompleteOptions;
    }
    set luxAutocompleteOptions(options) {
        this._luxAutocompleteOptions = options ? options : [];
        this.filteredOptions = this.luxAutocompleteOptions;
    }
    get luxInputLabel() {
        return this._luxLabel;
    }
    set luxInputLabel(label) {
        this._luxLabel = label;
    }
    // Für lux-form-control, diese ruft luxLabel auf
    get luxLabel() {
        return this._luxLabel;
    }
    get chipComponents() {
        return this.luxChipComponents;
    }
    get chipGroupComponents() {
        return this.luxChipGroupComponents;
    }
    ngOnDestroy() {
        if (this.newChipSubscription) {
            this.newChipSubscription.unsubscribe();
        }
        if (this.inputValueSubscription) {
            this.inputValueSubscription.unsubscribe();
        }
    }
    /**
     * Fuegt einen Chip hinzu.
     * Fuegt ihn entweder der explizit mitgeteilten newChipList hinzu oder einfach
     * der letzten mitgegebenen Liste.
     * @param value
     */
    add(value) {
        if (value && value.trim().length > 0) {
            if (this.luxNewChipGroup) {
                this.luxNewChipGroup.add(value);
            }
            else {
                this.luxChipAdded.emit(value);
            }
            // Autocomplete-Feld in jedem Fall schließen (Delay über Timeout, damit kein visuelles Flackern entsteht)
            setTimeout(() => this.matAutocompleteTrigger.closePanel());
        }
    }
    /**
     * Wird bei Eingabe von Werten in das Input-Feld aufgerufen und schreibt einen neuen Wert
     * in das inputValue-Subject.
     * @param value
     */
    inputChanged(value) {
        this.inputValue$.next(value);
    }
    /**
     * Wird beim Selektieren einer Option im Autocomplete ausgeführt.
     * @param input
     * @param value
     */
    autoCompleteAdd(input, value) {
        this.newChip$.next(value);
        input.value = '';
    }
    /**
     * Wird beim Input-Event des Eingabefelds ausgeführt, fragt aber vorher ab, ob das Autocomplete offen ist.
     * Wenn ja, wird kein neuer Chip erzeugt, da das Autocomplete dies übernimmt.
     * @param input
     */
    inputAdd(input) {
        if (!this.matAutocomplete.isOpen) {
            // falls nur eine Option übrig ist, diese als value nehmen anstelle des input textes
            if (this.luxAutocompleteOptions &&
                this.luxAutocompleteOptions.length > 1 &&
                this.filteredOptions &&
                this.filteredOptions.length === 1) {
                this.newChip$.next(this.filteredOptions[0]);
                input.value = '';
            }
            else {
                this.newChip$.next(input.value);
                input.value = '';
            }
        }
    }
};
LuxChipsComponent.ctorParameters = () => [
    { type: ControlContainer, decorators: [{ type: Optional }] }
];
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], LuxChipsComponent.prototype, "luxOrientation", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], LuxChipsComponent.prototype, "luxInputAllowed", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", LuxChipGroupComponent)
], LuxChipsComponent.prototype, "luxNewChipGroup", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], LuxChipsComponent.prototype, "luxMultiple", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", Object)
], LuxChipsComponent.prototype, "luxChipAdded", void 0);
tslib_1.__decorate([
    ContentChildren(LuxChipComponent),
    tslib_1.__metadata("design:type", QueryList)
], LuxChipsComponent.prototype, "luxChipComponents", void 0);
tslib_1.__decorate([
    ContentChildren(LuxChipGroupComponent),
    tslib_1.__metadata("design:type", QueryList)
], LuxChipsComponent.prototype, "luxChipGroupComponents", void 0);
tslib_1.__decorate([
    ViewChildren(MatChip),
    tslib_1.__metadata("design:type", QueryList)
], LuxChipsComponent.prototype, "matChips", void 0);
tslib_1.__decorate([
    ViewChild('input', { read: MatAutocompleteTrigger, static: false }),
    tslib_1.__metadata("design:type", MatAutocompleteTrigger)
], LuxChipsComponent.prototype, "matAutocompleteTrigger", void 0);
tslib_1.__decorate([
    ViewChild('auto', { read: MatAutocomplete, static: false }),
    tslib_1.__metadata("design:type", MatAutocomplete)
], LuxChipsComponent.prototype, "matAutocomplete", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], LuxChipsComponent.prototype, "luxDisabled", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Array),
    tslib_1.__metadata("design:paramtypes", [Array])
], LuxChipsComponent.prototype, "luxAutocompleteOptions", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], LuxChipsComponent.prototype, "luxInputLabel", null);
LuxChipsComponent = tslib_1.__decorate([
    Component({
        selector: 'lux-chips',
        template: "<div class=\"lux-chips\" fxLayout=\"column\">\n  <lux-form-control\n    [luxScalableHeight]=\"true\"\n    [luxFormComponent]=\"this\"\n    [luxHideBottomBorder]=\"!luxInputAllowed\"\n    [luxIgnoreDefaultLabel]=\"!luxInputAllowed\"\n  >\n    <mat-chip-list\n      [ngClass]=\"[\n        luxOrientation.toLocaleLowerCase() === 'vertical' ? 'mat-chip-list-stacked' : 'mat-chip-list-horizontal',\n        luxOrientation === 'horizontal' && luxInputAllowed ? 'lux-chips-list-offset' : 'lux-chips-list'\n      ]\"\n      [disabled]=\"luxDisabled\"\n      [aria-orientation]=\"luxOrientation\"\n      [multiple]=\"luxMultiple\"\n      #chips\n    >\n      <!-- Direkte Chip-Components -->\n      <ng-container *ngFor=\"let chip of chipComponents; let i = index\">\n        <mat-chip\n          [removable]=\"chip.luxRemovable\"\n          [disabled]=\"chip.luxDisabled\"\n          [selectable]=\"!chip.luxDisabled\"\n          [selected]=\"chip.luxSelected\"\n          [color]=\"chip.luxColor\"\n          (keydown.delete)=\"chip.remove(i)\"\n          (selectionChange)=\"chip.select($event.selected, i)\"\n          (click)=\"chip.click(i)\"\n        >\n          <ng-template *ngTemplateOutlet=\"chip.templateRef\"></ng-template>\n          <lux-icon\n            matChipRemove\n            luxIconName=\"cancel\"\n            luxMargin=\"0 0 0 6px\"\n            luxPadding=\"2px\"\n            class=\"lux-cursor\"\n            (click)=\"chip.remove(i)\"\n            *ngIf=\"chip.luxRemovable\"\n          ></lux-icon>\n        </mat-chip>\n      </ng-container>\n\n      <!-- Chips via ChipGroup-Components -->\n      <ng-container *ngFor=\"let chipGroup of chipGroupComponents\">\n        <ng-container *ngFor=\"let label of chipGroup.luxLabels; let i = index\">\n          <mat-chip\n            [removable]=\"chipGroup.luxRemovable\"\n            [disabled]=\"chipGroup.luxDisabled\"\n            [selectable]=\"!chipGroup.luxDisabled\"\n            [selected]=\"chipGroup.luxSelected\"\n            [color]=\"chipGroup.luxColor\"\n            (keydown.delete)=\"chipGroup.remove(i)\"\n            (selectionChange)=\"chipGroup.select($event.selected, i)\"\n            (click)=\"chipGroup.click(i)\"\n          >\n            <ng-container\n              *ngTemplateOutlet=\"chipGroup.tempRef ? chipGroup.tempRef : noTemplateRef; context: { $implicit: label }\"\n            ></ng-container>\n            <lux-icon\n              matChipRemove\n              luxIconName=\"cancel\"\n              luxMargin=\"0 0 0 6px\"\n              luxPadding=\"2px\"\n              class=\"lux-cursor\"\n              (click)=\"chipGroup.remove(i)\"\n              *ngIf=\"chipGroup.luxRemovable\"\n            ></lux-icon>\n          </mat-chip>\n        </ng-container>\n      </ng-container>\n\n      <ng-container *ngIf=\"luxInputAllowed\">\n        <input\n          [matChipInputFor]=\"chips\"\n          [matChipInputAddOnBlur]=\"true\"\n          [matAutocomplete]=\"auto\"\n          [disabled]=\"luxDisabled\"\n          (matChipInputTokenEnd)=\"inputAdd(input)\"\n          (keyup)=\"inputChanged(input.value)\"\n          type=\"text\"\n          fxFlex=\"1 1 auto\"\n          #input\n        />\n        <mat-autocomplete\n          [class]=\"'lux-autocomplete-panel'\"\n          (optionSelected)=\"autoCompleteAdd(input, $event.option.value)\"\n          #auto=\"matAutocomplete\"\n        >\n          <mat-option *ngFor=\"let option of filteredOptions\" [value]=\"option\">\n            {{ option }}\n          </mat-option>\n        </mat-autocomplete>\n      </ng-container>\n    </mat-chip-list>\n  </lux-form-control>\n</div>\n\n<ng-template #noTemplateRef let-label>\n  {{ label }}\n</ng-template>\n",
        styles: ["@charset \"UTF-8\";lux-side-nav .lux-side-nav-item,lux-side-nav lux-link{box-sizing:border-box}lux-side-nav .lux-side-nav-item.lux-side-nav-item-selected,lux-side-nav lux-link.lux-side-nav-item-selected{background-color:rgba(112,141,170,.2)!important;position:relative;border-radius:4px}lux-side-nav .lux-side-nav-item.lux-side-nav-item-selected:after,lux-side-nav lux-link.lux-side-nav-item-selected:after{content:'';left:0;width:6px;top:0;bottom:0;position:absolute;border-left:6px solid #0073b3;border-radius:4px 0 0 4px}lux-side-nav .lux-side-nav-item button .mat-button-focus-overlay,lux-side-nav lux-link button .mat-button-focus-overlay{display:none}lux-side-nav .lux-side-nav-item button:focus,lux-side-nav lux-link button:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}lux-side-nav .lux-side-nav-item button:hover,lux-side-nav lux-link button:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-list{border:4px solid transparent}lux-list:focus{outline-width:0;border:4px solid rgba(112,141,170,.2)!important}lux-list lux-list-item:focus{outline-width:0}lux-list lux-list-item:focus mat-card{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}lux-list lux-list-item lux-card.lux-list-item-selected mat-card{background-color:rgba(112,141,170,.2)!important;position:relative;border-radius:4px}lux-list lux-list-item lux-card.lux-list-item-selected mat-card:after{content:'';left:0;width:6px;top:0;bottom:0;position:absolute;border-left:6px solid #0073b3;border-radius:4px 0 0 4px}lux-list lux-list-item lux-card mat-card{box-sizing:border-box}lux-list lux-list-item lux-card mat-card:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .lux-form-control-label>*{color:#335c85}lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .cdk-focused .mat-radio-container,lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .mat-checkbox-inner-container,lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .mat-slide-toggle-thumb{position:relative}lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .cdk-focused .mat-radio-container:after,lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .mat-checkbox-inner-container:after,lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .mat-slide-toggle-thumb:after{content:\"\";border:1px solid rgba(112,141,170,.2);background-color:rgba(112,141,170,.2);display:block;top:-4px;left:-4px;right:-4px;bottom:-4px;border-radius:15px;z-index:1;position:absolute}lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .lux-form-control-container:after{content:'';display:block;box-sizing:border-box;left:0;right:0;position:absolute;height:2px;border-bottom:2px solid #0073b3}lux-datepicker mat-datepicker-toggle button:focus:after{content:\"\";border:1px solid rgba(112,141,170,.2);background-color:rgba(112,141,170,.2);display:block;top:-4px;left:-4px;right:-4px;bottom:-4px;border-radius:15px;z-index:1;position:absolute}.lux-datepicker-panel .mat-calendar-header button .mat-button-focus-overlay,lux-datepicker mat-datepicker-toggle .mat-button-focus-overlay{display:none}.lux-datepicker-panel .mat-calendar-header button:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-datepicker-panel .mat-calendar-header button:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}.lux-datepicker-panel .mat-calendar-content td.mat-calendar-body-cell:hover>div{background-color:rgba(0,0,0,.2)!important;border-radius:999px}.lux-datepicker-panel .mat-calendar-content td.mat-calendar-body-cell.mat-calendar-body-active>div{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:999px}lux-table tr:hover>td,lux-table tr:hover>th{border-radius:0;background-color:#cfcfcf!important}lux-table th button.mat-sort-header-button:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-select-panel mat-option{border-left:0;box-sizing:border-box}.lux-select-panel mat-option.mat-selected{background-color:rgba(112,141,170,.2)!important;position:relative;border-radius:4px}.lux-select-panel mat-option.mat-selected:after{content:'';left:0;width:6px;top:0;bottom:0;position:absolute;border-left:6px solid #0073b3;border-radius:4px 0 0 4px}.lux-select-panel mat-option:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-select-panel mat-option.mat-active,.lux-select-panel mat-option:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-button button:not([disabled]) .mat-button-focus-overlay{display:none}lux-button button:not([disabled]):not(.mat-fab):not(.mat-raised-button):focus{background-color:rgba(112,141,170,.2)!important}lux-button button:not([disabled]):not(.mat-fab):not(.mat-raised-button):hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-button button:not([disabled]).mat-fab:focus,lux-button button:not([disabled]).mat-raised-button:focus{background-color:rgba(112,141,170,.2)!important}lux-button button:not([disabled]).mat-fab:focus.mat-accent,lux-button button:not([disabled]).mat-raised-button:focus.mat-accent{background-color:#b6d184!important}lux-button button:not([disabled]).mat-fab:focus.mat-warn,lux-button button:not([disabled]).mat-raised-button:focus.mat-warn{background-color:#ea2524!important}lux-button button:not([disabled]).mat-fab:focus.mat-primary,lux-button button:not([disabled]).mat-raised-button:focus.mat-primary{background-color:#4b82ba!important}.lux-autocomplete-panel mat-option{border-left:0;box-sizing:border-box}.lux-autocomplete-panel mat-option:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-autocomplete-panel mat-option.mat-active,.lux-autocomplete-panel mat-option:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-tabs mat-ink-bar{background-color:#0073b3!important}lux-tabs .mat-tab-label:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}lux-panel mat-expansion-panel-header:hover,lux-stepper mat-step-header:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-panel mat-expansion-panel-header:focus,lux-stepper mat-step-header:focus,lux-stepper mat-step-header[aria-selected=true],lux-tile mat-card:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}lux-master-detail lux-master-header .lux-master-header-collapse button.lux-button:not(.mat-fab):not(.mat-raised-button):focus{background-color:rgba(0,0,0,.2)!important}lux-file-list .lux-file-list{border:4px solid transparent}lux-file-list .lux-file-list:focus{outline-width:0;border:4px solid rgba(112,141,170,.2)!important}lux-file-list .lux-file-list .lux-file-list-entry{border:4px solid transparent}lux-file-list .lux-file-list .lux-file-list-entry:focus{outline-width:0;border:4px solid rgba(112,141,170,.2)!important}lux-file-list .lux-file-list mat-card{margin:4px}.lux-menu-panel .lux-menu-item:not([disabled=true]):focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-menu-panel .lux-menu-item:not([disabled=true]):hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-dialog-structure lux-dialog-content:focus,lux-dialog-structure lux-dialog-title:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}example-root .example-base-components-list .example-component-list-item,example-root .example-base-components-list mat-expansion-panel-header{box-sizing:border-box}example-root .example-base-components-list .example-component-list-item.example-component-list-item-selected,example-root .example-base-components-list mat-expansion-panel-header.example-component-list-item-selected{background-color:rgba(112,141,170,.2)!important;position:relative;border-radius:4px}example-root .example-base-components-list .example-component-list-item.example-component-list-item-selected:after,example-root .example-base-components-list mat-expansion-panel-header.example-component-list-item-selected:after{content:'';left:0;width:6px;top:0;bottom:0;position:absolute;border-left:6px solid #0073b3;border-radius:4px 0 0 4px}example-root .example-base-components-list .example-component-list-item:focus,example-root .example-base-components-list mat-expansion-panel-header:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}example-root .example-base-components-list .example-component-list-item:hover,example-root .example-base-components-list mat-expansion-panel-header:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}.lux-app-container,body,html{height:100%}.lux-app-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex}body{-webkit-overflow-scrolling:touch}div{font-family:Roboto,Helvetica Neue,sans-serif}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing.lux-file-preview-backdrop{background:#000;opacity:.8!important}lux-card.lux-card-grow{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;width:400px;min-width:0}lux-card.lux-card-grow mat-card,lux-card.lux-card-grow mat-card-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;min-width:0}.lux-crop{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.lux-label{color:rgba(0,0,0,.54);font-size:75%}.lux-hint{color:rgba(0,0,0,.6);font-size:12px}.lux-display-none{display:none}.lux-hidden{visibility:hidden}.lux-nowrap{white-space:nowrap}.lux-cursor{cursor:pointer}.lux-block-pointer-events{pointer-events:none}.lux-vertical-align-baseline{vertical-align:baseline!important}.lux-black-semi-transparent{color:rgba(0,0,0,.87)}.lux-semi-transparent{opacity:.6}.lux-overflow-y-hidden{overflow-y:hidden}.lux-overflow-y-auto{overflow-y:auto}.lux-overflow-wrap-break-word{overflow-wrap:break-word}.lux-bold{font-weight:700!important}.lux-uppercase{text-transform:uppercase!important}.lux-lowercase{text-transform:lowercase!important}.lux-hyphenate{overflow-wrap:break-word;word-wrap:break-word;word-break:normal;-webkit-hyphens:auto;-ms-hyphens:auto;hyphens:auto;overflow-x:auto}.lux-p-footer,.lux-p-header{padding:8px}.lux-snackbar{top:68px;right:8px;position:absolute;margin:0!important;min-width:unset!important;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-snack-bar-handset .lux-snackbar{left:8px;width:auto!important}.lux-mt-0{margin-top:0}.lux-pt-0{padding-top:0}.lux-mt-1{margin-top:2px}.lux-pt-1{padding-top:2px}.lux-mt-2{margin-top:4px}.lux-pt-2{padding-top:4px}.lux-mt-3{margin-top:8px}.lux-pt-3{padding-top:8px}.lux-mt-4{margin-top:16px}.lux-pt-4{padding-top:16px}.lux-mb-0{margin-bottom:0}.lux-pb-0{padding-bottom:0}.lux-mb-1{margin-bottom:2px}.lux-pb-1{padding-bottom:2px}.lux-mb-2{margin-bottom:4px}.lux-pb-2{padding-bottom:4px}.lux-mb-3{margin-bottom:8px}.lux-pb-3{padding-bottom:8px}.lux-mb-4{margin-bottom:16px}.lux-pb-4{padding-bottom:16px}.lux-ml-0{margin-left:0}.lux-pl-0{padding-left:0}.lux-ml-1{margin-left:2px}.lux-pl-1{padding-left:2px}.lux-ml-2{margin-left:4px}.lux-pl-2{padding-left:4px}.lux-ml-3{margin-left:8px}.lux-pl-3{padding-left:8px}.lux-ml-4{margin-left:16px}.lux-pl-4{padding-left:16px}.lux-m-0{margin:0}.lux-mr-0{margin-right:0}.lux-p-0{padding:0}.lux-pr-0{padding-right:0}.lux-m-1{margin:2px}.lux-mr-1{margin-right:2px}.lux-p-1{padding:2px}.lux-pr-1{padding-right:2px}.lux-m-2{margin:4px}.lux-mr-2{margin-right:4px}.lux-p-2{padding:4px}.lux-pr-2{padding-right:4px}.lux-m-3{margin:8px}.lux-mr-3{margin-right:8px}.lux-p-3{padding:8px}.lux-pr-3{padding-right:8px}.lux-m-4{margin:16px}.lux-mr-4{margin-right:16px}.lux-p-4{padding:16px}.lux-pr-4{padding-right:16px}.lux-flex-layout-gap-10[style*=row]>:not(:last-child){margin-right:10px}.lux-flex-layout-gap-10[style*=column]>:not(:last-child){margin-bottom:10px}.lux-flex-layout-gap-20[style*=row]>:not(:last-child){margin-right:20px}.lux-flex-layout-gap-20[style*=column]>:not(:last-child){margin-bottom:20px}.lux-flex-layout-gap-30[style*=row]>:not(:last-child){margin-right:30px}.lux-flex-layout-gap-30[style*=column]>:not(:last-child){margin-bottom:30px}.lux-z-index-100{z-index:100}.lux-z-index-500{z-index:500}.lux-z-index-1000{z-index:1000}.lux-uppercase>lux-button .lux-button-label,lux-button.lux-uppercase .lux-button-label{text-transform:uppercase}.lux-bg-color-red{background:#b01211}.lux-bg-color-green{background:#95bc4c}.lux-bg-color-yellow{background:#ebc000}.lux-bg-color-blue{background:#335c85}.lux-bg-color-gray{background:#c8c8c8}.lux-bg-color-orange{background:#ec9c1b}.lux-bg-color-brown{background:#783f04}.lux-font-color-black{color:#000}.lux-font-color-white{color:#fff}.lux-badge-notification.mat-badge-large .mat-badge-content{font-size:15px}.lux-badge-notification.lux-badge-color-default .mat-badge-content{color:#000;background:#fff;border:1px solid rgba(0,0,0,.87)}mat-chip-list{display:block}.mat-chip-list-stacked{display:-webkit-box;display:-ms-flexbox;display:flex}.mat-chip-list-stacked ::ng-deep mat-chip{width:auto!important}.mat-chip-list-stacked ::ng-deep .mat-chip-input{-webkit-box-flex:unset;-ms-flex:unset;flex:unset}.mat-chip-list-stacked ::ng-deep .mat-chip-list-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical!important;-webkit-box-direction:normal!important;-ms-flex-direction:column!important;flex-direction:column!important;width:100%}.lux-chips input{margin-bottom:10px;width:auto}.lux-chips mat-chip.mat-chip-disabled{background-color:rgba(0,0,0,.38)!important;color:#fff!important;pointer-events:none}.lux-chips mat-chip.mat-chip-disabled lux-icon ::ng-deep i,.lux-chips mat-chip.mat-chip-disabled lux-icon ::ng-deep mat-icon{color:#fff}.lux-chips .lux-chips-list-offset mat-chip{margin-bottom:10px}"]
    }),
    tslib_1.__param(0, Optional()),
    tslib_1.__metadata("design:paramtypes", [ControlContainer])
], LuxChipsComponent);
export { LuxChipsComponent };
//# sourceMappingURL=data:application/json;base64,