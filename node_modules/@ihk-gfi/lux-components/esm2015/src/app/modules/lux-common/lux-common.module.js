import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { LuxFormModule } from '../lux-form/lux-form.module';
import { MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule, MatSortModule, MatTableModule } from '@angular/material';
import { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';
import { LuxSpinnerComponent } from './lux-spinner/lux-spinner.component';
import { LuxLabelComponent } from './lux-label/lux-label.component';
import { LuxBadgeComponent } from './lux-badge/lux-badge.component';
import { LuxProgressComponent } from './lux-progress/lux-progress.component';
import { LuxTableComponent } from './lux-table/lux-table.component';
import { LuxTableColumnFooterComponent } from './lux-table/lux-table-subcomponents/lux-table-column-footer.component';
import { LuxTableColumnComponent } from './lux-table/lux-table-subcomponents/lux-table-column.component';
import { LuxMessageBoxComponent } from './lux-message-box/lux-message-box.component';
import { LuxMessageComponent } from './lux-message-box/lux-message-box-subcomponents/lux-message.component';
import { LuxTableColumnHeaderComponent } from './lux-table/lux-table-subcomponents/lux-table-column-header.component';
import { LuxTableColumnContentComponent } from './lux-table/lux-table-subcomponents/lux-table-column-content.component';
import { LuxMediaQueryObserverService } from '../lux-util/lux-media-query-observer.service';
import { FlexLayoutModule } from '@angular/flex-layout';
import { LuxActionModule } from '../lux-action/lux-action.module';
import { LuxIconModule } from '../lux-icon/lux-icon.module';
import { LuxDirectivesModule } from '../lux-directives/lux-directives.module';
let LuxCommonModule = class LuxCommonModule {
};
LuxCommonModule = tslib_1.__decorate([
    NgModule({
        imports: [
            CommonModule,
            FlexLayoutModule,
            MatProgressSpinnerModule,
            MatProgressBarModule,
            MatTableModule,
            MatPaginatorModule,
            MatSortModule,
            LuxFormModule,
            LuxActionModule,
            LuxIconModule,
            LuxDirectivesModule,
            LuxComponentsConfigModule
        ],
        declarations: [
            LuxSpinnerComponent,
            LuxLabelComponent,
            LuxBadgeComponent,
            LuxProgressComponent,
            LuxTableComponent,
            LuxTableColumnFooterComponent,
            LuxTableColumnComponent,
            LuxTableColumnHeaderComponent,
            LuxTableColumnContentComponent,
            LuxMessageBoxComponent,
            LuxMessageComponent
        ],
        providers: [LuxMediaQueryObserverService],
        exports: [
            LuxSpinnerComponent,
            LuxLabelComponent,
            LuxBadgeComponent,
            LuxProgressComponent,
            LuxTableComponent,
            LuxTableColumnFooterComponent,
            LuxTableColumnComponent,
            LuxTableColumnHeaderComponent,
            LuxTableColumnContentComponent,
            LuxMessageBoxComponent,
            LuxMessageComponent
        ]
    })
], LuxCommonModule);
export { LuxCommonModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWNvbW1vbi5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaWhrLWdmaS9sdXgtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sdXgtY29tbW9uL2x1eC1jb21tb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDNUQsT0FBTyxFQUNMLGtCQUFrQixFQUNsQixvQkFBb0IsRUFDcEIsd0JBQXdCLEVBQ3hCLGFBQWEsRUFDYixjQUFjLEVBQ2YsTUFBTSxtQkFBbUIsQ0FBQztBQUMzQixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUNsRyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUMxRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNwRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNwRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNwRSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSx1RUFBdUUsQ0FBQztBQUN0SCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxnRUFBZ0UsQ0FBQztBQUN6RyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUNyRixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx1RUFBdUUsQ0FBQztBQUM1RyxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSx1RUFBdUUsQ0FBQztBQUN0SCxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSx3RUFBd0UsQ0FBQztBQUN4SCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUM1RixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDbEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzVELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBNkM5RSxJQUFhLGVBQWUsR0FBNUIsTUFBYSxlQUFlO0NBQUcsQ0FBQTtBQUFsQixlQUFlO0lBM0MzQixRQUFRLENBQUM7UUFDUixPQUFPLEVBQUU7WUFDUCxZQUFZO1lBQ1osZ0JBQWdCO1lBQ2hCLHdCQUF3QjtZQUN4QixvQkFBb0I7WUFDcEIsY0FBYztZQUNkLGtCQUFrQjtZQUNsQixhQUFhO1lBQ2IsYUFBYTtZQUNiLGVBQWU7WUFDZixhQUFhO1lBQ2IsbUJBQW1CO1lBQ25CLHlCQUF5QjtTQUMxQjtRQUNELFlBQVksRUFBRTtZQUNaLG1CQUFtQjtZQUNuQixpQkFBaUI7WUFDakIsaUJBQWlCO1lBQ2pCLG9CQUFvQjtZQUNwQixpQkFBaUI7WUFDakIsNkJBQTZCO1lBQzdCLHVCQUF1QjtZQUN2Qiw2QkFBNkI7WUFDN0IsOEJBQThCO1lBQzlCLHNCQUFzQjtZQUN0QixtQkFBbUI7U0FDcEI7UUFDRCxTQUFTLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQztRQUN6QyxPQUFPLEVBQUU7WUFDUCxtQkFBbUI7WUFDbkIsaUJBQWlCO1lBQ2pCLGlCQUFpQjtZQUNqQixvQkFBb0I7WUFDcEIsaUJBQWlCO1lBQ2pCLDZCQUE2QjtZQUM3Qix1QkFBdUI7WUFDdkIsNkJBQTZCO1lBQzdCLDhCQUE4QjtZQUM5QixzQkFBc0I7WUFDdEIsbUJBQW1CO1NBQ3BCO0tBQ0YsQ0FBQztHQUNXLGVBQWUsQ0FBRztTQUFsQixlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBMdXhGb3JtTW9kdWxlIH0gZnJvbSAnLi4vbHV4LWZvcm0vbHV4LWZvcm0ubW9kdWxlJztcbmltcG9ydCB7XG4gIE1hdFBhZ2luYXRvck1vZHVsZSxcbiAgTWF0UHJvZ3Jlc3NCYXJNb2R1bGUsXG4gIE1hdFByb2dyZXNzU3Bpbm5lck1vZHVsZSxcbiAgTWF0U29ydE1vZHVsZSxcbiAgTWF0VGFibGVNb2R1bGVcbn0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuaW1wb3J0IHsgTHV4Q29tcG9uZW50c0NvbmZpZ01vZHVsZSB9IGZyb20gJy4uL2x1eC1jb21wb25lbnRzLWNvbmZpZy9sdXgtY29tcG9uZW50cy1jb25maWcubW9kdWxlJztcbmltcG9ydCB7IEx1eFNwaW5uZXJDb21wb25lbnQgfSBmcm9tICcuL2x1eC1zcGlubmVyL2x1eC1zcGlubmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMdXhMYWJlbENvbXBvbmVudCB9IGZyb20gJy4vbHV4LWxhYmVsL2x1eC1sYWJlbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTHV4QmFkZ2VDb21wb25lbnQgfSBmcm9tICcuL2x1eC1iYWRnZS9sdXgtYmFkZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IEx1eFByb2dyZXNzQ29tcG9uZW50IH0gZnJvbSAnLi9sdXgtcHJvZ3Jlc3MvbHV4LXByb2dyZXNzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMdXhUYWJsZUNvbXBvbmVudCB9IGZyb20gJy4vbHV4LXRhYmxlL2x1eC10YWJsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgTHV4VGFibGVDb2x1bW5Gb290ZXJDb21wb25lbnQgfSBmcm9tICcuL2x1eC10YWJsZS9sdXgtdGFibGUtc3ViY29tcG9uZW50cy9sdXgtdGFibGUtY29sdW1uLWZvb3Rlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTHV4VGFibGVDb2x1bW5Db21wb25lbnQgfSBmcm9tICcuL2x1eC10YWJsZS9sdXgtdGFibGUtc3ViY29tcG9uZW50cy9sdXgtdGFibGUtY29sdW1uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMdXhNZXNzYWdlQm94Q29tcG9uZW50IH0gZnJvbSAnLi9sdXgtbWVzc2FnZS1ib3gvbHV4LW1lc3NhZ2UtYm94LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMdXhNZXNzYWdlQ29tcG9uZW50IH0gZnJvbSAnLi9sdXgtbWVzc2FnZS1ib3gvbHV4LW1lc3NhZ2UtYm94LXN1YmNvbXBvbmVudHMvbHV4LW1lc3NhZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IEx1eFRhYmxlQ29sdW1uSGVhZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9sdXgtdGFibGUvbHV4LXRhYmxlLXN1YmNvbXBvbmVudHMvbHV4LXRhYmxlLWNvbHVtbi1oZWFkZXIuY29tcG9uZW50JztcbmltcG9ydCB7IEx1eFRhYmxlQ29sdW1uQ29udGVudENvbXBvbmVudCB9IGZyb20gJy4vbHV4LXRhYmxlL2x1eC10YWJsZS1zdWJjb21wb25lbnRzL2x1eC10YWJsZS1jb2x1bW4tY29udGVudC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTHV4TWVkaWFRdWVyeU9ic2VydmVyU2VydmljZSB9IGZyb20gJy4uL2x1eC11dGlsL2x1eC1tZWRpYS1xdWVyeS1vYnNlcnZlci5zZXJ2aWNlJztcbmltcG9ydCB7IEZsZXhMYXlvdXRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mbGV4LWxheW91dCc7XG5pbXBvcnQgeyBMdXhBY3Rpb25Nb2R1bGUgfSBmcm9tICcuLi9sdXgtYWN0aW9uL2x1eC1hY3Rpb24ubW9kdWxlJztcbmltcG9ydCB7IEx1eEljb25Nb2R1bGUgfSBmcm9tICcuLi9sdXgtaWNvbi9sdXgtaWNvbi5tb2R1bGUnO1xuaW1wb3J0IHsgTHV4RGlyZWN0aXZlc01vZHVsZSB9IGZyb20gJy4uL2x1eC1kaXJlY3RpdmVzL2x1eC1kaXJlY3RpdmVzLm1vZHVsZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgRmxleExheW91dE1vZHVsZSxcbiAgICBNYXRQcm9ncmVzc1NwaW5uZXJNb2R1bGUsXG4gICAgTWF0UHJvZ3Jlc3NCYXJNb2R1bGUsXG4gICAgTWF0VGFibGVNb2R1bGUsXG4gICAgTWF0UGFnaW5hdG9yTW9kdWxlLFxuICAgIE1hdFNvcnRNb2R1bGUsXG4gICAgTHV4Rm9ybU1vZHVsZSxcbiAgICBMdXhBY3Rpb25Nb2R1bGUsXG4gICAgTHV4SWNvbk1vZHVsZSxcbiAgICBMdXhEaXJlY3RpdmVzTW9kdWxlLFxuICAgIEx1eENvbXBvbmVudHNDb25maWdNb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTHV4U3Bpbm5lckNvbXBvbmVudCxcbiAgICBMdXhMYWJlbENvbXBvbmVudCxcbiAgICBMdXhCYWRnZUNvbXBvbmVudCxcbiAgICBMdXhQcm9ncmVzc0NvbXBvbmVudCxcbiAgICBMdXhUYWJsZUNvbXBvbmVudCxcbiAgICBMdXhUYWJsZUNvbHVtbkZvb3RlckNvbXBvbmVudCxcbiAgICBMdXhUYWJsZUNvbHVtbkNvbXBvbmVudCxcbiAgICBMdXhUYWJsZUNvbHVtbkhlYWRlckNvbXBvbmVudCxcbiAgICBMdXhUYWJsZUNvbHVtbkNvbnRlbnRDb21wb25lbnQsXG4gICAgTHV4TWVzc2FnZUJveENvbXBvbmVudCxcbiAgICBMdXhNZXNzYWdlQ29tcG9uZW50XG4gIF0sXG4gIHByb3ZpZGVyczogW0x1eE1lZGlhUXVlcnlPYnNlcnZlclNlcnZpY2VdLFxuICBleHBvcnRzOiBbXG4gICAgTHV4U3Bpbm5lckNvbXBvbmVudCxcbiAgICBMdXhMYWJlbENvbXBvbmVudCxcbiAgICBMdXhCYWRnZUNvbXBvbmVudCxcbiAgICBMdXhQcm9ncmVzc0NvbXBvbmVudCxcbiAgICBMdXhUYWJsZUNvbXBvbmVudCxcbiAgICBMdXhUYWJsZUNvbHVtbkZvb3RlckNvbXBvbmVudCxcbiAgICBMdXhUYWJsZUNvbHVtbkNvbXBvbmVudCxcbiAgICBMdXhUYWJsZUNvbHVtbkhlYWRlckNvbXBvbmVudCxcbiAgICBMdXhUYWJsZUNvbHVtbkNvbnRlbnRDb21wb25lbnQsXG4gICAgTHV4TWVzc2FnZUJveENvbXBvbmVudCxcbiAgICBMdXhNZXNzYWdlQ29tcG9uZW50XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgTHV4Q29tbW9uTW9kdWxlIHt9XG4iXX0=