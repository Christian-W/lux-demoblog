import * as tslib_1 from "tslib";
import { Component, Inject } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { PdfViewerComponent } from 'ng2-pdf-viewer';
import { LuxFilePreviewBase } from '../lux-file-preview-base/lux-file-preview-base';
import { LUX_FILE_PREVIEW_DATA } from '../lux-file-preview-config';
import { LuxFilePreviewRef } from '../lux-file-preview-ref';
let LuxFilePreviewPdfViewerComponent = class LuxFilePreviewPdfViewerComponent extends LuxFilePreviewBase {
    constructor(previewRef, previewData, sanitizer) {
        super(previewRef, previewData, sanitizer);
        this.previewRef = previewRef;
        this.previewData = previewData;
        this.sanitizer = sanitizer;
        this.showAll = true;
        this.page = 1;
        this.numPages = 0;
        this.loadingDivWidth = 100;
        this.loadingDivHeight = 50;
        this.options = [
            { label: ' 15%', value: 0.15 },
            { label: ' 25%', value: 0.25 },
            { label: ' 50%', value: 0.5 },
            { label: ' 75%', value: 0.75 },
            { label: '100%', value: 1.0 },
            { label: '150%', value: 1.5 },
            { label: '200%', value: 2.0 }
        ];
        this.zoom = this.options[4];
    }
    ngOnInit() {
        super.ngOnInit();
        this.loadingDivLeft = window.innerWidth / 2 - this.loadingDivWidth / 2;
        this.loadingDivTop = window.innerHeight / 2 - this.loadingDivHeight / 2;
    }
    onPrevPage() {
        this.page--;
        this.clearFocus();
    }
    onNextPage() {
        this.page++;
        this.clearFocus();
    }
    pageRendered(e) {
        if (e && e.pageNumber === 1) {
            this.loadingFinished();
        }
    }
    callBackFn(pdf) {
        this.numPages = pdf.numPages;
        pdf.getPage(1).then((page) => {
            let viewportWidth = 0;
            let currentIndex = 0;
            while (viewportWidth === 0 || viewportWidth > this.width) {
                viewportWidth =
                    page.getViewport({
                        scale: this.zoom.value
                    }).width * PdfViewerComponent.CSS_UNITS;
                currentIndex = this.options.findIndex(currentZoom => currentZoom === this.zoom);
                if (currentIndex === 0) {
                    break;
                }
                if (viewportWidth > this.width) {
                    this.zoom = this.options[Math.max(currentIndex - 1, 0)];
                }
            }
        });
    }
    onError(event) {
        console.log(event);
    }
    onProgress(progressData) { }
};
LuxFilePreviewPdfViewerComponent.ctorParameters = () => [
    { type: LuxFilePreviewRef },
    { type: undefined, decorators: [{ type: Inject, args: [LUX_FILE_PREVIEW_DATA,] }] },
    { type: DomSanitizer }
];
LuxFilePreviewPdfViewerComponent = tslib_1.__decorate([
    Component({
        selector: 'lux-file-preview-pdfviewer',
        template: "<lux-file-preview-toolbar>\n  <lux-select\n    fxFlex=\"80px\"\n    [luxOptions]=\"options\"\n    [(luxSelected)]=\"zoom\"\n    luxOptionLabelProp=\"label\"\n    luxAriaLabel=\"Zoom\"\n  ></lux-select>\n  <lux-button\n    fxFlex=\"none\"\n    luxIconName=\"fas fa-arrow-left\"\n    *ngIf=\"!showAll\"\n    (luxClicked)=\"onPrevPage()\"\n    [luxDisabled]=\"page === 1\"\n    [ngClass]=\"{ 'lux-button-disabled': page === 1 }\"\n    luxRaised=\"true\"\n    luxTagId=\"file-preview-zoomin-btn\"\n    luxAriaLabel=\"Hinein zoomen\"\n  ></lux-button>\n  <lux-button\n    fxFlex=\"none\"\n    luxIconName=\"fas fa-arrow-right\"\n    (luxClicked)=\"onNextPage()\"\n    [luxDisabled]=\"page === numPages\"\n    [ngClass]=\"{ 'lux-button-disabled': page === numPages }\"\n    *ngIf=\"!showAll\"\n    luxRaised=\"true\"\n    luxTagId=\"file-preview-zoomout-btn\"\n    luxAriaLabel=\"Heraus zoomen\"\n  ></lux-button>\n  <lux-button\n    fxFlex=\"none\"\n    [luxIconName]=\"downloadIconName\"\n    (luxClicked)=\"onDownload()\"\n    luxColor=\"accent\"\n    luxRaised=\"true\"\n    [luxTagId]=\"downloadTagId\"\n    [luxAriaLabel]=\"downloadAriaLabel\"\n  ></lux-button>\n  <lux-button\n    fxFlex=\"none\"\n    [luxIconName]=\"closeIconName\"\n    (luxClicked)=\"onClose()\"\n    luxRaised=\"true\"\n    [luxTagId]=\"closeTagId\"\n    [luxAriaLabel]=\"closeAriaLabel\"\n  ></lux-button>\n</lux-file-preview-toolbar>\n\n<div class=\"overlay-content\" [ngStyle]=\"{ width: width + 'px', height: height + 'px' }\">\n  <div\n    fxLayout=\"column\"\n    fxLayoutAlign=\"center center\"\n    *ngIf=\"loading\"\n    class=\"message-box message-box-pdf\"\n    [ngStyle]=\"{\n      left: this.loadingDivLeft + 'px',\n      top: this.loadingDivTop + 'px',\n      width: loadingDivWidth + 'px',\n      height: loadingDivHeight + 'px'\n    }\"\n  >\n    <p>Lade...</p>\n  </div>\n  <pdf-viewer\n    *ngIf=\"url\"\n    [src]=\"url\"\n    [show-all]=\"showAll\"\n    [page]=\"page\"\n    [zoom]=\"zoom.value\"\n    [render-text]=\"false\"\n    [c-maps-url]=\"'assets/cmaps/'\"\n    (page-rendered)=\"pageRendered($event)\"\n    (after-load-complete)=\"callBackFn($event)\"\n    (error)=\"onError($event)\"\n    (on-progress)=\"onProgress($event)\"\n    style=\"display: block;\"\n  ></pdf-viewer>\n</div>\n",
        styles: [".overlay-content{overflow:auto;background-color:gray;padding:8px;border-radius:4px}pdf-viewer{height:100%}.message-box-pdf{position:absolute;overflow:hidden}"]
    }),
    tslib_1.__param(1, Inject(LUX_FILE_PREVIEW_DATA)),
    tslib_1.__metadata("design:paramtypes", [LuxFilePreviewRef, Object, DomSanitizer])
], LuxFilePreviewPdfViewerComponent);
export { LuxFilePreviewPdfViewerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWZpbGUtcHJldmlldy1wZGZ2aWV3ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGloay1nZmkvbHV4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJzcmMvYXBwL21vZHVsZXMvbHV4LWZpbGUtcHJldmlldy9sdXgtZmlsZS1wcmV2aWV3LXBkZnZpZXdlci9sdXgtZmlsZS1wcmV2aWV3LXBkZnZpZXdlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUNwRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUVuRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQU81RCxJQUFhLGdDQUFnQyxHQUE3QyxNQUFhLGdDQUFpQyxTQUFRLGtCQUFrQjtJQXNCdEUsWUFDWSxVQUE2QixFQUNFLFdBQStCLEVBQzlELFNBQXVCO1FBRWpDLEtBQUssQ0FBQyxVQUFVLEVBQUUsV0FBVyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBSmhDLGVBQVUsR0FBVixVQUFVLENBQW1CO1FBQ0UsZ0JBQVcsR0FBWCxXQUFXLENBQW9CO1FBQzlELGNBQVMsR0FBVCxTQUFTLENBQWM7UUF4Qm5DLFlBQU8sR0FBRyxJQUFJLENBQUM7UUFFZixTQUFJLEdBQUcsQ0FBQyxDQUFDO1FBQ1QsYUFBUSxHQUFHLENBQUMsQ0FBQztRQUliLG9CQUFlLEdBQUcsR0FBRyxDQUFDO1FBQ3RCLHFCQUFnQixHQUFHLEVBQUUsQ0FBQztRQUV0QixZQUFPLEdBQVU7WUFDZixFQUFFLEtBQUss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QjtZQUNSLFlBQVk7O0FBekJ4QixnQ0FBZ0M7SUFMNUMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLDRCQUE0QjtRQUN0Qyx5dkVBQTBEOztLQUUzRCxDQUFDO0lBeUJHLG1CQUFBLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFBOzZDQURSLGlCQUFpQixVQUVsQixZQUFZO0dBekJ4QixnQ0FBZ0MsQ0FvRjVDO1NBcEZZLGdDQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERvbVNhbml0aXplciB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHsgUGRmVmlld2VyQ29tcG9uZW50IH0gZnJvbSAnbmcyLXBkZi12aWV3ZXInO1xuaW1wb3J0IHsgTHV4RmlsZVByZXZpZXdCYXNlIH0gZnJvbSAnLi4vbHV4LWZpbGUtcHJldmlldy1iYXNlL2x1eC1maWxlLXByZXZpZXctYmFzZSc7XG5pbXBvcnQgeyBMVVhfRklMRV9QUkVWSUVXX0RBVEEgfSBmcm9tICcuLi9sdXgtZmlsZS1wcmV2aWV3LWNvbmZpZyc7XG5pbXBvcnQgeyBMdXhGaWxlUHJldmlld0RhdGEgfSBmcm9tICcuLi9sdXgtZmlsZS1wcmV2aWV3LWRhdGEnO1xuaW1wb3J0IHsgTHV4RmlsZVByZXZpZXdSZWYgfSBmcm9tICcuLi9sdXgtZmlsZS1wcmV2aWV3LXJlZic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2x1eC1maWxlLXByZXZpZXctcGRmdmlld2VyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2x1eC1maWxlLXByZXZpZXctcGRmdmlld2VyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbHV4LWZpbGUtcHJldmlldy1wZGZ2aWV3ZXIuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMdXhGaWxlUHJldmlld1BkZlZpZXdlckNvbXBvbmVudCBleHRlbmRzIEx1eEZpbGVQcmV2aWV3QmFzZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHNob3dBbGwgPSB0cnVlO1xuXG4gIHBhZ2UgPSAxO1xuICBudW1QYWdlcyA9IDA7XG5cbiAgbG9hZGluZ0RpdkxlZnQ6IG51bWJlcjtcbiAgbG9hZGluZ0RpdlRvcDogbnVtYmVyO1xuICBsb2FkaW5nRGl2V2lkdGggPSAxMDA7XG4gIGxvYWRpbmdEaXZIZWlnaHQgPSA1MDtcblxuICBvcHRpb25zOiBhbnlbXSA9IFtcbiAgICB7IGxhYmVsOiAnIDE1JScsIHZhbHVlOiAwLjE1IH0sXG4gICAgeyBsYWJlbDogJyAyNSUnLCB2YWx1ZTogMC4yNSB9LFxuICAgIHsgbGFiZWw6ICcgNTAlJywgdmFsdWU6IDAuNSB9LFxuICAgIHsgbGFiZWw6ICcgNzUlJywgdmFsdWU6IDAuNzUgfSxcbiAgICB7IGxhYmVsOiAnMTAwJScsIHZhbHVlOiAxLjAgfSxcbiAgICB7IGxhYmVsOiAnMTUwJScsIHZhbHVlOiAxLjUgfSxcbiAgICB7IGxhYmVsOiAnMjAwJScsIHZhbHVlOiAyLjAgfVxuICBdO1xuICB6b29tOiBhbnkgPSB0aGlzLm9wdGlvbnNbNF07XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIHByZXZpZXdSZWY6IEx1eEZpbGVQcmV2aWV3UmVmLFxuICAgIEBJbmplY3QoTFVYX0ZJTEVfUFJFVklFV19EQVRBKSBwcm90ZWN0ZWQgcHJldmlld0RhdGE6IEx1eEZpbGVQcmV2aWV3RGF0YSxcbiAgICBwcm90ZWN0ZWQgc2FuaXRpemVyOiBEb21TYW5pdGl6ZXJcbiAgKSB7XG4gICAgc3VwZXIocHJldmlld1JlZiwgcHJldmlld0RhdGEsIHNhbml0aXplcik7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICBzdXBlci5uZ09uSW5pdCgpO1xuXG4gICAgdGhpcy5sb2FkaW5nRGl2TGVmdCA9IHdpbmRvdy5pbm5lcldpZHRoIC8gMiAtIHRoaXMubG9hZGluZ0RpdldpZHRoIC8gMjtcbiAgICB0aGlzLmxvYWRpbmdEaXZUb3AgPSB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyIC0gdGhpcy5sb2FkaW5nRGl2SGVpZ2h0IC8gMjtcbiAgfVxuXG4gIG9uUHJldlBhZ2UoKSB7XG4gICAgdGhpcy5wYWdlLS07XG4gICAgdGhpcy5jbGVhckZvY3VzKCk7XG4gIH1cblxuICBvbk5leHRQYWdlKCkge1xuICAgIHRoaXMucGFnZSsrO1xuICAgIHRoaXMuY2xlYXJGb2N1cygpO1xuICB9XG5cbiAgcGFnZVJlbmRlcmVkKGU6IGFueSkge1xuICAgIGlmIChlICYmIGUucGFnZU51bWJlciA9PT0gMSkge1xuICAgICAgdGhpcy5sb2FkaW5nRmluaXNoZWQoKTtcbiAgICB9XG4gIH1cblxuICBjYWxsQmFja0ZuKHBkZjogYW55KSB7XG4gICAgdGhpcy5udW1QYWdlcyA9IHBkZi5udW1QYWdlcztcblxuICAgIHBkZi5nZXRQYWdlKDEpLnRoZW4oKHBhZ2U6IGFueSkgPT4ge1xuICAgICAgbGV0IHZpZXdwb3J0V2lkdGggPSAwO1xuICAgICAgbGV0IGN1cnJlbnRJbmRleCA9IDA7XG5cbiAgICAgIHdoaWxlICh2aWV3cG9ydFdpZHRoID09PSAwIHx8IHZpZXdwb3J0V2lkdGggPiB0aGlzLndpZHRoKSB7XG4gICAgICAgIHZpZXdwb3J0V2lkdGggPVxuICAgICAgICAgIChwYWdlIGFzIGFueSkuZ2V0Vmlld3BvcnQoe1xuICAgICAgICAgICAgc2NhbGU6IHRoaXMuem9vbS52YWx1ZVxuICAgICAgICAgIH0pLndpZHRoICogUGRmVmlld2VyQ29tcG9uZW50LkNTU19VTklUUztcblxuICAgICAgICBjdXJyZW50SW5kZXggPSB0aGlzLm9wdGlvbnMuZmluZEluZGV4KGN1cnJlbnRab29tID0+IGN1cnJlbnRab29tID09PSB0aGlzLnpvb20pO1xuXG4gICAgICAgIGlmIChjdXJyZW50SW5kZXggPT09IDApIHtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2aWV3cG9ydFdpZHRoID4gdGhpcy53aWR0aCkge1xuICAgICAgICAgIHRoaXMuem9vbSA9IHRoaXMub3B0aW9uc1tNYXRoLm1heChjdXJyZW50SW5kZXggLSAxLCAwKV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIG9uRXJyb3IoZXZlbnQ6IGFueSkge1xuICAgIGNvbnNvbGUubG9nKGV2ZW50KTtcbiAgfVxuXG4gIG9uUHJvZ3Jlc3MocHJvZ3Jlc3NEYXRhOiBhbnkpIHt9XG59XG4iXX0=