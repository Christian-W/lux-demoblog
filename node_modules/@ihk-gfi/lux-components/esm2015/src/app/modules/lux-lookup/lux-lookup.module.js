import * as tslib_1 from "tslib";
import { CommonModule } from '@angular/common';
import { HttpClient, HttpClientModule } from '@angular/common/http';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatAutocompleteModule, MatFormFieldModule, MatInputModule, MatSelectModule } from '@angular/material';
import { LuxLookupComboboxComponent } from './lux-lookup-combobox/lux-lookup-combobox.component';
import { LuxLookupService } from './lux-lookup-service/lux-lookup.service';
import { LuxDirectivesModule } from '../lux-directives/lux-directives.module';
import { LuxLookupAutocompleteComponent } from './lux-lookup-autocomplete/lux-lookup-autocomplete.component';
import { LuxFormModule } from '../lux-form/lux-form.module';
import { FlexLayoutModule } from '@angular/flex-layout';
import { LuxLookupLabelComponent } from './lux-lookup-label/lux-lookup-label.component';
import { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';
let LuxLookupModule = class LuxLookupModule {
};
LuxLookupModule = tslib_1.__decorate([
    NgModule({
        imports: [
            CommonModule,
            ReactiveFormsModule,
            FormsModule,
            HttpClientModule,
            MatSelectModule,
            MatFormFieldModule,
            LuxDirectivesModule,
            LuxFormModule,
            MatAutocompleteModule,
            MatInputModule,
            FlexLayoutModule,
            LuxComponentsConfigModule
        ],
        declarations: [LuxLookupComboboxComponent, LuxLookupAutocompleteComponent, LuxLookupLabelComponent],
        providers: [HttpClient, LuxLookupService],
        exports: [LuxLookupComboboxComponent, LuxLookupAutocompleteComponent, LuxLookupLabelComponent]
    })
], LuxLookupModule);
export { LuxLookupModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWxvb2t1cC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaWhrLWdmaS9sdXgtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sdXgtbG9va3VwL2x1eC1sb29rdXAubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxrQkFBa0IsRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0csT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0scURBQXFELENBQUM7QUFDakcsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDM0UsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDOUUsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sNkRBQTZELENBQUM7QUFDN0csT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQ3hGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBcUJsRyxJQUFhLGVBQWUsR0FBNUIsTUFBYSxlQUFlO0NBQUcsQ0FBQTtBQUFsQixlQUFlO0lBbkIzQixRQUFRLENBQUM7UUFDUixPQUFPLEVBQUU7WUFDUCxZQUFZO1lBQ1osbUJBQW1CO1lBQ25CLFdBQVc7WUFDWCxnQkFBZ0I7WUFDaEIsZUFBZTtZQUNmLGtCQUFrQjtZQUNsQixtQkFBbUI7WUFDbkIsYUFBYTtZQUNiLHFCQUFxQjtZQUNyQixjQUFjO1lBQ2QsZ0JBQWdCO1lBQ2hCLHlCQUF5QjtTQUMxQjtRQUNELFlBQVksRUFBRSxDQUFDLDBCQUEwQixFQUFFLDhCQUE4QixFQUFFLHVCQUF1QixDQUFDO1FBQ25HLFNBQVMsRUFBRSxDQUFDLFVBQVUsRUFBRSxnQkFBZ0IsQ0FBQztRQUN6QyxPQUFPLEVBQUUsQ0FBQywwQkFBMEIsRUFBRSw4QkFBOEIsRUFBRSx1QkFBdUIsQ0FBQztLQUMvRixDQUFDO0dBQ1csZUFBZSxDQUFHO1NBQWxCLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgSHR0cENsaWVudCwgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE1hdEF1dG9jb21wbGV0ZU1vZHVsZSwgTWF0Rm9ybUZpZWxkTW9kdWxlLCBNYXRJbnB1dE1vZHVsZSwgTWF0U2VsZWN0TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuaW1wb3J0IHsgTHV4TG9va3VwQ29tYm9ib3hDb21wb25lbnQgfSBmcm9tICcuL2x1eC1sb29rdXAtY29tYm9ib3gvbHV4LWxvb2t1cC1jb21ib2JveC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTHV4TG9va3VwU2VydmljZSB9IGZyb20gJy4vbHV4LWxvb2t1cC1zZXJ2aWNlL2x1eC1sb29rdXAuc2VydmljZSc7XG5pbXBvcnQgeyBMdXhEaXJlY3RpdmVzTW9kdWxlIH0gZnJvbSAnLi4vbHV4LWRpcmVjdGl2ZXMvbHV4LWRpcmVjdGl2ZXMubW9kdWxlJztcbmltcG9ydCB7IEx1eExvb2t1cEF1dG9jb21wbGV0ZUNvbXBvbmVudCB9IGZyb20gJy4vbHV4LWxvb2t1cC1hdXRvY29tcGxldGUvbHV4LWxvb2t1cC1hdXRvY29tcGxldGUuY29tcG9uZW50JztcbmltcG9ydCB7IEx1eEZvcm1Nb2R1bGUgfSBmcm9tICcuLi9sdXgtZm9ybS9sdXgtZm9ybS5tb2R1bGUnO1xuaW1wb3J0IHsgRmxleExheW91dE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2ZsZXgtbGF5b3V0JztcbmltcG9ydCB7IEx1eExvb2t1cExhYmVsQ29tcG9uZW50IH0gZnJvbSAnLi9sdXgtbG9va3VwLWxhYmVsL2x1eC1sb29rdXAtbGFiZWwuY29tcG9uZW50JztcbmltcG9ydCB7IEx1eENvbXBvbmVudHNDb25maWdNb2R1bGUgfSBmcm9tICcuLi9sdXgtY29tcG9uZW50cy1jb25maWcvbHV4LWNvbXBvbmVudHMtY29uZmlnLm1vZHVsZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBIdHRwQ2xpZW50TW9kdWxlLFxuICAgIE1hdFNlbGVjdE1vZHVsZSxcbiAgICBNYXRGb3JtRmllbGRNb2R1bGUsXG4gICAgTHV4RGlyZWN0aXZlc01vZHVsZSxcbiAgICBMdXhGb3JtTW9kdWxlLFxuICAgIE1hdEF1dG9jb21wbGV0ZU1vZHVsZSxcbiAgICBNYXRJbnB1dE1vZHVsZSxcbiAgICBGbGV4TGF5b3V0TW9kdWxlLFxuICAgIEx1eENvbXBvbmVudHNDb25maWdNb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbTHV4TG9va3VwQ29tYm9ib3hDb21wb25lbnQsIEx1eExvb2t1cEF1dG9jb21wbGV0ZUNvbXBvbmVudCwgTHV4TG9va3VwTGFiZWxDb21wb25lbnRdLFxuICBwcm92aWRlcnM6IFtIdHRwQ2xpZW50LCBMdXhMb29rdXBTZXJ2aWNlXSxcbiAgZXhwb3J0czogW0x1eExvb2t1cENvbWJvYm94Q29tcG9uZW50LCBMdXhMb29rdXBBdXRvY29tcGxldGVDb21wb25lbnQsIEx1eExvb2t1cExhYmVsQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBMdXhMb29rdXBNb2R1bGUge31cbiJdfQ==