import * as tslib_1 from "tslib";
import { CommonModule } from '@angular/common';
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { NgModule } from '@angular/core';
import { FlexLayoutModule } from '@angular/flex-layout';
import { LuxIconModule } from '../lux-icon/lux-icon.module';
import { LuxHttpErrorComponent } from './lux-http-error/lux-http-error.component';
import { LuxHttpErrorInterceptor } from './lux-http-error/lux-http-error-interceptor';
import { LuxLayoutModule } from '../lux-layout/lux-layout.module';
import { LuxErrorPageComponent } from './lux-error-page/lux-error-page.component';
import { RouterModule } from '@angular/router';
import { LuxComponentsConfigModule } from '../lux-components-config/lux-components-config.module';
import { LuxCommonModule } from '../lux-common/lux-common.module';
import { LuxActionModule } from '../lux-action/lux-action.module';
let LuxErrorModule = class LuxErrorModule {
};
LuxErrorModule = tslib_1.__decorate([
    NgModule({
        imports: [
            CommonModule,
            FlexLayoutModule,
            RouterModule,
            LuxIconModule,
            LuxLayoutModule,
            LuxCommonModule,
            LuxActionModule,
            LuxComponentsConfigModule
        ],
        entryComponents: [LuxErrorPageComponent],
        declarations: [LuxHttpErrorComponent, LuxErrorPageComponent],
        exports: [LuxHttpErrorComponent, LuxErrorPageComponent],
        providers: [
            {
                provide: HTTP_INTERCEPTORS,
                useClass: LuxHttpErrorInterceptor,
                multi: true
            }
        ]
    })
], LuxErrorModule);
export { LuxErrorModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWVycm9yLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BpaGstZ2ZpL2x1eC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsic3JjL2FwcC9tb2R1bGVzL2x1eC1lcnJvci9sdXgtZXJyb3IubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDekQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDNUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDbEYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDdEYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUNsRyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDbEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBd0JsRSxJQUFhLGNBQWMsR0FBM0IsTUFBYSxjQUFjO0NBQUcsQ0FBQTtBQUFqQixjQUFjO0lBdEIxQixRQUFRLENBQUM7UUFDUixPQUFPLEVBQUU7WUFDUCxZQUFZO1lBQ1osZ0JBQWdCO1lBQ2hCLFlBQVk7WUFDWixhQUFhO1lBQ2IsZUFBZTtZQUNmLGVBQWU7WUFDZixlQUFlO1lBQ2YseUJBQXlCO1NBQzFCO1FBQ0QsZUFBZSxFQUFFLENBQUMscUJBQXFCLENBQUM7UUFDeEMsWUFBWSxFQUFFLENBQUMscUJBQXFCLEVBQUUscUJBQXFCLENBQUM7UUFDNUQsT0FBTyxFQUFFLENBQUMscUJBQXFCLEVBQUUscUJBQXFCLENBQUM7UUFDdkQsU0FBUyxFQUFFO1lBQ1Q7Z0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjtnQkFDMUIsUUFBUSxFQUFFLHVCQUF1QjtnQkFDakMsS0FBSyxFQUFFLElBQUk7YUFDWjtTQUNGO0tBQ0YsQ0FBQztHQUNXLGNBQWMsQ0FBRztTQUFqQixjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEhUVFBfSU5URVJDRVBUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZsZXhMYXlvdXRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mbGV4LWxheW91dCc7XG5pbXBvcnQgeyBMdXhJY29uTW9kdWxlIH0gZnJvbSAnLi4vbHV4LWljb24vbHV4LWljb24ubW9kdWxlJztcbmltcG9ydCB7IEx1eEh0dHBFcnJvckNvbXBvbmVudCB9IGZyb20gJy4vbHV4LWh0dHAtZXJyb3IvbHV4LWh0dHAtZXJyb3IuY29tcG9uZW50JztcbmltcG9ydCB7IEx1eEh0dHBFcnJvckludGVyY2VwdG9yIH0gZnJvbSAnLi9sdXgtaHR0cC1lcnJvci9sdXgtaHR0cC1lcnJvci1pbnRlcmNlcHRvcic7XG5pbXBvcnQgeyBMdXhMYXlvdXRNb2R1bGUgfSBmcm9tICcuLi9sdXgtbGF5b3V0L2x1eC1sYXlvdXQubW9kdWxlJztcbmltcG9ydCB7IEx1eEVycm9yUGFnZUNvbXBvbmVudCB9IGZyb20gJy4vbHV4LWVycm9yLXBhZ2UvbHV4LWVycm9yLXBhZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBMdXhDb21wb25lbnRzQ29uZmlnTW9kdWxlIH0gZnJvbSAnLi4vbHV4LWNvbXBvbmVudHMtY29uZmlnL2x1eC1jb21wb25lbnRzLWNvbmZpZy5tb2R1bGUnO1xuaW1wb3J0IHsgTHV4Q29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vbHV4LWNvbW1vbi9sdXgtY29tbW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBMdXhBY3Rpb25Nb2R1bGUgfSBmcm9tICcuLi9sdXgtYWN0aW9uL2x1eC1hY3Rpb24ubW9kdWxlJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBGbGV4TGF5b3V0TW9kdWxlLFxuICAgIFJvdXRlck1vZHVsZSxcbiAgICBMdXhJY29uTW9kdWxlLFxuICAgIEx1eExheW91dE1vZHVsZSxcbiAgICBMdXhDb21tb25Nb2R1bGUsXG4gICAgTHV4QWN0aW9uTW9kdWxlLFxuICAgIEx1eENvbXBvbmVudHNDb25maWdNb2R1bGVcbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbTHV4RXJyb3JQYWdlQ29tcG9uZW50XSxcbiAgZGVjbGFyYXRpb25zOiBbTHV4SHR0cEVycm9yQ29tcG9uZW50LCBMdXhFcnJvclBhZ2VDb21wb25lbnRdLFxuICBleHBvcnRzOiBbTHV4SHR0cEVycm9yQ29tcG9uZW50LCBMdXhFcnJvclBhZ2VDb21wb25lbnRdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBIVFRQX0lOVEVSQ0VQVE9SUyxcbiAgICAgIHVzZUNsYXNzOiBMdXhIdHRwRXJyb3JJbnRlcmNlcHRvcixcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEx1eEVycm9yTW9kdWxlIHt9XG4iXX0=