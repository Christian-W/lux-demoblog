import * as tslib_1 from "tslib";
var LuxSideNavItemComponent_1;
import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, EventEmitter, Input, OnChanges, Output, QueryList, TemplateRef, ViewChild } from '@angular/core';
let LuxSideNavItemComponent = LuxSideNavItemComponent_1 = class LuxSideNavItemComponent {
    constructor(cdr) {
        this.cdr = cdr;
        this.luxDisabled = false;
        this.luxSelected = false;
        this.luxCloseOnClick = true;
        this.luxExpandable = false;
        this.luxExpanded = true;
        this.luxClicked = new EventEmitter();
    }
    ngOnChanges() {
        // Bei Input Ã„nderungen die CD anstossen
        this.cdr.detectChanges();
    }
    ngAfterViewInit() {
        // Nach Abschluss der Initialisierung die CD anstossen
        this.cdr.detectChanges();
    }
    onClick($event) {
        this.luxClicked.emit($event);
        if (this.luxExpandable) {
            this.luxExpanded = !this.luxExpanded;
        }
    }
};
LuxSideNavItemComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
tslib_1.__decorate([
    ViewChild(TemplateRef, { static: false }),
    tslib_1.__metadata("design:type", TemplateRef)
], LuxSideNavItemComponent.prototype, "templateRef", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], LuxSideNavItemComponent.prototype, "luxLabel", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], LuxSideNavItemComponent.prototype, "luxDisabled", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], LuxSideNavItemComponent.prototype, "luxTagId", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], LuxSideNavItemComponent.prototype, "luxSelected", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], LuxSideNavItemComponent.prototype, "luxCloseOnClick", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], LuxSideNavItemComponent.prototype, "luxIconName", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], LuxSideNavItemComponent.prototype, "luxExpandable", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], LuxSideNavItemComponent.prototype, "luxExpanded", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], LuxSideNavItemComponent.prototype, "luxClicked", void 0);
tslib_1.__decorate([
    ContentChildren(LuxSideNavItemComponent_1),
    tslib_1.__metadata("design:type", QueryList)
], LuxSideNavItemComponent.prototype, "sideNavItems", void 0);
LuxSideNavItemComponent = LuxSideNavItemComponent_1 = tslib_1.__decorate([
    Component({
        selector: 'lux-side-nav-item',
        template: "<ng-template>\n  <div class=\"lux-side-nav-item-container\">\n    <div class=\"lux-side-nav-item-button\" [ngClass]=\"{ 'lux-side-nav-item-expandable': luxExpandable }\">\n      <lux-button\n        (luxClicked)=\"onClick($event)\"\n        [luxLabel]=\"luxLabel\"\n        [luxIconName]=\"luxIconName\"\n        [luxDisabled]=\"luxDisabled\"\n        [luxTagId]=\"luxTagId\"\n        class=\"lux-side-nav-item\"\n        [ngClass]=\"{ 'lux-side-nav-item-selected': luxSelected }\"\n      >\n      </lux-button>\n      <ng-container *ngIf=\"luxExpandable\">\n        <lux-icon\n          class=\"lux-side-nav-item-expansion-icon\"\n          [luxIconName]=\"luxExpanded ? 'fas fa-chevron-up' : 'fas fa-chevron-down'\"\n        >\n        </lux-icon>\n      </ng-container>\n    </div>\n    <ng-container *ngIf=\"luxExpanded\">\n      <ng-container *ngFor=\"let sideNavItem of sideNavItems; let i = index\">\n        <div class=\"lux-side-nav-sub-item\" *ngIf=\"i > 0\">\n          <ng-container [ngTemplateOutlet]=\"sideNavItem.templateRef\"></ng-container>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n  <ng-content select=\"lux-divider\"></ng-content>\n</ng-template>\n<ng-content select=\"lux-side-nav-item\"></ng-content>\n",
        changeDetection: ChangeDetectionStrategy.OnPush
    }),
    tslib_1.__metadata("design:paramtypes", [ChangeDetectorRef])
], LuxSideNavItemComponent);
export { LuxSideNavItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LXNpZGUtbmF2LWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGloay1nZmkvbHV4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJzcmMvYXBwL21vZHVsZXMvbHV4LWxheW91dC9sdXgtYXBwLWhlYWRlci9sdXgtYXBwLWhlYWRlci1zdWJjb21wb25lbnRzL2x1eC1zaWRlLW5hdi9sdXgtc2lkZS1uYXYtc3ViY29tcG9uZW50cy9sdXgtc2lkZS1uYXYtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLEVBQ0wsYUFBYSxFQUNiLHVCQUF1QixFQUN2QixpQkFBaUIsRUFDakIsU0FBUyxFQUNULGVBQWUsRUFDZixZQUFZLEVBQ1osS0FBSyxFQUNMLFNBQVMsRUFDVCxNQUFNLEVBQ04sU0FBUyxFQUNULFdBQVcsRUFDWCxTQUFTLEVBQ1YsTUFBTSxlQUFlLENBQUM7QUFPdkIsSUFBYSx1QkFBdUIsK0JBQXBDLE1BQWEsdUJBQXVCO0lBZ0JsQyxZQUFvQixHQUFzQjtRQUF0QixRQUFHLEdBQUgsR0FBRyxDQUFtQjtRQVpqQyxnQkFBVyxHQUFZLEtBQUssQ0FBQztRQUU3QixnQkFBVyxHQUFZLEtBQUssQ0FBQztRQUM3QixvQkFBZSxHQUFZLElBQUksQ0FBQztRQUVoQyxrQkFBYSxHQUFZLEtBQUssQ0FBQztRQUMvQixnQkFBVyxHQUFZLElBQUksQ0FBQztRQUUzQixlQUFVLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7SUFJaEIsQ0FBQztJQUU5QyxXQUFXO1FBQ1Qsd0NBQXdDO1FBQ3hDLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVELGVBQWU7UUFDYixzREFBc0Q7UUFDdEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRUQsT0FBTyxDQUFDLE1BQU07UUFDWixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3QixJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDdEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7U0FDdEM7SUFDSCxDQUFDO0NBQ0YsQ0FBQTs7WUFsQjBCLGlCQUFpQjs7QUFmQztJQUExQyxTQUFTLENBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDO3NDQUFjLFdBQVc7NERBQU07QUFFaEU7SUFBUixLQUFLLEVBQUU7O3lEQUFrQjtBQUNqQjtJQUFSLEtBQUssRUFBRTs7NERBQThCO0FBQzdCO0lBQVIsS0FBSyxFQUFFOzt5REFBa0I7QUFDakI7SUFBUixLQUFLLEVBQUU7OzREQUE4QjtBQUM3QjtJQUFSLEtBQUssRUFBRTs7Z0VBQWlDO0FBQ2hDO0lBQVIsS0FBSyxFQUFFOzs0REFBcUI7QUFDcEI7SUFBUixLQUFLLEVBQUU7OzhEQUFnQztBQUMvQjtJQUFSLEtBQUssRUFBRTs7NERBQTZCO0FBRTNCO0lBQVQsTUFBTSxFQUFFO3NDQUFhLFlBQVk7MkRBQTJCO0FBRW5CO0lBQXpDLGVBQWUsQ0FBQyx5QkFBdUIsQ0FBQztzQ0FBZSxTQUFTOzZEQUEwQjtBQWRoRix1QkFBdUI7SUFMbkMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLG1CQUFtQjtRQUM3QixpdkNBQWlEO1FBQ2pELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO0tBQ2hELENBQUM7NkNBaUJ5QixpQkFBaUI7R0FoQi9CLHVCQUF1QixDQWtDbkM7U0FsQ1ksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWZ0ZXJWaWV3SW5pdCxcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnQsXG4gIENvbnRlbnRDaGlsZHJlbixcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgT25DaGFuZ2VzLFxuICBPdXRwdXQsXG4gIFF1ZXJ5TGlzdCxcbiAgVGVtcGxhdGVSZWYsXG4gIFZpZXdDaGlsZFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbHV4LXNpZGUtbmF2LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vbHV4LXNpZGUtbmF2LWl0ZW0uY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBMdXhTaWRlTmF2SXRlbUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uQ2hhbmdlcyB7XG4gIEBWaWV3Q2hpbGQoVGVtcGxhdGVSZWYsIHsgc3RhdGljOiBmYWxzZSB9KSB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcblxuICBASW5wdXQoKSBsdXhMYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKSBsdXhEaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSBsdXhUYWdJZDogc3RyaW5nO1xuICBASW5wdXQoKSBsdXhTZWxlY3RlZDogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSBsdXhDbG9zZU9uQ2xpY2s6IGJvb2xlYW4gPSB0cnVlO1xuICBASW5wdXQoKSBsdXhJY29uTmFtZTogc3RyaW5nO1xuICBASW5wdXQoKSBsdXhFeHBhbmRhYmxlOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIGx1eEV4cGFuZGVkOiBib29sZWFuID0gdHJ1ZTtcblxuICBAT3V0cHV0KCkgbHV4Q2xpY2tlZDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQENvbnRlbnRDaGlsZHJlbihMdXhTaWRlTmF2SXRlbUNvbXBvbmVudCkgc2lkZU5hdkl0ZW1zOiBRdWVyeUxpc3Q8THV4U2lkZU5hdkl0ZW1Db21wb25lbnQ+O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZikge31cblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICAvLyBCZWkgSW5wdXQgw4RuZGVydW5nZW4gZGllIENEIGFuc3Rvc3NlblxuICAgIHRoaXMuY2RyLmRldGVjdENoYW5nZXMoKTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICAvLyBOYWNoIEFic2NobHVzcyBkZXIgSW5pdGlhbGlzaWVydW5nIGRpZSBDRCBhbnN0b3NzZW5cbiAgICB0aGlzLmNkci5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cblxuICBvbkNsaWNrKCRldmVudCkge1xuICAgIHRoaXMubHV4Q2xpY2tlZC5lbWl0KCRldmVudCk7XG4gICAgaWYgKHRoaXMubHV4RXhwYW5kYWJsZSkge1xuICAgICAgdGhpcy5sdXhFeHBhbmRlZCA9ICF0aGlzLmx1eEV4cGFuZGVkO1xuICAgIH1cbiAgfVxufVxuIl19