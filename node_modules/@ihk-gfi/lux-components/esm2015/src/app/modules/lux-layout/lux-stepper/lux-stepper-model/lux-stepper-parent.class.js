import * as tslib_1 from "tslib";
import { EventEmitter, Input, Output, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';
/**
 * Parent-Klasse für den LuxStepperVertical und LuxStepperHorizontal, beide Komponenten werden ausschließlich von
 * dem LuxStepper zur Darstellung genutzt.
 */
export class LuxStepperParent {
    constructor() {
        // Diese Outputs werden bei den Klicks auf die Stepper-eigenen Navigations-Buttons augelöst und informieren die
        // LuxStepperComponent
        this.luxFinButtonClicked = new EventEmitter();
        this.luxNextButtonClicked = new EventEmitter();
        this.luxPrevButtonClicked = new EventEmitter();
        // Wird beim Wechsel des Steps (über Header oder Button) aufgerufen
        this.luxStepChanged = new EventEmitter();
        this.luxCheckValidation = new EventEmitter();
        // Wird beim AfterViewInit und bei jeder Aktualisierung der MatStepLabels aufgerufen um die LuxStepperComponent
        // über die aktuellen Elemente informiert zu halten
        this.luxMatStepperLoaded = new EventEmitter();
        this.luxMatStepLabelsLoaded = new EventEmitter();
    }
    ngAfterViewInit() {
        // Sobald die Component initialisiert ist, dem Parent (luxStepper) den
        // MatStepper und die MatStepLabels mitteilen
        this.luxMatStepperLoaded.emit(this.matStepper);
        this.luxMatStepLabelsLoaded.emit(this.matStepLabels.toArray());
        this.matStepLabels.changes.subscribe(() => {
            this.luxMatStepLabelsLoaded.emit(this.matStepLabels.toArray());
        });
    }
}
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], LuxStepperParent.prototype, "luxFinButtonClicked", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], LuxStepperParent.prototype, "luxNextButtonClicked", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], LuxStepperParent.prototype, "luxPrevButtonClicked", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], LuxStepperParent.prototype, "luxStepChanged", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], LuxStepperParent.prototype, "luxCheckValidation", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], LuxStepperParent.prototype, "luxMatStepperLoaded", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", EventEmitter)
], LuxStepperParent.prototype, "luxMatStepLabelsLoaded", void 0);
tslib_1.__decorate([
    ViewChild('stepper', { static: true }),
    tslib_1.__metadata("design:type", Object)
], LuxStepperParent.prototype, "matStepper", void 0);
tslib_1.__decorate([
    ViewChildren('matStepLabel', { read: ViewContainerRef }),
    tslib_1.__metadata("design:type", QueryList)
], LuxStepperParent.prototype, "matStepLabels", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], LuxStepperParent.prototype, "luxStepperConfig", void 0);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LXN0ZXBwZXItcGFyZW50LmNsYXNzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGloay1nZmkvbHV4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJzcmMvYXBwL21vZHVsZXMvbHV4LWxheW91dC9sdXgtc3RlcHBlci9sdXgtc3RlcHBlci1tb2RlbC9sdXgtc3RlcHBlci1wYXJlbnQuY2xhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFFTCxZQUFZLEVBQ1osS0FBSyxFQUNMLE1BQU0sRUFDTixTQUFTLEVBQ1QsU0FBUyxFQUNULFlBQVksRUFDWixnQkFBZ0IsRUFDakIsTUFBTSxlQUFlLENBQUM7QUFLdkI7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLGdCQUFnQjtJQW1CM0I7UUFsQkEsK0dBQStHO1FBQy9HLHNCQUFzQjtRQUNaLHdCQUFtQixHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQzVELHlCQUFvQixHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQzdELHlCQUFvQixHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3ZFLG1FQUFtRTtRQUN6RCxtQkFBYyxHQUF3QyxJQUFJLFlBQVksRUFBeUIsQ0FBQztRQUNoRyx1QkFBa0IsR0FBdUIsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUM1RSwrR0FBK0c7UUFDL0csbURBQW1EO1FBQ3pDLHdCQUFtQixHQUE0RCxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2xHLDJCQUFzQixHQUFxQyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBT3pFLENBQUM7SUFFaEIsZUFBZTtRQUNiLHNFQUFzRTtRQUN0RSw2Q0FBNkM7UUFDN0MsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDL0MsSUFBSSxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtZQUN4QyxJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztRQUNqRSxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQTNCVztJQUFULE1BQU0sRUFBRTtzQ0FBc0IsWUFBWTs2REFBMkI7QUFDNUQ7SUFBVCxNQUFNLEVBQUU7c0NBQXVCLFlBQVk7OERBQTJCO0FBQzdEO0lBQVQsTUFBTSxFQUFFO3NDQUF1QixZQUFZOzhEQUEyQjtBQUU3RDtJQUFULE1BQU0sRUFBRTtzQ0FBaUIsWUFBWTt3REFBb0U7QUFDaEc7SUFBVCxNQUFNLEVBQUU7c0NBQXFCLFlBQVk7NERBQWtDO0FBR2xFO0lBQVQsTUFBTSxFQUFFO3NDQUFzQixZQUFZOzZEQUFpRTtBQUNsRztJQUFULE1BQU0sRUFBRTtzQ0FBeUIsWUFBWTtnRUFBMEM7QUFFaEQ7SUFBdkMsU0FBUyxDQUFDLFNBQVMsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQzs7b0RBQXVEO0FBQ3BDO0lBQXpELFlBQVksQ0FBQyxjQUFjLEVBQUUsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQztzQ0FBZ0IsU0FBUzt1REFBbUI7QUFFNUY7SUFBUixLQUFLLEVBQUU7OzBEQUE0QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyVmlld0luaXQsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgUXVlcnlMaXN0LFxuICBWaWV3Q2hpbGQsXG4gIFZpZXdDaGlsZHJlbixcbiAgVmlld0NvbnRhaW5lclJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdEhvcml6b250YWxTdGVwcGVyLCBNYXRWZXJ0aWNhbFN0ZXBwZXIgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbCc7XG5pbXBvcnQgeyBTdGVwcGVyU2VsZWN0aW9uRXZlbnQgfSBmcm9tICdAYW5ndWxhci9jZGsvc3RlcHBlcic7XG5pbXBvcnQgeyBJTHV4U3RlcHBlckNvbmZpZ3VyYXRpb24gfSBmcm9tICcuL2x1eC1zdGVwcGVyLWNvbmZpZ3VyYXRpb24uaW50ZXJmYWNlJztcblxuLyoqXG4gKiBQYXJlbnQtS2xhc3NlIGbDvHIgZGVuIEx1eFN0ZXBwZXJWZXJ0aWNhbCB1bmQgTHV4U3RlcHBlckhvcml6b250YWwsIGJlaWRlIEtvbXBvbmVudGVuIHdlcmRlbiBhdXNzY2hsaWXDn2xpY2ggdm9uXG4gKiBkZW0gTHV4U3RlcHBlciB6dXIgRGFyc3RlbGx1bmcgZ2VudXR6dC5cbiAqL1xuZXhwb3J0IGNsYXNzIEx1eFN0ZXBwZXJQYXJlbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgLy8gRGllc2UgT3V0cHV0cyB3ZXJkZW4gYmVpIGRlbiBLbGlja3MgYXVmIGRpZSBTdGVwcGVyLWVpZ2VuZW4gTmF2aWdhdGlvbnMtQnV0dG9ucyBhdWdlbMO2c3QgdW5kIGluZm9ybWllcmVuIGRpZVxuICAvLyBMdXhTdGVwcGVyQ29tcG9uZW50XG4gIEBPdXRwdXQoKSBsdXhGaW5CdXR0b25DbGlja2VkOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIGx1eE5leHRCdXR0b25DbGlja2VkOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIGx1eFByZXZCdXR0b25DbGlja2VkOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgLy8gV2lyZCBiZWltIFdlY2hzZWwgZGVzIFN0ZXBzICjDvGJlciBIZWFkZXIgb2RlciBCdXR0b24pIGF1ZmdlcnVmZW5cbiAgQE91dHB1dCgpIGx1eFN0ZXBDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8U3RlcHBlclNlbGVjdGlvbkV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8U3RlcHBlclNlbGVjdGlvbkV2ZW50PigpO1xuICBAT3V0cHV0KCkgbHV4Q2hlY2tWYWxpZGF0aW9uOiBFdmVudEVtaXR0ZXI8dm9pZD4gPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG4gIC8vIFdpcmQgYmVpbSBBZnRlclZpZXdJbml0IHVuZCBiZWkgamVkZXIgQWt0dWFsaXNpZXJ1bmcgZGVyIE1hdFN0ZXBMYWJlbHMgYXVmZ2VydWZlbiB1bSBkaWUgTHV4U3RlcHBlckNvbXBvbmVudFxuICAvLyDDvGJlciBkaWUgYWt0dWVsbGVuIEVsZW1lbnRlIGluZm9ybWllcnQgenUgaGFsdGVuXG4gIEBPdXRwdXQoKSBsdXhNYXRTdGVwcGVyTG9hZGVkOiBFdmVudEVtaXR0ZXI8TWF0SG9yaXpvbnRhbFN0ZXBwZXIgfCBNYXRWZXJ0aWNhbFN0ZXBwZXI+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgbHV4TWF0U3RlcExhYmVsc0xvYWRlZDogRXZlbnRFbWl0dGVyPFZpZXdDb250YWluZXJSZWZbXT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQFZpZXdDaGlsZCgnc3RlcHBlcicsIHsgc3RhdGljOiB0cnVlIH0pIG1hdFN0ZXBwZXI6IE1hdEhvcml6b250YWxTdGVwcGVyIHwgTWF0VmVydGljYWxTdGVwcGVyO1xuICBAVmlld0NoaWxkcmVuKCdtYXRTdGVwTGFiZWwnLCB7IHJlYWQ6IFZpZXdDb250YWluZXJSZWYgfSkgbWF0U3RlcExhYmVsczogUXVlcnlMaXN0PFZpZXdDb250YWluZXJSZWY+O1xuXG4gIEBJbnB1dCgpIGx1eFN0ZXBwZXJDb25maWc6IElMdXhTdGVwcGVyQ29uZmlndXJhdGlvbjtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIC8vIFNvYmFsZCBkaWUgQ29tcG9uZW50IGluaXRpYWxpc2llcnQgaXN0LCBkZW0gUGFyZW50IChsdXhTdGVwcGVyKSBkZW5cbiAgICAvLyBNYXRTdGVwcGVyIHVuZCBkaWUgTWF0U3RlcExhYmVscyBtaXR0ZWlsZW5cbiAgICB0aGlzLmx1eE1hdFN0ZXBwZXJMb2FkZWQuZW1pdCh0aGlzLm1hdFN0ZXBwZXIpO1xuICAgIHRoaXMubHV4TWF0U3RlcExhYmVsc0xvYWRlZC5lbWl0KHRoaXMubWF0U3RlcExhYmVscy50b0FycmF5KCkpO1xuICAgIHRoaXMubWF0U3RlcExhYmVscy5jaGFuZ2VzLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICB0aGlzLmx1eE1hdFN0ZXBMYWJlbHNMb2FkZWQuZW1pdCh0aGlzLm1hdFN0ZXBMYWJlbHMudG9BcnJheSgpKTtcbiAgICB9KTtcbiAgfVxufVxuIl19