import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { LuxStepperParent } from '../../lux-stepper-model/lux-stepper-parent.class';
var LuxStepperHorizontalComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LuxStepperHorizontalComponent, _super);
    function LuxStepperHorizontalComponent() {
        return _super.call(this) || this;
    }
    LuxStepperHorizontalComponent = tslib_1.__decorate([
        Component({
            selector: 'lux-stepper-horizontal',
            template: "<!-- Horizontaler Stepper, die Konfiguration stammt aus dem LuxStepper und wird hier angewandt -->\n<mat-horizontal-stepper\n  [linear]=\"luxStepperConfig.luxLinear\"\n  [selectedIndex]=\"luxStepperConfig.luxCurrentStepNumber\"\n  [ngClass]=\"{\n    'lux-ignore-mat-step-icons': luxStepperConfig.luxUseCustomIcons,\n    'lux-block-pointer-events': luxStepperConfig.luxDisabled,\n    'lux-linear-stepper': luxStepperConfig.luxLinear,\n    'lux-no-animation': !luxStepperConfig.luxHorizontalStepAnimationActive\n  }\"\n  (selectionChange)=\"luxStepChanged.emit($event)\"\n  #stepper\n>\n  <!-- Alle aktuell bekannten Steps zeichnen -->\n  <ng-container *ngFor=\"let luxStep of luxStepperConfig.luxSteps; let i = index\">\n    <mat-step [completed]=\"luxStep.isCompleted()\" [optional]=\"luxStep.luxOptional\" [editable]=\"luxStep.luxEditable\">\n      <!-- Header des Steps -->\n      <ng-template matStepLabel>\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" (click)=\"luxCheckValidation.emit()\">\n          <ng-template #matStepLabel></ng-template>\n          <ng-container *ngTemplateOutlet=\"luxStep.headerTemplate\"></ng-container>\n        </div>\n      </ng-template>\n      <!-- Content des Steps, wenn Animationen aktiviert sind -->\n      <ng-container *ngIf=\"luxStepperConfig.luxHorizontalStepAnimationActive\">\n        <ng-container *ngTemplateOutlet=\"luxStep.contentTemplate\"></ng-container>\n        <ng-container *ngTemplateOutlet=\"navButtonsTemplate; context: { index: i, step: luxStep }\"></ng-container>\n      </ng-container>\n    </mat-step>\n  </ng-container>\n</mat-horizontal-stepper>\n\n<!-- Content des Steps, wenn Animationen deaktiviert sind -->\n<ng-container *ngIf=\"!luxStepperConfig.luxHorizontalStepAnimationActive\">\n  <ng-container *ngFor=\"let luxStep of luxStepperConfig.luxSteps; let i = index\">\n    <section\n      class=\"lux-stepper-content-section\"\n      [class.lux-display-none]=\"i !== matStepper.selectedIndex\"\n      *ngIf=\"matStepper\"\n    >\n      <ng-container\n        *ngTemplateOutlet=\"luxStep.contentTemplate ? luxStep.contentTemplate : noDataTemplate\"\n      ></ng-container>\n      <ng-container *ngTemplateOutlet=\"navButtonsTemplate; context: { index: i, step: luxStep }\"></ng-container>\n    </section>\n  </ng-container>\n</ng-container>\n<ng-template #noDataTemplate></ng-template>\n\n<!-- Nav-Buttons in separatem Template (da 2 mal hier verwendet) -->\n<ng-template #navButtonsTemplate let-i=\"index\" let-step=\"step\">\n  <lux-stepper-nav-buttons\n    [luxIndex]=\"i\"\n    [luxStep]=\"step\"\n    [luxStepperConfig]=\"luxStepperConfig\"\n    (luxPrevClick)=\"luxPrevButtonClicked.emit()\"\n    (luxNextClick)=\"luxNextButtonClicked.emit()\"\n    (luxFinClick)=\"luxFinButtonClicked.emit()\"\n    *ngIf=\"luxStepperConfig.luxShowNavigationButtons\"\n  >\n  </lux-stepper-nav-buttons>\n</ng-template>\n",
            styles: [".lux-no-animation ::ng-deep .mat-horizontal-content-container{height:0}::ng-deep .mat-horizontal-content-container{padding:0!important}"]
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], LuxStepperHorizontalComponent);
    return LuxStepperHorizontalComponent;
}(LuxStepperParent));
export { LuxStepperHorizontalComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LXN0ZXBwZXItaG9yaXpvbnRhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaWhrLWdmaS9sdXgtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sdXgtbGF5b3V0L2x1eC1zdGVwcGVyL2x1eC1zdGVwcGVyLXN1YmNvbXBvbmVudHMvbHV4LXN0ZXBwZXItaG9yaXpvbnRhbC9sdXgtc3RlcHBlci1ob3Jpem9udGFsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQU9wRjtJQUFtRCx5REFBZ0I7SUFDakU7ZUFDRSxpQkFBTztJQUNULENBQUM7SUFIVSw2QkFBNkI7UUFMekMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHdCQUF3QjtZQUNsQyx5MUZBQXNEOztTQUV2RCxDQUFDOztPQUNXLDZCQUE2QixDQUl6QztJQUFELG9DQUFDO0NBQUEsQUFKRCxDQUFtRCxnQkFBZ0IsR0FJbEU7U0FKWSw2QkFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEx1eFN0ZXBwZXJQYXJlbnQgfSBmcm9tICcuLi8uLi9sdXgtc3RlcHBlci1tb2RlbC9sdXgtc3RlcHBlci1wYXJlbnQuY2xhc3MnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdsdXgtc3RlcHBlci1ob3Jpem9udGFsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2x1eC1zdGVwcGVyLWhvcml6b250YWwuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9sdXgtc3RlcHBlci1ob3Jpem9udGFsLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgTHV4U3RlcHBlckhvcml6b250YWxDb21wb25lbnQgZXh0ZW5kcyBMdXhTdGVwcGVyUGFyZW50IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxufVxuIl19