import * as tslib_1 from "tslib";
import { animate, state, style, transition, trigger } from '@angular/animations';
import { AfterViewInit, ChangeDetectorRef, Component, ComponentFactoryResolver, ContentChild, DoCheck, ElementRef, EventEmitter, HostBinding, Input, OnDestroy, OnInit, Output, QueryList, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';
import { LuxListItemComponent } from '../lux-list/lux-list-subcomponents/lux-list-item.component';
import { LuxListComponent } from '../lux-list/lux-list.component';
import { LuxTabsComponent } from '../lux-tabs/lux-tabs.component';
import { LuxMasterDetailMobileHelperService } from './lux-master-detail-mobile-helper.service';
import { LuxDetailViewComponent } from './lux-master-detail-subcomponents/lux-detail-view/lux-detail-view.component';
import { LuxMasterFooterComponent } from './lux-master-detail-subcomponents/lux-master-footer/lux-master-footer.component';
import { LuxMasterHeaderComponent } from './lux-master-detail-subcomponents/lux-master-header/lux-master-header.component';
import { LuxMasterSimpleComponent } from './lux-master-detail-subcomponents/lux-master-simple/lux-master-simple.component';
import { BehaviorSubject, ReplaySubject } from 'rxjs';
import { delay, tap } from 'rxjs/operators';
import { LuxDetailWrapperComponent } from './lux-master-detail-subcomponents/lux-detail-view/lux-detail-wrapper.component';
import { LiveAnnouncer } from '@angular/cdk/a11y';
var LuxMasterDetailComponent = /** @class */ (function () {
    function LuxMasterDetailComponent(mobileHelperService, cdr, cfr, liveAnnouncer) {
        this.mobileHelperService = mobileHelperService;
        this.cdr = cdr;
        this.cfr = cfr;
        this.liveAnnouncer = liveAnnouncer;
        this.luxSelectedDetailChange = new EventEmitter();
        this.luxScrolled = new EventEmitter();
        this.overflowY = true;
        this._luxMasterList = new BehaviorSubject([]);
        this._luxOpen = true;
        this.updateDetail$ = new ReplaySubject(1);
        this.detailContext = { $implicit: {} };
        // Flag welches bestimmt ob die Empty-Anzeigen der Masterliste anhand der Detail-Ansicht ausgerichtet werden
        this.alignEmptyIndicators = true;
        this.luxEmptyIconMaster = 'fas fa-info-circle';
        this.luxEmptyLabelMaster = 'Keine Einträge vorhanden';
        this.luxEmptyIconDetail = 'fas fa-info-circle';
        this.luxEmptyLabelDetail = 'Kein Element ausgewählt';
        this.luxEmptyIconMasterSize = '5x';
        this.luxEmptyIconDetailSize = '5x';
        this.luxMasterSpinnerDelay = 1000;
        this.luxTitleLineBreak = false;
        this.luxMasterIsLoading = false;
        this.luxCompareWith = function (o1, o2) { return o1 === o2; };
        this.mobileHelperService.register();
    }
    Object.defineProperty(LuxMasterDetailComponent.prototype, "luxOpen", {
        get: function () {
            return this._luxOpen;
        },
        set: function (open) {
            if (open) {
                this.mobileHelperService.openMaster();
            }
            else {
                this.mobileHelperService.closeMaster();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LuxMasterDetailComponent.prototype, "luxSelectedDetail", {
        /* Selected Detail Get/Set */
        get: function () {
            return this._luxSelectedDetail;
        },
        set: function (value) {
            this.updateDetail$.next(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LuxMasterDetailComponent.prototype, "luxMasterList", {
        /* Master List Get/Set */
        get: function () {
            return this._luxMasterList.getValue();
        },
        set: function (value) {
            if (this.masterListLength && value && this.masterListLength < value.length) {
                this.announcePossibleInfiniteScrolling();
            }
            this._luxMasterList.next(value);
            this.masterListLength = value ? value.length : 0;
        },
        enumerable: true,
        configurable: true
    });
    LuxMasterDetailComponent.prototype.ngOnInit = function () {
        this.handleMasterListUpdate();
        this.handleViewCollapse();
        this.mobileHelperService.openMaster();
    };
    LuxMasterDetailComponent.prototype.ngAfterViewInit = function () {
        this.handleDetailUpdate();
        this.handleMasterQueryList();
    };
    LuxMasterDetailComponent.prototype.ngOnDestroy = function () {
        this.mobileHelperService.unregister();
        this.updateDetailSubscription.unsubscribe();
    };
    LuxMasterDetailComponent.prototype.ngDoCheck = function () {
        // Wurde ein Element in die Masterliste gepusht oder entfernt?
        if (this.luxMasterList && this.luxMasterList.length !== this.masterListLength) {
            if (this.luxMasterList.length > this.masterListLength) {
                this.announcePossibleInfiniteScrolling();
            }
            // Wenn ja, das selektierte Detail neurendern
            this.masterListLength = this.luxMasterList.length;
            this.luxSelectedDetail = this.luxMasterList[this.selectedPosition];
            this.announcePossibleInfiniteScrolling();
        }
        // Ausrichtung der Empty-Indikatoren der Masterliste prüfen
        if (!this.mobileHelperService.isMobile() && (!this.luxMasterList || this.luxMasterList.length === 0)) {
            this.checkEmptyIndicatorAlignment();
        }
    };
    /**
     * Wenn in der LuxList ein neuer Selected-Wert gepusht wird, diesen abfangen und
     * ein neues Detail auswählen.
     * @param $event
     */
    LuxMasterDetailComponent.prototype.onSelectedChange = function ($event) {
        if ($event > -1) {
            this.selectedPosition = $event;
            this.updateDetail$.next(this.luxMasterList[$event]);
            if (this.mobileHelperService.isMobile()) {
                this.mobileHelperService.closeMaster();
            }
        }
    };
    /**
     * Bestimmt ob die Masterliste auf- oder eingeklappt ist.
     * @param open
     */
    LuxMasterDetailComponent.prototype.toggleList = function (open) {
        if (open) {
            this.mobileHelperService.openMaster();
        }
        else {
            this.mobileHelperService.closeMaster();
        }
        if (this.tabsComponent) {
            this.tabsComponent.rerenderTabs();
        }
    };
    /**
     * Prueft ob die Detailansicht gerade fuer den User sichtbar ist.
     * @returns boolean
     */
    LuxMasterDetailComponent.prototype.isDetailInvisible = function () {
        return this.mobileHelperService.isMobile() && this.luxOpen;
    };
    LuxMasterDetailComponent.prototype.onInfiniteScrollingLoad = function ($event) {
        this.luxScrolled.emit($event);
    };
    LuxMasterDetailComponent.prototype.onSwipeLeft = function () {
        if (this.mobileHelperService.isMobile()) {
            this.mobileHelperService.closeMaster();
        }
    };
    LuxMasterDetailComponent.prototype.onSwipeRight = function () {
        if (this.mobileHelperService.isMobile()) {
            this.mobileHelperService.openMaster();
        }
    };
    /**
     * Kapselung von der übergebenen luxCompareWith-Funktion.
     * Fängt undefinierte Objekte ab und returned stattdessen false.
     * @param o1
     * @param o2
     */
    LuxMasterDetailComponent.prototype.compareObjects = function (o1, o2) {
        if (!o1 || !o2) {
            return false;
        }
        return this.luxCompareWith(o1, o2);
    };
    /**
     * Steuert das Breitenverhaeltnis von Master und Detail je nachdem
     * ob der Master auf- oder eingeklappt ist und ob eine Mobilansicht aktiv ist.
     */
    LuxMasterDetailComponent.prototype.updateOpen = function () {
        if (this.luxOpen) {
            if (this.mobileHelperService.isMobile()) {
                this.flexMaster = '100';
                this.flexDetail = '0';
            }
            else {
                this.flexMaster = '30';
                this.flexDetail = '70';
            }
        }
        else {
            if (this.mobileHelperService.isMobile()) {
                this.flexMaster = '0';
                this.flexDetail = '100';
            }
            else {
                this.flexMaster = '5';
                this.flexDetail = '95';
            }
        }
    };
    /**
     * Kümmert sich um Änderungen an der HTML-Node der Master-Liste.
     * Rückt dabei das selektierte Element in den Fokus und berechnet wie viele Elemente
     * gerade in der Liste sichtbar sein können (für das Durchschalten mit Pfeiltasten benötigt).
     */
    LuxMasterDetailComponent.prototype.handleMasterQueryList = function () {
        var _this = this;
        this.luxMasterQueryList.changes.subscribe(function (masterListElements) {
            if (masterListElements.first) {
                var nativeElement = masterListElements.first.nativeElement;
                _this.maxItemsVisible = Math.floor(nativeElement.offsetHeight / nativeElement.offsetHeight);
            }
            // Der Abschnitt hier fängt den Fall ab, dass z.B. das LuxMasterList-Array selbst angepasst wird (z.B. durch Array.reverse)
            // Das sorgt dafür, dass das visuell selektierte Element auch das passende zur Detail-View ist.
            var newSelectedPosition = _this.luxMasterList.indexOf(_this.luxSelectedDetail);
            if (newSelectedPosition !== _this.selectedPosition) {
                setTimeout(function () {
                    _this.selectedPosition = newSelectedPosition;
                });
            }
        });
    };
    /**
     * Kümmert sich um die Kollabierung der Master-Liste, wenn zwischen Mobil- und Desktopansicht gewechselt wird.
     */
    LuxMasterDetailComponent.prototype.handleViewCollapse = function () {
        var _this = this;
        this.mobileHelperService.masterCollapsedObservable.subscribe(function (open) {
            // Falls nichts selektiert ist, sollte die Darstellung beim Wechsel in kleine Media Queries die Masterliste zeigen
            if (_this.mobileHelperService.isMobile() && !_this.luxSelectedDetail && !open) {
                open = true;
            }
            _this._luxOpen = open;
            _this.updateOpen();
        });
    };
    /**
     * Kümmert sich um Änderungen an dem selektierten Detail.
     * Dabei werden mehrere Zuweisungen an das Detail über throttleTime gebündelt und nur das Aktuellste genommen.
     * Anschließend wird die Komponente angewiesen das neue Detail-Objekt zu rendern.
     */
    LuxMasterDetailComponent.prototype.handleDetailUpdate = function () {
        var _this = this;
        this.updateDetailSubscription = this.updateDetail$.asObservable().subscribe(function (detail) {
            if (!detail) {
                _this.detailViewContainerRef.clear();
                _this.setNewDetail(detail);
            }
            else {
                if (!_this.compareObjects(_this.luxSelectedDetail, detail)) {
                    _this.detailViewContainerRef.clear();
                    if (detail) {
                        _this.detailContext = { $implicit: detail };
                        // Den Detail-Wrapper erzeugen und abfangen, wann die Nodes geladen worden sind
                        var child = _this.cfr.resolveComponentFactory(LuxDetailWrapperComponent);
                        var childRef = _this.detailViewContainerRef.createComponent(child);
                        var instance = childRef.instance;
                        instance.luxDetailContext = _this.detailContext;
                        instance.luxDetailTemplate = _this.detailView.tempRef;
                        instance.luxDetailRendered.subscribe(function () {
                            _this.setNewDetail(detail);
                        });
                        // Die Detailansicht nach dem Wechsel wieder nach oben scrollen lassen
                        _this.detailViewContainerRef.element.nativeElement.parentNode.scrollTop = 0;
                        _this.cdr.detectChanges();
                    }
                }
            }
        });
    };
    /**
     * Wird aufgerufen nachdem ein neues Detail-Template gerendert wurde und aktualisiert
     * luxSelectedDetail dementsprechend.
     */
    LuxMasterDetailComponent.prototype.setNewDetail = function (detail) {
        if (!this.compareObjects(this.luxSelectedDetail, detail)) {
            this._luxSelectedDetail = detail;
            this.selectedPosition = this.luxMasterList.indexOf(detail);
            this.luxSelectedDetailChange.emit(this.luxSelectedDetail);
            // Die Master-Liste fokussieren (die Liste gibt es nur einmal, weil wir auf Changes hören, ist sie aber in einer QueryList)
            this.luxMasterQueryList.first.nativeElement.focus();
            if (this.mobileHelperService.isMobile()) {
                this.luxOpen = false;
            }
            this.mobileHelperService.hasValue = !!this._luxSelectedDetail;
            this.cdr.detectChanges();
        }
    };
    /**
     * Kümmert sich um den Fall, dass die Master-Liste selbst sich ändert.
     */
    LuxMasterDetailComponent.prototype.handleMasterListUpdate = function () {
        var _this = this;
        this._luxMasterList
            .asObservable()
            .pipe(
        // Workaround um ExpressionChanged-Fehler zu vermeiden
        delay(0), tap(function () {
            if (!_this.luxMasterList || _this.luxMasterList.length === 0) {
                _this.luxSelectedDetail = undefined;
            }
        }))
            .subscribe();
    };
    /**
     * Prüft ob das Header- oder -Footer-Element der Masterliste ca. 50% der Master-Höhe einnehmen.
     *
     * Wenn ja, wird die Ausrichtung des Master-Empty-Labels und Master-Empty-Icons nicht mehr anhand des Detail bestimmt.
     */
    LuxMasterDetailComponent.prototype.checkEmptyIndicatorAlignment = function () {
        var headerHeight = this.masterHeader ? this.masterHeader.nativeElement.offsetHeight : 0;
        var footerHeight = this.masterFooter ? this.masterFooter.nativeElement.offsetHeight : 0;
        if (this.masterContainer) {
            // Max-Height ist die Hälfte der Master-Container Höhe minus eine kleine Pauschale von 100px damit
            // die Ansicht nicht zu knapp ist
            var maxHeight = this.masterContainer.nativeElement.offsetHeight / 2 - 100;
            this.alignEmptyIndicators = !(headerHeight > maxHeight || footerHeight > maxHeight);
        }
    };
    /**
     * Meldet über den LiveAnnouncer, dass evtl. weitere Daten via InfiniteScrolling nachgeladen werden könnten.
     *
     * "assertive", damit die Meldung auf jeden Fall vom ScreenReader vorgelesen wird und nicht von etwaigen anderen
     * Aussagen verdeckt wird.
     */
    LuxMasterDetailComponent.prototype.announcePossibleInfiniteScrolling = function () {
        this.liveAnnouncer.announce('Die Masterliste hat weitere Einträge erhalten. ' +
            'Aufgrund des Infinite-Scrollings könnten vielleicht noch mehr Einträge nachgeladen werden.', 'assertive');
    };
    LuxMasterDetailComponent.ctorParameters = function () { return [
        { type: LuxMasterDetailMobileHelperService },
        { type: ChangeDetectorRef },
        { type: ComponentFactoryResolver },
        { type: LiveAnnouncer }
    ]; };
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], LuxMasterDetailComponent.prototype, "luxSelectedDetailChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], LuxMasterDetailComponent.prototype, "luxScrolled", void 0);
    tslib_1.__decorate([
        ContentChild(LuxMasterSimpleComponent, { static: false }),
        tslib_1.__metadata("design:type", Object)
    ], LuxMasterDetailComponent.prototype, "masterSimple", void 0);
    tslib_1.__decorate([
        ContentChild(LuxDetailViewComponent, { static: false }),
        tslib_1.__metadata("design:type", Object)
    ], LuxMasterDetailComponent.prototype, "detailView", void 0);
    tslib_1.__decorate([
        ContentChild(LuxMasterFooterComponent, { static: false, read: ElementRef }),
        tslib_1.__metadata("design:type", ElementRef)
    ], LuxMasterDetailComponent.prototype, "masterFooter", void 0);
    tslib_1.__decorate([
        ViewChildren(LuxListComponent, { read: ElementRef }),
        tslib_1.__metadata("design:type", QueryList)
    ], LuxMasterDetailComponent.prototype, "luxMasterQueryList", void 0);
    tslib_1.__decorate([
        ViewChildren(LuxListItemComponent),
        tslib_1.__metadata("design:type", QueryList)
    ], LuxMasterDetailComponent.prototype, "luxMasterListItemQueryList", void 0);
    tslib_1.__decorate([
        ViewChild(LuxMasterHeaderComponent, { read: ElementRef, static: true }),
        tslib_1.__metadata("design:type", ElementRef)
    ], LuxMasterDetailComponent.prototype, "masterHeader", void 0);
    tslib_1.__decorate([
        ViewChild(LuxListItemComponent, { read: ElementRef, static: false }),
        tslib_1.__metadata("design:type", ElementRef)
    ], LuxMasterDetailComponent.prototype, "luxMasterEntryElementRef", void 0);
    tslib_1.__decorate([
        ContentChild(LuxTabsComponent, { static: false }),
        tslib_1.__metadata("design:type", LuxTabsComponent)
    ], LuxMasterDetailComponent.prototype, "tabsComponent", void 0);
    tslib_1.__decorate([
        ViewChild('masterSpinnerCard', { read: ElementRef, static: true }),
        tslib_1.__metadata("design:type", ElementRef)
    ], LuxMasterDetailComponent.prototype, "masterSpinnerCard", void 0);
    tslib_1.__decorate([
        ViewChild('detailContainer', { read: ElementRef, static: false }),
        tslib_1.__metadata("design:type", ElementRef)
    ], LuxMasterDetailComponent.prototype, "detailFrame", void 0);
    tslib_1.__decorate([
        ViewChild('detailEmpty', { read: ElementRef, static: true }),
        tslib_1.__metadata("design:type", ElementRef)
    ], LuxMasterDetailComponent.prototype, "detailEmpty", void 0);
    tslib_1.__decorate([
        ViewChild('detailViewContainerRef', { read: ViewContainerRef, static: true }),
        tslib_1.__metadata("design:type", ViewContainerRef)
    ], LuxMasterDetailComponent.prototype, "detailViewContainerRef", void 0);
    tslib_1.__decorate([
        ViewChild('masterContainer', { read: ElementRef, static: true }),
        tslib_1.__metadata("design:type", ElementRef)
    ], LuxMasterDetailComponent.prototype, "masterContainer", void 0);
    tslib_1.__decorate([
        HostBinding('class.lux-overflow-y-auto'),
        tslib_1.__metadata("design:type", Boolean)
    ], LuxMasterDetailComponent.prototype, "overflowY", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxMasterDetailComponent.prototype, "luxEmptyIconMaster", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxMasterDetailComponent.prototype, "luxEmptyLabelMaster", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxMasterDetailComponent.prototype, "luxEmptyIconDetail", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxMasterDetailComponent.prototype, "luxEmptyLabelDetail", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], LuxMasterDetailComponent.prototype, "luxEmptyIconMasterSize", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], LuxMasterDetailComponent.prototype, "luxEmptyIconDetailSize", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number)
    ], LuxMasterDetailComponent.prototype, "luxMasterSpinnerDelay", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxMasterDetailComponent.prototype, "luxTagIdMaster", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxMasterDetailComponent.prototype, "luxTagIdDetail", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], LuxMasterDetailComponent.prototype, "luxTitleLineBreak", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], LuxMasterDetailComponent.prototype, "luxMasterIsLoading", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], LuxMasterDetailComponent.prototype, "luxCompareWith", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], LuxMasterDetailComponent.prototype, "luxOpen", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], LuxMasterDetailComponent.prototype, "luxSelectedDetail", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Array),
        tslib_1.__metadata("design:paramtypes", [Array])
    ], LuxMasterDetailComponent.prototype, "luxMasterList", null);
    LuxMasterDetailComponent = tslib_1.__decorate([
        Component({
            selector: 'lux-master-detail',
            template: "<div\n  class=\"lux-master-detail\"\n  fxLayout=\"row\"\n  fxFlex=\"grow\"\n  (swipeleft)=\"onSwipeLeft()\"\n  (swiperight)=\"onSwipeRight()\"\n  fxFill\n>\n  <div\n    [fxFlex]=\"flexMaster\"\n    fxLayout=\"column\"\n    class=\"lux-master-container\"\n    tabindex=\"1\"\n    luxTagIdHandler\n    [luxTagId]=\"luxTagIdMaster\"\n    [ngClass]=\"{\n      'lux-hidden': !luxOpen && mobileHelperService.isMobile(),\n      'lux-0-width': !luxOpen && mobileHelperService.isMobile(),\n      'lux-master-container-mobile': mobileHelperService.isMobile(),\n      'lux-empty-elements-aligned': alignEmptyIndicators\n    }\"\n    #masterContainer\n  >\n    <!-- Header Element ueber der Master-Liste -->\n    <lux-master-header\n      (luxClicked)=\"toggleList($event)\"\n      [luxToggleHidden]=\"\n        (mobileHelperService.isMobile() && !this.luxSelectedDetail && !luxOpen) || mobileHelperService.isMobile()\n      \"\n      [ngClass]=\"{\n        'lux-not-open': !luxOpen,\n        'lux-hidden': !luxOpen && mobileHelperService.isMobile()\n      }\"\n    >\n      <ng-content select=\"lux-master-header-content\" *ngIf=\"luxOpen\"></ng-content>\n    </lux-master-header>\n\n    <!-- Master Simple Component gesetzt? -> Standard Lux Liste als Master nutzen  (window:keydown)=\"handleMasterKeyInput($event)\" -->\n    <lux-master-view fxFlex=\"grow\" [ngClass]=\"{ 'lux-hidden': !luxOpen && !mobileHelperService.isMobile() }\">\n      <lux-list\n        fxFlex=\"grow\"\n        class=\"lux-overflow-y-auto lux-overflow-wrap-break-word\"\n        luxInfiniteScroll\n        [luxScrollPercent]=\"85\"\n        [luxImmediateCallback]=\"true\"\n        [luxIsLoading]=\"luxMasterIsLoading\"\n        [luxEmptyIconSize]=\"luxEmptyIconMasterSize\"\n        [luxEmptyLabel]=\"luxEmptyLabelMaster\"\n        [luxEmptyIconName]=\"luxEmptyIconMaster\"\n        [luxSelectedPosition]=\"selectedPosition\"\n        (luxSelectedPositionChange)=\"onSelectedChange($event)\"\n        (luxScrolled)=\"onInfiniteScrollingLoad($event)\"\n      >\n        <lux-list-item\n          *ngFor=\"let masterElement of luxMasterList\"\n          [luxTitleLineBreak]=\"luxTitleLineBreak\"\n          luxTitle=\"{{ masterElement | luxPropertyFromObject: masterSimple.luxTitleProp }}\"\n          luxSubTitle=\"{{ masterElement | luxPropertyFromObject: masterSimple.luxSubTitleProp }}\"\n        >\n          <lux-list-item-icon>\n            <ng-container\n              *ngTemplateOutlet=\"masterSimple.iconTempRef; context: { $implicit: masterElement }\"\n            ></ng-container>\n          </lux-list-item-icon>\n          <lux-list-item-content>\n            <ng-container\n              *ngTemplateOutlet=\"masterSimple.contentTempRef; context: { $implicit: masterElement }\"\n            ></ng-container>\n          </lux-list-item-content>\n        </lux-list-item>\n\n        <div\n          fxLayout=\"row\"\n          fxLayoutAlign=\"center\"\n          #masterSpinnerCard\n          [@masterIsLoadingChanged]=\"luxMasterIsLoading\"\n          [ngClass]=\"{ 'lux-spinner-hidden': !luxMasterIsLoading }\"\n        >\n          <br *ngIf=\"luxMasterIsLoading\" />\n          <mat-progress-spinner class=\"lux-m-3\" color=\"primary\" mode=\"indeterminate\" diameter=\"48\" fxFlex=\"0 0 auto\">\n          </mat-progress-spinner>\n          <br *ngIf=\"luxMasterIsLoading\" />\n        </div>\n      </lux-list>\n    </lux-master-view>\n\n    <!-- Kein Master Simple Component gesetzt? -> Von Aufrufer eingegebenen Content als Master nutzen -->\n    <ng-content *ngIf=\"!masterSimple\" select=\"lux-master-view\"></ng-content>\n\n    <!-- Footer Element unter der Master-Liste -->\n    <ng-content select=\"lux-master-footer\" *ngIf=\"luxOpen\"></ng-content>\n  </div>\n\n  <div\n    [fxFlex]=\"flexDetail\"\n    fxFill\n    luxTagIdHandler\n    class=\"lux-detail-container lux-overflow-y-auto\"\n    [ngClass]=\"{ 'lux-display-none': isDetailInvisible() }\"\n    [luxTagId]=\"luxTagIdDetail\"\n    tabindex=\"2\"\n  >\n    <ng-template #detailViewContainerRef></ng-template>\n\n    <!-- Das Empty-Icon und Empty-Label, wenn kein Detail gegeben ist -->\n    <div\n      class=\"lux-detail-empty\"\n      [ngClass]=\"{ 'lux-display-none': isDetailInvisible() || selectedPosition > -1 }\"\n      fxLayout=\"column\"\n      fxLayoutAlign=\"center center\"\n      #detailEmpty\n    >\n      <lux-icon class=\"lux-detail-empty-icon\" [luxIconName]=\"luxEmptyIconDetail\" [luxIconSize]=\"luxEmptyIconDetailSize\">\n      </lux-icon>\n      <span class=\"lux-detail-empty-icon-text\">\n        <strong>{{ luxEmptyLabelDetail }}</strong>\n      </span>\n    </div>\n  </div>\n</div>\n",
            animations: [
                trigger('masterIsLoadingChanged', [
                    state('true', style({ opacity: 1 })),
                    state('false', style({ opacity: 0 })),
                    transition('1 => 0', animate('0.5s')),
                    transition('0 => 1', animate('1s'))
                ])
            ],
            styles: ["@charset \"UTF-8\";lux-side-nav .lux-side-nav-item,lux-side-nav lux-link{box-sizing:border-box}lux-side-nav .lux-side-nav-item.lux-side-nav-item-selected,lux-side-nav lux-link.lux-side-nav-item-selected{background-color:rgba(112,141,170,.2)!important;position:relative;border-radius:4px}lux-side-nav .lux-side-nav-item.lux-side-nav-item-selected:after,lux-side-nav lux-link.lux-side-nav-item-selected:after{content:'';left:0;width:6px;top:0;bottom:0;position:absolute;border-left:6px solid #0073b3;border-radius:4px 0 0 4px}lux-side-nav .lux-side-nav-item button .mat-button-focus-overlay,lux-side-nav lux-link button .mat-button-focus-overlay{display:none}lux-side-nav .lux-side-nav-item button:focus,lux-side-nav lux-link button:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}lux-side-nav .lux-side-nav-item button:hover,lux-side-nav lux-link button:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-list{border:4px solid transparent}lux-list:focus{outline-width:0;border:4px solid rgba(112,141,170,.2)!important}lux-list lux-list-item:focus{outline-width:0}lux-list lux-list-item:focus mat-card{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}lux-list lux-list-item lux-card.lux-list-item-selected mat-card{background-color:rgba(112,141,170,.2)!important;position:relative;border-radius:4px}lux-list lux-list-item lux-card.lux-list-item-selected mat-card:after{content:'';left:0;width:6px;top:0;bottom:0;position:absolute;border-left:6px solid #0073b3;border-radius:4px 0 0 4px}lux-list lux-list-item lux-card mat-card{box-sizing:border-box}lux-list lux-list-item lux-card mat-card:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .lux-form-control-label>*{color:#335c85}lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .cdk-focused .mat-radio-container,lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .mat-checkbox-inner-container,lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .mat-slide-toggle-thumb{position:relative}lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .cdk-focused .mat-radio-container:after,lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .mat-checkbox-inner-container:after,lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .mat-slide-toggle-thumb:after{content:\"\";border:1px solid rgba(112,141,170,.2);background-color:rgba(112,141,170,.2);display:block;top:-4px;left:-4px;right:-4px;bottom:-4px;border-radius:15px;z-index:1;position:absolute}lux-form-control .lux-form-control:not(.lux-form-control-disabled).lux-focused .lux-form-control-container:after{content:'';display:block;box-sizing:border-box;left:0;right:0;position:absolute;height:2px;border-bottom:2px solid #0073b3}lux-datepicker mat-datepicker-toggle button:focus:after{content:\"\";border:1px solid rgba(112,141,170,.2);background-color:rgba(112,141,170,.2);display:block;top:-4px;left:-4px;right:-4px;bottom:-4px;border-radius:15px;z-index:1;position:absolute}.lux-datepicker-panel .mat-calendar-header button .mat-button-focus-overlay,lux-datepicker mat-datepicker-toggle .mat-button-focus-overlay{display:none}.lux-datepicker-panel .mat-calendar-header button:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-datepicker-panel .mat-calendar-header button:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}.lux-datepicker-panel .mat-calendar-content td.mat-calendar-body-cell:hover>div{background-color:rgba(0,0,0,.2)!important;border-radius:999px}.lux-datepicker-panel .mat-calendar-content td.mat-calendar-body-cell.mat-calendar-body-active>div{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:999px}lux-table tr:hover>td,lux-table tr:hover>th{border-radius:0;background-color:#cfcfcf!important}lux-table th button.mat-sort-header-button:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-select-panel mat-option{border-left:0;box-sizing:border-box}.lux-select-panel mat-option.mat-selected{background-color:rgba(112,141,170,.2)!important;position:relative;border-radius:4px}.lux-select-panel mat-option.mat-selected:after{content:'';left:0;width:6px;top:0;bottom:0;position:absolute;border-left:6px solid #0073b3;border-radius:4px 0 0 4px}.lux-select-panel mat-option:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-select-panel mat-option.mat-active,.lux-select-panel mat-option:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-button button:not([disabled]) .mat-button-focus-overlay{display:none}lux-button button:not([disabled]):not(.mat-fab):not(.mat-raised-button):focus{background-color:rgba(112,141,170,.2)!important}lux-button button:not([disabled]):not(.mat-fab):not(.mat-raised-button):hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-button button:not([disabled]).mat-fab:focus,lux-button button:not([disabled]).mat-raised-button:focus{background-color:rgba(112,141,170,.2)!important}lux-button button:not([disabled]).mat-fab:focus.mat-accent,lux-button button:not([disabled]).mat-raised-button:focus.mat-accent{background-color:#b6d184!important}lux-button button:not([disabled]).mat-fab:focus.mat-warn,lux-button button:not([disabled]).mat-raised-button:focus.mat-warn{background-color:#ea2524!important}lux-button button:not([disabled]).mat-fab:focus.mat-primary,lux-button button:not([disabled]).mat-raised-button:focus.mat-primary{background-color:#4b82ba!important}.lux-autocomplete-panel mat-option{border-left:0;box-sizing:border-box}.lux-autocomplete-panel mat-option:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-autocomplete-panel mat-option.mat-active,.lux-autocomplete-panel mat-option:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-tabs mat-ink-bar{background-color:#0073b3!important}lux-tabs .mat-tab-label:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}lux-panel mat-expansion-panel-header:hover,lux-stepper mat-step-header:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-panel mat-expansion-panel-header:focus,lux-stepper mat-step-header:focus,lux-stepper mat-step-header[aria-selected=true],lux-tile mat-card:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}lux-master-detail lux-master-header .lux-master-header-collapse button.lux-button:not(.mat-fab):not(.mat-raised-button):focus{background-color:rgba(0,0,0,.2)!important}lux-file-list .lux-file-list{border:4px solid transparent}lux-file-list .lux-file-list:focus{outline-width:0;border:4px solid rgba(112,141,170,.2)!important}lux-file-list .lux-file-list .lux-file-list-entry{border:4px solid transparent}lux-file-list .lux-file-list .lux-file-list-entry:focus{outline-width:0;border:4px solid rgba(112,141,170,.2)!important}lux-file-list .lux-file-list mat-card{margin:4px}.lux-menu-panel .lux-menu-item:not([disabled=true]):focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}.lux-menu-panel .lux-menu-item:not([disabled=true]):hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}lux-dialog-structure lux-dialog-content:focus,lux-dialog-structure lux-dialog-title:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}example-root .example-base-components-list .example-component-list-item,example-root .example-base-components-list mat-expansion-panel-header{box-sizing:border-box}example-root .example-base-components-list .example-component-list-item.example-component-list-item-selected,example-root .example-base-components-list mat-expansion-panel-header.example-component-list-item-selected{background-color:rgba(112,141,170,.2)!important;position:relative;border-radius:4px}example-root .example-base-components-list .example-component-list-item.example-component-list-item-selected:after,example-root .example-base-components-list mat-expansion-panel-header.example-component-list-item-selected:after{content:'';left:0;width:6px;top:0;bottom:0;position:absolute;border-left:6px solid #0073b3;border-radius:4px 0 0 4px}example-root .example-base-components-list .example-component-list-item:focus,example-root .example-base-components-list mat-expansion-panel-header:focus{outline-width:0!important;outline-style:unset;background-color:rgba(112,141,170,.2)!important;border-radius:4px}example-root .example-base-components-list .example-component-list-item:hover,example-root .example-base-components-list mat-expansion-panel-header:hover{background-color:rgba(0,0,0,.2)!important;border-radius:4px}.lux-app-container,body,html{height:100%}.lux-app-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex}body{-webkit-overflow-scrolling:touch}div{font-family:Roboto,Helvetica Neue,sans-serif}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing.lux-file-preview-backdrop{background:#000;opacity:.8!important}lux-card.lux-card-grow{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;width:400px;min-width:0}lux-card.lux-card-grow mat-card,lux-card.lux-card-grow mat-card-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;min-width:0}.lux-crop{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.lux-label{color:rgba(0,0,0,.54);font-size:75%}.lux-hint{color:rgba(0,0,0,.6);font-size:12px}.lux-hidden{visibility:hidden}.lux-nowrap{white-space:nowrap}.lux-cursor{cursor:pointer}.lux-block-pointer-events{pointer-events:none}.lux-vertical-align-baseline{vertical-align:baseline!important}.lux-black-semi-transparent{color:rgba(0,0,0,.87)}.lux-semi-transparent{opacity:.6}.lux-overflow-y-hidden{overflow-y:hidden}.lux-overflow-y-auto{overflow-y:auto}.lux-overflow-wrap-break-word{overflow-wrap:break-word}.lux-bold{font-weight:700!important}.lux-uppercase{text-transform:uppercase!important}.lux-lowercase{text-transform:lowercase!important}.lux-hyphenate{overflow-wrap:break-word;word-wrap:break-word;word-break:normal;-webkit-hyphens:auto;-ms-hyphens:auto;hyphens:auto;overflow-x:auto}.lux-p-footer,.lux-p-header{padding:8px}.lux-snackbar{top:68px;right:8px;position:absolute;margin:0!important;min-width:unset!important;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-snack-bar-handset .lux-snackbar{left:8px;width:auto!important}.lux-mt-0{margin-top:0}.lux-pt-0{padding-top:0}.lux-mt-1{margin-top:2px}.lux-pt-1{padding-top:2px}.lux-mt-2{margin-top:4px}.lux-pt-2{padding-top:4px}.lux-mt-3{margin-top:8px}.lux-pt-3{padding-top:8px}.lux-mt-4{margin-top:16px}.lux-pt-4{padding-top:16px}.lux-mb-0{margin-bottom:0}.lux-pb-0{padding-bottom:0}.lux-mb-1{margin-bottom:2px}.lux-pb-1{padding-bottom:2px}.lux-mb-2{margin-bottom:4px}.lux-pb-2{padding-bottom:4px}.lux-mb-3{margin-bottom:8px}.lux-pb-3{padding-bottom:8px}.lux-mb-4{margin-bottom:16px}.lux-pb-4{padding-bottom:16px}.lux-ml-0{margin-left:0}.lux-pl-0{padding-left:0}.lux-ml-1{margin-left:2px}.lux-pl-1{padding-left:2px}.lux-ml-2{margin-left:4px}.lux-pl-2{padding-left:4px}.lux-ml-3{margin-left:8px}.lux-pl-3{padding-left:8px}.lux-ml-4{margin-left:16px}.lux-pl-4{padding-left:16px}.lux-m-0{margin:0}.lux-mr-0{margin-right:0}.lux-p-0{padding:0}.lux-pr-0{padding-right:0}.lux-m-1{margin:2px}.lux-mr-1{margin-right:2px}.lux-p-1{padding:2px}.lux-pr-1{padding-right:2px}.lux-m-2{margin:4px}.lux-mr-2{margin-right:4px}.lux-p-2{padding:4px}.lux-pr-2{padding-right:4px}.lux-m-3{margin:8px}.lux-mr-3{margin-right:8px}.lux-p-3{padding:8px}.lux-pr-3{padding-right:8px}.lux-m-4{margin:16px}.lux-mr-4{margin-right:16px}.lux-p-4{padding:16px}.lux-pr-4{padding-right:16px}.lux-flex-layout-gap-10[style*=row]>:not(:last-child){margin-right:10px}.lux-flex-layout-gap-10[style*=column]>:not(:last-child){margin-bottom:10px}.lux-flex-layout-gap-20[style*=row]>:not(:last-child){margin-right:20px}.lux-flex-layout-gap-20[style*=column]>:not(:last-child){margin-bottom:20px}.lux-flex-layout-gap-30[style*=row]>:not(:last-child){margin-right:30px}.lux-flex-layout-gap-30[style*=column]>:not(:last-child){margin-bottom:30px}.lux-z-index-100{z-index:100}.lux-z-index-500{z-index:500}.lux-z-index-1000{z-index:1000}.lux-uppercase>lux-button .lux-button-label,lux-button.lux-uppercase .lux-button-label{text-transform:uppercase}.lux-bg-color-red{background:#b01211}.lux-bg-color-green{background:#95bc4c}.lux-bg-color-yellow{background:#ebc000}.lux-bg-color-blue{background:#335c85}.lux-bg-color-gray{background:#c8c8c8}.lux-bg-color-orange{background:#ec9c1b}.lux-bg-color-brown{background:#783f04}.lux-font-color-black{color:#000}.lux-font-color-white{color:#fff}.lux-badge-notification.mat-badge-large .mat-badge-content{font-size:15px}.lux-badge-notification.lux-badge-color-default .mat-badge-content{color:#000;background:#fff;border:1px solid rgba(0,0,0,.87)}:focus{outline:0}.lux-master-detail{max-width:100%;z-index:10}.lux-master-container{border-right:1px solid #d3d3d3;border-left:1px solid #d3d3d3;border-bottom:1px solid #d3d3d3;min-width:50px;position:relative}.lux-master-container .lux-not-open{padding:12px 0}.lux-master-container:not(.lux-master-container-mobile).lux-empty-elements-aligned lux-list{position:static!important}.lux-spinner-hidden{display:none!important}:host ::ng-deep lux-master-header-content div,:host ::ng-deep lux-master-header-content span{color:#e7ebf0}lux-list-item{margin-bottom:1px}lux-list-item ::ng-deep lux-card{border-bottom:1px solid rgba(0,0,0,.08);border-right:1px solid rgba(0,0,0,.08)}lux-list-item ::ng-deep lux-card mat-card{box-shadow:unset!important}lux-list-item ::ng-deep lux-card mat-card:hover{background:rgba(0,0,0,.2)}lux-list-item,lux-list-item-content{display:block}.lux-display-none{display:none!important}.lux-0-width{width:0;min-width:0}.lux-detail-container{position:relative}.lux-detail-container .lux-detail-empty{position:absolute;top:0;left:0;right:0;bottom:0}.lux-detail-container .lux-detail-empty-icon,.lux-detail-container .lux-detail-empty-icon-text{opacity:.6;color:rgba(0,0,0,.87);padding:0 8px}"]
        }),
        tslib_1.__metadata("design:paramtypes", [LuxMasterDetailMobileHelperService,
            ChangeDetectorRef,
            ComponentFactoryResolver,
            LiveAnnouncer])
    ], LuxMasterDetailComponent);
    return LuxMasterDetailComponent;
}());
export { LuxMasterDetailComponent };
//# sourceMappingURL=data:application/json;base64,