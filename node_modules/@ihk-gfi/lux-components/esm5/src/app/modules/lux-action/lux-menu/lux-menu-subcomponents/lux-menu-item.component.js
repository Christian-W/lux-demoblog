import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { LuxActionComponentBaseClass } from '../../lux-action-model/lux-action-component-base.class';
// @dynamic Erkl√§rung steht in der Datei "lux-decorators.ts".
var LuxMenuItemComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LuxMenuItemComponent, _super);
    function LuxMenuItemComponent() {
        var _this = _super.call(this) || this;
        _this.luxHiddenChange = new EventEmitter();
        _this.luxHideLabelIfExtendedChange = new EventEmitter();
        _this.luxAlwaysVisibleChange = new EventEmitter();
        _this._luxAlwaysVisible = true;
        _this._luxHideLabelIfExtended = false;
        _this._luxHidden = false;
        // Wird vom LuxMenuComponent mit dem berechneten Breitenwert belegt
        _this.width = 0;
        // Wird vom LuxMenuComponent mit dem passenden Zustand belegt
        _this.extended = false;
        return _this;
    }
    Object.defineProperty(LuxMenuItemComponent.prototype, "luxAlwaysVisible", {
        get: function () {
            return this._luxAlwaysVisible;
        },
        set: function (value) {
            this._luxAlwaysVisible = value;
            this.luxAlwaysVisibleChange.emit(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LuxMenuItemComponent.prototype, "luxHideLabelIfExtended", {
        get: function () {
            return this._luxHideLabelIfExtended;
        },
        set: function (value) {
            this._luxHideLabelIfExtended = value;
            this.luxHideLabelIfExtendedChange.emit(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LuxMenuItemComponent.prototype, "luxHidden", {
        get: function () {
            return this._luxHidden;
        },
        set: function (value) {
            this._luxHidden = value;
            this.luxHiddenChange.emit(value);
        },
        enumerable: true,
        configurable: true
    });
    LuxMenuItemComponent.prototype.clicked = function ($event) {
        this.luxClicked.emit($event);
    };
    tslib_1.__decorate([
        ViewChild(TemplateRef, { static: false }),
        tslib_1.__metadata("design:type", TemplateRef)
    ], LuxMenuItemComponent.prototype, "templateRef", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], LuxMenuItemComponent.prototype, "luxHiddenChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], LuxMenuItemComponent.prototype, "luxHideLabelIfExtendedChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], LuxMenuItemComponent.prototype, "luxAlwaysVisibleChange", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], LuxMenuItemComponent.prototype, "luxAlwaysVisible", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], LuxMenuItemComponent.prototype, "luxHideLabelIfExtended", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], LuxMenuItemComponent.prototype, "luxHidden", null);
    LuxMenuItemComponent = tslib_1.__decorate([
        Component({
            selector: 'lux-menu-item',
            template: ''
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], LuxMenuItemComponent);
    return LuxMenuItemComponent;
}(LuxActionComponentBaseClass));
export { LuxMenuItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LW1lbnUtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaWhrLWdmaS9sdXgtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sdXgtYWN0aW9uL2x1eC1tZW51L2x1eC1tZW51LXN1YmNvbXBvbmVudHMvbHV4LW1lbnUtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUVyRyw2REFBNkQ7QUFLN0Q7SUFBMEMsZ0RBQTJCO0lBOENuRTtRQUFBLFlBQ0UsaUJBQU8sU0FDUjtRQTdDUyxxQkFBZSxHQUEwQixJQUFJLFlBQVksRUFBVyxDQUFDO1FBQ3JFLGtDQUE0QixHQUEwQixJQUFJLFlBQVksRUFBVyxDQUFDO1FBQ2xGLDRCQUFzQixHQUEwQixJQUFJLFlBQVksRUFBVyxDQUFDO1FBRXRGLHVCQUFpQixHQUFZLElBQUksQ0FBQztRQUNsQyw2QkFBdUIsR0FBWSxLQUFLLENBQUM7UUFDekMsZ0JBQVUsR0FBWSxLQUFLLENBQUM7UUFFNUIsbUVBQW1FO1FBQ25FLFdBQUssR0FBVyxDQUFDLENBQUM7UUFDbEIsNkRBQTZEO1FBQzdELGNBQVEsR0FBWSxLQUFLLENBQUM7O0lBa0MxQixDQUFDO0lBaENELHNCQUFJLGtEQUFnQjthQUFwQjtZQUNFLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDO1FBQ2hDLENBQUM7YUFFUSxVQUFxQixLQUFjO1lBQzFDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUM7WUFFL0IsSUFBSSxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxQyxDQUFDOzs7T0FOQTtJQVFELHNCQUFJLHdEQUFzQjthQUExQjtZQUNFLE9BQU8sSUFBSSxDQUFDLHVCQUF1QixDQUFDO1FBQ3RDLENBQUM7YUFFUSxVQUEyQixLQUFjO1lBQ2hELElBQUksQ0FBQyx1QkFBdUIsR0FBRyxLQUFLLENBQUM7WUFFckMsSUFBSSxDQUFDLDRCQUE0QixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNoRCxDQUFDOzs7T0FOQTtJQVFELHNCQUFJLDJDQUFTO2FBQWI7WUFDRSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDekIsQ0FBQzthQUVRLFVBQWMsS0FBYztZQUNuQyxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztZQUV4QixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuQyxDQUFDOzs7T0FOQTtJQVlELHNDQUFPLEdBQVAsVUFBUSxNQUFXO1FBQ2pCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFuRDBDO1FBQTFDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUM7MENBQWMsV0FBVzs2REFBTTtJQUUvRDtRQUFULE1BQU0sRUFBRTswQ0FBa0IsWUFBWTtpRUFBd0M7SUFDckU7UUFBVCxNQUFNLEVBQUU7MENBQStCLFlBQVk7OEVBQXdDO0lBQ2xGO1FBQVQsTUFBTSxFQUFFOzBDQUF5QixZQUFZO3dFQUF3QztJQWU3RTtRQUFSLEtBQUssRUFBRTs7O2dFQUlQO0lBTVE7UUFBUixLQUFLLEVBQUU7OztzRUFJUDtJQU1RO1FBQVIsS0FBSyxFQUFFOzs7eURBSVA7SUE1Q1Usb0JBQW9CO1FBSmhDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxlQUFlO1lBQ3pCLFFBQVEsRUFBRSxFQUFFO1NBQ2IsQ0FBQzs7T0FDVyxvQkFBb0IsQ0FxRGhDO0lBQUQsMkJBQUM7Q0FBQSxBQXJERCxDQUEwQywyQkFBMkIsR0FxRHBFO1NBckRZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMdXhBY3Rpb25Db21wb25lbnRCYXNlQ2xhc3MgfSBmcm9tICcuLi8uLi9sdXgtYWN0aW9uLW1vZGVsL2x1eC1hY3Rpb24tY29tcG9uZW50LWJhc2UuY2xhc3MnO1xuXG4vLyBAZHluYW1pYyBFcmtsw6RydW5nIHN0ZWh0IGluIGRlciBEYXRlaSBcImx1eC1kZWNvcmF0b3JzLnRzXCIuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdsdXgtbWVudS1pdGVtJyxcbiAgdGVtcGxhdGU6ICcnXG59KVxuZXhwb3J0IGNsYXNzIEx1eE1lbnVJdGVtQ29tcG9uZW50IGV4dGVuZHMgTHV4QWN0aW9uQ29tcG9uZW50QmFzZUNsYXNzIHtcbiAgQFZpZXdDaGlsZChUZW1wbGF0ZVJlZiwgeyBzdGF0aWM6IGZhbHNlIH0pIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gIEBPdXRwdXQoKSBsdXhIaWRkZW5DaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPiA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcbiAgQE91dHB1dCgpIGx1eEhpZGVMYWJlbElmRXh0ZW5kZWRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPiA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcbiAgQE91dHB1dCgpIGx1eEFsd2F5c1Zpc2libGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPiA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcblxuICBfbHV4QWx3YXlzVmlzaWJsZTogYm9vbGVhbiA9IHRydWU7XG4gIF9sdXhIaWRlTGFiZWxJZkV4dGVuZGVkOiBib29sZWFuID0gZmFsc2U7XG4gIF9sdXhIaWRkZW46IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvLyBXaXJkIHZvbSBMdXhNZW51Q29tcG9uZW50IG1pdCBkZW0gYmVyZWNobmV0ZW4gQnJlaXRlbndlcnQgYmVsZWd0XG4gIHdpZHRoOiBudW1iZXIgPSAwO1xuICAvLyBXaXJkIHZvbSBMdXhNZW51Q29tcG9uZW50IG1pdCBkZW0gcGFzc2VuZGVuIFp1c3RhbmQgYmVsZWd0XG4gIGV4dGVuZGVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgZ2V0IGx1eEFsd2F5c1Zpc2libGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2x1eEFsd2F5c1Zpc2libGU7XG4gIH1cblxuICBASW5wdXQoKSBzZXQgbHV4QWx3YXlzVmlzaWJsZSh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2x1eEFsd2F5c1Zpc2libGUgPSB2YWx1ZTtcblxuICAgIHRoaXMubHV4QWx3YXlzVmlzaWJsZUNoYW5nZS5lbWl0KHZhbHVlKTtcbiAgfVxuXG4gIGdldCBsdXhIaWRlTGFiZWxJZkV4dGVuZGVkKCkge1xuICAgIHJldHVybiB0aGlzLl9sdXhIaWRlTGFiZWxJZkV4dGVuZGVkO1xuICB9XG5cbiAgQElucHV0KCkgc2V0IGx1eEhpZGVMYWJlbElmRXh0ZW5kZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9sdXhIaWRlTGFiZWxJZkV4dGVuZGVkID0gdmFsdWU7XG5cbiAgICB0aGlzLmx1eEhpZGVMYWJlbElmRXh0ZW5kZWRDaGFuZ2UuZW1pdCh2YWx1ZSk7XG4gIH1cblxuICBnZXQgbHV4SGlkZGVuKCkge1xuICAgIHJldHVybiB0aGlzLl9sdXhIaWRkZW47XG4gIH1cblxuICBASW5wdXQoKSBzZXQgbHV4SGlkZGVuKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fbHV4SGlkZGVuID0gdmFsdWU7XG5cbiAgICB0aGlzLmx1eEhpZGRlbkNoYW5nZS5lbWl0KHZhbHVlKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBjbGlja2VkKCRldmVudDogYW55KSB7XG4gICAgdGhpcy5sdXhDbGlja2VkLmVtaXQoJGV2ZW50KTtcbiAgfVxufVxuIl19