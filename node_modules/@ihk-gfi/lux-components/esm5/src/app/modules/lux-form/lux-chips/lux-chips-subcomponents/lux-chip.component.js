import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output, TemplateRef, ViewChild } from '@angular/core';
var LuxChipComponent = /** @class */ (function () {
    function LuxChipComponent() {
        this.removeClicked = false;
        this._luxColor = 'primary';
        this.luxChipRemoved = new EventEmitter();
        this.luxChipClicked = new EventEmitter();
        this.luxChipSelected = new EventEmitter();
        this.luxDisabled = false;
        this.luxRemovable = true;
        this.luxSelected = true;
    }
    Object.defineProperty(LuxChipComponent.prototype, "luxColor", {
        get: function () {
            return this._luxColor;
        },
        set: function (color) {
            if (color !== 'primary' && color !== 'accent' && color !== 'warn') {
                color = undefined;
            }
            this._luxColor = color;
        },
        enumerable: true,
        configurable: true
    });
    LuxChipComponent.prototype.ngOnInit = function () { };
    LuxChipComponent.prototype.remove = function (index) {
        this.luxChipRemoved.emit(index);
        this.removeClicked = true;
    };
    LuxChipComponent.prototype.click = function (index) {
        if (!this.removeClicked) {
            this.luxChipClicked.emit(index);
        }
    };
    LuxChipComponent.prototype.select = function (selected, index) {
        this.luxSelected = selected;
        this.luxChipSelected.emit({ index: index, selected: selected });
    };
    tslib_1.__decorate([
        ViewChild(TemplateRef, { static: true }),
        tslib_1.__metadata("design:type", TemplateRef)
    ], LuxChipComponent.prototype, "templateRef", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], LuxChipComponent.prototype, "luxChipRemoved", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], LuxChipComponent.prototype, "luxChipClicked", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], LuxChipComponent.prototype, "luxChipSelected", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], LuxChipComponent.prototype, "luxDisabled", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], LuxChipComponent.prototype, "luxRemovable", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], LuxChipComponent.prototype, "luxSelected", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], LuxChipComponent.prototype, "luxColor", null);
    LuxChipComponent = tslib_1.__decorate([
        Component({
            selector: 'lux-chip',
            template: "\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  "
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], LuxChipComponent);
    return LuxChipComponent;
}());
export { LuxChipComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWNoaXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGloay1nZmkvbHV4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJzcmMvYXBwL21vZHVsZXMvbHV4LWZvcm0vbHV4LWNoaXBzL2x1eC1jaGlwcy1zdWJjb21wb25lbnRzL2x1eC1jaGlwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBWXZHO0lBMEJFO1FBekJRLGtCQUFhLEdBQVksS0FBSyxDQUFDO1FBRS9CLGNBQVMsR0FBaUIsU0FBUyxDQUFDO1FBSWxDLG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUM1QyxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7UUFDNUMsb0JBQWUsR0FBRyxJQUFJLFlBQVksRUFBb0IsQ0FBQztRQUV4RCxnQkFBVyxHQUFZLEtBQUssQ0FBQztRQUM3QixpQkFBWSxHQUFZLElBQUksQ0FBQztRQUM3QixnQkFBVyxHQUFZLElBQUksQ0FBQztJQWF0QixDQUFDO0lBWGhCLHNCQUFJLHNDQUFRO2FBQVo7WUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDeEIsQ0FBQzthQUVRLFVBQWEsS0FBbUI7WUFDdkMsSUFBSSxLQUFLLEtBQUssU0FBUyxJQUFJLEtBQUssS0FBSyxRQUFRLElBQUksS0FBSyxLQUFLLE1BQU0sRUFBRTtnQkFDakUsS0FBSyxHQUFHLFNBQVMsQ0FBQzthQUNuQjtZQUNELElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ3pCLENBQUM7OztPQVBBO0lBV0QsbUNBQVEsR0FBUixjQUFZLENBQUM7SUFFYixpQ0FBTSxHQUFOLFVBQU8sS0FBYTtRQUNsQixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNoQyxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztJQUM1QixDQUFDO0lBRUQsZ0NBQUssR0FBTCxVQUFNLEtBQWE7UUFDakIsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDdkIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDakM7SUFDSCxDQUFDO0lBRUQsaUNBQU0sR0FBTixVQUFPLFFBQWlCLEVBQUUsS0FBYTtRQUNyQyxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQztRQUM1QixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUssT0FBQSxFQUFFLFFBQVEsVUFBQSxFQUFFLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBdkN5QztRQUF6QyxTQUFTLENBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDOzBDQUFjLFdBQVc7eURBQU07SUFFOUQ7UUFBVCxNQUFNLEVBQUU7OzREQUE2QztJQUM1QztRQUFULE1BQU0sRUFBRTs7NERBQTZDO0lBQzVDO1FBQVQsTUFBTSxFQUFFOzs2REFBd0Q7SUFFeEQ7UUFBUixLQUFLLEVBQUU7O3lEQUE4QjtJQUM3QjtRQUFSLEtBQUssRUFBRTs7MERBQThCO0lBQzdCO1FBQVIsS0FBSyxFQUFFOzt5REFBNkI7SUFNNUI7UUFBUixLQUFLLEVBQUU7OztvREFLUDtJQXhCVSxnQkFBZ0I7UUFSNUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLFVBQVU7WUFDcEIsUUFBUSxFQUFFLDhFQUlUO1NBQ0YsQ0FBQzs7T0FDVyxnQkFBZ0IsQ0E2QzVCO0lBQUQsdUJBQUM7Q0FBQSxBQTdDRCxJQTZDQztTQTdDWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUaGVtZVBhbGV0dGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbCc7XG5pbXBvcnQgeyBJTHV4Q2hpcFNlbGVjdGVkIH0gZnJvbSAnLi4vbHV4LWNoaXBzLW1vZGVsL2x1eC1jaGlwLXNlbGVjdGVkLmludGVyZmFjZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2x1eC1jaGlwJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctdGVtcGxhdGU+XG4gICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBMdXhDaGlwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgcHJpdmF0ZSByZW1vdmVDbGlja2VkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgcHJpdmF0ZSBfbHV4Q29sb3I6IFRoZW1lUGFsZXR0ZSA9ICdwcmltYXJ5JztcblxuICBAVmlld0NoaWxkKFRlbXBsYXRlUmVmLCB7IHN0YXRpYzogdHJ1ZSB9KSB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcblxuICBAT3V0cHV0KCkgbHV4Q2hpcFJlbW92ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPG51bWJlcj4oKTtcbiAgQE91dHB1dCgpIGx1eENoaXBDbGlja2VkID0gbmV3IEV2ZW50RW1pdHRlcjxudW1iZXI+KCk7XG4gIEBPdXRwdXQoKSBsdXhDaGlwU2VsZWN0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPElMdXhDaGlwU2VsZWN0ZWQ+KCk7XG5cbiAgQElucHV0KCkgbHV4RGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgbHV4UmVtb3ZhYmxlOiBib29sZWFuID0gdHJ1ZTtcbiAgQElucHV0KCkgbHV4U2VsZWN0ZWQ6IGJvb2xlYW4gPSB0cnVlO1xuXG4gIGdldCBsdXhDb2xvcigpOiBUaGVtZVBhbGV0dGUge1xuICAgIHJldHVybiB0aGlzLl9sdXhDb2xvcjtcbiAgfVxuXG4gIEBJbnB1dCgpIHNldCBsdXhDb2xvcihjb2xvcjogVGhlbWVQYWxldHRlKSB7XG4gICAgaWYgKGNvbG9yICE9PSAncHJpbWFyeScgJiYgY29sb3IgIT09ICdhY2NlbnQnICYmIGNvbG9yICE9PSAnd2FybicpIHtcbiAgICAgIGNvbG9yID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICB0aGlzLl9sdXhDb2xvciA9IGNvbG9yO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIG5nT25Jbml0KCkge31cblxuICByZW1vdmUoaW5kZXg6IG51bWJlcikge1xuICAgIHRoaXMubHV4Q2hpcFJlbW92ZWQuZW1pdChpbmRleCk7XG4gICAgdGhpcy5yZW1vdmVDbGlja2VkID0gdHJ1ZTtcbiAgfVxuXG4gIGNsaWNrKGluZGV4OiBudW1iZXIpIHtcbiAgICBpZiAoIXRoaXMucmVtb3ZlQ2xpY2tlZCkge1xuICAgICAgdGhpcy5sdXhDaGlwQ2xpY2tlZC5lbWl0KGluZGV4KTtcbiAgICB9XG4gIH1cblxuICBzZWxlY3Qoc2VsZWN0ZWQ6IGJvb2xlYW4sIGluZGV4OiBudW1iZXIpIHtcbiAgICB0aGlzLmx1eFNlbGVjdGVkID0gc2VsZWN0ZWQ7XG4gICAgdGhpcy5sdXhDaGlwU2VsZWN0ZWQuZW1pdCh7IGluZGV4LCBzZWxlY3RlZCB9KTtcbiAgfVxufVxuIl19