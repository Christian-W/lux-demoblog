import * as tslib_1 from "tslib";
import { LuxFormComponentBase } from './lux-form-component-base.class';
import { EventEmitter, Input, Output } from '@angular/core';
/**
 * Basis-Klasse für FormComponents, die einen ähnlichen Grundaufbau für das Eintippen von String-Daten haben
 * (Input und Textarea z.B.).
 */
var LuxFormInputBaseClass = /** @class */ (function (_super) {
    tslib_1.__extends(LuxFormInputBaseClass, _super);
    function LuxFormInputBaseClass(controlContainer, cdr, logger, config) {
        var _this = _super.call(this, controlContainer, cdr, logger, config) || this;
        _this.luxValueChange = new EventEmitter();
        _this.luxBlur = new EventEmitter();
        _this.luxFocus = new EventEmitter();
        _this.luxPlaceholder = '';
        _this.luxAutocomplete = 'on';
        return _this;
    }
    Object.defineProperty(LuxFormInputBaseClass.prototype, "luxValue", {
        get: function () {
            return this.getValue();
        },
        set: function (value) {
            this.setValue(value);
        },
        enumerable: true,
        configurable: true
    });
    // region Overridden methods
    LuxFormInputBaseClass.prototype.notifyFormValueChanged = function (formValue) {
        // Aktualisierungen an dem FormControl-Value sollen auch via EventEmitter bekannt gemacht werden
        this.luxValueChange.emit(formValue);
    };
    LuxFormInputBaseClass.prototype.triggerOutputPatternCheck = function () {
        this.checkOutputPatternViolation(this.luxValueChange.observers);
    };
    LuxFormInputBaseClass.prototype.triggerInputPatternCheck = function (simpleChanges) {
        this.checkInputPatternViolation(simpleChanges.luxValue);
    };
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], LuxFormInputBaseClass.prototype, "luxValueChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], LuxFormInputBaseClass.prototype, "luxBlur", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], LuxFormInputBaseClass.prototype, "luxFocus", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxFormInputBaseClass.prototype, "luxPlaceholder", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], LuxFormInputBaseClass.prototype, "luxReadonly", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxFormInputBaseClass.prototype, "luxTagId", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxFormInputBaseClass.prototype, "luxAutocomplete", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], LuxFormInputBaseClass.prototype, "luxValue", null);
    return LuxFormInputBaseClass;
}(LuxFormComponentBase));
export { LuxFormInputBaseClass };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWZvcm0taW5wdXQtYmFzZS5jbGFzcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BpaGstZ2ZpL2x1eC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsic3JjL2FwcC9tb2R1bGVzL2x1eC1mb3JtL2x1eC1mb3JtLW1vZGVsL2x1eC1mb3JtLWlucHV0LWJhc2UuY2xhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBcUIsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBSzlGOzs7R0FHRztBQUNIO0lBQW9ELGlEQUFvQjtJQWtCdEUsK0JBQ0UsZ0JBQWtDLEVBQ2xDLEdBQXNCLEVBQ3RCLE1BQXlCLEVBQ3pCLE1BQWtDO1FBSnBDLFlBTUUsa0JBQU0sZ0JBQWdCLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsU0FDN0M7UUF4QlMsb0JBQWMsR0FBeUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUMxRCxhQUFPLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFDckQsY0FBUSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO1FBRXZELG9CQUFjLEdBQVcsRUFBRSxDQUFDO1FBRzVCLHFCQUFlLEdBQVcsSUFBSSxDQUFDOztJQWlCeEMsQ0FBQztJQWZELHNCQUFJLDJDQUFRO2FBQVo7WUFDRSxPQUFPLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUN6QixDQUFDO2FBRVEsVUFBYSxLQUFhO1lBQ2pDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdkIsQ0FBQzs7O09BSkE7SUFlRCw0QkFBNEI7SUFFNUIsc0RBQXNCLEdBQXRCLFVBQXVCLFNBQWM7UUFDbkMsZ0dBQWdHO1FBQ2hHLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFUyx5REFBeUIsR0FBbkM7UUFDRSxJQUFJLENBQUMsMkJBQTJCLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNsRSxDQUFDO0lBRVMsd0RBQXdCLEdBQWxDLFVBQW1DLGFBQTRCO1FBQzdELElBQUksQ0FBQywwQkFBMEIsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQXZDUztRQUFULE1BQU0sRUFBRTswQ0FBaUIsWUFBWTtpRUFBOEI7SUFDMUQ7UUFBVCxNQUFNLEVBQUU7MENBQVUsWUFBWTswREFBZ0M7SUFDckQ7UUFBVCxNQUFNLEVBQUU7MENBQVcsWUFBWTsyREFBZ0M7SUFFdkQ7UUFBUixLQUFLLEVBQUU7O2lFQUE2QjtJQUM1QjtRQUFSLEtBQUssRUFBRTs7OERBQXNCO0lBQ3JCO1FBQVIsS0FBSyxFQUFFOzsyREFBa0I7SUFDakI7UUFBUixLQUFLLEVBQUU7O2tFQUFnQztJQU0vQjtRQUFSLEtBQUssRUFBRTs7O3lEQUVQO0lBMkJILDRCQUFDO0NBQUEsQUEzQ0QsQ0FBb0Qsb0JBQW9CLEdBMkN2RTtTQTNDcUIscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTHV4Rm9ybUNvbXBvbmVudEJhc2UgfSBmcm9tICcuL2x1eC1mb3JtLWNvbXBvbmVudC1iYXNlLmNsYXNzJztcbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xDb250YWluZXIgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBMdXhDb25zb2xlU2VydmljZSB9IGZyb20gJy4uLy4uL2x1eC11dGlsL2x1eC1jb25zb2xlLnNlcnZpY2UnO1xuaW1wb3J0IHsgTHV4Q29tcG9uZW50c0NvbmZpZ1NlcnZpY2UgfSBmcm9tICcuLi8uLi9sdXgtY29tcG9uZW50cy1jb25maWcvbHV4LWNvbXBvbmVudHMtY29uZmlnLnNlcnZpY2UnO1xuXG4vKipcbiAqIEJhc2lzLUtsYXNzZSBmw7xyIEZvcm1Db21wb25lbnRzLCBkaWUgZWluZW4gw6RobmxpY2hlbiBHcnVuZGF1ZmJhdSBmw7xyIGRhcyBFaW50aXBwZW4gdm9uIFN0cmluZy1EYXRlbiBoYWJlblxuICogKElucHV0IHVuZCBUZXh0YXJlYSB6LkIuKS5cbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEx1eEZvcm1JbnB1dEJhc2VDbGFzcyBleHRlbmRzIEx1eEZvcm1Db21wb25lbnRCYXNlIHtcbiAgQE91dHB1dCgpIGx1eFZhbHVlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8c3RyaW5nPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIGx1eEJsdXI6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIEBPdXRwdXQoKSBsdXhGb2N1czogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBASW5wdXQoKSBsdXhQbGFjZWhvbGRlcjogc3RyaW5nID0gJyc7XG4gIEBJbnB1dCgpIGx1eFJlYWRvbmx5OiBib29sZWFuO1xuICBASW5wdXQoKSBsdXhUYWdJZDogc3RyaW5nO1xuICBASW5wdXQoKSBsdXhBdXRvY29tcGxldGU6IHN0cmluZyA9ICdvbic7XG5cbiAgZ2V0IGx1eFZhbHVlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0VmFsdWUoKTtcbiAgfVxuXG4gIEBJbnB1dCgpIHNldCBsdXhWYWx1ZSh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5zZXRWYWx1ZSh2YWx1ZSk7XG4gIH1cblxuICBwcm90ZWN0ZWQgY29uc3RydWN0b3IoXG4gICAgY29udHJvbENvbnRhaW5lcjogQ29udHJvbENvbnRhaW5lcixcbiAgICBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxuICAgIGxvZ2dlcjogTHV4Q29uc29sZVNlcnZpY2UsXG4gICAgY29uZmlnOiBMdXhDb21wb25lbnRzQ29uZmlnU2VydmljZVxuICApIHtcbiAgICBzdXBlcihjb250cm9sQ29udGFpbmVyLCBjZHIsIGxvZ2dlciwgY29uZmlnKTtcbiAgfVxuXG4gIC8vIHJlZ2lvbiBPdmVycmlkZGVuIG1ldGhvZHNcblxuICBub3RpZnlGb3JtVmFsdWVDaGFuZ2VkKGZvcm1WYWx1ZTogYW55KSB7XG4gICAgLy8gQWt0dWFsaXNpZXJ1bmdlbiBhbiBkZW0gRm9ybUNvbnRyb2wtVmFsdWUgc29sbGVuIGF1Y2ggdmlhIEV2ZW50RW1pdHRlciBiZWthbm50IGdlbWFjaHQgd2VyZGVuXG4gICAgdGhpcy5sdXhWYWx1ZUNoYW5nZS5lbWl0KGZvcm1WYWx1ZSk7XG4gIH1cblxuICBwcm90ZWN0ZWQgdHJpZ2dlck91dHB1dFBhdHRlcm5DaGVjaygpIHtcbiAgICB0aGlzLmNoZWNrT3V0cHV0UGF0dGVyblZpb2xhdGlvbih0aGlzLmx1eFZhbHVlQ2hhbmdlLm9ic2VydmVycyk7XG4gIH1cblxuICBwcm90ZWN0ZWQgdHJpZ2dlcklucHV0UGF0dGVybkNoZWNrKHNpbXBsZUNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICB0aGlzLmNoZWNrSW5wdXRQYXR0ZXJuVmlvbGF0aW9uKHNpbXBsZUNoYW5nZXMubHV4VmFsdWUpO1xuICB9XG5cbiAgLy8gZW5kcmVnaW9uXG59XG4iXX0=