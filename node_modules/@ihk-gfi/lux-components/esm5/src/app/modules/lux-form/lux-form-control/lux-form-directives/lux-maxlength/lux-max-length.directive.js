import * as tslib_1 from "tslib";
import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';
var LuxMaxLengthDirective = /** @class */ (function () {
    function LuxMaxLengthDirective(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
    }
    Object.defineProperty(LuxMaxLengthDirective.prototype, "luxMaxLengthAttr", {
        get: function () {
            return this._luxMaxLengthAttr;
        },
        set: function (maxLength) {
            this._luxMaxLengthAttr = maxLength;
            if (this._luxMaxLengthAttr) {
                this.renderer.setAttribute(this.elementRef.nativeElement, 'maxlength', this._luxMaxLengthAttr);
            }
            else {
                this.renderer.removeAttribute(this.elementRef.nativeElement, 'maxlength');
            }
        },
        enumerable: true,
        configurable: true
    });
    LuxMaxLengthDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], LuxMaxLengthDirective.prototype, "luxMaxLengthAttr", null);
    LuxMaxLengthDirective = tslib_1.__decorate([
        Directive({
            selector: '[luxMaxLengthAttr]'
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef, Renderer2])
    ], LuxMaxLengthDirective);
    return LuxMaxLengthDirective;
}());
export { LuxMaxLengthDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LW1heC1sZW5ndGguZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGloay1nZmkvbHV4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJzcmMvYXBwL21vZHVsZXMvbHV4LWZvcm0vbHV4LWZvcm0tY29udHJvbC9sdXgtZm9ybS1kaXJlY3RpdmVzL2x1eC1tYXhsZW5ndGgvbHV4LW1heC1sZW5ndGguZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBS3hFO0lBa0JFLCtCQUFzQixVQUFzQixFQUFZLFFBQW1CO1FBQXJELGVBQVUsR0FBVixVQUFVLENBQVk7UUFBWSxhQUFRLEdBQVIsUUFBUSxDQUFXO0lBQUcsQ0FBQztJQWQvRSxzQkFBSSxtREFBZ0I7YUFBcEI7WUFDRSxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztRQUNoQyxDQUFDO2FBRUQsVUFBcUIsU0FBaUI7WUFDcEMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLFNBQVMsQ0FBQztZQUVuQyxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtnQkFDMUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQUUsV0FBVyxFQUFFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO2FBQ2hHO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FBQyxDQUFDO2FBQzNFO1FBQ0gsQ0FBQzs7O09BVkE7O2dCQVlpQyxVQUFVO2dCQUFzQixTQUFTOztJQWQzRTtRQURDLEtBQUssRUFBRTs7O2lFQUdQO0lBTlUscUJBQXFCO1FBSGpDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxvQkFBb0I7U0FDL0IsQ0FBQztpREFtQmtDLFVBQVUsRUFBc0IsU0FBUztPQWxCaEUscUJBQXFCLENBbUJqQztJQUFELDRCQUFDO0NBQUEsQUFuQkQsSUFtQkM7U0FuQlkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tsdXhNYXhMZW5ndGhBdHRyXSdcbn0pXG5leHBvcnQgY2xhc3MgTHV4TWF4TGVuZ3RoRGlyZWN0aXZlIHtcbiAgX2x1eE1heExlbmd0aEF0dHI6IHN0cmluZztcblxuICBASW5wdXQoKVxuICBnZXQgbHV4TWF4TGVuZ3RoQXR0cigpIHtcbiAgICByZXR1cm4gdGhpcy5fbHV4TWF4TGVuZ3RoQXR0cjtcbiAgfVxuXG4gIHNldCBsdXhNYXhMZW5ndGhBdHRyKG1heExlbmd0aDogc3RyaW5nKSB7XG4gICAgdGhpcy5fbHV4TWF4TGVuZ3RoQXR0ciA9IG1heExlbmd0aDtcblxuICAgIGlmICh0aGlzLl9sdXhNYXhMZW5ndGhBdHRyKSB7XG4gICAgICB0aGlzLnJlbmRlcmVyLnNldEF0dHJpYnV0ZSh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwgJ21heGxlbmd0aCcsIHRoaXMuX2x1eE1heExlbmd0aEF0dHIpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUF0dHJpYnV0ZSh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwgJ21heGxlbmd0aCcpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBwcm90ZWN0ZWQgcmVuZGVyZXI6IFJlbmRlcmVyMikge31cbn1cbiJdfQ==