import * as tslib_1 from "tslib";
import { Component, Inject, ViewChild } from '@angular/core';
import { LUX_FILE_PREVIEW_DATA } from './lux-file-preview-config';
import { LuxFilePreviewImgViewerComponent } from './lux-file-preview-imgviewer/lux-file-preview-imgviewer.component';
import { LuxFilePreviewNotSupportedViewerComponent } from './lux-file-preview-notsupportedviewer/lux-file-preview-notsupportedviewer.component';
import { LuxFilePreviewPdfViewerComponent } from './lux-file-preview-pdfviewer/lux-file-preview-pdfviewer.component';
var LuxFilePreviewComponent = /** @class */ (function () {
    function LuxFilePreviewComponent(data) {
        this.data = data;
        this.fileType = 'notsupported';
    }
    LuxFilePreviewComponent.prototype.ngOnInit = function () {
        if (this.data.fileObject.type.indexOf('image/') > -1) {
            this.fileType = 'img';
        }
        else if (this.data.fileObject.type.indexOf('application/pdf') > -1) {
            this.fileType = 'pdf';
        }
        else {
            this.fileType = 'notsupported';
        }
    };
    LuxFilePreviewComponent.prototype.onClose = function () {
        if (this.pdfViewer) {
            this.pdfViewer.onClose();
        }
        else if (this.imgViewer) {
            this.imgViewer.onClose();
        }
        else {
            this.notSupportedViewer.onClose();
        }
    };
    LuxFilePreviewComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [LUX_FILE_PREVIEW_DATA,] }] }
    ]; };
    tslib_1.__decorate([
        ViewChild(LuxFilePreviewPdfViewerComponent, { static: false }),
        tslib_1.__metadata("design:type", LuxFilePreviewPdfViewerComponent)
    ], LuxFilePreviewComponent.prototype, "pdfViewer", void 0);
    tslib_1.__decorate([
        ViewChild(LuxFilePreviewImgViewerComponent, { static: false }),
        tslib_1.__metadata("design:type", LuxFilePreviewImgViewerComponent)
    ], LuxFilePreviewComponent.prototype, "imgViewer", void 0);
    tslib_1.__decorate([
        ViewChild(LuxFilePreviewNotSupportedViewerComponent, { static: false }),
        tslib_1.__metadata("design:type", LuxFilePreviewNotSupportedViewerComponent)
    ], LuxFilePreviewComponent.prototype, "notSupportedViewer", void 0);
    LuxFilePreviewComponent = tslib_1.__decorate([
        Component({
            selector: 'lux-file-preview',
            template: "<lux-file-preview-pdfviewer *ngIf=\"fileType === 'pdf'\"></lux-file-preview-pdfviewer>\n<lux-file-preview-imgviewer *ngIf=\"fileType === 'img'\"></lux-file-preview-imgviewer>\n<lux-file-preview-notsupportedviewer *ngIf=\"fileType === 'notsupported'\"></lux-file-preview-notsupportedviewer>\n",
            styles: [":host ::ng-deep .message-box{border-radius:8px;background-color:#fff;padding:20px}"]
        }),
        tslib_1.__param(0, Inject(LUX_FILE_PREVIEW_DATA)),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], LuxFilePreviewComponent);
    return LuxFilePreviewComponent;
}());
export { LuxFilePreviewComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWZpbGUtcHJldmlldy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaWhrLWdmaS9sdXgtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sdXgtZmlsZS1wcmV2aWV3L2x1eC1maWxlLXByZXZpZXcuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBVSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFbEUsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sbUVBQW1FLENBQUM7QUFDckgsT0FBTyxFQUFFLHlDQUF5QyxFQUFFLE1BQU0scUZBQXFGLENBQUM7QUFDaEosT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sbUVBQW1FLENBQUM7QUFPckg7SUFRRSxpQ0FBa0QsSUFBd0I7UUFBeEIsU0FBSSxHQUFKLElBQUksQ0FBb0I7UUFGMUUsYUFBUSxHQUFtQyxjQUFjLENBQUM7SUFFbUIsQ0FBQztJQUU5RSwwQ0FBUSxHQUFSO1FBQ0UsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFO1lBQ3BELElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1NBQ3ZCO2FBQU0sSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7WUFDcEUsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7U0FDdkI7YUFBTTtZQUNMLElBQUksQ0FBQyxRQUFRLEdBQUcsY0FBYyxDQUFDO1NBQ2hDO0lBQ0gsQ0FBQztJQUVELHlDQUFPLEdBQVA7UUFDRSxJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUMxQjthQUFNLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUN6QixJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQzFCO2FBQU07WUFDTCxJQUFJLENBQUMsa0JBQWtCLENBQUMsT0FBTyxFQUFFLENBQUM7U0FDbkM7SUFDSCxDQUFDOztnREFwQlksTUFBTSxTQUFDLHFCQUFxQjs7SUFQdUI7UUFBL0QsU0FBUyxDQUFDLGdDQUFnQyxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDOzBDQUFZLGdDQUFnQzs4REFBQztJQUM1QztRQUEvRCxTQUFTLENBQUMsZ0NBQWdDLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUM7MENBQVksZ0NBQWdDOzhEQUFDO0lBRTVHO1FBREMsU0FBUyxDQUFDLHlDQUF5QyxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDOzBDQUNwRCx5Q0FBeUM7dUVBQUM7SUFKbkQsdUJBQXVCO1FBTG5DLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxrQkFBa0I7WUFDNUIsK1NBQWdEOztTQUVqRCxDQUFDO1FBU2EsbUJBQUEsTUFBTSxDQUFDLHFCQUFxQixDQUFDLENBQUE7O09BUi9CLHVCQUF1QixDQTZCbkM7SUFBRCw4QkFBQztDQUFBLEFBN0JELElBNkJDO1NBN0JZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBPbkluaXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTFVYX0ZJTEVfUFJFVklFV19EQVRBIH0gZnJvbSAnLi9sdXgtZmlsZS1wcmV2aWV3LWNvbmZpZyc7XG5pbXBvcnQgeyBMdXhGaWxlUHJldmlld0RhdGEgfSBmcm9tICcuL2x1eC1maWxlLXByZXZpZXctZGF0YSc7XG5pbXBvcnQgeyBMdXhGaWxlUHJldmlld0ltZ1ZpZXdlckNvbXBvbmVudCB9IGZyb20gJy4vbHV4LWZpbGUtcHJldmlldy1pbWd2aWV3ZXIvbHV4LWZpbGUtcHJldmlldy1pbWd2aWV3ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IEx1eEZpbGVQcmV2aWV3Tm90U3VwcG9ydGVkVmlld2VyQ29tcG9uZW50IH0gZnJvbSAnLi9sdXgtZmlsZS1wcmV2aWV3LW5vdHN1cHBvcnRlZHZpZXdlci9sdXgtZmlsZS1wcmV2aWV3LW5vdHN1cHBvcnRlZHZpZXdlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTHV4RmlsZVByZXZpZXdQZGZWaWV3ZXJDb21wb25lbnQgfSBmcm9tICcuL2x1eC1maWxlLXByZXZpZXctcGRmdmlld2VyL2x1eC1maWxlLXByZXZpZXctcGRmdmlld2VyLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2x1eC1maWxlLXByZXZpZXcnLFxuICB0ZW1wbGF0ZVVybDogJy4vbHV4LWZpbGUtcHJldmlldy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2x1eC1maWxlLXByZXZpZXcuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMdXhGaWxlUHJldmlld0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBWaWV3Q2hpbGQoTHV4RmlsZVByZXZpZXdQZGZWaWV3ZXJDb21wb25lbnQsIHsgc3RhdGljOiBmYWxzZSB9KSBwZGZWaWV3ZXI6IEx1eEZpbGVQcmV2aWV3UGRmVmlld2VyQ29tcG9uZW50O1xuICBAVmlld0NoaWxkKEx1eEZpbGVQcmV2aWV3SW1nVmlld2VyQ29tcG9uZW50LCB7IHN0YXRpYzogZmFsc2UgfSkgaW1nVmlld2VyOiBMdXhGaWxlUHJldmlld0ltZ1ZpZXdlckNvbXBvbmVudDtcbiAgQFZpZXdDaGlsZChMdXhGaWxlUHJldmlld05vdFN1cHBvcnRlZFZpZXdlckNvbXBvbmVudCwgeyBzdGF0aWM6IGZhbHNlIH0pXG4gIG5vdFN1cHBvcnRlZFZpZXdlcjogTHV4RmlsZVByZXZpZXdOb3RTdXBwb3J0ZWRWaWV3ZXJDb21wb25lbnQ7XG5cbiAgZmlsZVR5cGU6ICdpbWcnIHwgJ3BkZicgfCAnbm90c3VwcG9ydGVkJyA9ICdub3RzdXBwb3J0ZWQnO1xuXG4gIGNvbnN0cnVjdG9yKEBJbmplY3QoTFVYX0ZJTEVfUFJFVklFV19EQVRBKSBwdWJsaWMgZGF0YTogTHV4RmlsZVByZXZpZXdEYXRhKSB7fVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmRhdGEuZmlsZU9iamVjdC50eXBlLmluZGV4T2YoJ2ltYWdlLycpID4gLTEpIHtcbiAgICAgIHRoaXMuZmlsZVR5cGUgPSAnaW1nJztcbiAgICB9IGVsc2UgaWYgKHRoaXMuZGF0YS5maWxlT2JqZWN0LnR5cGUuaW5kZXhPZignYXBwbGljYXRpb24vcGRmJykgPiAtMSkge1xuICAgICAgdGhpcy5maWxlVHlwZSA9ICdwZGYnO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmZpbGVUeXBlID0gJ25vdHN1cHBvcnRlZCc7XG4gICAgfVxuICB9XG5cbiAgb25DbG9zZSgpIHtcbiAgICBpZiAodGhpcy5wZGZWaWV3ZXIpIHtcbiAgICAgIHRoaXMucGRmVmlld2VyLm9uQ2xvc2UoKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuaW1nVmlld2VyKSB7XG4gICAgICB0aGlzLmltZ1ZpZXdlci5vbkNsb3NlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubm90U3VwcG9ydGVkVmlld2VyLm9uQ2xvc2UoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==