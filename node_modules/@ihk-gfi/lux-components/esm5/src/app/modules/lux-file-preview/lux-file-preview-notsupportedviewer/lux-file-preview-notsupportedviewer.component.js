import * as tslib_1 from "tslib";
import { Component, Inject } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { LuxFilePreviewBase } from '../lux-file-preview-base/lux-file-preview-base';
import { LUX_FILE_PREVIEW_DATA } from '../lux-file-preview-config';
import { LuxFilePreviewRef } from '../lux-file-preview-ref';
var LuxFilePreviewNotSupportedViewerComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LuxFilePreviewNotSupportedViewerComponent, _super);
    function LuxFilePreviewNotSupportedViewerComponent(previewRef, previewData, sanitizer) {
        var _this = _super.call(this, previewRef, previewData, sanitizer) || this;
        _this.previewRef = previewRef;
        _this.previewData = previewData;
        _this.sanitizer = sanitizer;
        _this.counter = 5;
        _this.downloadLabelDefault = 'Download... ';
        _this.downloadLabel = _this.downloadLabelDefault + _this.counter;
        return _this;
    }
    LuxFilePreviewNotSupportedViewerComponent.prototype.ngOnInit = function () {
        this.updateDownloadLabel();
    };
    LuxFilePreviewNotSupportedViewerComponent.prototype.onDownload = function () {
        clearTimeout(this.timer);
        _super.prototype.onDownload.call(this);
    };
    LuxFilePreviewNotSupportedViewerComponent.prototype.onClose = function () {
        clearTimeout(this.timer);
        _super.prototype.onClose.call(this);
    };
    LuxFilePreviewNotSupportedViewerComponent.prototype.updateDownloadLabel = function () {
        var _this = this;
        this.timer = setTimeout(function () {
            if (_this.counter > 0) {
                _this.counter--;
                _this.downloadLabel = _this.downloadLabelDefault + _this.counter;
                _this.updateDownloadLabel();
            }
            else {
                _this.onDownload();
            }
        }, 1000);
    };
    LuxFilePreviewNotSupportedViewerComponent.ctorParameters = function () { return [
        { type: LuxFilePreviewRef },
        { type: undefined, decorators: [{ type: Inject, args: [LUX_FILE_PREVIEW_DATA,] }] },
        { type: DomSanitizer }
    ]; };
    LuxFilePreviewNotSupportedViewerComponent = tslib_1.__decorate([
        Component({
            selector: 'lux-file-preview-notsupportedviewer',
            template: "<lux-file-preview-toolbar>\n  <lux-button\n    fxFlex=\"none\"\n    luxIconName=\"fas fa-download\"\n    (luxClicked)=\"onDownload()\"\n    luxColor=\"accent\"\n    luxRaised=\"true\"\n    luxTagId=\"file-preview-download-btn\"\n    luxAriaLabel=\"Datei herunterladen\"\n  ></lux-button>\n  <lux-button\n    fxFlex=\"none\"\n    luxIconName=\"fas fa-window-close\"\n    (luxClicked)=\"onClose()\"\n    luxRaised=\"true\"\n    luxTagId=\"file-preview-close-btn\"\n    luxAriaLabel=\"Dateivorschau schlie\u00DFen\"\n  ></lux-button>\n</lux-file-preview-toolbar>\n<div class=\"message-box\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n  <div>Diese Datei kann nicht angezeigt werden.</div>\n  <lux-button [luxLabel]=\"downloadLabel\" (luxClicked)=\"onDownload()\" [luxRaised]=\"true\" luxColor=\"accent\"></lux-button>\n</div>\n",
            styles: [""]
        }),
        tslib_1.__param(1, Inject(LUX_FILE_PREVIEW_DATA)),
        tslib_1.__metadata("design:paramtypes", [LuxFilePreviewRef, Object, DomSanitizer])
    ], LuxFilePreviewNotSupportedViewerComponent);
    return LuxFilePreviewNotSupportedViewerComponent;
}(LuxFilePreviewBase));
export { LuxFilePreviewNotSupportedViewerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWZpbGUtcHJldmlldy1ub3RzdXBwb3J0ZWR2aWV3ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGloay1nZmkvbHV4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJzcmMvYXBwL21vZHVsZXMvbHV4LWZpbGUtcHJldmlldy9sdXgtZmlsZS1wcmV2aWV3LW5vdHN1cHBvcnRlZHZpZXdlci9sdXgtZmlsZS1wcmV2aWV3LW5vdHN1cHBvcnRlZHZpZXdlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUNwRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUVuRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQU81RDtJQUErRCxxRUFBa0I7SUFPL0UsbURBQ1ksVUFBNkIsRUFDRSxXQUErQixFQUM5RCxTQUF1QjtRQUhuQyxZQUtFLGtCQUFNLFVBQVUsRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDLFNBQzFDO1FBTFcsZ0JBQVUsR0FBVixVQUFVLENBQW1CO1FBQ0UsaUJBQVcsR0FBWCxXQUFXLENBQW9CO1FBQzlELGVBQVMsR0FBVCxTQUFTLENBQWM7UUFUbkMsYUFBTyxHQUFHLENBQUMsQ0FBQztRQUdaLDBCQUFvQixHQUFHLGNBQWMsQ0FBQztRQUN0QyxtQkFBYSxHQUFHLEtBQUksQ0FBQyxvQkFBb0IsR0FBRyxLQUFJLENBQUMsT0FBTyxDQUFDOztJQVF6RCxDQUFDO0lBRUQsNERBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFFRCw4REFBVSxHQUFWO1FBQ0UsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUV6QixpQkFBTSxVQUFVLFdBQUUsQ0FBQztJQUNyQixDQUFDO0lBRUQsMkRBQU8sR0FBUDtRQUNFLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFekIsaUJBQU0sT0FBTyxXQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVELHVFQUFtQixHQUFuQjtRQUFBLGlCQVVDO1FBVEMsSUFBSSxDQUFDLEtBQUssR0FBRyxVQUFVLENBQUM7WUFDdEIsSUFBSSxLQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsRUFBRTtnQkFDcEIsS0FBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO2dCQUNmLEtBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSSxDQUFDLG9CQUFvQixHQUFHLEtBQUksQ0FBQyxPQUFPLENBQUM7Z0JBQzlELEtBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO2FBQzVCO2lCQUFNO2dCQUNMLEtBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQzthQUNuQjtRQUNILENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNYLENBQUM7O2dCQWpDdUIsaUJBQWlCO2dEQUN0QyxNQUFNLFNBQUMscUJBQXFCO2dCQUNSLFlBQVk7O0lBVnhCLHlDQUF5QztRQUxyRCxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUscUNBQXFDO1lBQy9DLG0yQkFBbUU7O1NBRXBFLENBQUM7UUFVRyxtQkFBQSxNQUFNLENBQUMscUJBQXFCLENBQUMsQ0FBQTtpREFEUixpQkFBaUIsVUFFbEIsWUFBWTtPQVZ4Qix5Q0FBeUMsQ0EwQ3JEO0lBQUQsZ0RBQUM7Q0FBQSxBQTFDRCxDQUErRCxrQkFBa0IsR0EwQ2hGO1NBMUNZLHlDQUF5QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERvbVNhbml0aXplciB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHsgTHV4RmlsZVByZXZpZXdCYXNlIH0gZnJvbSAnLi4vbHV4LWZpbGUtcHJldmlldy1iYXNlL2x1eC1maWxlLXByZXZpZXctYmFzZSc7XG5pbXBvcnQgeyBMVVhfRklMRV9QUkVWSUVXX0RBVEEgfSBmcm9tICcuLi9sdXgtZmlsZS1wcmV2aWV3LWNvbmZpZyc7XG5pbXBvcnQgeyBMdXhGaWxlUHJldmlld0RhdGEgfSBmcm9tICcuLi9sdXgtZmlsZS1wcmV2aWV3LWRhdGEnO1xuaW1wb3J0IHsgTHV4RmlsZVByZXZpZXdSZWYgfSBmcm9tICcuLi9sdXgtZmlsZS1wcmV2aWV3LXJlZic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2x1eC1maWxlLXByZXZpZXctbm90c3VwcG9ydGVkdmlld2VyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2x1eC1maWxlLXByZXZpZXctbm90c3VwcG9ydGVkdmlld2VyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbHV4LWZpbGUtcHJldmlldy1ub3RzdXBwb3J0ZWR2aWV3ZXIuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMdXhGaWxlUHJldmlld05vdFN1cHBvcnRlZFZpZXdlckNvbXBvbmVudCBleHRlbmRzIEx1eEZpbGVQcmV2aWV3QmFzZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGNvdW50ZXIgPSA1O1xuICB0aW1lcjogYW55O1xuXG4gIGRvd25sb2FkTGFiZWxEZWZhdWx0ID0gJ0Rvd25sb2FkLi4uICc7XG4gIGRvd25sb2FkTGFiZWwgPSB0aGlzLmRvd25sb2FkTGFiZWxEZWZhdWx0ICsgdGhpcy5jb3VudGVyO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCBwcmV2aWV3UmVmOiBMdXhGaWxlUHJldmlld1JlZixcbiAgICBASW5qZWN0KExVWF9GSUxFX1BSRVZJRVdfREFUQSkgcHJvdGVjdGVkIHByZXZpZXdEYXRhOiBMdXhGaWxlUHJldmlld0RhdGEsXG4gICAgcHJvdGVjdGVkIHNhbml0aXplcjogRG9tU2FuaXRpemVyXG4gICkge1xuICAgIHN1cGVyKHByZXZpZXdSZWYsIHByZXZpZXdEYXRhLCBzYW5pdGl6ZXIpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy51cGRhdGVEb3dubG9hZExhYmVsKCk7XG4gIH1cblxuICBvbkRvd25sb2FkKCkge1xuICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTtcblxuICAgIHN1cGVyLm9uRG93bmxvYWQoKTtcbiAgfVxuXG4gIG9uQ2xvc2UoKSB7XG4gICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuXG4gICAgc3VwZXIub25DbG9zZSgpO1xuICB9XG5cbiAgdXBkYXRlRG93bmxvYWRMYWJlbCgpIHtcbiAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBpZiAodGhpcy5jb3VudGVyID4gMCkge1xuICAgICAgICB0aGlzLmNvdW50ZXItLTtcbiAgICAgICAgdGhpcy5kb3dubG9hZExhYmVsID0gdGhpcy5kb3dubG9hZExhYmVsRGVmYXVsdCArIHRoaXMuY291bnRlcjtcbiAgICAgICAgdGhpcy51cGRhdGVEb3dubG9hZExhYmVsKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm9uRG93bmxvYWQoKTtcbiAgICAgIH1cbiAgICB9LCAxMDAwKTtcbiAgfVxufVxuIl19