import * as tslib_1 from "tslib";
import { AriaDescriber, FocusMonitor } from '@angular/cdk/a11y';
import { Directionality } from '@angular/cdk/bidi';
import { Overlay } from '@angular/cdk/overlay';
import { Platform } from '@angular/cdk/platform';
import { ScrollDispatcher } from '@angular/cdk/scrolling';
import { Directive, ElementRef, HostListener, Inject, Input, NgZone, OnChanges, Optional, SimpleChanges, ViewContainerRef } from '@angular/core';
import { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_SCROLL_STRATEGY, MatTooltip } from '@angular/material';
var LuxTooltipDirective = /** @class */ (function (_super) {
    tslib_1.__extends(LuxTooltipDirective, _super);
    function LuxTooltipDirective(luxOverlay, luxElementRef, luxScrollDispatcher, luxViewContainerRef, luxNgZone, luxPlatform, luxAriaDescriber, luxFocusMonitor, luxScrollStrategy, luxDir, luxDefaultOptions) {
        var _this = _super.call(this, luxOverlay, luxElementRef, luxScrollDispatcher, luxViewContainerRef, luxNgZone, luxPlatform, luxAriaDescriber, luxFocusMonitor, luxScrollStrategy, luxDir, luxDefaultOptions) || this;
        _this.luxOverlay = luxOverlay;
        _this.luxElementRef = luxElementRef;
        _this.luxScrollDispatcher = luxScrollDispatcher;
        _this.luxViewContainerRef = luxViewContainerRef;
        _this.luxNgZone = luxNgZone;
        _this.luxPlatform = luxPlatform;
        _this.luxAriaDescriber = luxAriaDescriber;
        _this.luxFocusMonitor = luxFocusMonitor;
        _this.luxScrollStrategy = luxScrollStrategy;
        _this.luxDir = luxDir;
        _this.luxDefaultOptions = luxDefaultOptions;
        _this.luxTooltip = '???';
        _this.luxTooltipHideDelay = 0;
        _this.luxTooltipShowDelay = 0;
        _this.luxTooltipPosition = 'above';
        _this.luxTooltipDisabled = false;
        return _this;
    }
    LuxTooltipDirective.prototype._handleLongPress = function () {
        _super.prototype.show.call(this, this.luxTooltipShowDelay);
    };
    LuxTooltipDirective.prototype._handleKeydown = function (event) {
        _super.prototype._handleKeydown.call(this, event);
    };
    LuxTooltipDirective.prototype._handleTouchend = function () {
        _super.prototype._handleTouchend.call(this);
    };
    LuxTooltipDirective.prototype.ngOnChanges = function (simpleChanges) {
        this.message = this.luxTooltip;
        this.hideDelay = this.luxTooltipHideDelay;
        this.showDelay = this.luxTooltipShowDelay;
        this.position = this.luxTooltipPosition;
        this.disabled = this.luxTooltipDisabled;
    };
    LuxTooltipDirective.ctorParameters = function () { return [
        { type: Overlay },
        { type: ElementRef },
        { type: ScrollDispatcher },
        { type: ViewContainerRef },
        { type: NgZone },
        { type: Platform },
        { type: AriaDescriber },
        { type: FocusMonitor },
        { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },
        { type: Directionality, decorators: [{ type: Optional }] },
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] }
    ]; };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxTooltipDirective.prototype, "luxTooltip", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number)
    ], LuxTooltipDirective.prototype, "luxTooltipHideDelay", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number)
    ], LuxTooltipDirective.prototype, "luxTooltipShowDelay", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxTooltipDirective.prototype, "luxTooltipPosition", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], LuxTooltipDirective.prototype, "luxTooltipDisabled", void 0);
    tslib_1.__decorate([
        HostListener('longpress'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], LuxTooltipDirective.prototype, "_handleLongPress", null);
    tslib_1.__decorate([
        HostListener('keydown', ['$event']),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [Object]),
        tslib_1.__metadata("design:returntype", void 0)
    ], LuxTooltipDirective.prototype, "_handleKeydown", null);
    tslib_1.__decorate([
        HostListener('touchend'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", void 0)
    ], LuxTooltipDirective.prototype, "_handleTouchend", null);
    LuxTooltipDirective = tslib_1.__decorate([
        Directive({
            selector: '[luxTooltip]',
            exportAs: 'luxTooltip'
        }),
        tslib_1.__param(8, Inject(MAT_TOOLTIP_SCROLL_STRATEGY)),
        tslib_1.__param(9, Optional()),
        tslib_1.__param(10, Optional()),
        tslib_1.__param(10, Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)),
        tslib_1.__metadata("design:paramtypes", [Overlay,
            ElementRef,
            ScrollDispatcher,
            ViewContainerRef,
            NgZone,
            Platform,
            AriaDescriber,
            FocusMonitor, Object, Directionality, Object])
    ], LuxTooltipDirective);
    return LuxTooltipDirective;
}(MatTooltip));
export { LuxTooltipDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LXRvb2x0aXAuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGloay1nZmkvbHV4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJzcmMvYXBwL21vZHVsZXMvbHV4LWRpcmVjdGl2ZXMvbHV4LXRvb2x0aXAvbHV4LXRvb2x0aXAuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ2pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFDTCxTQUFTLEVBQ1QsVUFBVSxFQUNWLFlBQVksRUFDWixNQUFNLEVBQ04sS0FBSyxFQUNMLE1BQU0sRUFDTixTQUFTLEVBQ1QsUUFBUSxFQUNSLGFBQWEsRUFDYixnQkFBZ0IsRUFDakIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUNMLDJCQUEyQixFQUMzQiwyQkFBMkIsRUFDM0IsVUFBVSxFQUdYLE1BQU0sbUJBQW1CLENBQUM7QUFNM0I7SUFBeUMsK0NBQVU7SUFPakQsNkJBQ1UsVUFBbUIsRUFDbkIsYUFBeUIsRUFDekIsbUJBQXFDLEVBQ3JDLG1CQUFxQyxFQUNyQyxTQUFpQixFQUNqQixXQUFxQixFQUNyQixnQkFBK0IsRUFDL0IsZUFBNkIsRUFDUSxpQkFBaUIsRUFDMUMsTUFBc0IsRUFHbEMsaUJBQTJDO1FBYnJELFlBZUUsa0JBQ0UsVUFBVSxFQUNWLGFBQWEsRUFDYixtQkFBbUIsRUFDbkIsbUJBQW1CLEVBQ25CLFNBQVMsRUFDVCxXQUFXLEVBQ1gsZ0JBQWdCLEVBQ2hCLGVBQWUsRUFDZixpQkFBaUIs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QUM7Q0FBQSxBQXhERCxDQUF5QyxVQUFVLEdBd0RsRDtTQXhEWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcmlhRGVzY3JpYmVyLCBGb2N1c01vbml0b3IgfSBmcm9tICdAYW5ndWxhci9jZGsvYTExeSc7XG5pbXBvcnQgeyBEaXJlY3Rpb25hbGl0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9iaWRpJztcbmltcG9ydCB7IE92ZXJsYXkgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBQbGF0Zm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9wbGF0Zm9ybSc7XG5pbXBvcnQgeyBTY3JvbGxEaXNwYXRjaGVyIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3Njcm9sbGluZyc7XG5pbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIEhvc3RMaXN0ZW5lcixcbiAgSW5qZWN0LFxuICBJbnB1dCxcbiAgTmdab25lLFxuICBPbkNoYW5nZXMsXG4gIE9wdGlvbmFsLFxuICBTaW1wbGVDaGFuZ2VzLFxuICBWaWV3Q29udGFpbmVyUmVmXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgTUFUX1RPT0xUSVBfREVGQVVMVF9PUFRJT05TLFxuICBNQVRfVE9PTFRJUF9TQ1JPTExfU1RSQVRFR1ksXG4gIE1hdFRvb2x0aXAsXG4gIE1hdFRvb2x0aXBEZWZhdWx0T3B0aW9ucyxcbiAgVG9vbHRpcFBvc2l0aW9uXG59IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2x1eFRvb2x0aXBdJyxcbiAgZXhwb3J0QXM6ICdsdXhUb29sdGlwJ1xufSlcbmV4cG9ydCBjbGFzcyBMdXhUb29sdGlwRGlyZWN0aXZlIGV4dGVuZHMgTWF0VG9vbHRpcCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIGx1eFRvb2x0aXA6IHN0cmluZyA9ICc/Pz8nO1xuICBASW5wdXQoKSBsdXhUb29sdGlwSGlkZURlbGF5OiBudW1iZXIgPSAwO1xuICBASW5wdXQoKSBsdXhUb29sdGlwU2hvd0RlbGF5OiBudW1iZXIgPSAwO1xuICBASW5wdXQoKSBsdXhUb29sdGlwUG9zaXRpb246IFRvb2x0aXBQb3NpdGlvbiA9ICdhYm92ZSc7XG4gIEBJbnB1dCgpIGx1eFRvb2x0aXBEaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgbHV4T3ZlcmxheTogT3ZlcmxheSxcbiAgICBwcml2YXRlIGx1eEVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXG4gICAgcHJpdmF0ZSBsdXhTY3JvbGxEaXNwYXRjaGVyOiBTY3JvbGxEaXNwYXRjaGVyLFxuICAgIHByaXZhdGUgbHV4Vmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZixcbiAgICBwcml2YXRlIGx1eE5nWm9uZTogTmdab25lLFxuICAgIHByaXZhdGUgbHV4UGxhdGZvcm06IFBsYXRmb3JtLFxuICAgIHByaXZhdGUgbHV4QXJpYURlc2NyaWJlcjogQXJpYURlc2NyaWJlcixcbiAgICBwcml2YXRlIGx1eEZvY3VzTW9uaXRvcjogRm9jdXNNb25pdG9yLFxuICAgIEBJbmplY3QoTUFUX1RPT0xUSVBfU0NST0xMX1NUUkFURUdZKSBwcml2YXRlIGx1eFNjcm9sbFN0cmF0ZWd5LFxuICAgIEBPcHRpb25hbCgpIHByaXZhdGUgbHV4RGlyOiBEaXJlY3Rpb25hbGl0eSxcbiAgICBAT3B0aW9uYWwoKVxuICAgIEBJbmplY3QoTUFUX1RPT0xUSVBfREVGQVVMVF9PUFRJT05TKVxuICAgIHByaXZhdGUgbHV4RGVmYXVsdE9wdGlvbnM6IE1hdFRvb2x0aXBEZWZhdWx0T3B0aW9uc1xuICApIHtcbiAgICBzdXBlcihcbiAgICAgIGx1eE92ZXJsYXksXG4gICAgICBsdXhFbGVtZW50UmVmLFxuICAgICAgbHV4U2Nyb2xsRGlzcGF0Y2hlcixcbiAgICAgIGx1eFZpZXdDb250YWluZXJSZWYsXG4gICAgICBsdXhOZ1pvbmUsXG4gICAgICBsdXhQbGF0Zm9ybSxcbiAgICAgIGx1eEFyaWFEZXNjcmliZXIsXG4gICAgICBsdXhGb2N1c01vbml0b3IsXG4gICAgICBsdXhTY3JvbGxTdHJhdGVneSxcbiAgICAgIGx1eERpcixcbiAgICAgIGx1eERlZmF1bHRPcHRpb25zXG4gICAgKTtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2xvbmdwcmVzcycpIF9oYW5kbGVMb25nUHJlc3MoKSB7XG4gICAgc3VwZXIuc2hvdyh0aGlzLmx1eFRvb2x0aXBTaG93RGVsYXkpO1xuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcigna2V5ZG93bicsIFsnJGV2ZW50J10pIF9oYW5kbGVLZXlkb3duKGV2ZW50KSB7XG4gICAgc3VwZXIuX2hhbmRsZUtleWRvd24oZXZlbnQpO1xuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcigndG91Y2hlbmQnKSBfaGFuZGxlVG91Y2hlbmQoKSB7XG4gICAgc3VwZXIuX2hhbmRsZVRvdWNoZW5kKCk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhzaW1wbGVDaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgdGhpcy5tZXNzYWdlID0gdGhpcy5sdXhUb29sdGlwO1xuICAgIHRoaXMuaGlkZURlbGF5ID0gdGhpcy5sdXhUb29sdGlwSGlkZURlbGF5O1xuICAgIHRoaXMuc2hvd0RlbGF5ID0gdGhpcy5sdXhUb29sdGlwU2hvd0RlbGF5O1xuICAgIHRoaXMucG9zaXRpb24gPSB0aGlzLmx1eFRvb2x0aXBQb3NpdGlvbjtcbiAgICB0aGlzLmRpc2FibGVkID0gdGhpcy5sdXhUb29sdGlwRGlzYWJsZWQ7XG4gIH1cbn1cbiJdfQ==