import * as tslib_1 from "tslib";
import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';
import { LuxAriaBase } from './lux-aria-base';
var LuxAriaRoleDirective = /** @class */ (function (_super) {
    tslib_1.__extends(LuxAriaRoleDirective, _super);
    function LuxAriaRoleDirective(elementRef, renderer) {
        var _this = _super.call(this, elementRef, renderer, 'role') || this;
        _this.elementRef = elementRef;
        _this.renderer = renderer;
        return _this;
    }
    Object.defineProperty(LuxAriaRoleDirective.prototype, "luxAriaRole", {
        get: function () {
            return this._luxAriaRole;
        },
        set: function (role) {
            this._luxAriaRole = role;
            this.renderAria();
        },
        enumerable: true,
        configurable: true
    });
    LuxAriaRoleDirective.prototype.getSelector = function () {
        return this.luxAriaRoleSelector;
    };
    LuxAriaRoleDirective.prototype.getValue = function () {
        return this._luxAriaRole;
    };
    LuxAriaRoleDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxAriaRoleDirective.prototype, "luxAriaRoleSelector", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], LuxAriaRoleDirective.prototype, "luxAriaRole", null);
    LuxAriaRoleDirective = tslib_1.__decorate([
        Directive({
            selector: '[luxAriaRole]'
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef, Renderer2])
    ], LuxAriaRoleDirective);
    return LuxAriaRoleDirective;
}(LuxAriaBase));
export { LuxAriaRoleDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWFyaWEtcm9sZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaWhrLWdmaS9sdXgtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sdXgtZGlyZWN0aXZlcy9sdXgtYXJpYS9sdXgtYXJpYS1yb2xlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFLOUM7SUFBMEMsZ0RBQVc7SUFnQm5ELDhCQUFzQixVQUFzQixFQUFZLFFBQW1CO1FBQTNFLFlBQ0Usa0JBQU0sVUFBVSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsU0FDcEM7UUFGcUIsZ0JBQVUsR0FBVixVQUFVLENBQVk7UUFBWSxjQUFRLEdBQVIsUUFBUSxDQUFXOztJQUUzRSxDQUFDO0lBWkQsc0JBQUksNkNBQVc7YUFBZjtZQUNFLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztRQUMzQixDQUFDO2FBRUQsVUFBZ0IsSUFBWTtZQUMxQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztZQUV6QixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDcEIsQ0FBQzs7O09BTkE7SUFZRCwwQ0FBVyxHQUFYO1FBQ0UsT0FBTyxJQUFJLENBQUMsbUJBQW1CLENBQUM7SUFDbEMsQ0FBQztJQUVELHVDQUFRLEdBQVI7UUFDRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQzs7Z0JBVmlDLFVBQVU7Z0JBQXNCLFNBQVM7O0lBYmxFO1FBQVIsS0FBSyxFQUFFOztxRUFBNkI7SUFHckM7UUFEQyxLQUFLLEVBQUU7OzsyREFHUDtJQVJVLG9CQUFvQjtRQUhoQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsZUFBZTtTQUMxQixDQUFDO2lEQWlCa0MsVUFBVSxFQUFzQixTQUFTO09BaEJoRSxvQkFBb0IsQ0EyQmhDO0lBQUQsMkJBQUM7Q0FBQSxBQTNCRCxDQUEwQyxXQUFXLEdBMkJwRDtTQTNCWSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEx1eEFyaWFCYXNlIH0gZnJvbSAnLi9sdXgtYXJpYS1iYXNlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2x1eEFyaWFSb2xlXSdcbn0pXG5leHBvcnQgY2xhc3MgTHV4QXJpYVJvbGVEaXJlY3RpdmUgZXh0ZW5kcyBMdXhBcmlhQmFzZSB7XG4gIF9sdXhBcmlhUm9sZTogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIGx1eEFyaWFSb2xlU2VsZWN0b3I6IHN0cmluZztcblxuICBASW5wdXQoKVxuICBnZXQgbHV4QXJpYVJvbGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2x1eEFyaWFSb2xlO1xuICB9XG5cbiAgc2V0IGx1eEFyaWFSb2xlKHJvbGU6IHN0cmluZykge1xuICAgIHRoaXMuX2x1eEFyaWFSb2xlID0gcm9sZTtcblxuICAgIHRoaXMucmVuZGVyQXJpYSgpO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHByb3RlY3RlZCByZW5kZXJlcjogUmVuZGVyZXIyKSB7XG4gICAgc3VwZXIoZWxlbWVudFJlZiwgcmVuZGVyZXIsICdyb2xlJyk7XG4gIH1cblxuICBnZXRTZWxlY3RvcigpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmx1eEFyaWFSb2xlU2VsZWN0b3I7XG4gIH1cblxuICBnZXRWYWx1ZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9sdXhBcmlhUm9sZTtcbiAgfVxufVxuIl19