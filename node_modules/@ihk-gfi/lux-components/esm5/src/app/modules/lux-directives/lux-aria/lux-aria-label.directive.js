import * as tslib_1 from "tslib";
import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';
import { LuxAriaBase } from './lux-aria-base';
var LuxAriaLabelDirective = /** @class */ (function (_super) {
    tslib_1.__extends(LuxAriaLabelDirective, _super);
    function LuxAriaLabelDirective(elementRef, renderer) {
        var _this = _super.call(this, elementRef, renderer, 'aria-label') || this;
        _this.elementRef = elementRef;
        _this.renderer = renderer;
        if (!_this.luxAriaLabelSelector) {
            var tagName = elementRef.nativeElement.tagName.toLowerCase();
            if (tagName === 'lux-button') {
                _this.luxAriaLabelSelector = 'button';
            }
            else if (tagName === 'lux-app-header-action-nav-item') {
                _this.luxAriaLabelSelector = 'button';
            }
        }
        return _this;
    }
    Object.defineProperty(LuxAriaLabelDirective.prototype, "luxAriaLabel", {
        get: function () {
            return this._luxAriaLabel;
        },
        set: function (label) {
            this._luxAriaLabel = label;
            this.renderAria();
        },
        enumerable: true,
        configurable: true
    });
    LuxAriaLabelDirective.prototype.getSelector = function () {
        return this.luxAriaLabelSelector;
    };
    LuxAriaLabelDirective.prototype.getValue = function () {
        return this._luxAriaLabel;
    };
    LuxAriaLabelDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxAriaLabelDirective.prototype, "luxAriaLabelSelector", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], LuxAriaLabelDirective.prototype, "luxAriaLabel", null);
    LuxAriaLabelDirective = tslib_1.__decorate([
        Directive({
            selector: '[luxAriaLabel]'
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef, Renderer2])
    ], LuxAriaLabelDirective);
    return LuxAriaLabelDirective;
}(LuxAriaBase));
export { LuxAriaLabelDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWFyaWEtbGFiZWwuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGloay1nZmkvbHV4LWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJzcmMvYXBwL21vZHVsZXMvbHV4LWRpcmVjdGl2ZXMvbHV4LWFyaWEvbHV4LWFyaWEtbGFiZWwuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUs5QztJQUEyQyxpREFBVztJQWdCcEQsK0JBQXNCLFVBQXNCLEVBQVksUUFBbUI7UUFBM0UsWUFDRSxrQkFBTSxVQUFVLEVBQUUsUUFBUSxFQUFFLFlBQVksQ0FBQyxTQVUxQztRQVhxQixnQkFBVSxHQUFWLFVBQVUsQ0FBWTtRQUFZLGNBQVEsR0FBUixRQUFRLENBQVc7UUFHekUsSUFBSSxDQUFDLEtBQUksQ0FBQyxvQkFBb0IsRUFBRTtZQUM5QixJQUFNLE9BQU8sR0FBRyxVQUFVLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUMvRCxJQUFJLE9BQU8sS0FBSyxZQUFZLEVBQUU7Z0JBQzVCLEtBQUksQ0FBQyxvQkFBb0IsR0FBRyxRQUFRLENBQUM7YUFDdEM7aUJBQU0sSUFBSSxPQUFPLEtBQUssZ0NBQWdDLEVBQUU7Z0JBQ3ZELEtBQUksQ0FBQyxvQkFBb0IsR0FBRyxRQUFRLENBQUM7YUFDdEM7U0FDRjs7SUFDSCxDQUFDO0lBckJELHNCQUFJLCtDQUFZO2FBQWhCO1lBQ0UsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQzVCLENBQUM7YUFFRCxVQUFpQixLQUFhO1lBQzVCLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1lBRTNCLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNwQixDQUFDOzs7T0FOQTtJQXFCRCwyQ0FBVyxHQUFYO1FBQ0UsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUM7SUFDbkMsQ0FBQztJQUVELHdDQUFRLEdBQVI7UUFDRSxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUM7SUFDNUIsQ0FBQzs7Z0JBbkJpQyxVQUFVO2dCQUFzQixTQUFTOztJQWJsRTtRQUFSLEtBQUssRUFBRTs7dUVBQThCO0lBR3RDO1FBREMsS0FBSyxFQUFFOzs7NkRBR1A7SUFSVSxxQkFBcUI7UUFIakMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGdCQUFnQjtTQUMzQixDQUFDO2lEQWlCa0MsVUFBVSxFQUFzQixTQUFTO09BaEJoRSxxQkFBcUIsQ0FvQ2pDO0lBQUQsNEJBQUM7Q0FBQSxBQXBDRCxDQUEyQyxXQUFXLEdBb0NyRDtTQXBDWSxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEx1eEFyaWFCYXNlIH0gZnJvbSAnLi9sdXgtYXJpYS1iYXNlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2x1eEFyaWFMYWJlbF0nXG59KVxuZXhwb3J0IGNsYXNzIEx1eEFyaWFMYWJlbERpcmVjdGl2ZSBleHRlbmRzIEx1eEFyaWFCYXNlIHtcbiAgX2x1eEFyaWFMYWJlbDogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIGx1eEFyaWFMYWJlbFNlbGVjdG9yOiBzdHJpbmc7XG5cbiAgQElucHV0KClcbiAgZ2V0IGx1eEFyaWFMYWJlbCgpIHtcbiAgICByZXR1cm4gdGhpcy5fbHV4QXJpYUxhYmVsO1xuICB9XG5cbiAgc2V0IGx1eEFyaWFMYWJlbChsYWJlbDogc3RyaW5nKSB7XG4gICAgdGhpcy5fbHV4QXJpYUxhYmVsID0gbGFiZWw7XG5cbiAgICB0aGlzLnJlbmRlckFyaWEoKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBwcm90ZWN0ZWQgcmVuZGVyZXI6IFJlbmRlcmVyMikge1xuICAgIHN1cGVyKGVsZW1lbnRSZWYsIHJlbmRlcmVyLCAnYXJpYS1sYWJlbCcpO1xuXG4gICAgaWYgKCF0aGlzLmx1eEFyaWFMYWJlbFNlbGVjdG9yKSB7XG4gICAgICBjb25zdCB0YWdOYW1lID0gZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnRhZ05hbWUudG9Mb3dlckNhc2UoKTtcbiAgICAgIGlmICh0YWdOYW1lID09PSAnbHV4LWJ1dHRvbicpIHtcbiAgICAgICAgdGhpcy5sdXhBcmlhTGFiZWxTZWxlY3RvciA9ICdidXR0b24nO1xuICAgICAgfSBlbHNlIGlmICh0YWdOYW1lID09PSAnbHV4LWFwcC1oZWFkZXItYWN0aW9uLW5hdi1pdGVtJykge1xuICAgICAgICB0aGlzLmx1eEFyaWFMYWJlbFNlbGVjdG9yID0gJ2J1dHRvbic7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZ2V0U2VsZWN0b3IoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5sdXhBcmlhTGFiZWxTZWxlY3RvcjtcbiAgfVxuXG4gIGdldFZhbHVlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2x1eEFyaWFMYWJlbDtcbiAgfVxufVxuIl19