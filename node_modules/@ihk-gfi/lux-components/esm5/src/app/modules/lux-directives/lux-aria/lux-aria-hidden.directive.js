import * as tslib_1 from "tslib";
import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';
import { LuxAriaBase } from './lux-aria-base';
var LuxAriaHiddenDirective = /** @class */ (function (_super) {
    tslib_1.__extends(LuxAriaHiddenDirective, _super);
    function LuxAriaHiddenDirective(elementRef, renderer) {
        var _this = _super.call(this, elementRef, renderer, 'aria-hidden') || this;
        _this.elementRef = elementRef;
        _this.renderer = renderer;
        return _this;
    }
    Object.defineProperty(LuxAriaHiddenDirective.prototype, "luxAriaHidden", {
        get: function () {
            return this._luxAriaHidden;
        },
        set: function (hidden) {
            this._luxAriaHidden = hidden;
            this.renderAria();
        },
        enumerable: true,
        configurable: true
    });
    LuxAriaHiddenDirective.prototype.getSelector = function () {
        return this.luxAriaHiddenSelector;
    };
    LuxAriaHiddenDirective.prototype.getValue = function () {
        return this._luxAriaHidden;
    };
    LuxAriaHiddenDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxAriaHiddenDirective.prototype, "luxAriaHiddenSelector", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], LuxAriaHiddenDirective.prototype, "luxAriaHidden", null);
    LuxAriaHiddenDirective = tslib_1.__decorate([
        Directive({
            selector: '[luxAriaHidden]'
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef, Renderer2])
    ], LuxAriaHiddenDirective);
    return LuxAriaHiddenDirective;
}(LuxAriaBase));
export { LuxAriaHiddenDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWFyaWEtaGlkZGVuLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BpaGstZ2ZpL2x1eC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsic3JjL2FwcC9tb2R1bGVzL2x1eC1kaXJlY3RpdmVzL2x1eC1hcmlhL2x1eC1hcmlhLWhpZGRlbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBSzlDO0lBQTRDLGtEQUFXO0lBZ0JyRCxnQ0FBc0IsVUFBc0IsRUFBWSxRQUFtQjtRQUEzRSxZQUNFLGtCQUFNLFVBQVUsRUFBRSxRQUFRLEVBQUUsYUFBYSxDQUFDLFNBQzNDO1FBRnFCLGdCQUFVLEdBQVYsVUFBVSxDQUFZO1FBQVksY0FBUSxHQUFSLFFBQVEsQ0FBVzs7SUFFM0UsQ0FBQztJQVpELHNCQUFJLGlEQUFhO2FBQWpCO1lBQ0UsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDO1FBQzdCLENBQUM7YUFFRCxVQUFrQixNQUFjO1lBQzlCLElBQUksQ0FBQyxjQUFjLEdBQUcsTUFBTSxDQUFDO1lBRTdCLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNwQixDQUFDOzs7T0FOQTtJQVlELDRDQUFXLEdBQVg7UUFDRSxPQUFPLElBQUksQ0FBQyxxQkFBcUIsQ0FBQztJQUNwQyxDQUFDO0lBRUQseUNBQVEsR0FBUjtRQUNFLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQztJQUM3QixDQUFDOztnQkFWaUMsVUFBVTtnQkFBc0IsU0FBUzs7SUFibEU7UUFBUixLQUFLLEVBQUU7O3lFQUErQjtJQUd2QztRQURDLEtBQUssRUFBRTs7OytEQUdQO0lBUlUsc0JBQXNCO1FBSGxDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxpQkFBaUI7U0FDNUIsQ0FBQztpREFpQmtDLFVBQVUsRUFBc0IsU0FBUztPQWhCaEUsc0JBQXNCLENBMkJsQztJQUFELDZCQUFDO0NBQUEsQUEzQkQsQ0FBNEMsV0FBVyxHQTJCdEQ7U0EzQlksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMdXhBcmlhQmFzZSB9IGZyb20gJy4vbHV4LWFyaWEtYmFzZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tsdXhBcmlhSGlkZGVuXSdcbn0pXG5leHBvcnQgY2xhc3MgTHV4QXJpYUhpZGRlbkRpcmVjdGl2ZSBleHRlbmRzIEx1eEFyaWFCYXNlIHtcbiAgX2x1eEFyaWFIaWRkZW46IHN0cmluZztcblxuICBASW5wdXQoKSBsdXhBcmlhSGlkZGVuU2VsZWN0b3I6IHN0cmluZztcblxuICBASW5wdXQoKVxuICBnZXQgbHV4QXJpYUhpZGRlbigpIHtcbiAgICByZXR1cm4gdGhpcy5fbHV4QXJpYUhpZGRlbjtcbiAgfVxuXG4gIHNldCBsdXhBcmlhSGlkZGVuKGhpZGRlbjogc3RyaW5nKSB7XG4gICAgdGhpcy5fbHV4QXJpYUhpZGRlbiA9IGhpZGRlbjtcblxuICAgIHRoaXMucmVuZGVyQXJpYSgpO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHByb3RlY3RlZCByZW5kZXJlcjogUmVuZGVyZXIyKSB7XG4gICAgc3VwZXIoZWxlbWVudFJlZiwgcmVuZGVyZXIsICdhcmlhLWhpZGRlbicpO1xuICB9XG5cbiAgZ2V0U2VsZWN0b3IoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5sdXhBcmlhSGlkZGVuU2VsZWN0b3I7XG4gIH1cblxuICBnZXRWYWx1ZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9sdXhBcmlhSGlkZGVuO1xuICB9XG59XG4iXX0=