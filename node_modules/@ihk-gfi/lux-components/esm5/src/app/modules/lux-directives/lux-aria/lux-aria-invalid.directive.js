import * as tslib_1 from "tslib";
import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';
import { LuxAriaBase } from './lux-aria-base';
var LuxAriaInvalidDirective = /** @class */ (function (_super) {
    tslib_1.__extends(LuxAriaInvalidDirective, _super);
    function LuxAriaInvalidDirective(elementRef, renderer) {
        var _this = _super.call(this, elementRef, renderer, 'aria-invalid') || this;
        _this.elementRef = elementRef;
        _this.renderer = renderer;
        return _this;
    }
    Object.defineProperty(LuxAriaInvalidDirective.prototype, "luxAriaInvalid", {
        get: function () {
            return this._luxAriaInvalid;
        },
        set: function (invalid) {
            this._luxAriaInvalid = invalid;
            this.renderAria();
        },
        enumerable: true,
        configurable: true
    });
    LuxAriaInvalidDirective.prototype.getSelector = function () {
        return this.luxAriaInvalidSelector;
    };
    LuxAriaInvalidDirective.prototype.getValue = function () {
        return this._luxAriaInvalid;
    };
    LuxAriaInvalidDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LuxAriaInvalidDirective.prototype, "luxAriaInvalidSelector", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], LuxAriaInvalidDirective.prototype, "luxAriaInvalid", null);
    LuxAriaInvalidDirective = tslib_1.__decorate([
        Directive({
            selector: '[luxAriaInvalid]'
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef, Renderer2])
    ], LuxAriaInvalidDirective);
    return LuxAriaInvalidDirective;
}(LuxAriaBase));
export { LuxAriaInvalidDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHV4LWFyaWEtaW52YWxpZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaWhrLWdmaS9sdXgtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sdXgtZGlyZWN0aXZlcy9sdXgtYXJpYS9sdXgtYXJpYS1pbnZhbGlkLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFLOUM7SUFBNkMsbURBQVc7SUFnQnRELGlDQUFzQixVQUFzQixFQUFZLFFBQW1CO1FBQTNFLFlBQ0Usa0JBQU0sVUFBVSxFQUFFLFFBQVEsRUFBRSxjQUFjLENBQUMsU0FDNUM7UUFGcUIsZ0JBQVUsR0FBVixVQUFVLENBQVk7UUFBWSxjQUFRLEdBQVIsUUFBUSxDQUFXOztJQUUzRSxDQUFDO0lBWkQsc0JBQUksbURBQWM7YUFBbEI7WUFDRSxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUM7UUFDOUIsQ0FBQzthQUVELFVBQW1CLE9BQWU7WUFDaEMsSUFBSSxDQUFDLGVBQWUsR0FBRyxPQUFPLENBQUM7WUFFL0IsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3BCLENBQUM7OztPQU5BO0lBWUQsNkNBQVcsR0FBWDtRQUNFLE9BQU8sSUFBSSxDQUFDLHNCQUFzQixDQUFDO0lBQ3JDLENBQUM7SUFFRCwwQ0FBUSxHQUFSO1FBQ0UsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQzlCLENBQUM7O2dCQVZpQyxVQUFVO2dCQUFzQixTQUFTOztJQWJsRTtRQUFSLEtBQUssRUFBRTs7MkVBQWdDO0lBR3hDO1FBREMsS0FBSyxFQUFFOzs7aUVBR1A7SUFSVSx1QkFBdUI7UUFIbkMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGtCQUFrQjtTQUM3QixDQUFDO2lEQWlCa0MsVUFBVSxFQUFzQixTQUFTO09BaEJoRSx1QkFBdUIsQ0EyQm5DO0lBQUQsOEJBQUM7Q0FBQSxBQTNCRCxDQUE2QyxXQUFXLEdBMkJ2RDtTQTNCWSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEx1eEFyaWFCYXNlIH0gZnJvbSAnLi9sdXgtYXJpYS1iYXNlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2x1eEFyaWFJbnZhbGlkXSdcbn0pXG5leHBvcnQgY2xhc3MgTHV4QXJpYUludmFsaWREaXJlY3RpdmUgZXh0ZW5kcyBMdXhBcmlhQmFzZSB7XG4gIF9sdXhBcmlhSW52YWxpZDogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIGx1eEFyaWFJbnZhbGlkU2VsZWN0b3I6IHN0cmluZztcblxuICBASW5wdXQoKVxuICBnZXQgbHV4QXJpYUludmFsaWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2x1eEFyaWFJbnZhbGlkO1xuICB9XG5cbiAgc2V0IGx1eEFyaWFJbnZhbGlkKGludmFsaWQ6IHN0cmluZykge1xuICAgIHRoaXMuX2x1eEFyaWFJbnZhbGlkID0gaW52YWxpZDtcblxuICAgIHRoaXMucmVuZGVyQXJpYSgpO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHByb3RlY3RlZCByZW5kZXJlcjogUmVuZGVyZXIyKSB7XG4gICAgc3VwZXIoZWxlbWVudFJlZiwgcmVuZGVyZXIsICdhcmlhLWludmFsaWQnKTtcbiAgfVxuXG4gIGdldFNlbGVjdG9yKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMubHV4QXJpYUludmFsaWRTZWxlY3RvcjtcbiAgfVxuXG4gIGdldFZhbHVlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2x1eEFyaWFJbnZhbGlkO1xuICB9XG59XG4iXX0=